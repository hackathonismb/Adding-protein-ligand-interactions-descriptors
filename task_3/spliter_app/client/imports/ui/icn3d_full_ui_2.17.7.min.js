var Detector = {
    canvas: !!window.CanvasRenderingContext2D,
    webgl: function() {
        try {
            var e = document.createElement("canvas");
            return !(!window.WebGLRenderingContext || !e.getContext("webgl") && !e.getContext("experimental-webgl"))
        } catch (e) {
            return !1
        }
    }(),
    workers: !!window.Worker,
    fileapi: window.File && window.FileReader && window.FileList && window.Blob,
    getWebGLErrorMessage: function() {
        var e = document.createElement("div");
        return e.id = "webgl-error-message", e.style.fontFamily = "monospace", e.style.fontSize = "13px", e.style.fontWeight = "normal", e.style.textAlign = "center", e.style.background = "#fff", e.style.color = "#000", e.style.padding = "1.5em", e.style.width = "400px", e.style.margin = "5em auto 0", this.webgl || (e.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")), e
    },
    addGetWebGLMessage: function(e) {
        var t, i, n;
        t = void 0 !== (e = e || {}).parent ? e.parent : document.body, i = void 0 !== e.id ? e.id : "oldie", (n = Detector.getWebGLErrorMessage()).id = i, t.appendChild(n)
    }
};
"object" == typeof module && (module.exports = Detector), THREE.TrackballControls = function(e, t, n) {
    "use strict";
    var r = this;
    this.STATE = {
        NONE: -1,
        ROTATE: 0,
        ZOOM: 1,
        PAN: 2,
        TOUCH_ROTATE: 3,
        TOUCH_ZOOM_PAN: 4
    }, this.object = e, this.domElement = void 0 !== t ? t : document, this.enabled = !0, this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    }, this.rotateSpeed = 1, this.zoomSpeed = 1.2, this.panSpeed = .3, this.noRotate = !1, this.noZoom = !1, this.noPan = !1, this.noRoll = !1, this.staticMoving = !1, this.dynamicDampingFactor = .2, this.minDistance = 0, this.maxDistance = 1 / 0, this.keys = [65, 83, 68], this.target = new THREE.Vector3;
    var i = new THREE.Vector3;
    this._state = this.STATE.NONE;
    var o = this.STATE.NONE,
        s = new THREE.Vector3;
    this._rotateStart = new THREE.Vector3, this._rotateEnd = new THREE.Vector3, this._zoomStart = new THREE.Vector2, this._zoomEnd = new THREE.Vector2;
    var a = 0,
        c = 0;
    this._panStart = new THREE.Vector2, this._panEnd = new THREE.Vector2, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.up0 = this.object.up.clone();
    var d = {
            type: "change"
        },
        l = {
            type: "start"
        },
        h = {
            type: "end"
        };
    this.handleResize = function() {
        if (this.domElement === document) this.screen.left = 0, this.screen.top = 0, this.screen.width = window.innerWidth, this.screen.height = window.innerHeight;
        else {
            var e = this.domElement.getBoundingClientRect(),
                t = this.domElement.ownerDocument.documentElement;
            this.screen.left = e.left + window.pageXOffset - t.clientLeft, this.screen.top = e.top + window.pageYOffset - t.clientTop, this.screen.width = e.width, this.screen.height = e.height
        }
    }, this.handleEvent = function(e) {
        "function" == typeof this[e.type] && this[e.type](e)
    };
    var p, m, u, f, g, v, b, y, _, C = (p = new THREE.Vector2, function(e, t) {
            return p.set((e - r.screen.left) / r.screen.width, (t - r.screen.top) / r.screen.height), p
        }),
        w = (m = new THREE.Vector3, u = new THREE.Vector3, f = new THREE.Vector3, function(e, t) {
            f.set((e - .5 * r.screen.width - r.screen.left) / (.5 * r.screen.width), (.5 * r.screen.height + r.screen.top - t) / (.5 * r.screen.height), 0);
            var i = f.length();
            return r.noRoll ? i < Math.SQRT1_2 ? f.z = Math.sqrt(1 - i * i) : f.z = .5 / i : 1 < i ? f.normalize() : f.z = Math.sqrt(1 - i * i), s.copy(r.object.position).sub(r.target), m.copy(r.object.up).setLength(f.y), m.add(u.copy(r.object.up).cross(s).setLength(f.x)), m.add(s.setLength(f.z)), m
        });

    function S(e) {
        !1 !== r.enabled && (window.removeEventListener("keydown", S), o = r._state, r._state === r.STATE.NONE && (e.keyCode !== r.keys[r.STATE.ROTATE] || r.noRotate ? e.keyCode !== r.keys[r.STATE.ZOOM] || r.noZoom ? e.keyCode !== r.keys[r.STATE.PAN] || r.noPan || (r._state = r.STATE.PAN) : r._state = r.STATE.ZOOM : r._state = r.STATE.ROTATE))
    }

    function k(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state !== r.STATE.ROTATE || r.noRotate ? r._state !== r.STATE.ZOOM || r.noZoom ? r._state !== r.STATE.PAN || r.noPan || r._panEnd.copy(C(e.pageX, e.pageY)) : r._zoomEnd.copy(C(e.pageX, e.pageY)) : r._rotateEnd.copy(w(e.pageX, e.pageY)))
    }

    function A(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state = r.STATE.NONE, document.removeEventListener("mousemove", k), document.removeEventListener("mouseup", A), r.dispatchEvent(h))
    }

    function x(e) {
        if (!1 !== r.enabled) {
            e.stopPropagation();
            var t = 0;
            e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3), r._zoomStart.y = .005 * t, r.dispatchEvent(l), r.dispatchEvent(h)
        }
    }
    this.rotateCamera = (g = new THREE.Vector3, v = new THREE.Quaternion, function(e, t) {
        var i;
        void 0 === e && (i = Math.acos(r._rotateStart.dot(r._rotateEnd) / r._rotateStart.length() / r._rotateEnd.length())), !i && void 0 === e || (void 0 === e ? (g.crossVectors(r._rotateStart, r._rotateEnd).normalize(), i *= r.rotateSpeed, v.setFromAxisAngle(g, -i)) : v.copy(e), void 0 === n || void 0 === n.quaternion || void 0 !== t && !0 !== t || n.quaternion.multiplyQuaternions(v, n.quaternion), s.applyQuaternion(v), r.object.up.applyQuaternion(v), r._rotateEnd.applyQuaternion(v), r.staticMoving ? r._rotateStart.copy(r._rotateEnd) : (v.setFromAxisAngle(g, i * (r.dynamicDampingFactor - 1)), r._rotateStart.applyQuaternion(v)))
    }), this.zoomCamera = function(e, t) {
        var i;
        r._state === r.STATE.TOUCH_ZOOM_PAN ? (void 0 !== e ? i = e : (i = a / c, a = c), s.multiplyScalar(i), void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i)) : (i = void 0 !== e ? e : 1 + (r._zoomEnd.y - r._zoomStart.y) * r.zoomSpeed, void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i), 1 !== i && (s.multiplyScalar(i), r.staticMoving ? r._zoomStart.copy(r._zoomEnd) : r._zoomStart.y += (r._zoomEnd.y - r._zoomStart.y) * this.dynamicDampingFactor))
    }, this.panCamera = (b = new THREE.Vector2, y = new THREE.Vector3, _ = new THREE.Vector3, function(e, t) {
        void 0 !== e ? (b = e, void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(e)) : (b.copy(r._panEnd).sub(r._panStart), void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(r._panEnd).sub(r._panStart)), b.lengthSq() && (b.multiplyScalar(s.length() * r.panSpeed), _.copy(s).cross(r.object.up).setLength(b.x), _.add(y.copy(r.object.up).setLength(b.y)), r.object.position.add(_), r.target.add(_), r.staticMoving ? r._panStart.copy(r._panEnd) : r._panStart.add(b.subVectors(r._panEnd, r._panStart).multiplyScalar(r.dynamicDampingFactor)))
    }), this.checkDistances = function() {
        r.noZoom && r.noPan || (s.lengthSq() > r.maxDistance * r.maxDistance && r.object.position.addVectors(r.target, s.setLength(r.maxDistance)), s.lengthSq() < r.minDistance * r.minDistance && r.object.position.addVectors(r.target, s.setLength(r.minDistance)))
    }, this.update = function(e) {
        s.subVectors(r.object.position, r.target), r.noRotate || (void 0 !== e && void 0 !== e.quaternion ? r.rotateCamera(e.quaternion, e.update) : r.rotateCamera()), r.noZoom || (void 0 !== e && void 0 !== e._zoomFactor ? r.zoomCamera(e._zoomFactor, e.update) : r.zoomCamera()), r.noPan || (void 0 !== e && void 0 !== e.mouseChange ? r.panCamera(e.mouseChange, e.update) : r.panCamera()), r.object.position.addVectors(r.target, s), r.checkDistances(), r.object.lookAt(r.target), 1e-6 < i.distanceToSquared(r.object.position) && (r.dispatchEvent(d), i.copy(r.object.position))
    }, this.reset = function() {
        r._state = r.STATE.NONE, o = r.STATE.NONE, r.target.copy(r.target0), r.object.position.copy(r.position0), r.object.up.copy(r.up0), s.subVectors(r.object.position, r.target), r.object.lookAt(r.target), r.dispatchEvent(d), i.copy(r.object.position)
    }, this.domElement.addEventListener("contextmn", function(e) {}, !1), this.domElement.addEventListener("mousedown", function(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state === r.STATE.NONE && (r._state = e.button), r._state !== r.STATE.ROTATE || r.noRotate ? r._state !== r.STATE.ZOOM || r.noZoom ? r._state !== r.STATE.PAN || r.noPan || (r._panStart.copy(C(e.pageX, e.pageY)), r._panEnd.copy(r._panStart)) : (r._zoomStart.copy(C(e.pageX, e.pageY)), r._zoomEnd.copy(r._zoomStart)) : (r._rotateStart.copy(w(e.pageX, e.pageY)), r._rotateEnd.copy(r._rotateStart)), document.addEventListener("mousemove", k, !1), document.addEventListener("mouseup", A, !1), r.dispatchEvent(l))
    }, !1), this.domElement.addEventListener("mousewheel", x, !1), this.domElement.addEventListener("DOMMouseScroll", x, !1), this.domElement.addEventListener("touchstart", function(e) {
        if (!1 !== r.enabled) {
            switch (e.touches.length) {
                case 1:
                    r._state = r.STATE.TOUCH_ROTATE, r._rotateStart.copy(w(e.touches[0].pageX, e.touches[0].pageY)), r._rotateEnd.copy(r._rotateStart);
                    break;
                case 2:
                    r._state = r.STATE.TOUCH_ZOOM_PAN;
                    var t = e.touches[0].pageX - e.touches[1].pageX,
                        i = e.touches[0].pageY - e.touches[1].pageY;
                    c = a = Math.sqrt(t * t + i * i);
                    var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        o = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    r._panStart.copy(C(n, o)), r._panEnd.copy(r._panStart);
                    break;
                default:
                    r._state = r.STATE.NONE
            }
            r.dispatchEvent(l)
        }
    }, !1), this.domElement.addEventListener("touchend", function(e) {
        if (!1 !== r.enabled) {
            switch (e.touches.length) {
                case 1:
                    r._rotateEnd.copy(w(e.touches[0].pageX, e.touches[0].pageY)), r._rotateStart.copy(r._rotateEnd);
                    break;
                case 2:
                    a = c = 0;
                    var t = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    r._panEnd.copy(C(t, i)), r._panStart.copy(r._panEnd)
            }
            r._state = r.STATE.NONE, r.dispatchEvent(h)
        }
    }, !1), this.domElement.addEventListener("touchmove", function(e) {
        if (!1 !== r.enabled) switch (e.stopPropagation(), e.touches.length) {
            case 1:
                r._rotateEnd.copy(w(e.touches[0].pageX, e.touches[0].pageY));
                break;
            case 2:
                var t = e.touches[0].pageX - e.touches[1].pageX,
                    i = e.touches[0].pageY - e.touches[1].pageY;
                c = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                    o = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                r._panEnd.copy(C(n, o));
                break;
            default:
                r._state = r.STATE.NONE
        }
    }, !1), window.addEventListener("keydown", S, !1), window.addEventListener("keyup", function(e) {
        !1 !== r.enabled && (r._state = o, window.addEventListener("keydown", S, !1))
    }, !1), this.handleResize(), this.update()
}, THREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.TrackballControls.prototype.constructor = THREE.TrackballControls, THREE.OrthographicTrackballControls = function(e, t, n) {
    var r = this,
        s = {
            NONE: -1,
            ROTATE: 0,
            ZOOM: 1,
            PAN: 2,
            TOUCH_ROTATE: 3,
            TOUCH_ZOOM_PAN: 4
        };
    this.object = e, this.domElement = void 0 !== t ? t : document, this.enabled = !0, this.screen = {
        left: 0,
        top: 0,
        width: 0,
        height: 0
    }, this.rotateSpeed = .5, this.zoomSpeed = 1.2;
    this.zoomSpeed *= .01, this.panSpeed = .03, this.noRotate = !1, this.noZoom = !1, this.noPan = !1, this.noRoll = !1, this.staticMoving = !1, this.dynamicDampingFactor = .2, this.keys = [65, 83, 68], this.target = new THREE.Vector3;
    var i = new THREE.Vector3;
    this._state = s.NONE;
    var o = s.NONE,
        a = new THREE.Vector3;
    this._rotateStart = new THREE.Vector3, this._rotateEnd = new THREE.Vector3, this._zoomStart = new THREE.Vector2, this._zoomEnd = new THREE.Vector2;
    var c = 1,
        d = 0,
        l = 0;
    this._panStart = new THREE.Vector2, this._panEnd = new THREE.Vector2, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.up0 = this.object.up.clone(), this.left0 = this.object.left, this.right0 = this.object.right, this.top0 = this.object.top, this.bottom0 = this.object.bottom, this.center0 = new THREE.Vector2((this.left0 + this.right0) / 2, (this.top0 + this.bottom0) / 2);
    var h = {
            type: "change"
        },
        p = {
            type: "start"
        },
        m = {
            type: "end"
        };
    this.handleResize = function() {
        if (this.domElement === document) this.screen.left = 0, this.screen.top = 0, this.screen.width = window.innerWidth, this.screen.height = window.innerHeight;
        else {
            var e = this.domElement.getBoundingClientRect(),
                t = this.domElement.ownerDocument.documentElement;
            this.screen.left = e.left + window.pageXOffset - t.clientLeft, this.screen.top = e.top + window.pageYOffset - t.clientTop, this.screen.width = e.width, this.screen.height = e.height
        }
        this.left0 = this.object.left, this.right0 = this.object.right, this.top0 = this.object.top, this.bottom0 = this.object.bottom, this.center0.set((this.left0 + this.right0) / 2, (this.top0 + this.bottom0) / 2)
    }, this.handleEvent = function(e) {
        "function" == typeof this[e.type] && this[e.type](e)
    };
    var u, f, g, v, b, y, _, C, w, S = (u = new THREE.Vector2, function(e, t) {
            return u.set((e - r.screen.left) / r.screen.width, (t - r.screen.top) / r.screen.height), u
        }),
        k = (f = new THREE.Vector3, g = new THREE.Vector3, v = new THREE.Vector3, function(e, t) {
            v.set((e - .5 * r.screen.width - r.screen.left) / (.5 * r.screen.width), (.5 * r.screen.height + r.screen.top - t) / (.5 * r.screen.height), 0);
            var i = v.length();
            return r.noRoll ? i < Math.SQRT1_2 ? v.z = Math.sqrt(1 - i * i) : v.z = .5 / i : 1 < i ? v.normalize() : v.z = Math.sqrt(1 - i * i), a.copy(r.object.position).sub(r.target), f.copy(r.object.up).setLength(v.y), f.add(g.copy(r.object.up).cross(a).setLength(v.x)), f.add(a.setLength(v.z)), f
        });

    function A(e) {
        !1 !== r.enabled && (window.removeEventListener("keydown", A), o = r._state, r._state === s.NONE && (e.keyCode !== r.keys[s.ROTATE] || r.noRotate ? e.keyCode !== r.keys[s.ZOOM] || r.noZoom ? e.keyCode !== r.keys[s.PAN] || r.noPan || (r._state = s.PAN) : r._state = s.ZOOM : r._state = s.ROTATE))
    }

    function x(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state !== s.ROTATE || r.noRotate ? r._state !== s.ZOOM || r.noZoom ? r._state !== s.PAN || r.noPan || r._panEnd.copy(S(e.pageX, e.pageY)) : r._zoomEnd.copy(S(e.pageX, e.pageY)) : r._rotateEnd.copy(k(e.pageX, e.pageY)))
    }

    function R(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state = s.NONE, document.removeEventListener("mousemove", x), document.removeEventListener("mouseup", R), r.dispatchEvent(m))
    }

    function E(e) {
        if (!1 !== r.enabled) {
            e.stopPropagation();
            var t = 0;
            e.wheelDelta ? t = e.wheelDelta / 40 : e.detail && (t = -e.detail / 3), r._zoomStart.y = .01 * t, r.dispatchEvent(p), r.dispatchEvent(m)
        }
    }
    this.rotateCamera = (b = new THREE.Vector3, y = new THREE.Quaternion, function(e, t) {
        var i;
        void 0 === e && (i = Math.acos(r._rotateStart.dot(r._rotateEnd) / r._rotateStart.length() / r._rotateEnd.length())), !i && void 0 === e || (void 0 === e ? (b.crossVectors(r._rotateStart, r._rotateEnd).normalize(), i *= r.rotateSpeed, y.setFromAxisAngle(b, -i)) : y.copy(e), void 0 === n || void 0 === n.quaternion || void 0 !== t && !0 !== t || n.quaternion.multiplyQuaternions(y, n.quaternion), a.applyQuaternion(y), r.object.up.applyQuaternion(y), r._rotateEnd.applyQuaternion(y), r.staticMoving ? r._rotateStart.copy(r._rotateEnd) : (y.setFromAxisAngle(b, i * (r.dynamicDampingFactor - 1)), r._rotateStart.applyQuaternion(y)))
    }), this.zoomCamera = function(e, t) {
        var i;
        r._state === s.TOUCH_ZOOM_PAN ? void 0 !== e ? i = e : (i = d / l, d = l) : i = void 0 !== e ? e : 1 + (r._zoomEnd.y - r._zoomStart.y) * r.zoomSpeed / .01, void 0 === n || void 0 === n._zoomFactor || void 0 !== t && !0 !== t || (n._zoomFactor *= i), 1 !== i && (c = i, r.object.left = c * r.left0 + (1 - c) * r.center0.x, r.object.right = c * r.right0 + (1 - c) * r.center0.x, r.object.top = c * r.top0 + (1 - c) * r.center0.y, r.object.bottom = c * r.bottom0 + (1 - c) * r.center0.y, r.staticMoving ? r._zoomStart.copy(r._zoomEnd) : r._zoomStart.y += (r._zoomEnd.y - r._zoomStart.y) * this.dynamicDampingFactor)
    }, this.panCamera = (_ = new THREE.Vector2, C = new THREE.Vector3, w = new THREE.Vector3, function(e, t) {
        void 0 !== e ? (_ = e, void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(e)) : (_.copy(r._panEnd).sub(r._panStart), void 0 === n || void 0 === n.mouseChange || void 0 !== t && !0 !== t || n.mouseChange.add(r._panEnd).sub(r._panStart)), _.lengthSq() && (_.multiplyScalar(a.length() * r.panSpeed), w.copy(a).cross(r.object.up).setLength(_.x), w.add(C.copy(r.object.up).setLength(_.y)), r.object.position.add(w), r.target.add(w), r.staticMoving ? r._panStart.copy(r._panEnd) : r._panStart.add(_.subVectors(r._panEnd, r._panStart).multiplyScalar(r.dynamicDampingFactor)))
    }), this.update = function(e) {
        a.subVectors(r.object.position, r.target), r.noRotate || (void 0 !== e && void 0 !== e.quaternion ? r.rotateCamera(e.quaternion, e.update) : r.rotateCamera()), r.noZoom || (void 0 !== e && void 0 !== e._zoomFactor ? r.zoomCamera(e._zoomFactor, e.update) : r.zoomCamera(), r.object.updateProjectionMatrix()), r.noPan || (void 0 !== e && void 0 !== e.mouseChange ? r.panCamera(e.mouseChange, e.update) : r.panCamera()), r.object.position.addVectors(r.target, a), r.object.lookAt(r.target), 1e-6 < i.distanceToSquared(r.object.position) && (r.dispatchEvent(h), i.copy(r.object.position))
    }, this.reset = function() {
        r._state = s.NONE, o = s.NONE, r.target.copy(r.target0), r.object.position.copy(r.position0), r.object.up.copy(r.up0), a.subVectors(r.object.position, r.target), r.object.left = r.left0, r.object.right = r.right0, r.object.top = r.top0, r.object.bottom = r.bottom0, r.object.lookAt(r.target), r.dispatchEvent(h), i.copy(r.object.position)
    }, this.domElement.addEventListener("contextmn", function(e) {}, !1), this.domElement.addEventListener("mousedown", function(e) {
        !1 !== r.enabled && (e.stopPropagation(), r._state === s.NONE && (r._state = e.button), r._state !== s.ROTATE || r.noRotate ? r._state !== s.ZOOM || r.noZoom ? r._state !== s.PAN || r.noPan || (r._panStart.copy(S(e.pageX, e.pageY)), r._panEnd.copy(r._panStart)) : (r._zoomStart.copy(S(e.pageX, e.pageY)), r._zoomEnd.copy(r._zoomStart)) : (r._rotateStart.copy(k(e.pageX, e.pageY)), r._rotateEnd.copy(r._rotateStart)), document.addEventListener("mousemove", x, !1), document.addEventListener("mouseup", R, !1), r.dispatchEvent(p))
    }, !1), this.domElement.addEventListener("mousewheel", E, !1), this.domElement.addEventListener("DOMMouseScroll", E, !1), this.domElement.addEventListener("touchstart", function(e) {
        if (!1 !== r.enabled) {
            switch (e.touches.length) {
                case 1:
                    r._state = s.TOUCH_ROTATE, r._rotateStart.copy(k(e.touches[0].pageX, e.touches[0].pageY)), r._rotateEnd.copy(r._rotateStart);
                    break;
                case 2:
                    r._state = s.TOUCH_ZOOM_PAN;
                    var t = e.touches[0].pageX - e.touches[1].pageX,
                        i = e.touches[0].pageY - e.touches[1].pageY;
                    l = d = Math.sqrt(t * t + i * i);
                    var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        o = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    r._panStart.copy(S(n, o)), r._panEnd.copy(r._panStart);
                    break;
                default:
                    r._state = s.NONE
            }
            r.dispatchEvent(p)
        }
    }, !1), this.domElement.addEventListener("touchend", function(e) {
        if (!1 !== r.enabled) {
            switch (e.touches.length) {
                case 1:
                    r._rotateEnd.copy(k(e.touches[0].pageX, e.touches[0].pageY)), r._rotateStart.copy(r._rotateEnd);
                    break;
                case 2:
                    d = l = 0;
                    var t = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                        i = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                    r._panEnd.copy(S(t, i)), r._panStart.copy(r._panEnd)
            }
            r._state = s.NONE, r.dispatchEvent(m)
        }
    }, !1), this.domElement.addEventListener("touchmove", function(e) {
        if (!1 !== r.enabled) switch (e.stopPropagation(), e.touches.length) {
            case 1:
                r._rotateEnd.copy(k(e.touches[0].pageX, e.touches[0].pageY));
                break;
            case 2:
                var t = e.touches[0].pageX - e.touches[1].pageX,
                    i = e.touches[0].pageY - e.touches[1].pageY;
                l = Math.sqrt(t * t + i * i);
                var n = (e.touches[0].pageX + e.touches[1].pageX) / 2,
                    o = (e.touches[0].pageY + e.touches[1].pageY) / 2;
                r._panEnd.copy(S(n, o));
                break;
            default:
                r._state = s.NONE
        }
    }, !1), window.addEventListener("keydown", A, !1), window.addEventListener("keyup", function(e) {
        !1 !== r.enabled && (r._state = o, window.addEventListener("keydown", A, !1))
    }, !1), this.handleResize(), this.update()
}, THREE.OrthographicTrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.OrthographicTrackballControls.prototype.constructor = THREE.OrthographicTrackballControls, THREE.RenderableObject = function() {
    this.id = 0, this.object = null, this.z = 0
}, THREE.RenderableFace = function() {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.v3 = new THREE.RenderableVertex, this.normalModel = new THREE.Vector3, this.vertexNormalsModel = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3], this.vertexNormalsLength = 0, this.color = new THREE.Color, this.material = null, this.uvs = [new THREE.Vector2, new THREE.Vector2, new THREE.Vector2], this.z = 0
}, THREE.RenderableVertex = function() {
    this.position = new THREE.Vector3, this.positionWorld = new THREE.Vector3, this.positionScreen = new THREE.Vector4, this.visible = !0
}, THREE.RenderableVertex.prototype.copy = function(e) {
    this.positionWorld.copy(e.positionWorld), this.positionScreen.copy(e.positionScreen)
}, THREE.RenderableLine = function() {
    this.id = 0, this.v1 = new THREE.RenderableVertex, this.v2 = new THREE.RenderableVertex, this.vertexColors = [new THREE.Color, new THREE.Color], this.material = null, this.z = 0
}, THREE.RenderableSprite = function() {
    this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = 0, this.scale = new THREE.Vector2, this.material = null
}, THREE.Projector = function() {
    var Q, J, o, ee, te, ie, ne, oe, re, se, ae, ce = [],
        de = 0,
        le = [],
        t = 0,
        i = [],
        n = 0,
        r = [],
        s = 0,
        a = [],
        c = 0,
        he = {
            objects: [],
            lights: [],
            elements: []
        },
        pe = new THREE.Vector3,
        me = new THREE.Vector3,
        ue = new THREE.Vector3,
        fe = new THREE.Vector3,
        ge = new THREE.Vector4,
        d = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)),
        v = new THREE.Box3,
        b = new Array(3),
        ve = (new Array(4), new THREE.Matrix4),
        be = new THREE.Matrix4,
        ye = new THREE.Matrix4,
        _e = new THREE.Matrix3,
        Ce = new THREE.Frustum,
        we = new THREE.Vector4,
        Se = new THREE.Vector4;
    this.projectVector = function(e, t) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."), e.project(t)
    }, this.unprojectVector = function(e, t) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), e.unproject(t)
    }, this.pkRay = function(e, t) {
        console.error("THREE.Projector: .pkRay() is now raycaster.setFromCamera().")
    };
    var ke = new function() {
        function n(e) {
            var t = e.position,
                i = e.positionWorld,
                n = e.positionScreen;
            i.copy(t).applyMatrix4(ae), n.copy(i).applyMatrix4(be);
            var o = 1 / n.w;
            n.x *= o, n.y *= o, n.z *= o, e.visible = -1 <= n.x && n.x <= 1 && -1 <= n.y && n.y <= 1 && -1 <= n.z && n.z <= 1
        }

        function l(e, t, i) {
            return !0 === e.visible || !0 === t.visible || !0 === i.visible || (b[0] = e.positionScreen, b[1] = t.positionScreen, b[2] = i.positionScreen, d.isIntersectionBox(v.setFromPoints(b)))
        }

        function h(e, t, i) {
            return (i.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (i.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x) < 0
        }
        var p = [],
            m = [],
            u = null,
            f = null,
            g = new THREE.Matrix3;
        return {
            setObject: function(e) {
                f = (u = e).material, g.getNormalMatrix(u.matrixWorld), p.length = 0, m.length = 0
            },
            projectVertex: n,
            checkTriangleVisibility: l,
            checkBackfaceCulling: h,
            pushVertex: function(e, t, i) {
                (o = Ae()).position.set(e, t, i), n(o)
            },
            pushNormal: function(e, t, i) {
                p.push(e, t, i)
            },
            pushUv: function(e, t) {
                m.push(e, t)
            },
            pushLine: function(e, t) {
                var i = le[e],
                    n = le[t];
                (ne = Re()).id = u.id, ne.v1.copy(i), ne.v2.copy(n), ne.z = (i.positionScreen.z + n.positionScreen.z) / 2, ne.material = u.material, he.elements.push(ne)
            },
            pushTriangle: function(e, t, i) {
                var n = le[e],
                    o = le[t],
                    r = le[i];
                if (!1 !== l(n, o, r) && (f.side === THREE.DoubleSide || !0 === h(n, o, r))) {
                    (te = xe()).id = u.id, te.v1.copy(n), te.v2.copy(o), te.v3.copy(r), te.z = (n.positionScreen.z + o.positionScreen.z + r.positionScreen.z) / 3;
                    for (var s = 0; s < 3; s++) {
                        var a = 3 * arguments[s],
                            c = te.vertexNormalsModel[s];
                        c.set(p[a], p[1 + a], p[2 + a]), c.applyMatrix3(g).normalize();
                        var d = 2 * arguments[s];
                        te.uvs[s].set(m[d], m[1 + d])
                    }
                    te.vertexNormalsLength = 3, te.material = u.material, he.elements.push(te)
                }
            }
        }
    };

    function Ae() {
        if (ee !== t) return le[ee++];
        var e = new THREE.RenderableVertex;
        return le.push(e), t++, ee++, e
    }

    function xe() {
        if (ie !== n) return i[ie++];
        var e = new THREE.RenderableFace;
        return i.push(e), n++, ie++, e
    }

    function Re() {
        if (oe !== s) return r[oe++];
        var e = new THREE.RenderableLine;
        return r.push(e), s++, oe++, e
    }

    function Ee() {
        if (se !== c) return a[se++];
        var e = new THREE.RenderableSprite;
        return a.push(e), c++, se++, e
    }

    function De(e, t) {
        return e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0
    }

    function Oe(e, t) {
        var i = 0,
            n = 1,
            o = e.z + e.w,
            r = t.z + t.w,
            s = -e.z + e.w,
            a = -t.z + t.w;
        return 0 <= o && 0 <= r && 0 <= s && 0 <= a || !(o < 0 && r < 0 || s < 0 && a < 0) && (o < 0 ? i = Math.max(i, o / (o - r)) : r < 0 && (n = Math.min(n, o / (o - r))), s < 0 ? i = Math.max(i, s / (s - a)) : a < 0 && (n = Math.min(n, s / (s - a))), !(n < i) && (e.lerp(t, i), t.lerp(e, 1 - n), !0))
    }
    this.projectScene = function(e, t, i, n) {
        se = oe = ie = 0, !(he.elements.length = 0) === e.autoUpdate && e.updateMatrixWorld(), void 0 === t.parent && t.updateMatrixWorld(), ve.copy(t.matrixWorldInverse.getInverse(t.matrixWorld)), be.multiplyMatrices(t.projectionMatrix, ve), Ce.setFromMatrix(be), J = 0, he.objects.length = 0, he.lights.length = 0, e.traverseVisible(function(e) {
            if (e instanceof THREE.Light) he.lights.push(e);
            else if (e instanceof THREE.Mesh || e instanceof THREE.Line || e instanceof THREE.Sprite) {
                if (!1 === e.material.visible) return;
                !1 !== e.frustumCulled && !0 !== Ce.intersectsObject(e) || ((Q = function() {
                    if (J !== de) return ce[J++];
                    var e = new THREE.RenderableObject;
                    return ce.push(e), de++, J++, e
                }()).id = e.id, Q.object = e, fe.setFromMatrixPosition(e.matrixWorld), fe.applyProjection(be), Q.z = fe.z, he.objects.push(Q))
            }
        }), !0 === i && he.objects.sort(De);
        for (var o = 0, r = he.objects.length; o < r; o++) {
            var s = he.objects[o].object,
                a = s.geometry;
            if (ke.setObject(s), ae = s.matrixWorld, ee = 0, s instanceof THREE.Mesh) {
                if (a instanceof THREE.BufferGeometry) {
                    var c = a.attributes,
                        d = a.offsets;
                    if (void 0 === c.position) continue;
                    for (var l = 0, h = (X = c.position.array).length; l < h; l += 3) ke.pushVertex(X[l], X[l + 1], X[l + 2]);
                    if (void 0 !== c.normal) {
                        var p = c.normal.array;
                        for (l = 0, h = p.length; l < h; l += 3) ke.pushNormal(p[l], p[l + 1], p[l + 2])
                    }
                    if (void 0 !== c.uv) {
                        var m = c.uv.array;
                        for (l = 0, h = m.length; l < h; l += 2) ke.pushUv(m[l], m[l + 1])
                    }
                    if (void 0 !== c.index) {
                        var u = c.index.array;
                        if (0 < d.length)
                            for (o = 0; o < d.length; o++) {
                                var f = d[o],
                                    g = f.index;
                                for (l = f.start, h = f.start + f.count; l < h; l += 3) ke.pushTriangle(u[l] + g, u[l + 1] + g, u[l + 2] + g)
                            } else
                                for (l = 0, h = u.length; l < h; l += 3) ke.pushTriangle(u[l], u[l + 1], u[l + 2])
                    } else
                        for (l = 0, h = X.length / 3; l < h; l += 3) ke.pushTriangle(l, l + 1, l + 2)
                } else if (a instanceof THREE.Geometry) {
                    var v = a.vertices,
                        b = a.faces,
                        y = a.faceVertexUvs[0];
                    _e.getNormalMatrix(ae);
                    for (var _ = s.material instanceof THREE.MeshFaceMaterial, C = !0 == _ ? s.material : null, w = 0, S = v.length; w < S; w++) {
                        var k = v[w];
                        ke.pushVertex(k.x, k.y, k.z)
                    }
                    for (var A = 0, x = b.length; A < x; A++) {
                        var R = b[A],
                            E = !0 == _ ? C.materials[R.materialIndex] : s.material;
                        if (void 0 !== E) {
                            var D = E.side,
                                O = le[R.a],
                                T = le[R.b],
                                H = le[R.c];
                            if (!0 === E.morphTargets) {
                                var M = a.morphTargets,
                                    I = s.morphTargetInfluences,
                                    $ = O.position,
                                    L = T.position,
                                    F = H.position;
                                pe.set(0, 0, 0), me.set(0, 0, 0), ue.set(0, 0, 0);
                                for (var P = 0, N = M.length; P < N; P++) {
                                    var z = I[P];
                                    if (0 !== z) {
                                        var q = M[P].vertices;
                                        pe.x += (q[R.a].x - $.x) * z, pe.y += (q[R.a].y - $.y) * z, pe.z += (q[R.a].z - $.z) * z, me.x += (q[R.b].x - L.x) * z, me.y += (q[R.b].y - L.y) * z, me.z += (q[R.b].z - L.z) * z, ue.x += (q[R.c].x - F.x) * z, ue.y += (q[R.c].y - F.y) * z, ue.z += (q[R.c].z - F.z) * z
                                    }
                                }
                                O.position.add(pe), T.position.add(me), H.position.add(ue), ke.projectVertex(O), ke.projectVertex(T), ke.projectVertex(H)
                            }
                            if (!1 !== ke.checkTriangleVisibility(O, T, H)) {
                                var j = ke.checkBackfaceCulling(O, T, H);
                                if (D !== THREE.DoubleSide) {
                                    if (D === THREE.FrontSide && !1 === j) continue;
                                    if (D === THREE.BackSide && !0 === j) continue
                                }(te = xe()).id = s.id, te.v1.copy(O), te.v2.copy(T), te.v3.copy(H), te.normalModel.copy(R.normal), !1 !== j || D !== THREE.BackSide && D !== THREE.DoubleSide || te.normalModel.negate(), te.normalModel.applyMatrix3(_e).normalize();
                                for (var U = R.vertexNormals, B = 0, G = Math.min(U.length, 3); B < G; B++) {
                                    var V = te.vertexNormalsModel[B];
                                    V.copy(U[B]), !1 !== j || D !== THREE.BackSide && D !== THREE.DoubleSide || V.negate(), V.applyMatrix3(_e).normalize()
                                }
                                te.vertexNormalsLength = U.length;
                                var W = y[A];
                                if (void 0 !== W)
                                    for (var Y = 0; Y < 3; Y++) te.uvs[Y].copy(W[Y]);
                                te.color = R.color, te.material = E, te.z = (O.positionScreen.z + T.positionScreen.z + H.positionScreen.z) / 3, he.elements.push(te)
                            }
                        }
                    }
                }
            } else if (s instanceof THREE.Line) {
                if (a instanceof THREE.BufferGeometry) {
                    if (void 0 !== (c = a.attributes).position) {
                        var X;
                        for (l = 0, h = (X = c.position.array).length; l < h; l += 3) ke.pushVertex(X[l], X[l + 1], X[l + 2]);
                        if (void 0 !== c.index)
                            for (l = 0, h = (u = c.index.array).length; l < h; l += 2) ke.pushLine(u[l], u[l + 1]);
                        else {
                            var K = s.mode === THREE.LinePieces ? 2 : 1;
                            for (l = 0, h = X.length / 3 - 1; l < h; l += K) ke.pushLine(l, l + 1)
                        }
                    }
                } else if (a instanceof THREE.Geometry) {
                    if (ye.multiplyMatrices(be, ae), 0 === (v = s.geometry.vertices).length) continue;
                    (O = Ae()).positionScreen.copy(v[0]).applyMatrix4(ye);
                    for (K = s.mode === THREE.LinePieces ? 2 : 1, w = 1, S = v.length; w < S; w++)(O = Ae()).positionScreen.copy(v[w]).applyMatrix4(ye), 0 < (w + 1) % K || (T = le[ee - 2], we.copy(O.positionScreen), Se.copy(T.positionScreen), !0 === Oe(we, Se) && (we.multiplyScalar(1 / we.w), Se.multiplyScalar(1 / Se.w), (ne = Re()).id = s.id, ne.v1.positionScreen.copy(we), ne.v2.positionScreen.copy(Se), ne.z = Math.max(we.z, Se.z), ne.material = s.material, s.material.vertexColors === THREE.VertexColors && (ne.vertexColors[0].copy(s.geometry.colors[w]), ne.vertexColors[1].copy(s.geometry.colors[w - 1])), he.elements.push(ne)))
                }
            } else if (s instanceof THREE.Sprite) {
                ge.set(ae.elements[12], ae.elements[13], ae.elements[14], 1), ge.applyMatrix4(be);
                var Z = 1 / ge.w;
                ge.z *= Z, -1 <= ge.z && ge.z <= 1 && ((re = Ee()).id = s.id, re.x = ge.x * Z, re.y = ge.y * Z, re.z = ge.z, re.object = s, re.rotation = s.rotation, re.scale.x = s.scale.x * Math.abs(re.x - (ge.x + t.projectionMatrix.elements[0]) / (ge.w + t.projectionMatrix.elements[12])), re.scale.y = s.scale.y * Math.abs(re.y - (ge.y + t.projectionMatrix.elements[5]) / (ge.w + t.projectionMatrix.elements[13])), re.material = s.material, he.elements.push(re))
            }
        }
        return !0 === n && he.elements.sort(De), he
    }
};
var MMTF = {};

function initMMTF(e) {
    function p(e, t, i) {
        for (var n = (e.byteLength, 0), o = i.length; n < o; n++) {
            var r = i.charCodeAt(n);
            if (r < 128) e.setUint8(t++, r >>> 0 & 127 | 0);
            else if (r < 2048) e.setUint8(t++, r >>> 6 & 31 | 192), e.setUint8(t++, r >>> 0 & 63 | 128);
            else if (r < 65536) e.setUint8(t++, r >>> 12 & 15 | 224), e.setUint8(t++, r >>> 6 & 63 | 128), e.setUint8(t++, r >>> 0 & 63 | 128);
            else {
                if (!(r < 1114112)) throw new Error("bad codepoint " + r);
                e.setUint8(t++, r >>> 18 & 7 | 240), e.setUint8(t++, r >>> 12 & 63 | 128), e.setUint8(t++, r >>> 6 & 63 | 128), e.setUint8(t++, r >>> 0 & 63 | 128)
            }
        }
    }

    function m(e) {
        for (var t = 0, i = 0, n = e.length; i < n; i++) {
            var o = e.charCodeAt(i);
            if (o < 128) t += 1;
            else if (o < 2048) t += 2;
            else if (o < 65536) t += 3;
            else {
                if (!(o < 1114112)) throw new Error("bad codepoint " + o);
                t += 4
            }
        }
        return t
    }

    function t(e) {
        var t = new ArrayBuffer(function e(t) {
            var i = typeof t;
            if ("string" == i) {
                if ((n = m(t)) < 32) return 1 + n;
                if (n < 256) return 2 + n;
                if (n < 65536) return 3 + n;
                if (n < 4294967296) return 5 + n
            }
            if (t instanceof Uint8Array) {
                if ((n = t.byteLength) < 256) return 2 + n;
                if (n < 65536) return 3 + n;
                if (n < 4294967296) return 5 + n
            }
            if ("number" == i) {
                if (Math.floor(t) !== t) return 9;
                if (0 <= t) {
                    if (t < 128) return 1;
                    if (t < 256) return 2;
                    if (t < 65536) return 3;
                    if (t < 4294967296) return 5;
                    throw new Error("Number too big 0x" + t.toString(16))
                }
                if (-32 <= t) return 1;
                if (-128 <= t) return 2;
                if (-32768 <= t) return 3;
                if (-2147483648 <= t) return 5;
                throw new Error("Number too small -0x" + t.toString(16).substr(1))
            }
            if ("boolean" == i || null === t) return 1;
            if ("object" != i) throw new Error("Unknown type " + i);
            var n, o = 0;
            if (Array.isArray(t)) {
                n = t.length;
                for (var r = 0; r < n; r++) o += e(t[r])
            } else {
                var s = Object.keys(t);
                for (n = s.length, r = 0; r < n; r++) {
                    var a = s[r];
                    o += e(a) + e(t[a])
                }
            }
            if (n < 16) return 1 + o;
            if (n < 65536) return 3 + o;
            if (n < 4294967296) return 5 + o;
            throw new Error("Array or object too long 0x" + n.toString(16))
        }(e));
        return function e(t, i, n) {
            var o = typeof t;
            if ("string" == o) {
                if ((r = m(t)) < 32) return i.setUint8(n, 160 | r), p(i, n + 1, t), 1 + r;
                if (r < 256) return i.setUint8(n, 217), i.setUint8(n + 1, r), p(i, n + 2, t), 2 + r;
                if (r < 65536) return i.setUint8(n, 218), i.setUint16(n + 1, r), p(i, n + 3, t), 3 + r;
                if (r < 4294967296) return i.setUint8(n, 219), i.setUint32(n + 1, r), p(i, n + 5, t), 5 + r
            }
            if (t instanceof Uint8Array) {
                var r = t.byteLength,
                    s = new Uint8Array(i.buffer);
                if (r < 256) return i.setUint8(n, 196), i.setUint8(n + 1, r), s.set(t, n + 2), 2 + r;
                if (r < 65536) return i.setUint8(n, 197), i.setUint16(n + 1, r), s.set(t, n + 3), 3 + r;
                if (r < 4294967296) return i.setUint8(n, 198), i.setUint32(n + 1, r), s.set(t, n + 5), 5 + r
            }
            if ("number" == o) {
                if (!isFinite(t)) throw new Error("Number not finite: " + t);
                if (Math.floor(t) !== t) return i.setUint8(n, 203), i.setFloat64(n + 1, t), 9;
                if (0 <= t) {
                    if (t < 128) return i.setUint8(n, t), 1;
                    if (t < 256) return i.setUint8(n, 204), i.setUint8(n + 1, t), 2;
                    if (t < 65536) return i.setUint8(n, 205), i.setUint16(n + 1, t), 3;
                    if (t < 4294967296) return i.setUint8(n, 206), i.setUint32(n + 1, t), 5;
                    throw new Error("Number too big 0x" + t.toString(16))
                }
                if (-32 <= t) return i.setInt8(n, t), 1;
                if (-128 <= t) return i.setUint8(n, 208), i.setInt8(n + 1, t), 2;
                if (-32768 <= t) return i.setUint8(n, 209), i.setInt16(n + 1, t), 3;
                if (-2147483648 <= t) return i.setUint8(n, 210), i.setInt32(n + 1, t), 5;
                throw new Error("Number too small -0x" + (-t).toString(16).substr(1))
            }
            if (null === t) return i.setUint8(n, 192), 1;
            if ("boolean" == o) return i.setUint8(n, t ? 195 : 194), 1;
            if ("object" != o) throw new Error("Unknown type " + o);
            var a = 0,
                c = Array.isArray(t);
            if (c) r = t.length;
            else {
                var d = Object.keys(t);
                r = d.length
            }
            if (r < 16 ? (i.setUint8(n, r | (c ? 144 : 128)), a = 1) : r < 65536 ? (i.setUint8(n, c ? 220 : 222), i.setUint16(n + 1, r), a = 3) : r < 4294967296 && (i.setUint8(n, c ? 221 : 223), i.setUint32(n + 1, r), a = 5), c)
                for (var l = 0; l < r; l++) a += e(t[l], i, n + a);
            else
                for (l = 0; l < r; l++) {
                    var h = d[l];
                    a += e(h, i, n + a), a += e(t[h], i, n + a)
                }
            return a
        }(e, new DataView(t), 0), new Uint8Array(t)
    }

    function a(e, t, i) {
        return t ? new e(t.buffer, t.byteOffset, t.byteLength / (i || 1)) : void 0
    }

    function h(e) {
        return a(DataView, e)
    }

    function c(e) {
        return a(Uint8Array, e)
    }

    function d(e) {
        return a(Int8Array, e)
    }

    function l(e) {
        return a(Int32Array, e, 4)
    }

    function u(e, t) {
        var i = e.length / 2;
        t = t || new Int16Array(i);
        for (var n = 0, o = 0; n < i; ++n, o += 2) t[n] = e[o] << 8 ^ e[o + 1] << 0;
        return t
    }

    function f(e, t) {
        var i = e.length / 4;
        t = t || new Int32Array(i);
        for (var n = 0, o = 0; n < i; ++n, o += 4) t[n] = e[o] << 24 ^ e[o + 1] << 16 ^ e[o + 2] << 8 ^ e[o + 3] << 0;
        return t
    }

    function i(e, t) {
        for (var i = e.length, n = h(t = t || new Uint8Array(4 * i)), o = 0; o < i; ++o) n.setInt32(4 * o, e[o]);
        return c(t)
    }

    function g(e, t, i) {
        var n = e.length,
            o = 1 / t;
        i = i || new Float32Array(n);
        for (var r = 0; r < n; ++r) i[r] = e[r] * o;
        return i
    }

    function o(e, t, i) {
        var n = e.length;
        i = i || new Int32Array(n);
        for (var o = 0; o < n; ++o) i[o] = Math.round(e[o] * t);
        return i
    }

    function v(e, t) {
        var i, n;
        if (!t) {
            var o = 0;
            for (i = 0, n = e.length; i < n; i += 2) o += e[i + 1];
            t = new e.constructor(o)
        }
        var r = 0;
        for (i = 0, n = e.length; i < n; i += 2)
            for (var s = e[i], a = e[i + 1], c = 0; c < a; ++c) t[r] = s, ++r;
        return t
    }

    function n(e) {
        if (0 === e.length) return new Int32Array;
        var t, i, n = 2;
        for (t = 1, i = e.length; t < i; ++t) e[t - 1] !== e[t] && (n += 2);
        var o = new Int32Array(n),
            r = 0,
            s = 1;
        for (t = 1, i = e.length; t < i; ++t) e[t - 1] !== e[t] ? (o[r] = e[t - 1], o[r + 1] = s, s = 1, r += 2) : ++s;
        return o[r] = e[e.length - 1], o[r + 1] = s, o
    }

    function b(e, t) {
        var i = e.length;
        t = t || new e.constructor(i), i && (t[0] = e[0]);
        for (var n = 1; n < i; ++n) t[n] = e[n] + t[n - 1];
        return t
    }

    function r(e, t) {
        var i = e.length;
        (t = t || new e.constructor(i))[0] = e[0];
        for (var n = 1; n < i; ++n) t[n] = e[n] - e[n - 1];
        return t
    }

    function y(e, t) {
        var i, n, o = e instanceof Int8Array ? 127 : 32767,
            r = -o - 1,
            s = e.length;
        if (!t) {
            var a = 0;
            for (i = 0; i < s; ++i) e[i] < o && e[i] > r && ++a;
            t = new Int32Array(a)
        }
        for (n = i = 0; i < s;) {
            for (var c = 0; e[i] === o || e[i] === r;) c += e[i], ++i;
            c += e[i], ++i, t[n] = c, ++n
        }
        return t
    }

    function _(e, t, i) {
        return g(y(e, l(i)), t, i)
    }

    function C(e, t, i) {
        var n, o, r, s = y(e, l(i));
        return o = t, r = a(Float32Array, n = s, 4), g(b(n, l(r)), o, r)
    }

    function s(e, t, i) {
        return function(e, t) {
            var i, n = t ? 127 : 32767,
                o = -n - 1,
                r = e.length,
                s = 0;
            for (i = 0; i < r; ++i) {
                0 === (d = e[i]) ? ++s : 0 < d ? (s += Math.ceil(d / n), d % n == 0 && (s += 1)) : (s += Math.ceil(d / o), d % o == 0 && (s += 1))
            }
            var a = new(t ? Int8Array : Int16Array)(s),
                c = 0;
            for (i = 0; i < r; ++i) {
                var d;
                if (0 <= (d = e[i]))
                    for (; n <= d;) a[c] = n, ++c, d -= n;
                else
                    for (; d <= o;) a[c] = o, ++c, d -= o;
                a[c] = d, ++c
            }
            return a
        }(r(o(e, t), n), i);
        var n
    }

    function w(e, t, i, n) {
        var o = new ArrayBuffer(12 + n.byteLength),
            r = new Uint8Array(o),
            s = new DataView(o);
        return s.setInt32(0, e), s.setInt32(4, t), i && r.set(i, 8), r.set(n, 12), r
    }

    function S(e) {
        return w(2, e.length, void 0, c(e))
    }

    function k(e) {
        return w(4, e.length, void 0, i(e))
    }

    function A(e, t) {
        return w(5, e.length / t, i([t]), c(e))
    }

    function x(e) {
        return w(6, e.length, void 0, i(n(e)))
    }

    function R(e) {
        return w(8, e.length, void 0, i(n(r(e))))
    }

    function E(e, t) {
        return w(9, e.length, i([t]), i(n(o(e, t))))
    }

    function D(e, t) {
        return w(10, e.length, i([t]), function(e, t) {
            for (var i = e.length, n = h(t = t || new Uint8Array(2 * i)), o = 0; o < i; ++o) n.setInt16(2 * o, e[o]);
            return c(t)
        }(s(e, t)))
    }

    function O(t) {
        var i = {};
        return L.forEach(function(e) {
            void 0 !== t[e] && (i[e] = t[e])
        }), t.bondAtomList && (i.bondAtomList = k(t.bondAtomList)), t.bondOrderList && (i.bondOrderList = S(t.bondOrderList)), i.xCoordList = D(t.xCoordList, 1e3), i.yCoordList = D(t.yCoordList, 1e3), i.zCoordList = D(t.zCoordList, 1e3), t.bFactorList && (i.bFactorList = D(t.bFactorList, 100)), t.atomIdList && (i.atomIdList = R(t.atomIdList)), t.altLocList && (i.altLocList = x(t.altLocList)), t.occupancyList && (i.occupancyList = E(t.occupancyList, 100)), i.groupIdList = R(t.groupIdList), i.groupTypeList = k(t.groupTypeList), t.secStructList && (i.secStructList = S(t.secStructList)), t.insCodeList && (i.insCodeList = x(t.insCodeList)), t.sequenceIndexList && (i.sequenceIndexList = R(t.sequenceIndexList)), i.chainIdList = A(t.chainIdList, 4), t.chainNameList && (i.chainNameList = A(t.chainNameList, 4)), i
    }

    function T(o) {
        function n(e) {
            for (var t = {}, i = 0; i < e; i++) {
                t[c()] = c()
            }
            return t
        }

        function r(e) {
            var t = o.subarray(d, d + e);
            return d += e, t
        }

        function s(e) {
            var t = o.subarray(d, d + e);
            d += e;
            if (65535 < e) {
                for (var i = [], n = 0; n < t.length; n += 65535) i.push(String.fromCharCode.apply(null, t.subarray(n, n + 65535)));
                return i.join("")
            }
            return String.fromCharCode.apply(null, t)
        }

        function a(e) {
            for (var t = new Array(e), i = 0; i < e; i++) t[i] = c();
            return t
        }

        function c() {
            var e, t, i = o[d];
            if (0 == (128 & i)) return d++, i;
            if (128 == (240 & i)) return d++, n(t = 15 & i);
            if (144 == (240 & i)) return d++, a(t = 15 & i);
            if (160 == (224 & i)) return d++, s(t = 31 & i);
            if (224 == (224 & i)) return e = l.getInt8(d), d++, e;
            switch (i) {
                case 192:
                    return d++, null;
                case 194:
                    return d++, !1;
                case 195:
                    return d++, !0;
                case 196:
                    return t = l.getUint8(d + 1), d += 2, r(t);
                case 197:
                    return t = l.getUint16(d + 1), d += 3, r(t);
                case 198:
                    return t = l.getUint32(d + 1), d += 5, r(t);
                case 202:
                    return e = l.getFloat32(d + 1), d += 5, e;
                case 203:
                    return e = l.getFloat64(d + 1), d += 9, e;
                case 204:
                    return e = o[d + 1], d += 2, e;
                case 205:
                    return e = l.getUint16(d + 1), d += 3, e;
                case 206:
                    return e = l.getUint32(d + 1), d += 5, e;
                case 208:
                    return e = l.getInt8(d + 1), d += 2, e;
                case 209:
                    return e = l.getInt16(d + 1), d += 3, e;
                case 210:
                    return e = l.getInt32(d + 1), d += 5, e;
                case 217:
                    return t = l.getUint8(d + 1), d += 2, s(t);
                case 218:
                    return t = l.getUint16(d + 1), d += 3, s(t);
                case 219:
                    return t = l.getUint32(d + 1), d += 5, s(t);
                case 220:
                    return t = l.getUint16(d + 1), d += 3, a(t);
                case 221:
                    return t = l.getUint32(d + 1), d += 5, a(t);
                case 222:
                    return t = l.getUint16(d + 1), d += 3, n(t);
                case 223:
                    return t = l.getUint32(d + 1), d += 5, n(t)
            }
            throw new Error("Unknown type 0x" + i.toString(16))
        }
        var d = 0,
            l = new DataView(o.buffer);
        return c()
    }

    function H(e, t, i, n) {
        switch (e) {
            case 1:
                return function(e, t) {
                    for (var i = e.length, n = h(t = t || new Float32Array(i / 4)), o = h(e), r = 0, s = 0, a = i / 4; r < a; ++r, s += 4) n.setFloat32(s, o.getFloat32(s), !0);
                    return t
                }(t);
            case 2:
                return d(t);
            case 3:
                return u(t);
            case 4:
                return f(t);
            case 5:
                return c(t);
            case 6:
                return v(f(t), new Uint8Array(i));
            case 7:
                return v(f(t));
            case 8:
                return b(v(f(t)), a);
            case 9:
                return o = f(t), r = f(n)[0], g(v(o, l(s)), r, s);
            case 10:
                return C(u(t), f(n)[0]);
            case 11:
                return g(u(t), f(n)[0]);
            case 12:
                return _(u(t), f(n)[0]);
            case 13:
                return _(d(t), f(n)[0]);
            case 14:
                return y(u(t));
            case 15:
                return y(d(t))
        }
        var o, r, s, a
    }

    function M(c, e) {
        var d = (e = e || {}).ignoreFields,
            l = {};
        return F.forEach(function(e) {
            var t, i, n, o, r, s = !!d && -1 !== d.indexOf(e),
                a = c[e];
            s || void 0 === a || (a instanceof Uint8Array ? l[e] = H.apply(null, (i = h(t = a), n = i.getInt32(0), o = i.getInt32(4), r = t.subarray(8, 12), [n, t = t.subarray(12), o, r])) : l[e] = a)
        }), l
    }

    function W(e) {
        return String.fromCharCode.apply(null, e).replace(/\0/g, "")
    }

    function I(e, t) {
        return e instanceof ArrayBuffer && (e = new Uint8Array(e)), M(e instanceof Uint8Array ? T(e) : e, t)
    }

    function $(e, t, i, n) {
        var o = new XMLHttpRequest;
        o.addEventListener("load", function() {
            try {
                var e = I(o.response);
                i(e)
            } catch (e) {
                n(e)
            }
        }, !0), o.addEventListener("error", n, !0), o.responseType = "arraybuffer", o.open("GET", t + e.toUpperCase()), o.send()
    }
    var L = ["mmtfVersion", "mmtfProducer", "unitCell", "spaceGroup", "structureId", "title", "depositionDate", "releaseDate", "experimentalMethods", "resolution", "rFree", "rWork", "bioAssemblyList", "ncsOperatorList", "entityList", "groupList", "numBonds", "numAtoms", "numGroups", "numChains", "numModels", "groupsPerChain", "chainsPerModel"],
        F = L.concat(["xCoordList", "yCoordList", "zCoordList", "groupIdList", "groupTypeList", "chainIdList", "bFactorList", "atomIdList", "altLocList", "occupancyList", "secStructList", "insCodeList", "sequenceIndexList", "chainNameList", "bondAtomList", "bondOrderList"]),
        P = "//mmtf.rcsb.org/v1.0/",
        N = P + "full/",
        z = P + "reduced/";
    return e.encode = function(e) {
        return t(O(e))
    }, e.decode = I, e.traverse = function(e, t, i) {
        var n, o, r, s, a, c, d = (i = i || {}).firstModelOnly,
            l = t.onModel,
            h = t.onChain,
            p = t.onGroup,
            m = t.onAtom,
            u = t.onBond,
            f = 0,
            g = 0,
            v = 0,
            b = 0,
            y = 0,
            _ = -1,
            C = e.chainNameList,
            w = e.secStructList,
            S = e.insCodeList,
            k = e.sequenceIndexList,
            A = e.atomIdList,
            x = e.bFactorList,
            R = e.altLocList,
            E = e.occupancyList,
            D = e.bondAtomList,
            O = e.bondOrderList;
        for (n = 0, o = e.chainsPerModel.length; n < o && !(d && 0 < f); ++n) {
            var T = e.chainsPerModel[f];
            for (l && l({
                    chainCount: T,
                    modelIndex: f
                }), r = 0; r < T; ++r) {
                var H = e.groupsPerChain[g];
                if (h) {
                    var M = W(e.chainIdList.subarray(4 * g, 4 * g + 4)),
                        I = null;
                    C && (I = W(C.subarray(4 * g, 4 * g + 4))), h({
                        groupCount: H,
                        chainIndex: g,
                        modelIndex: f,
                        chainId: M,
                        chainName: I
                    })
                }
                for (s = 0; s < H; ++s) {
                    var $ = e.groupList[e.groupTypeList[v]],
                        L = $.atomNameList.length;
                    if (p) {
                        var F = null;
                        w && (F = w[v]);
                        var P = null;
                        e.insCodeList && (P = String.fromCharCode(S[v]));
                        var N = null;
                        k && (N = k[v]), p({
                            atomCount: L,
                            groupIndex: v,
                            chainIndex: g,
                            modelIndex: f,
                            groupId: e.groupIdList[v],
                            groupType: e.groupTypeList[v],
                            groupName: $.groupName,
                            singleLetterCode: $.singleLetterCode,
                            chemCompType: $.chemCompType,
                            secStruct: F,
                            insCode: P,
                            sequenceIndex: N
                        })
                    }
                    for (a = 0; a < L; ++a) {
                        if (m) {
                            var z = null;
                            A && (z = A[b]);
                            var q = null;
                            x && (q = x[b]);
                            var j = null;
                            R && (j = String.fromCharCode(R[b]));
                            var U = null;
                            E && (U = E[b]), m({
                                atomIndex: b,
                                groupIndex: v,
                                chainIndex: g,
                                modelIndex: f,
                                atomId: z,
                                element: $.elementList[a],
                                atomName: $.atomNameList[a],
                                formalCharge: $.formalChargeList[a],
                                xCoord: e.xCoordList[b],
                                yCoord: e.yCoordList[b],
                                zCoord: e.zCoordList[b],
                                bFactor: q,
                                altLoc: j,
                                occupancy: U
                            })
                        }
                        b += 1
                    }
                    if (u) {
                        var B = $.bondAtomList;
                        for (a = 0, c = $.bondOrderList.length; a < c; ++a) u({
                            atomIndex1: b - L + B[2 * a],
                            atomIndex2: b - L + B[2 * a + 1],
                            bondOrder: $.bondOrderList[a]
                        })
                    }
                    v += 1
                }
                g += 1
            }
            if (y = _ + 1, _ = b - 1, u && D)
                for (a = 0, c = D.length; a < c; a += 2) {
                    var G = D[a],
                        V = D[a + 1];
                    (y <= G && G <= _ || y <= V && V <= _) && u({
                        atomIndex1: G,
                        atomIndex2: V,
                        bondOrder: O ? O[a / 2] : null
                    })
                }
            f += 1
        }
    }, e.fetch = function(e, t, i) {
        $(e, N, t, i)
    }, e.fetchReduced = function(e, t, i) {
        $(e, z, t, i)
    }, e.version = "v1.0.1", e.fetchUrl = N, e.fetchReducedUrl = z, e.encodeMsgpack = t, e.encodeMmtf = O, e.decodeMsgpack = T, e.decodeMmtf = M, e
}
MMTF = initMMTF(MMTF);
var $NGL_shaderTextHash = {};
if ($NGL_shaderTextHash["SphereImpostor.frag"] = ["#define STANDARD", "#define IMPOSTOR", "", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "", "#ifdef PICKING", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#else", "    #include common", "    #include color_pars_fragment", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "bool flag2 = false;", "bool interior = false;", "vec3 cameraPos;", "vec3 cameraNormal;", "", "// Calculate depth based on the given camera position.", "float calcDepth( in vec3 cameraPos ){", "    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;", "    return 0.5 + 0.5 * clipZW.x / clipZW.y;", "}", "", "float calcClip( vec3 cameraPos ){", "    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );", "}", "", "bool Impostor( out vec3 cameraPos, out vec3 cameraNormal ){", "", "    vec3 cameraSpherePos = -vPointViewPosition;", "    cameraSpherePos.z += vRadius;", "", "    vec3 rayOrigin = mix( vec3( 0.0, 0.0, 0.0 ), vPoint, ortho );", "    vec3 rayDirection = mix( normalize( vPoint ), vec3( 0.0, 0.0, 1.0 ), ortho );", "    vec3 cameraSphereDir = mix( cameraSpherePos, rayOrigin - cameraSpherePos, ortho );", "", "    float B = dot( rayDirection, cameraSphereDir );", "    float det = B * B + vRadiusSq - dot( cameraSphereDir, cameraSphereDir );", "", "    if( det < 0.0 ){", "        discard;", "        return false;", "    }", "        float sqrtDet = sqrt( det );", "        float posT = mix( B + sqrtDet, B + sqrtDet, ortho );", "        float negT = mix( B - sqrtDet, sqrtDet - B, ortho );", "", "        cameraPos = rayDirection * negT + rayOrigin;", "", "        #ifdef NEAR_CLIP", "if( calcDepth( cameraPos ) <= 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    return false;", "}else if( calcClip( cameraPos ) > 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    flag2 = true;", "    return false;", "}else{", "    cameraNormal = normalize( cameraPos - cameraSpherePos );", "}", "        #else", "if( calcDepth( cameraPos ) <= 0.0 ){", "    cameraPos = rayDirection * posT + rayOrigin;", "    interior = true;", "    return false;", "}else{", "    cameraNormal = normalize( cameraPos - cameraSpherePos );", "}", "        #endif", "", "        cameraNormal = normalize( cameraPos - cameraSpherePos );", "        cameraNormal *= float(!interior) * 2.0 - 1.0;", "         return !interior;", "", "}", "", "void main(void){", "", "    bool flag = Impostor( cameraPos, cameraNormal );", "", "    #ifdef NEAR_CLIP", "        if( calcClip( cameraPos ) > 0.0 )", "            discard;", "    #endif", "", "    // FIXME not compatible with custom clipping plane", "    //Set the depth based on the new cameraPos.", "    gl_FragDepthEXT = calcDepth( cameraPos );", "    if( !flag ){", "", "        // clamp to near clipping plane and add a tiny value to", "        // make spheres with a greater radius occlude smaller ones", "        #ifdef NEAR_CLIP", "if( flag2 ){", "    gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );", "}else if( gl_FragDepthEXT >= 0.0 ){", "    gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "}", "        #else", "if( gl_FragDepthEXT >= 0.0 ){", "    gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "}", "        #endif", "", "    }", "", "    // bugfix (mac only?)", "    if (gl_FragDepthEXT < 0.0)", "        discard;", "    if (gl_FragDepthEXT > 1.0)", "        discard;", "", "    #ifdef PICKING", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #else", "", "        vec3 vNormal = cameraNormal;", "        vec3 vViewPosition = -cameraPos;", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "", "        // don't use include normal_fragment", "        vec3 normal = normalize( vNormal );", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "        //gl_FragColor = vec4( reflectedLight.directSpecular, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        //include fog_fragment", "        #ifdef USE_FOG", "            #ifdef USE_LOGDEPTHBUF_EXT", "                float depth = gl_FragDepthEXT / gl_FragCoord.w;", "            #else", "                float depth = gl_FragCoord.z / gl_FragCoord.w;", "            #endif", "            #ifdef FOG_EXP2", "                float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );", "            #else", "                float fogFactor = smoothstep( fogNear, fogFar, depth );", "            #endif", "            gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "        #endif", "", "    #endif", "", "}"].join("\n"), $NGL_shaderTextHash["SphereImpostor.vert"] = ["uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "attribute vec2 mapping;", "//attribute vec3 position;", "attribute float radius;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    #include color_pars_vertex", "#endif", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "const mat4 D = mat4(", "    1.0, 0.0, 0.0, 0.0,", "    0.0, 1.0, 0.0, 0.0,", "    0.0, 0.0, 1.0, 0.0,", "    0.0, 0.0, 0.0, -1.0", ");", "", "mat4 transpose( in mat4 inMatrix ) {", "    vec4 i0 = inMatrix[0];", "    vec4 i1 = inMatrix[1];", "    vec4 i2 = inMatrix[2];", "    vec4 i3 = inMatrix[3];", "", "    mat4 outMatrix = mat4(", "        vec4(i0.x, i1.x, i2.x, i3.x),", "        vec4(i0.y, i1.y, i2.y, i3.y),", "        vec4(i0.z, i1.z, i2.z, i3.z),", "        vec4(i0.w, i1.w, i2.w, i3.w)", "    );", "    return outMatrix;", "}", "", "//------------------------------------------------------------------------------", "// Compute point size and center using the technique described in:", "// 'GPU-Based Ray-Casting of Quadratic Surfaces'", "// by Christian Sigg, Tim Weyrich, Mario Botsch, Markus Gross.", "//", "// Code based on", "/*=========================================================================", "", " Program:   Visualization Toolkit", " Module:    Quadrics_fs.glsl and Quadrics_vs.glsl", "", " Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen", " All rights reserved.", " See Copyright.txt or http://www.kitware.com/Copyright.htm for details.", "", " This software is distributed WITHOUT ANY WARRANTY; without even", " the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR", " PURPOSE.  See the above copyright notice for more information.", "", " =========================================================================*/", "", "// .NAME Quadrics_fs.glsl and Quadrics_vs.glsl", "// .SECTION Thanks", "// <verbatim>", "//", "//  This file is part of the PointSprites plugin developed and contributed by", "//", "//  Copyright (c) CSCS - Swiss National Supercomputing Centre", "//                EDF - Electricite de France", "//", "//  John Biddiscombe, Ugo Varetto (CSCS)", "//  Stephane Ploix (EDF)", "//", "// </verbatim>", "//", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - adapted to work with quads", "void ComputePointSizeAndPositionInClipCoordSphere(){", "", "    vec2 xbc;", "    vec2 ybc;", "", "    mat4 T = mat4(", "        radius, 0.0, 0.0, 0.0,", "        0.0, radius, 0.0, 0.0,", "        0.0, 0.0, radius, 0.0,", "        position.x, position.y, position.z, 1.0", "    );", "", "    mat4 R = transpose( projectionMatrix * modelViewMatrix * T );", "    float A = dot( R[ 3 ], D * R[ 3 ] );", "    float B = -2.0 * dot( R[ 0 ], D * R[ 3 ] );", "    float C = dot( R[ 0 ], D * R[ 0 ] );", "    xbc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    xbc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sx = abs( xbc[ 0 ] - xbc[ 1 ] ) * 0.5;", "", "    A = dot( R[ 3 ], D * R[ 3 ] );", "    B = -2.0 * dot( R[ 1 ], D * R[ 3 ] );", "    C = dot( R[ 1 ], D * R[ 1 ] );", "    ybc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    ybc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sy = abs( ybc[ 0 ] - ybc[ 1 ]  ) * 0.5;", "", "    gl_Position.xy = vec2( 0.5 * ( xbc.x + xbc.y ), 0.5 * ( ybc.x + ybc.y ) );", "    gl_Position.xy -= mapping * vec2( sx, sy );", "    gl_Position.xy *= gl_Position.w;", "", "}", "", "void main(void){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        #include color_vertex", "    #endif", "", "    vRadius = radius * matrixScale( modelViewMatrix );", "", "    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "    // avoid clipping, added again in fragment shader", "    mvPosition.z -= vRadius;", "", "    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    ComputePointSizeAndPositionInClipCoordSphere();", "", "", "    vRadiusSq = vRadius * vRadius;", "    vec4 vPoint4 = projectionMatrixInverse * gl_Position;", "    vPoint = vPoint4.xyz / vPoint4.w;", "    vPointViewPosition = -mvPosition.xyz / mvPosition.w;", "", "}"].join("\n"), $NGL_shaderTextHash["CylinderImpostor.frag"] = ["#define STANDARD", "#define IMPOSTOR", "", "// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - custom clipping", "// - three.js lighting", "", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "", "#ifdef PICKING", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#else", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "    #include common", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "bool interior = false;", "", "float distSq3( vec3 v3a, vec3 v3b ){", "    return (", "        ( v3a.x - v3b.x ) * ( v3a.x - v3b.x ) +", "        ( v3a.y - v3b.y ) * ( v3a.y - v3b.y ) +", "        ( v3a.z - v3b.z ) * ( v3a.z - v3b.z )", "    );", "}", "", "// Calculate depth based on the given camera position.", "float calcDepth( in vec3 cameraPos ){", "    vec2 clipZW = cameraPos.z * projectionMatrix[2].zw + projectionMatrix[3].zw;", "    return 0.5 + 0.5 * clipZW.x / clipZW.y;", "}", "", "float calcClip( vec3 cameraPos ){", "    return dot( vec4( cameraPos, 1.0 ), vec4( 0.0, 0.0, 1.0, nearClip - 0.5 ) );", "}", "", "void main(){", "", "    vec3 point = w.xyz / w.w;", "", "    // unpacking", "    vec3 base = base_radius.xyz;", "    float vRadius = base_radius.w;", "    vec3 end = end_b.xyz;", "    float b = end_b.w;", "", "    vec3 end_cyl = end;", "    vec3 surface_point = point;", "", "    vec3 ray_target = surface_point;", "    vec3 ray_origin = vec3(0.0);", "    vec3 ray_direction = mix(normalize(ray_origin - ray_target), vec3(0.0, 0.0, 1.0), ortho);", "    mat3 basis = mat3( U, V, axis );", "", "    vec3 diff = ray_target - 0.5 * (base + end_cyl);", "    vec3 P = diff * basis;", "", "    // angle (cos) between cylinder cylinder_axis and ray direction", "    float dz = dot( axis, ray_direction );", "", "    float radius2 = vRadius*vRadius;", "", "    // calculate distance to the cylinder from ray origin", "    vec3 D = vec3(dot(U, ray_direction),", "                dot(V, ray_direction),", "                dz);", "    float a0 = P.x*P.x + P.y*P.y - radius2;", "    float a1 = P.x*D.x + P.y*D.y;", "    float a2 = D.x*D.x + D.y*D.y;", "", "    // calculate a dicriminant of the above quadratic equation", "    float d = a1*a1 - a0*a2;", "    if (d < 0.0)", "        // outside of the cylinder", "        discard;", "", "    float dist = (-a1 + sqrt(d)) / a2;", "", "    // point of intersection on cylinder surface", "    vec3 new_point = ray_target + dist * ray_direction;", "", "    vec3 tmp_point = new_point - base;", "    vec3 _normal = normalize( tmp_point - axis * dot(tmp_point, axis) );", "", "    ray_origin = mix( ray_origin, surface_point, ortho );", "", "    // test caps", "    float front_cap_test = dot( tmp_point, axis );", "    float end_cap_test = dot((new_point - end_cyl), axis);", "", "    // to calculate caps, simply check the angle between", "    // the point of intersection - cylinder end vector", "    // and a cap plane normal (which is the cylinder cylinder_axis)", "    // if the angle < 0, the point is outside of cylinder", "    // test front cap", "", "    #ifndef CAP", "        vec3 new_point2 = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "        vec3 tmp_point2 = new_point2 - base;", "    #endif", "", "    // flat", "    if (front_cap_test < 0.0)", "    {", "        // ray-plane intersection", "        float dNV = dot(-axis, ray_direction);", "        if (dNV < 0.0)", "            discard;", "        float near = dot(-axis, (base)) / dNV;", "        vec3 front_point = ray_direction * near + ray_origin;", "        // within the cap radius?", "        if (dot(front_point - base, front_point-base) > radius2)", "            discard;", "", "        #ifdef CAP", "            new_point = front_point;", "            _normal = axis;", "        #else", "            new_point = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "            dNV = dot(-axis, ray_direction);", "            near = dot(axis, end_cyl) / dNV;", "            new_point2 = ray_direction * near + ray_origin;", "            if (dot(new_point2 - end_cyl, new_point2-base) < radius2)", "                discard;", "            interior = true;", "        #endif", "    }", "", "    // test end cap", "", "", "    // flat", "    if( end_cap_test > 0.0 )", "    {", "        // ray-plane intersection", "        float dNV = dot(axis, ray_direction);", "        if (dNV < 0.0)", "            discard;", "        float near = dot(axis, end_cyl) / dNV;", "        vec3 end_point = ray_direction * near + ray_origin;", "        // within the cap radius?", "        if( dot(end_point - end_cyl, end_point-base) > radius2 )", "            discard;", "", "        #ifdef CAP", "            new_point = end_point;", "            _normal = axis;", "        #else", "            new_point = ray_target + ( (-a1 - sqrt(d)) / a2 ) * ray_direction;", "            dNV = dot(-axis, ray_direction);", "            near = dot(-axis, (base)) / dNV;", "            new_point2 = ray_direction * near + ray_origin;", "            if (dot(new_point2 - base, new_point2-base) < radius2)", "                discard;", "            interior = true;", "        #endif", "    }", "", "    gl_FragDepthEXT = calcDepth( new_point );", "", "    #ifdef NEAR_CLIP", "        if( calcClip( new_point ) > 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            if( calcClip( new_point ) > 0.0 )", "                discard;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = max( 0.0, calcDepth( vec3( - ( nearClip - 0.5 ) ) ) + ( 0.0000001 / vRadius ) );", "            }", "        }else if( gl_FragDepthEXT <= 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "            }", "        }", "    #else", "        if( gl_FragDepthEXT <= 0.0 ){", "            dist = (-a1 - sqrt(d)) / a2;", "            new_point = ray_target + dist * ray_direction;", "            interior = true;", "            gl_FragDepthEXT = calcDepth( new_point );", "            if( gl_FragDepthEXT >= 0.0 ){", "                gl_FragDepthEXT = 0.0 + ( 0.0000001 / vRadius );", "            }", "        }", "    #endif", "", "    // this is a workaround necessary for Mac", "    // otherwise the modified fragment won't clip properly", "    if (gl_FragDepthEXT < 0.0)", "        discard;", "    if (gl_FragDepthEXT > 1.0)", "        discard;", "", "    #ifdef PICKING", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #else", "", "        vec3 vViewPosition = -new_point;", "        vec3 vNormal = _normal;", "        vec3 vColor;", "", "        if( distSq3( new_point, end_cyl ) < distSq3( new_point, base ) ){", "            if( b < 0.0 ){", "                vColor = vColor1;", "            }else{", "                vColor = vColor2;", "            }", "        }else{", "            if( b > 0.0 ){", "                vColor = vColor1;", "            }else{", "                vColor = vColor2;", "            }", "        }", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "     //ifdef USE_COLOR", "     //diffuseColor.r *= vColor[0];", "     //diffuseColor.g *= vColor[1];", "     //diffuseColor.b *= vColor[2];", "     //endif", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "", "        // don't use include normal_fragment", "        vec3 normal = normalize( vNormal );", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "        //gl_FragColor = vec4( reflectedLight.directSpecular, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        //include fog_fragment", "        #ifdef USE_FOG", "            #ifdef USE_LOGDEPTHBUF_EXT", "                float depth = gl_FragDepthEXT / gl_FragCoord.w;", "            #else", "                float depth = gl_FragCoord.z / gl_FragCoord.w;", "            #endif", "            #ifdef FOG_EXP2", "                float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );", "            #else", "                float fogFactor = smoothstep( fogNear, fogFar, depth );", "            #endif", "            gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );", "        #endif", "", "    #endif", "", "}"].join("\n"), $NGL_shaderTextHash["CylinderImpostor.vert"] = ["// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - shift", "", "attribute vec3 mapping;", "attribute vec3 position1;", "attribute vec3 position2;", "attribute float radius;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    //attribute vec3 color;", "    attribute vec3 color2;", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "#endif", "", "uniform mat4 modelViewMatrixInverse;", "uniform float ortho;", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "void main(){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        vColor1 = color;", "        vColor2 = color2;", "    #endif", "", "    // vRadius = radius;", "    base_radius.w = radius * matrixScale( modelViewMatrix );", "", "    //vec3 center = position;", "    vec3 center = ( position2 + position1 ) / 2.0;", "    vec3 dir = normalize( position2 - position1 );", "    float ext = length( position2 - position1 ) / 2.0;", "", "    // using cameraPosition fails on some machines, not sure why", "    // vec3 cam_dir = normalize( cameraPosition - mix( center, vec3( 0.0 ), ortho ) );", "    vec3 cam_dir;", "    if( ortho == 0.0 ){", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 0, 1 ) ).xyz - center;", "    }else{", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 1, 0 ) ).xyz;", "    }", "    cam_dir = normalize( cam_dir );", "", "    vec3 ldir;", "", "    float b = dot( cam_dir, dir );", "    end_b.w = b;", "    // direction vector looks away, so flip", "    if( b < 0.0 )", "        ldir = -ext * dir;", "    // direction vector already looks in my direction", "    else", "        ldir = ext * dir;", "", "    vec3 left = normalize( cross( cam_dir, ldir ) );", "    left = radius * left;", "    vec3 up = radius * normalize( cross( left, ldir ) );", "", "    // transform to modelview coordinates", "    axis = normalize( normalMatrix * ldir );", "    U = normalize( normalMatrix * up );", "    V = normalize( normalMatrix * left );", "", "    vec4 base4 = modelViewMatrix * vec4( center - ldir, 1.0 );", "    base_radius.xyz = base4.xyz / base4.w;", "", "    vec4 top_position = modelViewMatrix * vec4( center + ldir, 1.0 );", "    vec4 end4 = top_position;", "    end_b.xyz = end4.xyz / end4.w;", "", "    w = modelViewMatrix * vec4(", "        center + mapping.x*ldir + mapping.y*left + mapping.z*up, 1.0", "    );", "", "    gl_Position = projectionMatrix * w;", "", "    // avoid clipping (1.0 seems to induce flickering with some drivers)", "    gl_Position.z = 0.99;", "", "}"].join("\n"), $NGL_shaderTextHash["SphereInstancing.frag"] = $NGL_shaderTextHash["SphereImpostor.frag"], $NGL_shaderTextHash["SphereInstancing.vert"] = ["uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "", "varying float vRadius;", "varying float vRadiusSq;", "varying vec3 vPoint;", "varying vec3 vPointViewPosition;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "attribute vec2 mapping;", "//attribute vec3 position;", "attribute float radius;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    #include color_pars_vertex", "#endif", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "const mat4 D = mat4(", "    1.0, 0.0, 0.0, 0.0,", "    0.0, 1.0, 0.0, 0.0,", "    0.0, 0.0, 1.0, 0.0,", "    0.0, 0.0, 0.0, -1.0", ");", "", "mat4 transpose( in mat4 inMatrix ) {", "    vec4 i0 = inMatrix[0];", "    vec4 i1 = inMatrix[1];", "    vec4 i2 = inMatrix[2];", "    vec4 i3 = inMatrix[3];", "", "    mat4 outMatrix = mat4(", "        vec4(i0.x, i1.x, i2.x, i3.x),", "        vec4(i0.y, i1.y, i2.y, i3.y),", "        vec4(i0.z, i1.z, i2.z, i3.z),", "        vec4(i0.w, i1.w, i2.w, i3.w)", "    );", "    return outMatrix;", "}", "", "//------------------------------------------------------------------------------", "// Compute point size and center using the technique described in:", "// 'GPU-Based Ray-Casting of Quadratic Surfaces'", "// by Christian Sigg, Tim Weyrich, Mario Botsch, Markus Gross.", "//", "// Code based on", "/*=========================================================================", "", " Program:   Visualization Toolkit", " Module:    Quadrics_fs.glsl and Quadrics_vs.glsl", "", " Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen", " All rights reserved.", " See Copyright.txt or http://www.kitware.com/Copyright.htm for details.", "", " This software is distributed WITHOUT ANY WARRANTY; without even", " the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR", " PURPOSE.  See the above copyright notice for more information.", "", " =========================================================================*/", "", "// .NAME Quadrics_fs.glsl and Quadrics_vs.glsl", "// .SECTION Thanks", "// <verbatim>", "//", "//  This file is part of the PointSprites plugin developed and contributed by", "//", "//  Copyright (c) CSCS - Swiss National Supercomputing Centre", "//                EDF - Electricite de France", "//", "//  John Biddiscombe, Ugo Varetto (CSCS)", "//  Stephane Ploix (EDF)", "//", "// </verbatim>", "//", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - adapted to work with quads", "void ComputePointSizeAndPositionInClipCoordSphere(vec4 updatePosition){", "", "    vec2 xbc;", "    vec2 ybc;", "", "    mat4 T = mat4(", "        radius, 0.0, 0.0, 0.0,", "        0.0, radius, 0.0, 0.0,", "        0.0, 0.0, radius, 0.0,", "        updatePosition.x, updatePosition.y, updatePosition.z, 1.0", "    );", "", "    mat4 R = transpose( projectionMatrix * modelViewMatrix * T );", "    float A = dot( R[ 3 ], D * R[ 3 ] );", "    float B = -2.0 * dot( R[ 0 ], D * R[ 3 ] );", "    float C = dot( R[ 0 ], D * R[ 0 ] );", "    xbc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    xbc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sx = abs( xbc[ 0 ] - xbc[ 1 ] ) * 0.5;", "", "    A = dot( R[ 3 ], D * R[ 3 ] );", "    B = -2.0 * dot( R[ 1 ], D * R[ 3 ] );", "    C = dot( R[ 1 ], D * R[ 1 ] );", "    ybc[ 0 ] = ( -B - sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    ybc[ 1 ] = ( -B + sqrt( B * B - 4.0 * A * C ) ) / ( 2.0 * A );", "    float sy = abs( ybc[ 0 ] - ybc[ 1 ]  ) * 0.5;", "", "    gl_Position.xy = vec2( 0.5 * ( xbc.x + xbc.y ), 0.5 * ( ybc.x + ybc.y ) );", "    gl_Position.xy -= mapping * vec2( sx, sy );", "    gl_Position.xy *= gl_Position.w;", "", "}", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(void){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        #include color_vertex", "    #endif", "", "    vRadius = radius * matrixScale( modelViewMatrix );", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition = matrix * vec4(position, 1.0);", "", "//    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", "    vec4 mvPosition = modelViewMatrix * vec4( updatePosition.xyz, 1.0 );", "    // avoid clipping, added again in fragment shader", "    mvPosition.z -= vRadius;", "", "//    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    gl_Position = projectionMatrix * vec4( mvPosition.xyz, 1.0 );", "    ComputePointSizeAndPositionInClipCoordSphere(updatePosition);", "", "", "    vRadiusSq = vRadius * vRadius;", "    vec4 vPoint4 = projectionMatrixInverse * gl_Position;", "    vPoint = vPoint4.xyz / vPoint4.w;", "    vPointViewPosition = -mvPosition.xyz / mvPosition.w;", "", "}"].join("\n"), $NGL_shaderTextHash["CylinderInstancing.frag"] = $NGL_shaderTextHash["CylinderImpostor.frag"], $NGL_shaderTextHash["CylinderInstancing.vert"] = ["// Open-Source PyMOL is Copyright (C) Schrodinger, LLC.", "//", "//  All Rights Reserved", "//", "//  Permission to use, copy, modify, distribute, and distribute modified", "//  versions of this software and its built-in documentation for any", "//  purpose and without fee is hereby granted, provided that the above", "//  copyright notice appears in all copies and that both the copyright", "//  notice and this permission notice appear in supporting documentation,", "//  and that the name of Schrodinger, LLC not be used in advertising or", "//  publicity pertaining to distribution of the software without specific,", "//  written prior permission.", "//", "//  SCHRODINGER, LLC DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,", "//  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN", "//  NO EVENT SHALL SCHRODINGER, LLC BE LIABLE FOR ANY SPECIAL, INDIRECT OR", "//  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS", "//  OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE", "//  OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE", "//  USE OR PERFORMANCE OF THIS SOFTWARE.", "", "// Contributions by Alexander Rose", "// - ported to WebGL", "// - dual color", "// - pk color", "// - shift", "", "attribute vec3 mapping;", "attribute vec3 position1;", "attribute vec3 position2;", "attribute float radius;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "", "varying vec3 axis;", "varying vec4 base_radius;", "varying vec4 end_b;", "varying vec3 U;", "varying vec3 V;", "varying vec4 w;", "varying float fogDepth;", "varying float fogNear;", "varying float fogFar;", "", "#ifdef PICKING", "    #include unpack_clr", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#else", "    //attribute vec3 color;", "    attribute vec3 color2;", "    varying vec3 vColor1;", "    varying vec3 vColor2;", "#endif", "", "uniform mat4 modelViewMatrixInverse;", "uniform float ortho;", "", "//include matrix_scale", "float matrixScale( in mat4 m ){", "    vec4 r = m[ 0 ];", "    return sqrt( r[ 0 ] * r[ 0 ] + r[ 1 ] * r[ 1 ] + r[ 2 ] * r[ 2 ] );", "}", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(){", "", "    #ifdef PICKING", "        vPickingColor = unpackColor( primitiveId );", "    #else", "        vColor1 = color;", "        vColor2 = color2;", "    #endif", "", "    // vRadius = radius;", "    base_radius.w = radius * matrixScale( modelViewMatrix );", "", "    //vec3 center = ( position2 + position1 ) / 2.0;", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition1 = matrix * vec4(position1, 1.0);", "    vec4 updatePosition2 = matrix * vec4(position2, 1.0);", "    vec3 center = ( updatePosition2.xyz + updatePosition1.xyz ) / 2.0;", "", "    //vec3 dir = normalize( position2 - position1 );", "    vec3 dir = normalize( updatePosition2.xyz - updatePosition1.xyz );", "    float ext = length( position2 - position1 ) / 2.0;", "", "    // using cameraPosition fails on some machines, not sure why", "    // vec3 cam_dir = normalize( cameraPosition - mix( center, vec3( 0.0 ), ortho ) );", "    vec3 cam_dir;", "    if( ortho == 0.0 ){", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 0, 1 ) ).xyz - center;", "    }else{", "        cam_dir = ( modelViewMatrixInverse * vec4( 0, 0, 1, 0 ) ).xyz;", "    }", "    cam_dir = normalize( cam_dir );", "", "    vec3 ldir;", "", "    float b = dot( cam_dir, dir );", "    end_b.w = b;", "    // direction vector looks away, so flip", "    if( b < 0.0 )", "        ldir = -ext * dir;", "    // direction vector already looks in my direction", "    else", "        ldir = ext * dir;", "", "    vec3 left = normalize( cross( cam_dir, ldir ) );", "    left = radius * left;", "    vec3 up = radius * normalize( cross( left, ldir ) );", "", "    // transform to modelview coordinates", "    axis = normalize( normalMatrix * ldir );", "    U = normalize( normalMatrix * up );", "    V = normalize( normalMatrix * left );", "", "    vec4 base4 = modelViewMatrix * vec4( center - ldir, 1.0 );", "    base_radius.xyz = base4.xyz / base4.w;", "", "    vec4 top_position = modelViewMatrix * vec4( center + ldir, 1.0 );", "    vec4 end4 = top_position;", "    end_b.xyz = end4.xyz / end4.w;", "", "    w = modelViewMatrix * vec4(", "        center + mapping.x*ldir + mapping.y*left + mapping.z*up, 1.0", "    );", "", "    gl_Position = projectionMatrix * w;", "", "    // avoid clipping (1.0 seems to induce flickering with some drivers)", "    gl_Position.z = 0.99;", "", "}"].join("\n"), $NGL_shaderTextHash["Instancing.frag"] = ["#define STANDARD", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform float roughness;", "uniform float metalness;", "uniform float opacity;", "uniform float nearClip;", "uniform float clipRadius;", "uniform mat4 projectionMatrix;", "uniform float ortho;", "varying float bCylinder;", "", "#if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "    varying vec3 vViewPosition;", "#endif", "", "#if defined( RADIUS_CLIP )", "    varying vec3 vClipCenter;", "#endif", "", "#if defined( PICKING )", "    uniform float objectId;", "    varying vec3 vPickingColor;", "#elif defined( NOLIGHT )", "    varying vec3 vColor;", "#else", "    #ifndef FLAT_SHADED", "        varying vec3 vNormal;", "    #endif", "    #include common", "    #include color_pars_fragment", "    #include fog_pars_fragment", "    #include bsdfs", "    #include lights_pars_begin", "    #include lights_physical_pars_fragment", "#endif", "", "void main(){", "    #include nearclip_fragment", "    #include radiusclip_fragment", "", "    #if defined( PICKING )", "", "        gl_FragColor = vec4( vPickingColor, objectId );", "", "    #elif defined( NOLIGHT )", "", "        gl_FragColor = vec4( vColor, opacity );", "", "    #else", "", "        vec4 diffuseColor = vec4( diffuse, opacity );", "        ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );", "        vec3 totalEmissiveLight = emissive;", "", "        #include color_fragment", "        #include roughnessmap_fragment", "        #include metalnessmap_fragment", "        #include normal_flip", "        #include normal_fragment_begin", "", "        //include dull_interior_fragment", "", "        #include lights_physical_fragment", "        //include lights_template", "        #include lights_fragment_begin", "        #include lights_fragment_end", "", "        vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;", "", "        #include interior_fragment", "", "        gl_FragColor = vec4( outgoingLight, diffuseColor.a );", "", "        #include premultiplied_alpha_fragment", "        #include tonemapping_fragment", "        #include encodings_fragment", "        #include fog_fragment", "", "        #include opaque_back_fragment", "", "    #endif", "", "}"].join("\n"), $NGL_shaderTextHash["Instancing.vert"] = ["#define STANDARD", "", "uniform mat4 projectionMatrixInverse;", "uniform float nearClip;", "uniform vec3 clipCenter;", "attribute vec4 matrix1;", "attribute vec4 matrix2;", "attribute vec4 matrix3;", "attribute vec4 matrix4;", "attribute float cylinder;", "varying float bCylinder;", "", "#if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "    varying vec3 vViewPosition;", "#endif", "", "#if defined( RADIUS_CLIP )", "    varying vec3 vClipCenter;", "#endif", "", "#if defined( PICKING )", "    #include unpack_color", "    attribute float primitiveId;", "    varying vec3 vPickingColor;", "#elif defined( NOLIGHT )", "    varying vec3 vColor;", "#else", "    #include color_pars_vertex", "    #ifndef FLAT_SHADED", "        varying vec3 vNormal;", "    #endif", "#endif", "", "#include common", "", "  mat4 computeMat(vec4 v1, vec4 v2, vec4 v3, vec4 v4) {", "    return mat4(", "      v1.x, v1.y, v1.z, v1.w,", "      v2.x, v2.y, v2.z, v2.w,", "      v3.x, v3.y, v3.z, v3.w,", "      v4.x, v4.y, v4.z, v4.w", "    );", "  }", "", "void main(){", "    bCylinder = cylinder;", "", "    mat4 matrix = computeMat(matrix1, matrix2, matrix3, matrix4);", "    vec4 updatePosition = matrix * vec4(position, 1.0);", "", "    #if defined( PICKING )", "        vPickingColor = unpackColor( primitiveId );", "    #elif defined( NOLIGHT )", "        vColor = color;", "    #else", "        #include color_vertex", "        //include beginnormal_vertex", "        //vec3 objectNormal = vec3( normal );", "        vec3 objectNormal = vec3(matrix * vec4(normal,0.0));", "        #include defaultnormal_vertex", "        // Normal computed with derivatives when FLAT_SHADED", "        #ifndef FLAT_SHADED", "            vNormal = normalize( transformedNormal );", "        #endif", "    #endif", "", "    //include begin_vertex", "    vec3 transformed = updatePosition.xyz;", "    //include project_vertex", "    vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );", "    gl_Position = projectionMatrix * mvPosition;", "", "    #if defined( NEAR_CLIP ) || defined( RADIUS_CLIP ) || ( !defined( PICKING ) && !defined( NOLIGHT ) )", "        vViewPosition = -mvPosition.xyz;", "    #endif", "", "    #if defined( RADIUS_CLIP )", "        vClipCenter = -( modelViewMatrix * vec4( clipCenter, 1.0 ) ).xyz;", "    #endif", "", "    #include nearclip_vertex", "", "}"].join("\n"), "undefined" == typeof jQuery) throw new Error("iCn3D requires jQuery");
var iCn3D = function(e) {
    this.id = e, this.pre = e.substr(0, e.indexOf("_") + 1), this.bControlGl = !1, this.container = $("#" + e), this.oriContainer = $("#" + e), this.maxatomcnt = 1e5, this.overdraw = 0, this.bDrawn = !1, this.bOpm = !1, this.crossstrucinter = 0, this.bSecondaryStructure = !1, this.bHighlight = 1, this.renderOrderPicking = -1, this.bInitial = !0, this.ALTERNATE_STRUCTURE = -1, Detector.webgl ? (this.renderer = new THREE.WebGLRenderer({
        canvas: this.oriContainer.get(0),
        antialias: !0,
        preserveDrawingBuffer: !0,
        sortObjects: !1,
        alpha: !0
    }), this.overdraw = 0) : alert("Currently your web browser has a problem on WebGL. If you are using Chrome, open a new tab for the same URL and WebGL may work again."), this.matShader = this.setOutlineColor("yellow"), this.frac = new THREE.Color(.1, .1, .1), this.scaleFactor = 1, this.labelScale = .3, this.bImpo = !0, this.bExtFragDepth = this.renderer.extensions.get("EXT_frag_depth"), this.bExtFragDepth ? console.log("EXT_frag_depth is supported. All spheres and cylinders are drawn using shaders.") : (this.bImpo = !1, console.log("EXT_frag_depth is NOT supported. All spheres and cylinders are drawn using geometry.")), this.bInstanced = this.renderer.extensions.get("ANGLE_instanced_arrays"), this.bInstanced ? console.log("ANGLE_instanced_arrays is supported. Assembly is drawn with one copy of the asymmetric unit using hardware instancing.") : console.log("ANGLE_instanced_arrays is NOT supported. Assembly is drawn by making copies of the asymmetric unit."), this.posArray = new Array, this.colorArray = new Array, this.pos2Array = new Array, this.color2Array = new Array, this.radiusArray = new Array, this.posArraySphere = new Array, this.colorArraySphere = new Array, this.radiusArraySphere = new Array, this.axis = !1, this.pk = 1, this.highlightlevel = 1, this.pickpair = !1, this.pAtomNum = 0, this.pAtom = void 0, this.pAtom2 = void 0, this.bCtrl = !1, this.bShift = !1, this.bStopRotate = !1, this.bCalphaOnly = !1, this.bAllAtoms = !0, this.bConsiderNeighbors = !1, this.bShowCrossResidueBond = !0, this.effects = {
        none: this.renderer
    }, this.maxD = 500, this.oriMaxD = this.maxD, this.cam_z = 2 * this.maxD, this.commands = [], this.optsHistory = [], this.logs = [], this.bRender = !0, this.hColor = new THREE.Color(16776960), this.sphereGeometry = new THREE.SphereGeometry(1, 32, 32), this.boxGeometry = new THREE.BoxGeometry(1, 1, 1), this.cylinderGeometry = new THREE.CylinderGeometry(1, 1, 1, 32, 1), this.cylinderGeometryOutline = new THREE.CylinderGeometry(1, 1, 1, 32, 1, !0), this.axisDIV = 5, this.strandDIV = 6, this.tubeDIV = 8, this.nucleicAcidStrandDIV = 6, this.linewidth = 1, this.hlLineRadius = .1, this.lineRadius = .1, this.coilWidth = .3, this.cylinderRadius = .4, this.traceRadius = .4, this.dotSphereScale = .3, this.sphereRadius = 1.5, this.cylinderHelixRadius = 1.6, this.ribbonthickness = .2, this.helixSheetWidth = 1.3, this.nucleicAcidWidth = .8, this.threshbox = 180, this.maxAtoms3DMultiFile = 4e4, this.LABELSIZE = 30, this.opts = {
        camera: "perspective",
        background: "transparent",
        color: "chain",
        sidec: "nothing",
        proteins: "ribbon",
        nucleotides: "nucleotide cartoon",
        surface: "nothing",
        wireframe: "no",
        map: "nothing",
        mapwireframe: "yes",
        emmap: "nothing",
        emmapwireframe: "yes",
        opacity: "1.0",
        chemicals: "stick",
        water: "nothing",
        ions: "sphere",
        hbonds: "no",
        saltbridge: "no",
        contact: "no",
        halogen: "no",
        "pi-cation": "no",
        "pi-stacking": "no",
        ssbonds: "yes",
        clbonds: "yes",
        labels: "no",
        lines: "no",
        rotationcenter: "molecule center",
        axis: "no",
        fog: "no",
        slab: "no",
        pk: "residue",
        chemicalbinding: "hide"
    }
};
iCn3D.prototype = {
        constructor: iCn3D,
        setControl: function() {
            var r = this;
            this.WIDTH = this.container.width(), this.HEIGHT = this.container.height(), this.setWidthHeight(this.WIDTH, this.HEIGHT), this._zoomFactor = 1, this.mouseChange = new THREE.Vector2(0, 0), this.quaternion = new THREE.Quaternion(0, 0, 0, 1), this.container.bind("contextmenu", function(e) {}), r.typetext = !1, $(document).bind("keyup", function(e) {
                16 === e.keyCode && (r.bShift = !1), 17 !== e.keyCode && 224 !== e.keyCode && 91 !== e.keyCode || (r.bCtrl = !1)
            }), $("input[type=text], textarea").focus(function() {
                r.typetext = !0
            }), $("input[type=text], textarea").blur(function() {
                r.typetext = !1
            }), $(document).bind("keydown", function(e) {
                if (!e.shiftKey && 16 !== e.keyCode || (r.bShift = !0), !e.ctrlKey && 17 !== e.keyCode && 224 !== e.keyCode && 91 !== e.keyCode || (r.bCtrl = !0), (r.bControlGl || r.controls) && (!r.bControlGl || window.controls)) {
                    r.bStopRotate = !0;
                    var t = r.bShift ? 90 : 5;
                    if (!r.typetext)
                        if (90 === e.keyCode) {
                            var i = {};
                            r.bControlGl ? window.cam === r.perspectiveCamera ? i._zoomFactor = .9 : window.cam === r.orthographicCamera && (r._zoomFactor < .1 ? r._zoomFactor = .1 : 1 < r._zoomFactor && (r._zoomFactor = 1), i._zoomFactor = .8 * r._zoomFactor, i._zoomFactor < .1 && (i._zoomFactor = .1)) : r.cam === r.perspectiveCamera ? i._zoomFactor = .9 : r.cam === r.orthographicCamera && (r._zoomFactor < .1 ? r._zoomFactor = .1 : 1 < r._zoomFactor && (r._zoomFactor = 1), i._zoomFactor = .8 * r._zoomFactor, i._zoomFactor < .1 && (i._zoomFactor = .1)), i.update = !0, r.bControlGl ? window.controls.update(i) : r.controls.update(i), r.bRender && r.render()
                        } else if (88 === e.keyCode) {
                        i = {};
                        r.bControlGl ? window.cam === r.perspectiveCamera ? i._zoomFactor = 1.03 : window.cam === r.orthographicCamera && (10 < r._zoomFactor ? r._zoomFactor = 10 : r._zoomFactor < 1 && (r._zoomFactor = 1), i._zoomFactor = 1.01 * r._zoomFactor, 10 < i._zoomFactor && (i._zoomFactor = 10)) : r.cam === r.perspectiveCamera ? i._zoomFactor = 1.03 : r.cam === r.orthographicCamera && (10 < r._zoomFactor ? r._zoomFactor = 10 : r._zoomFactor < 1 && (r._zoomFactor = 1), i._zoomFactor = 1.01 * r._zoomFactor, 10 < i._zoomFactor && (i._zoomFactor = 10)), i.update = !0, r.bControlGl ? window.controls.update(i) : r.controls.update(i), r.bRender && r.render()
                    } else if (76 === e.keyCode) {
                        var n = new THREE.Vector3(0, 1, 0),
                            o = -t / 180 * Math.PI;
                        r.setRotation(n, o)
                    } else if (74 === e.keyCode) {
                        n = new THREE.Vector3(0, 1, 0), o = t / 180 * Math.PI;
                        r.setRotation(n, o)
                    } else if (73 === e.keyCode) {
                        n = new THREE.Vector3(1, 0, 0), o = -t / 180 * Math.PI;
                        r.setRotation(n, o)
                    } else if (77 === e.keyCode) {
                        n = new THREE.Vector3(1, 0, 0), o = t / 180 * Math.PI;
                        r.setRotation(n, o)
                    } else 65 === e.keyCode && 1 < Object.keys(r.structures).length && r.alternateStructures()
                }
            }), this.container.bind("mouseup touchend", function(e) {
                r.isDragging = !1
            }), this.container.bind("mousedown", function(e) {
                if (r.isDragging = !0, r.scene) {
                    if (r.bStopRotate = !0, r.pk && (e.altKey || e.ctrlKey || e.shiftKey || 18 === e.keyCode || 16 === e.keyCode || 17 === e.keyCode || 224 === e.keyCode || 91 === e.keyCode)) {
                        r.highlightlevel = r.pk;
                        r.rayCaster(e, !0)
                    }
                    r.bControlGl ? (window.controls.handleResize(), window.controls.update()) : (r.controls.handleResize(), r.controls.update()), r.bRender && r.render()
                }
            }), this.container.bind("touchstart", function(e) {
                if (r.isDragging = !0, r.scene) {
                    r.bStopRotate = !0, $("#" + r.pre + "popup").hide();
                    r.rayCaster(e, !0), r.bControlGl ? (window.controls.handleResize(), window.controls.update()) : (r.controls.handleResize(), r.controls.update()), r.bRender && r.render()
                }
            }), this.container.bind("mousemove touchmove", function(e) {
                if (r.scene) {
                    $("#" + r.pre + "popup").hide();
                    r.rayCaster(e, !1), r.bControlGl ? (window.controls.handleResize(), window.controls.update()) : (r.controls.handleResize(), r.controls.update()), r.bRender && r.render()
                }
            }), this.container.bind("mousewheel", function(e) {
                r.scene && (r.bStopRotate = !0, r.bControlGl ? (window.controls.handleResize(), window.controls.update()) : (r.controls.handleResize(), r.controls.update()), r.bRender && r.render())
            }), this.container.bind("DOMMouseScroll", function(e) {
                r.scene && (r.bStopRotate = !0, r.bControlGl ? (window.controls.handleResize(), window.controls.update()) : (r.controls.handleResize(), r.controls.update()), r.bRender && r.render())
            })
        },
        isIntersect: function(e, t, i, n, o) {
            var r = this,
                s = r.raycaster.intersectObjects(e),
                a = !1,
                c = t.position;
            if (0 < s.length) {
                s[0].point.sub(c);
                for (var d = .5, l = r.getAtomsFromPosition(s[0].point, d); !l && d < 10;) d += .5, l = r.getAtomsFromPosition(s[0].point, d);
                l ? (a = !0, r.pickpair ? i && (r.pAtomNum % 2 == 0 ? r.pAtom = l : r.pAtom2 = l, ++r.pAtomNum) : r.pAtom = l, i ? r.showPicking(l) : r.showPicking(l, n, o)) : console.log("No atoms were found in 10 andstrom range")
            }
            return a
        },
        rayCaster: function(e, t) {
            this.rayCasterBase(e, t)
        },
        rayCasterBase: function(e, t) {
            var i = this,
                n = e.pageX,
                o = e.pageY;
            e.originalEvent.targetTouches && e.originalEvent.targetTouches[0] && (n = e.originalEvent.targetTouches[0].pageX, o = e.originalEvent.targetTouches[0].pageY);
            var r = i.oriContainer.offset().left,
                s = i.oriContainer.offset().top,
                a = i.oriContainer.width(),
                c = i.oriContainer.height(),
                d = n - r,
                l = o - s;
            i.mouse.x = d / a * 2 - 1, i.mouse.y = -l / c * 2 + 1;
            var h = new THREE.Vector3;
            h.x = i.mouse.x, h.y = i.mouse.y, 0 < this.cam_z ? h.z = -1 : h.z = 1, i.cam === i.perspectiveCamera ? (0 < this.cam_z ? h.z = -1 : h.z = 1, h.unproject(i.cam), i.raycaster.set(i.cam.position, h.sub(i.cam.position).normalize())) : i.cam === i.orthographicCamera && (0 < this.cam_z ? h.z = 1 : h.z = -1, h.unproject(i.cam), i.raycaster.set(h, new THREE.Vector3(0, 0, -1).transformDirection(i.cam.matrixWorld)));
            var p = this.isIntersect(i.objects, i.mdl, t, d, l);
            p = p || this.isIntersect(i.objects_ghost, i.mdl_ghost, t, d, l)
        },
        setRotation: function(e, t) {
            var i = this;
            i.bControlGl ? e.applyQuaternion(window.cam.quaternion).normalize() : e.applyQuaternion(i.cam.quaternion).normalize();
            var n = new THREE.Quaternion;
            n.setFromAxisAngle(e, -t);
            var o = {};
            o.quaternion = n, o.update = !0, i.bControlGl ? window.controls.update(o) : i.controls.update(o), i.bRender && i.render()
        },
        setOutlineColor: function(e) {
            var t = {
                outline: {
                    vertex_shader: ["uniform float offset;", "void main() {", "vec4 pos = modelViewMatrix * vec4( position + normal * offset, 1.0 );", "gl_Position = projectionMatrix * pos;", "}"].join("\n"),
                    fragment_shader: ["void main(){", "gl_FragColor = vec4( 1.0, 1.0, 0.0, 1.0 );", "}"].join("\n")
                }
            };
            "yellow" === e ? t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 1.0, 1.0, 0.0, 1.0 );", "}"].join("\n") : "green" === e ? t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 0.0, 1.0, 0.0, 1.0 );", "}"].join("\n") : "red" === e && (t.outline.fragment_shader = ["void main(){", "gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );", "}"].join("\n"));
            var i = t.outline;
            return new THREE.ShaderMaterial({
                uniforms: {
                    offset: {
                        type: "f",
                        value: .5
                    }
                },
                vertexShader: i.vertex_shader,
                fragmentShader: i.fragment_shader,
                depthTest: !1,
                depthWrite: !1,
                needsUpdate: !0
            })
        },
        setWidthHeight: function(e, t) {
            void 0 === this.scaleFactor && (this.scaleFactor = 1), this.renderer.setSize(e * this.scaleFactor, t * this.scaleFactor), this.renderer.domElement.style.width = e * this.scaleFactor + "px", this.renderer.domElement.style.height = t * this.scaleFactor + "px", this.renderer.domElement.width = e * this.scaleFactor, this.renderer.domElement.height = t * this.scaleFactor, this.container.whratio = e / t
        },
        nucleotidesArray: ["  G", "  A", "  T", "  C", "  U", " DG", " DA", " DT", " DC", " DU", "G", "A", "T", "C", "U", "DG", "DA", "DT", "DC", "DU"],
        ionsArray: ["  K", " NA", " MG", " AL", " CA", " TI", " MN", " FE", " NI", " CU", " ZN", " AG", " BA", "  F", " CL", " BR", "  I", "K", "NA", "MG", "AL", "CA", "TI", "MN", "FE", "NI", "CU", "ZN", "AG", "BA", "F", "CL", "BR", "I"],
        cationsTrimArray: ["K", "NA", "MG", "AL", "CA", "TI", "MN", "FE", "NI", "CU", "ZN", "AG", "BA"],
        anionsTrimArray: ["F", "CL", "BR", "I"],
        vdwRadii: {
            H: 1.08,
            HE: 1.34,
            LI: 1.75,
            BE: 2.05,
            B: 1.47,
            C: 1.49,
            N: 1.41,
            O: 1.4,
            F: 1.39,
            NE: 1.68,
            NA: 1.84,
            MG: 2.05,
            AL: 2.11,
            SI: 2.07,
            P: 1.92,
            S: 1.82,
            CL: 1.83,
            AR: 1.93,
            K: 2.05,
            CA: 2.21,
            SC: 2.16,
            TI: 1.87,
            V: 1.79,
            CR: 1.89,
            MN: 1.97,
            FE: 1.94,
            CO: 1.92,
            NI: 1.84,
            CU: 1.86,
            ZN: 2.1,
            GA: 2.08,
            GE: 2.15,
            AS: 2.06,
            SE: 1.93,
            BR: 1.98,
            KR: 2.12,
            RB: 2.16,
            SR: 2.24,
            Y: 2.19,
            ZR: 1.86,
            NB: 2.07,
            MO: 2.09,
            TC: 2.09,
            RU: 2.07,
            RH: 1.95,
            PD: 2.02,
            AG: 2.03,
            CD: 2.3,
            IN: 2.36,
            SN: 2.33,
            SB: 2.25,
            TE: 2.23,
            I: 2.23,
            XE: 2.21,
            CS: 2.22,
            BA: 2.51,
            LA: 2.4,
            CE: 2.35,
            PR: 2.39,
            ND: 2.29,
            PM: 2.36,
            SM: 2.29,
            EU: 2.33,
            GD: 2.37,
            TB: 2.21,
            DY: 2.29,
            HO: 2.16,
            ER: 2.35,
            TM: 2.27,
            YB: 2.42,
            LU: 2.21,
            HF: 2.12,
            TA: 2.17,
            W: 2.1,
            RE: 2.17,
            OS: 2.16,
            IR: 2.02,
            PT: 2.09,
            AU: 2.17,
            HG: 2.09,
            TL: 2.35,
            PB: 2.32,
            BI: 2.43,
            PO: 2.29,
            AT: 2.36,
            RN: 2.43,
            FR: 2.56,
            RA: 2.43,
            AC: 2.6,
            TH: 2.37,
            PA: 2.43,
            U: 2.4,
            NP: 2.21,
            PU: 2.56,
            AM: 2.56,
            CM: 2.56,
            BK: 2.56,
            CF: 2.56,
            ES: 2.56,
            FM: 2.56
        },
        covalentRadii: {
            H: .31,
            HE: .28,
            LI: 1.28,
            BE: .96,
            B: .84,
            C: .76,
            N: .71,
            O: .66,
            F: .57,
            NE: .58,
            NA: 1.66,
            MG: 1.41,
            AL: 1.21,
            SI: 1.11,
            P: 1.07,
            S: 1.05,
            CL: 1.02,
            AR: 1.06,
            K: 2.03,
            CA: 1.76,
            SC: 1.7,
            TI: 1.6,
            V: 1.53,
            CR: 1.39,
            MN: 1.39,
            FE: 1.32,
            CO: 1.26,
            NI: 1.24,
            CU: 1.32,
            ZN: 1.22,
            GA: 1.22,
            GE: 1.2,
            AS: 1.19,
            SE: 1.2,
            BR: 1.2,
            KR: 1.16,
            RB: 2.2,
            SR: 1.95,
            Y: 1.9,
            ZR: 1.75,
            NB: 1.64,
            MO: 1.54,
            TC: 1.47,
            RU: 1.46,
            RH: 1.42,
            PD: 1.39,
            AG: 1.45,
            CD: 1.44,
            IN: 1.42,
            SN: 1.39,
            SB: 1.39,
            TE: 1.38,
            I: 1.39,
            XE: 1.4,
            CS: 2.44,
            BA: 2.15,
            LA: 2.07,
            CE: 2.04,
            PR: 2.03,
            ND: 2.01,
            PM: 1.99,
            SM: 1.98,
            EU: 1.98,
            GD: 1.96,
            TB: 1.94,
            DY: 1.92,
            HO: 1.92,
            ER: 1.89,
            TM: 1.9,
            YB: 1.87,
            LU: 1.87,
            HF: 1.75,
            TA: 1.7,
            W: 1.62,
            RE: 1.51,
            OS: 1.44,
            IR: 1.41,
            PT: 1.36,
            AU: 1.36,
            HG: 1.32,
            TL: 1.45,
            PB: 1.46,
            BI: 1.48,
            PO: 1.4,
            AT: 1.5,
            RN: 1.5,
            FR: 2.6,
            RA: 2.21,
            AC: 2.15,
            TH: 2.06,
            PA: 2,
            U: 1.96,
            NP: 1.9,
            PU: 1.87,
            AM: 1.8,
            CM: 1.69
        },
        atomColors: {
            H: new THREE.Color(16777215),
            He: new THREE.Color(16761035),
            HE: new THREE.Color(16761035),
            Li: new THREE.Color(11674146),
            LI: new THREE.Color(11674146),
            B: new THREE.Color(65280),
            C: new THREE.Color(13158600),
            N: new THREE.Color(255),
            O: new THREE.Color(15728640),
            F: new THREE.Color(14329120),
            Na: new THREE.Color(255),
            NA: new THREE.Color(255),
            Mg: new THREE.Color(2263842),
            MG: new THREE.Color(2263842),
            Al: new THREE.Color(8421520),
            AL: new THREE.Color(8421520),
            Si: new THREE.Color(14329120),
            SI: new THREE.Color(14329120),
            P: new THREE.Color(16753920),
            S: new THREE.Color(16762930),
            Cl: new THREE.Color(65280),
            CL: new THREE.Color(65280),
            Ca: new THREE.Color(8421520),
            CA: new THREE.Color(8421520),
            Ti: new THREE.Color(8421520),
            TI: new THREE.Color(8421520),
            Cr: new THREE.Color(8421520),
            CR: new THREE.Color(8421520),
            Mn: new THREE.Color(8421520),
            MN: new THREE.Color(8421520),
            Fe: new THREE.Color(16753920),
            FE: new THREE.Color(16753920),
            Ni: new THREE.Color(10824234),
            NI: new THREE.Color(10824234),
            Cu: new THREE.Color(10824234),
            CU: new THREE.Color(10824234),
            Zn: new THREE.Color(10824234),
            ZN: new THREE.Color(10824234),
            Br: new THREE.Color(10824234),
            BR: new THREE.Color(10824234),
            Ag: new THREE.Color(8421520),
            AG: new THREE.Color(8421520),
            I: new THREE.Color(10494192),
            Ba: new THREE.Color(16753920),
            BA: new THREE.Color(16753920),
            Au: new THREE.Color(14329120),
            AU: new THREE.Color(14329120)
        },
        defaultAtomColor: new THREE.Color(13421772),
        stdChainColors: [new THREE.Color(16711935), new THREE.Color(255), new THREE.Color(10053171), new THREE.Color(65433), new THREE.Color(16750848), new THREE.Color(16737894), new THREE.Color(3329330), new THREE.Color(2003199), new THREE.Color(16416882), new THREE.Color(16753920), new THREE.Color(52945), new THREE.Color(16738740), new THREE.Color(65280), new THREE.Color(255), new THREE.Color(16711680), new THREE.Color(16776960), new THREE.Color(65535), new THREE.Color(16711935), new THREE.Color(3978097), new THREE.Color(4620980), new THREE.Color(13458524), new THREE.Color(16770229), new THREE.Color(11529966), new THREE.Color(15631086), new THREE.Color(25600), new THREE.Color(139), new THREE.Color(9109504), new THREE.Color(13468991), new THREE.Color(35723), new THREE.Color(9699539)],
        backgroundColors: {
            black: new THREE.Color(0),
            grey: new THREE.Color(13421772),
            white: new THREE.Color(16777215),
            transparent: new THREE.Color(0)
        },
        residueColors: {
            ALA: new THREE.Color(13158600),
            ARG: new THREE.Color(1334015),
            ASN: new THREE.Color(56540),
            ASP: new THREE.Color(15075850),
            CYS: new THREE.Color(15132160),
            GLN: new THREE.Color(56540),
            GLU: new THREE.Color(15075850),
            GLY: new THREE.Color(15461355),
            HIS: new THREE.Color(8553170),
            ILE: new THREE.Color(1016335),
            LEU: new THREE.Color(1016335),
            LYS: new THREE.Color(1334015),
            MET: new THREE.Color(15132160),
            PHE: new THREE.Color(3289770),
            PRO: new THREE.Color(14456450),
            SER: new THREE.Color(16422400),
            THR: new THREE.Color(16422400),
            TRP: new THREE.Color(11819700),
            TYR: new THREE.Color(3289770),
            VAL: new THREE.Color(1016335),
            ASX: new THREE.Color(16738740),
            GLX: new THREE.Color(16738740),
            G: new THREE.Color(32768),
            A: new THREE.Color(6324479),
            T: new THREE.Color(16744448),
            C: new THREE.Color(16711680),
            U: new THREE.Color(16744448),
            DG: new THREE.Color(32768),
            DA: new THREE.Color(6324479),
            DT: new THREE.Color(16744448),
            DC: new THREE.Color(16711680),
            DU: new THREE.Color(16744448)
        },
        residueArea: {
            ALA: 247,
            ARG: 366,
            ASN: 290,
            ASP: 285,
            CYS: 271,
            GLN: 336,
            GLU: 325,
            GLY: 217,
            HIS: 340,
            ILE: 324,
            LEU: 328,
            LYS: 373,
            MET: 346,
            PHE: 366,
            PRO: 285,
            SER: 265,
            THR: 288,
            TRP: 414,
            TYR: 387,
            VAL: 293,
            ASX: 290,
            GLX: 336,
            G: 520,
            A: 507,
            T: 515,
            C: 467,
            U: 482,
            DG: 520,
            DA: 507,
            DT: 515,
            DC: 467,
            DU: 482
        },
        defaultResidueColor: new THREE.Color(12492910),
        chargeColors: {
            "  G": new THREE.Color(16711680),
            "  A": new THREE.Color(16711680),
            "  T": new THREE.Color(16711680),
            "  C": new THREE.Color(16711680),
            "  U": new THREE.Color(16711680),
            " DG": new THREE.Color(16711680),
            " DA": new THREE.Color(16711680),
            " DT": new THREE.Color(16711680),
            " DC": new THREE.Color(16711680),
            " DU": new THREE.Color(16711680),
            G: new THREE.Color(16711680),
            A: new THREE.Color(16711680),
            T: new THREE.Color(16711680),
            C: new THREE.Color(16711680),
            U: new THREE.Color(16711680),
            DG: new THREE.Color(16711680),
            DA: new THREE.Color(16711680),
            DT: new THREE.Color(16711680),
            DC: new THREE.Color(16711680),
            DU: new THREE.Color(16711680),
            ARG: new THREE.Color(255),
            LYS: new THREE.Color(255),
            ASP: new THREE.Color(16711680),
            GLU: new THREE.Color(16711680),
            HIS: new THREE.Color(8421631),
            GLY: new THREE.Color(8947848),
            PRO: new THREE.Color(8947848),
            ALA: new THREE.Color(8947848),
            VAL: new THREE.Color(8947848),
            LEU: new THREE.Color(8947848),
            ILE: new THREE.Color(8947848),
            PHE: new THREE.Color(8947848),
            SER: new THREE.Color(8947848),
            THR: new THREE.Color(8947848),
            ASN: new THREE.Color(8947848),
            GLN: new THREE.Color(8947848),
            TYR: new THREE.Color(8947848),
            MET: new THREE.Color(8947848),
            CYS: new THREE.Color(8947848),
            TRP: new THREE.Color(8947848)
        },
        hydrophobicColors: {
            "  G": new THREE.Color(16711680),
            "  A": new THREE.Color(16711680),
            "  T": new THREE.Color(16711680),
            "  C": new THREE.Color(16711680),
            "  U": new THREE.Color(16711680),
            " DG": new THREE.Color(16711680),
            " DA": new THREE.Color(16711680),
            " DT": new THREE.Color(16711680),
            " DC": new THREE.Color(16711680),
            " DU": new THREE.Color(16711680),
            G: new THREE.Color(16711680),
            A: new THREE.Color(16711680),
            T: new THREE.Color(16711680),
            C: new THREE.Color(16711680),
            U: new THREE.Color(16711680),
            DG: new THREE.Color(16711680),
            DA: new THREE.Color(16711680),
            DT: new THREE.Color(16711680),
            DC: new THREE.Color(16711680),
            DU: new THREE.Color(16711680),
            ARG: new THREE.Color(255),
            LYS: new THREE.Color(255),
            ASP: new THREE.Color(16711680),
            GLU: new THREE.Color(16711680),
            HIS: new THREE.Color(8421631),
            TRP: (new THREE.Color).setHSL(1 / 3, 1, .5),
            PHE: (new THREE.Color).setHSL(1 / 3, 1, .6945945945945946),
            TYR: (new THREE.Color).setHSL(1 / 3, 1, .745945945945946),
            LEU: (new THREE.Color).setHSL(1 / 3, 1, .5 + .645 / 1.85),
            ILE: (new THREE.Color).setHSL(1 / 3, 1, .5 + .77 / 1.85),
            CYS: (new THREE.Color).setHSL(1 / 3, 1, .5 + .805 / 1.85),
            MET: (new THREE.Color).setHSL(1 / 3, 1, .5 + .81 / 1.85),
            GLY: (new THREE.Color).setHSL(1 / 6, 1, .5 + .285 / .58),
            VAL: (new THREE.Color).setHSL(1 / 6, 1, .5 + .255 / .58),
            SER: (new THREE.Color).setHSL(1 / 6, 1, .8879310344827587),
            THR: (new THREE.Color).setHSL(1 / 6, 1, .8793103448275862),
            ALA: (new THREE.Color).setHSL(1 / 6, 1, .853448275862069),
            ASN: (new THREE.Color).setHSL(1 / 6, 1, .6379310344827587),
            PRO: (new THREE.Color).setHSL(1 / 6, 1, .6120689655172413),
            GLN: (new THREE.Color).setHSL(1 / 6, 1, .5)
        },
        sheetcolor: "green",
        ssColors: {
            helix: new THREE.Color(16711680),
            sheet: new THREE.Color(32768),
            coil: new THREE.Color(6324479)
        },
        ssColors2: {
            helix: new THREE.Color(16711680),
            sheet: new THREE.Color(16762880),
            coil: new THREE.Color(6324479)
        },
        defaultBondColor: new THREE.Color(12303291),
        surfaces: {
            1: void 0,
            2: void 0,
            3: void 0,
            4: void 0
        },
        mapData: {},
        hasCovalentBond: function(e, t) {
            var i = this.covalentRadii[e.elem.toUpperCase()] + this.covalentRadii[t.elem.toUpperCase()];
            return e.coord.distanceToSquared(t.coord) < 1.3 * i * i
        },
        init_base: function() {
            this.structures = {}, this.chains = {}, this.tddomains = {}, this.residues = {}, this.secondaries = {}, this.alnChains = {}, this.chainsSeq = {}, this.chainsColor = {}, this.chainsGene = {}, this.chainsAn = {}, this.chainsAnTitle = {}, this.alnChainsSeq = {}, this.alnChainsAnno = {}, this.alnChainsAnTtl = {}, this.pickedAtomList = {}, this.prevHighlightObjects = [], this.prevHighlightObjects_ghost = [], this.prevSurfaces = [], this.prevMaps = [], this.prevEmmaps = [], this.defNames2Residues = {}, this.defNames2Atoms = {}, this.defNames2Descr = {}, this.defNames2Command = {}, this.residueId2Name = {}, this.atoms = {}, this.dAtoms = {}, this.hAtoms = {}, this.proteins = {}, this.sidec = {}, this.nucleotides = {}, this.nucleotidesO3 = {}, this.chemicals = {}, this.ions = {}, this.water = {}, this.calphas = {}, this.hbondpnts = [], this.saltbridgepnts = [], this.contactpnts = [], this.stabilizerpnts = [], this.halogenpnts = [], this.picationpnts = [], this.pistackingpnts = [], this.doublebonds = {}, this.triplebonds = {}, this.aromaticbonds = {}, this.atomPrevColors = {}, this.style2atoms = {}, this.labels = {}, this.lines = {}, this.resids2inter = {}, this.resids2interAll = {}, this.rotateCount = 0, this.rotateCountMax = 20
        },
        init: function() {
            this.init_base(), this.molTitle = "", this.ssbondpnts = {}, this.clbondpnts = {}, this.inputid = {
                idtype: void 0,
                id: void 0
            }, this.biomtMatrices = [], this.bAssembly = !0, this.bDrawn = !1, this.bSecondaryStructure = !1, this.bHighlight = 1
        },
        reinitAfterLoad: function() {
            this.dAtoms = this.cloneHash(this.atoms), this.hAtoms = this.cloneHash(this.atoms), this.prevHighlightObjects = [], this.prevHighlightObjects_ghost = [], this.prevSurfaces = [], this.prevMaps = [], this.prevEmmaps = [], this.labels = {}, this.lines = {}, this.bAssembly = !0
        }
    }, iCn3D.prototype.loadPDB = function(e, t, i, n) {
        var o = [],
            r = [],
            s = e.split("\n"),
            a = {},
            c = {};
        this.init();
        var d, l, h, p, m, u, f = [],
            g = [],
            v = [],
            b = [],
            y = [],
            _ = [],
            C = 0,
            w = 1,
            S = "",
            k = "",
            A = "",
            x = !1,
            R = {},
            E = {},
            D = "stru",
            O = 0,
            T = "";
        for (var H in s) {
            var M = s[H],
                I = M.substr(0, 6);
            if ("HEADER" === I) void 0 !== i && i || (this.bSecondaryStructure = !0), D = M.substr(62, 4), this.molTitle = "";
            else if ("TITLE " === I) {
                var L = M.substr(10);
                this.molTitle += L.trim() + " "
            } else if ("HELIX " === I) {
                this.bSecondaryStructure = !0;
                for (var F = " " == M.substr(19, 1) ? "A" : M.substr(19, 1), P = parseInt(M.substr(21, 4)), N = parseInt(M.substr(33, 4)), z = P; z <= N; ++z) q = F + "_" + z, b.push(q), z === P && y.push(q), z === N && _.push(q);
                o.push({
                    chain: F,
                    initialResidue: P,
                    initialInscode: M.substr(25, 1),
                    terminalResidue: N,
                    terminalInscode: M.substr(37, 1)
                })
            } else if ("SHEET " === I) {
                this.bSecondaryStructure = !0;
                for (F = " " == M.substr(21, 1) ? "A" : M.substr(21, 1), P = parseInt(M.substr(22, 4)), N = parseInt(M.substr(33, 4)), z = P; z <= N; ++z) {
                    var q = F + "_" + z;
                    f.push(q), z === P && g.push(q), z === N && v.push(q)
                }
                r.push({
                    chain: F,
                    initialResidue: P,
                    initialInscode: M.substr(26, 1),
                    terminalResidue: N,
                    terminalInscode: M.substr(37, 1)
                })
            } else if ("HBOND " !== I)
                if ("SSBOND" === I) {
                    this.bSsbondProvided = !0;
                    var j = D + "_" + (" " == M.substr(15, 1) ? "A" : M.substr(15, 1)) + "_" + M.substr(17, 4).replace(/ /g, ""),
                        U = D + "_" + (" " == M.substr(29, 1) ? "A" : M.substr(29, 1)) + "_" + M.substr(31, 4).replace(/ /g, "");
                    void 0 === this.ssbondpnts[D] && (this.ssbondpnts[D] = []), this.ssbondpnts[D].push(j), this.ssbondpnts[D].push(U)
                } else if ("REMARK" === I) {
                var B = parseInt(M.substr(7, 3));
                if (-1 !== M.indexOf("1/2 of bilayer thickness:")) this.halfBilayerSize = parseFloat(M.substr(M.indexOf(":") + 1).trim());
                else if (350 == B && "BIOMT" == M.substr(13, 5)) {
                    var G = parseInt(M[18]) - 1,
                        V = parseInt(M.substr(21, 2)) - 1;
                    null == this.biomtMatrices[V] && (this.biomtMatrices[V] = (new THREE.Matrix4).identity()), this.biomtMatrices[V].elements[G] = parseFloat(M.substr(24, 9)), this.biomtMatrices[V].elements[4 + G] = parseFloat(M.substr(34, 9)), this.biomtMatrices[V].elements[8 + G] = parseFloat(M.substr(44, 9)), this.biomtMatrices[V].elements[12 + G] = parseFloat(M.substr(54, 10))
                } else if (465 == B && " " == M.substr(18, 1) && " " == M.substr(20, 1) && "S" != M.substr(21, 1)) {
                    var W, Y = M.substr(15, 3),
                        X = M.substr(19, 1),
                        K = parseInt(M.substr(21, 5));
                    void 0 === E[W = D + "_" + X] && (E[W] = []), (pe = {}).resi = K, pe.name = this.residueName2Abbr(Y).toLowerCase(), X != T && (O = 0), !isNaN(K) && ("" == T || X != T || X == T && O < K) && (E[W].push(pe), O = K, T = X)
                } else 900 == B && void 0 === this.emd && "RELATED DB: EMDB" == M.substr(34).trim() && (this.emd = M.substr(23, 11).trim())
            } else if ("SOURCE" === I && void 0 === this.organism && "ORGANISM_COMMON" == M.substr(11, 15).trim()) this.organism = M.substr(28).toLowerCase().trim(), this.organism = this.organism.substr(0, this.organism.length - 1);
            else if ("ENDMDL" === I) ++w;
            else if ("JRNL  " === I) "PMID" === M.substr(12, 4) && (this.pmid = M.substr(19).trim());
            else if ("ATOM  " === I || "HETATM" === I) {
                var Z = 1 === w ? D : D + w.toString(),
                    Q = M.substr(16, 1);
                ++C, R[parseInt(M.substr(6, 5))] = C;
                var J = M.substr(76, 2).replace(/ /g, "");
                "" === J && (J = M.substr(12, 2).replace(/ /g, ""));
                var ee = M.substr(12, 4).replace(/ /g, "");
                Y = M.substr(17, 3);
                " " === (X = M.substr(21, 1)) && (X = "A");
                var te = M.substr(22, 5).trim();
                if (te == (K = parseInt(te)) && !x || (x = !0), i && "DUM" === Y && (J = ee, X = "MEM", te = K = 1), n && "DUM" === Y) break;
                l = (W = Z + "_" + X) + "_" + te, W !== S && (x = !1), d = W + "_" + K;
                q = X + "_" + K;
                var ie = parseFloat(M.substr(30, 8)),
                    ne = parseFloat(M.substr(38, 8)),
                    oe = parseFloat(M.substr(46, 8)),
                    re = new THREE.Vector3(ie, ne, oe),
                    se = {
                        het: "H" === I[0],
                        serial: C,
                        name: ee,
                        alt: Q,
                        resn: Y,
                        structure: Z,
                        chain: X,
                        resi: K,
                        coord: re,
                        b: parseFloat(M.substr(60, 8)),
                        elem: J,
                        bonds: [],
                        ss: "coil",
                        ssbegin: !1,
                        ssend: !1
                    };
                if (se.het || "C" !== se.name || (h = C), se.het || "O" !== se.name || (m = C), !se.het && "N" === se.name && void 0 !== p && void 0 !== u) {
                    var ae = this.atoms[p].coord.distanceTo(this.atoms[u].coord),
                        ce = se.coord.x + (this.atoms[p].coord.x - this.atoms[u].coord.x) / ae,
                        de = se.coord.y + (this.atoms[p].coord.y - this.atoms[u].coord.y) / ae,
                        le = se.coord.z + (this.atoms[p].coord.z - this.atoms[u].coord.z) / ae;
                    se.hcoord = new THREE.Vector3(ce, de, le)
                }
                this.atoms[C] = se, this.dAtoms[C] = 1, -(this.hAtoms[C] = 1) !== $.inArray(q, f) ? (this.atoms[C].ss = "sheet", -1 !== $.inArray(q, g) && (this.atoms[C].ssbegin = !0), -1 !== $.inArray(q, v) && (this.atoms[C].ssend = !0)) : -1 !== $.inArray(q, b) && (this.atoms[C].ss = "helix", -1 !== $.inArray(q, y) && (this.atoms[C].ssbegin = !0), -1 !== $.inArray(q, _) && (this.atoms[C].ssend = !0));
                var he = "-";
                if (he = "helix" === this.atoms[C].ss ? "H" : "sheet" === this.atoms[C].ss ? "E" : !this.atoms[C].het && this.residueColors.hasOwnProperty(this.atoms[C].resn.toUpperCase()) ? "c" : "o", this.secondaries[d] = he, l !== A) {
                    var pe, me = this.residueName2Abbr(Y);
                    if (this.residueId2Name[d] = me, 1 !== C && (this.residues[k] = c), d !== k && (c = {}), W !== S) u = p = void 0, 1 !== C && (void 0 === this.chains[S] && (this.chains[S] = {}), this.chains[S] = this.unionHash(this.chains[S], a)), a = {}, void 0 === this.structures[Z.toString()] && (this.structures[Z.toString()] = []), this.structures[Z.toString()].push(W), void 0 === this.chainsSeq[W] && (this.chainsSeq[W] = []), (pe = {}).resi = K, pe.name = me, this.chainsSeq[W].push(pe);
                    else p = h, u = m, (pe = {}).resi = K, pe.name = me, this.chainsSeq[W].push(pe)
                }
                a[C] = 1, c[C] = 1, S = W, k = d, A = l
            } else if ("CONECT" === I) {
                var ue = parseInt(M.substr(6, 5));
                for (z = 0; z < 4; ++z) {
                    var fe = parseInt(M.substr([11, 16, 21, 26][z], 5));
                    isNaN(fe) || void 0 !== this.atoms[R[ue]] && this.atoms[R[ue]].bonds.push(R[fe])
                }
            } else "TER" === I.substr(0, 3) && ++C
        }
        this.residues[d] = c, void 0 === this.chains[W] && (this.chains[W] = {}), this.chains[W] = this.unionHash2Atoms(this.chains[W], a), this.adjustSeq(E);
        for (var ge = Object.keys(this.structures), ve = 0, be = ge.length; ve < be; ++ve) {
            if ((Z = ge[ve]) != D && (void 0 === this.ssbondpnts[Z] && (this.ssbondpnts[Z] = []), void 0 !== this.ssbondpnts[D])) {
                z = 0;
                for (var ye = this.ssbondpnts[D].length; z < ye; ++z) {
                    var _e = this.ssbondpnts[D][z],
                        Ce = _e.indexOf("_"),
                        we = Z + _e.substr(Ce);
                    this.ssbondpnts[Z].push(we)
                }
            }
        }
        if (!this.bSsbondProvided) {
            var Se = {};
            for (var ke in this.chainsSeq)
                for (var Ae = this.chainsSeq[ke], xe = (Z = ke.substr(0, ke.indexOf("_")), H = 0, Ae.length); H < xe; ++H) "C" == Ae[H].name && (null == Se[Z] && (Se[Z] = []), Se[Z].push(ke + "_" + Ae[H].resi));
            this.setSsbond(Se)
        }
        s = null;

        function Re(e) {
            for (var t = Oe.length, i = 0; i < t; ++i) {
                for (var n = Oe[i], o = i + 1; o < t; ++o) {
                    var r = Oe[o];
                    n.alt === r.alt && Te.hasCovalentBond(n, r) && (n.bonds.push(r.serial), r.bonds.push(n.serial))
                }
                e && e(n)
            }
        }
        var Ee, De, Oe = [],
            Te = this,
            He = new THREE.Vector3(9999, 9999, 9999),
            Me = new THREE.Vector3(-9999, -9999, -9999),
            Ie = new THREE.Vector3,
            $e = 0,
            Le = {};
        for (var H in this.atoms) {
            re = (ee = this.atoms[H]).coord;
            Ie.add(re), He.min(re), Me.max(re), ++$e, ee.het ? ee.het && ("HOH" === ee.resn || "WAT" === ee.resn || "SOL" === ee.resn ? this.water[ee.serial] = 1 : -1 !== $.inArray(ee.resn, this.ionsArray) || ee.elem.trim() === ee.resn.trim() ? this.ions[ee.serial] = 1 : this.chemicals[ee.serial] = 1, ee.color = this.atomColors[ee.elem]) : -1 !== $.inArray(ee.resn, this.nucleotidesArray) ? (this.nucleotides[ee.serial] = 1, "O3'" !== ee.name && "O3*" !== ee.name || (this.nucleotidesO3[ee.serial] = 1, this.secondaries[ee.structure + "_" + ee.chain + "_" + ee.resi] = "o")) : ("P" === ee.elem && (Le[ee.structure + "_" + ee.chain + "_" + ee.resi] = 1), this.proteins[ee.serial] = 1, "CA" === ee.name && (this.calphas[ee.serial] = 1), "N" !== ee.name && "CA" !== ee.name && "C" !== ee.name && "O" !== ee.name && (this.sidec[ee.serial] = 1)), Ee === ee.chain && De === ee.resi || (Re(function(e) {
                ("C" === e.name && "N" === ee.name || "O3'" === e.name && "P" === ee.name) && Te.hasCovalentBond(e, ee) && (e.bonds.push(ee.serial), ee.bonds.push(e.serial))
            }), Ee = ee.chain, De = ee.resi, Oe.length = 0), Oe.push(ee)
        }
        for (we in Le) {
            var Fe = this.residues[we];
            for (C in Fe) {
                (ee = this.atoms[C]).het = !0, this.chemicals[ee.serial] = 1, this.secondaries[we] = "o", delete this.proteins[ee.serial], "CA" === ee.name && delete this.calphas[ee.serial], "N" !== ee.name && "CA" !== ee.name && "C" !== ee.name && "O" !== ee.name && delete this.sidec[ee.serial]
            }
        }
        if (Re(), this.pmin = He, this.pmax = Me, this.cnt = $e, this.maxD = this.pmax.distanceTo(this.pmin), this.center = Ie.multiplyScalar(1 / this.cnt), this.maxD < 5 && (this.maxD = 5), this.oriMaxD = this.maxD, this.oriCenter = this.center.clone(), n) return this.getChainCalpha(this.chains, this.atoms)
    }, iCn3D.prototype.adjustSeq = function(e) {
        for (var t in this.chainsSeq)
            if (void 0 !== e[t]) {
                var i, n, o, r = this.chainsSeq[t],
                    s = e[t],
                    a = r.length,
                    c = s.length,
                    d = new Array(a + c);
                for (o = n = i = 0; i < a && n < c;) r[i].resi <= s[n].resi ? (d[o] = r[i], i++) : (d[o] = s[n], n++), o++;
                if (i < a)
                    for (var l = i; l < a; l++) d[o] = r[l], o++;
                else
                    for (l = n; l < c; l++) d[o] = s[l], o++;
                this.chainsSeq[t] = d
            }
    }, iCn3D.prototype.setSsbond = function(e) {
        var t = this;
        for (var i in e)
            for (var n = e[i], o = 0, r = n.length; o < r; ++o)
                for (var s = o + 1, a = n.length; s < a; ++s) {
                    var c = n[o],
                        d = n[s],
                        l = void 0,
                        h = void 0;
                    for (var p in t.residues[c])
                        if ("S" == t.atoms[p].elem) {
                            l = t.atoms[p].coord;
                            break
                        } for (var p in t.residues[d])
                        if ("S" == t.atoms[p].elem) {
                            h = t.atoms[p].coord;
                            break
                        } if (void 0 !== l && void 0 !== h)
                        if (!(4 < Math.abs(l.x - h.x)))
                            if (!(4 < Math.abs(l.y - h.y)))
                                if (!(4 < Math.abs(l.z - h.z)))(l.x - h.x) * (l.x - h.x) + (l.y - h.y) * (l.y - h.y) + (l.z - h.z) * (l.z - h.z) < 16 && (void 0 === t.ssbondpnts[i] && (t.ssbondpnts[i] = []), t.ssbondpnts[i].push(c), t.ssbondpnts[i].push(d))
                }
    }, iCn3D.prototype.getChainCalpha = function(e, t, i, n) {
        var o = {};
        for (var r in e)
            if (void 0 === n || (textArray = r.split("_"), textArray[0] === n)) {
                for (var s = Object.keys(e[r]), a = [], c = 0, d = 0, l = !0, h = 0, p = s.length; h < p; ++h) {
                    var m = t[s[h]];
                    if (this.proteins.hasOwnProperty(s[h]) && "CA" == m.name || this.nucleotides.hasOwnProperty(s[h]) && ("O3'" == m.name || "O3*" == m.name)) {
                        if (m.resi == d) continue;
                        var u = 3 < m.resn.trim().length ? m.resn.trim().substr(0, 3) : m.resn.trim();
                        if (!this.chargeColors.hasOwnProperty(u)) continue;
                        i ? m.resi_ori : m.resi;
                        l && (l = !1), a.push(m.coord.clone()), ++c, d = m.resi
                    }
                }
                if (0 < c) o[t[s[0]].chain] = a
            } return {
            chainresiCalphaHash: o,
            center: this.center.clone()
        }
    }, iCn3D.prototype.createSphere = function(e, t, i, n, o) {
        void 0 === t && (t = .8), void 0 === i && (i = !1);
        var r = this.vdwRadii[e.elem.toUpperCase()] || t;
        i && (r = t, n = 1), this.createSphereBase(e.coord, e.color, r, n, o)
    }, iCn3D.prototype.createSphereBase = function(e, t, i, n, o) {
        var r;
        if (void 0 === n && (n = 1), 2 === o) n *= 1.5, t = this.hColor, (r = new THREE.Mesh(this.sphereGeometry, new THREE.MeshPhongMaterial({
            transparent: !0,
            opacity: .5,
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: t
        }))).scale.x = r.scale.y = r.scale.z = i * (n || 1), r.position.copy(e), this.mdl.add(r);
        else if (1 === o)(r = new THREE.Mesh(this.sphereGeometry, this.matShader)).scale.x = r.scale.y = r.scale.z = i * (n || 1), r.position.copy(e), r.renderOrder = this.renderOrderPicking, this.mdl.add(r);
        else if (void 0 === t && (t = this.defaultAtomColor), (r = new THREE.Mesh(this.sphereGeometry, new THREE.MeshPhongMaterial({
                specular: this.frac,
                shininess: 30,
                emissive: 0,
                color: t
            }))).scale.x = r.scale.y = r.scale.z = i * (n || 1), r.position.copy(e), this.bImpo) {
            this.posArraySphere.push(e.x), this.posArraySphere.push(e.y), this.posArraySphere.push(e.z), this.colorArraySphere.push(t.r), this.colorArraySphere.push(t.g), this.colorArraySphere.push(t.b);
            var s = i * (n || 1);
            this.radiusArraySphere.push(s), this.cnt <= this.maxatomcnt && this.mdl_ghost.add(r)
        } else this.mdl.add(r);
        1 === o || 2 === o ? this.bImpo ? this.cnt <= this.maxatomcnt && this.prevHighlightObjects_ghost.push(r) : this.prevHighlightObjects.push(r) : this.bImpo ? this.cnt <= this.maxatomcnt && this.objects_ghost.push(r) : this.objects.push(r)
    }, iCn3D.prototype.createCylinder = function(e, t, i, n, o, r, s) {
        var a;
        1 === o ? ((a = new THREE.Mesh(this.cylinderGeometryOutline, this.matShader)).position.copy(e).add(t).multiplyScalar(.5), a.matrixAutoUpdate = !1, a.lookAt(t.clone().sub(e)), a.updateMatrix(), a.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)), a.renderOrder = this.renderOrderPicking, this.mdl.add(a), this.prevHighlightObjects.push(a)) : (2 === o ? (a = new THREE.Mesh(this.cylinderGeometry, new THREE.MeshPhongMaterial({
            transparent: !0,
            opacity: .5,
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: n
        })), i *= 1.5) : a = new THREE.Mesh(this.cylinderGeometry, new THREE.MeshPhongMaterial({
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: n
        })), a.position.copy(e).add(t).multiplyScalar(.5), a.matrixAutoUpdate = !1, a.lookAt(t.clone().sub(e)), a.updateMatrix(), a.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)), this.bImpo ? (this.posArray.push(e.x), this.posArray.push(e.y), this.posArray.push(e.z), this.colorArray.push(n.r), this.colorArray.push(n.g), this.colorArray.push(n.b), this.pos2Array.push(t.x), this.pos2Array.push(t.y), this.pos2Array.push(t.z), void 0 !== r ? (this.color2Array.push(r.r), this.color2Array.push(r.g), this.color2Array.push(r.b)) : (this.color2Array.push(n.r), this.color2Array.push(n.g), this.color2Array.push(n.b)), this.radiusArray.push(i), this.cnt <= this.maxatomcnt && this.mdl_ghost.add(a)) : this.mdl.add(a), 2 === o ? this.bImpo ? this.cnt <= this.maxatomcnt && this.prevHighlightObjects_ghost.push(a) : this.prevHighlightObjects.push(a) : this.bImpo ? this.cnt <= this.maxatomcnt && this.objects_ghost.push(a) : void 0 !== s && !s || this.objects.push(a))
    }, iCn3D.prototype.createRepresentationSub = function(e, t, i) {
        for (var n in e) {
            var o = e[n];
            for (var r in t && t(o), o.bonds) {
                var s = this.atoms[o.bonds[r]];
                void 0 === s || s.serial < o.serial || s.chain === o.chain && (s.resi === o.resi || "C" === o.name && "N" === s.name || "O3'" === o.name && "P" === s.name || "O3*" === o.name && "P" === s.name || "SG" === o.name && "SG" === s.name) && i && i(o, s)
            }
        }
    }, iCn3D.prototype.createSphereRepresentation = function(e, t, i, n, o) {
        var r = this;
        this.createRepresentationSub(e, function(e) {
            r.createSphere(e, t, i, n, o)
        })
    }, iCn3D.prototype.createBoxRepresentation_P_CA = function(e, t, i) {
        var n = this;
        this.createRepresentationSub(e, function(e) {
            "CA" !== e.name && "O3'" !== e.name && "O3*" !== e.name || n.createBox(e, void 0, void 0, t, void 0, i)
        })
    }, iCn3D.prototype.createConnCalphSidechain = function(e, t) {
        var i = {};
        for (var n in e) {
            if (!(a = e[n]).het && a.style2 === t) i[s = a.structure + "_" + a.chain + "_" + a.resi] = 1
        }
        var o = [],
            r = [];
        for (var s in i) {
            var a;
            if (void 0 !== (a = this.getFirstAtomObjByName(this.residues[s], "CA"))) {
                n = 0;
                for (var c = a.bonds.length; n < c; ++n) {
                    ("HA" === (d = this.atoms[a.bonds[n]]).name || "C" !== d.name && "N" !== d.name && "H" !== d.elem && d.resi == a.resi) && (o.push(a.coord), o.push(d.coord), r.push(a.color), r.push(d.color))
                }
            }
            if (void 0 !== (a = this.getFirstAtomObjByName(this.residues[s], "N")))
                for (n = 0, c = a.bonds.length; n < c; ++n) {
                    var d;
                    "H" === (d = this.atoms[a.bonds[n]]).name && (o.push(a.coord), o.push(d.coord), r.push(a.color), r.push(d.color))
                }
        }
        for (n = 0, c = o.length; n < c; n += 2)
            if ("ball and stick" === t || "stick" === t) {
                var l = "stick" === t ? this.cylinderRadius : .5 * this.cylinderRadius;
                this.createCylinder(o[n], o[n + 1], l, r[n + 1])
            } else if ("lines" === t) {
            var h = this.createSingleLine(o[n], o[n + 1], r[n + 1], !1, .5);
            this.mdl.add(h)
        }
    }, iCn3D.prototype.createStickRepresentation = function(e, t, x, i, R, n) {
        var E = this,
            D = void 0 !== n && n ? t / E.cylinderRadius : 1;
        this.createRepresentationSub(e, function(e) {
            E.createSphere(e, t, !i, i, R)
        }, function(e, t) {
            var i = e.coord.clone().add(t.coord).multiplyScalar(.5),
                n = e.serial + "_" + t.serial;
            if (E.doublebonds.hasOwnProperty(n)) {
                var o = new THREE.Vector3(Math.random(), Math.random(), Math.random());
                if (1 == e.bonds.length && 1 == t.bonds.length) {
                    (h = t.coord.clone()).sub(e.coord);
                    var r = o.clone();
                    h.cross(r).normalize().multiplyScalar(.2 * D)
                } else {
                    if (e.bonds.length >= t.bonds.length && 1 < e.bonds.length) s = e.serial, a = e.bonds[0], c = e.bonds[1];
                    else {
                        if (!(t.bonds.length >= e.bonds.length && 1 < t.bonds.length)) return void console.log("Double bond was not drawn due to the undefined cross plane");
                        s = t.serial, a = t.bonds[0], c = t.bonds[1]
                    }(d = E.atoms[s].coord.clone()).sub(E.atoms[a].coord), (l = E.atoms[s].coord.clone()).sub(E.atoms[c].coord), d.cross(l), 0 == parseInt(1e4 * d.length()) && (d = new THREE.Vector3(.2, .3, .5)), (h = t.coord.clone()).sub(e.coord), h.cross(d).normalize().multiplyScalar(.2 * D), 0 == parseInt(1e4 * h.length()) && (d = new THREE.Vector3(.5, .3, .2), h.cross(d).normalize().multiplyScalar(.2 * D))
                }
                e.color === t.color ? E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), E.cylinderRadius * D * .3, e.color, R), E.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), E.cylinderRadius * D * .3, e.color, R)) : E.bImpo ? E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), E.cylinderRadius * D * .3, e.color, R, t.color), E.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), E.cylinderRadius * D * .3, e.color, R, t.color)) : E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord.clone().add(h), i.clone().add(h), E.cylinderRadius * D * .3, e.color, R), E.createCylinder(t.coord.clone().add(h), i.clone().add(h), E.cylinderRadius * D * .3, t.color, R), E.createCylinder(e.coord.clone().sub(h), i.clone().sub(h), E.cylinderRadius * D * .3, e.color, R), E.createCylinder(t.coord.clone().sub(h), i.clone().sub(h), E.cylinderRadius * D * .3, t.color, R))
            } else if (E.aromaticbonds.hasOwnProperty(n)) {
                var s, a, c, d, l, h;
                if (e.bonds.length > t.bonds.length && 1 < e.bonds.length) s = e.serial, a = e.bonds[0], c = e.bonds[1];
                else {
                    if (!(1 < t.bonds.length)) return;
                    s = t.serial, a = t.bonds[0], c = t.bonds[1]
                }(d = E.atoms[s].coord.clone()).sub(E.atoms[a].coord), (l = E.atoms[s].coord.clone()).sub(E.atoms[c].coord), d.cross(l), (h = t.coord.clone()).sub(e.coord), h.cross(d).normalize().multiplyScalar(.2 * D);
                for (var p = 0, m = 0, u = e.bondOrder.length; m < u; ++m) "1.5" === e.bondOrder[m] && e.bonds[m] !== t.serial && (p = e.bonds[m]);
                var f = "add";
                if (0 === p) f = "add";
                else {
                    var g = e.coord.clone().add(h),
                        v = e.coord.clone().sub(h),
                        b = t.coord.clone().sub(g).normalize(),
                        y = E.atoms[p].coord.clone().sub(g).normalize(),
                        _ = t.coord.clone().sub(v).normalize(),
                        C = E.atoms[p].coord.clone().sub(v).normalize();
                    f = Math.acos(b.dot(y)) < Math.acos(_.dot(C)) ? "sub" : "add"
                }
                if (e.color === t.color) {
                    A = "add" === f ? (E.createCylinder(e.coord.clone().sub(h), t.coord.clone().sub(h), E.cylinderRadius * D * .3, e.color, R), k = e.coord.clone().add(h), t.coord.clone().add(h).sub(k).multiplyScalar(1 / 11)) : (E.createCylinder(e.coord.clone().add(h), t.coord.clone().add(h), E.cylinderRadius * D * .3, e.color, R), k = e.coord.clone().sub(h), t.coord.clone().sub(h).sub(k).multiplyScalar(1 / 11));
                    for (m = 0; m <= 10; ++m)
                        if (m % 2 == 0) {
                            var w = k.clone().add(A.clone().multiplyScalar(m)),
                                S = k.clone().add(A.clone().multiplyScalar(m + 1));
                            E.createCylinder(w, S, E.cylinderRadius * D * .3, e.color, R)
                        }
                } else {
                    var k, A;
                    A = "add" === f ? (E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord.clone().sub(h), i.clone().sub(h), E.cylinderRadius * D * .3, e.color, R), E.createCylinder(t.coord.clone().sub(h), i.clone().sub(h), E.cylinderRadius * D * .3, t.color, R)), k = e.coord.clone().add(h), t.coord.clone().add(h).sub(k).multiplyScalar(1 / 11)) : (E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord.clone().add(h), i.clone().add(h), E.cylinderRadius * D * .3, e.color, R), E.createCylinder(t.coord.clone().add(h), i.clone().add(h), E.cylinderRadius * D * .3, t.color, R)), k = e.coord.clone().sub(h), t.coord.clone().sub(h).sub(k).multiplyScalar(1 / 11));
                    for (m = 0; m <= 10; ++m)
                        if (m % 2 == 0 && E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial)) {
                            w = k.clone().add(A.clone().multiplyScalar(m)), S = k.clone().add(A.clone().multiplyScalar(m + 1));
                            m < 5 ? E.createCylinder(w, S, E.cylinderRadius * D * .3, e.color, R) : E.createCylinder(w, S, E.cylinderRadius * D * .3, t.color, R)
                        }
                }
            } else if (E.triplebonds.hasOwnProperty(n)) {
                o = new THREE.Vector3(Math.random(), Math.random(), Math.random());
                (r = t.coord.clone()).sub(e.coord), (_ = o.clone()).cross(r).normalize().multiplyScalar(.3 * D), e.color === t.color ? E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord, t.coord, E.cylinderRadius * D * .2, e.color, R), E.createCylinder(e.coord.clone().add(_), t.coord.clone().add(_), E.cylinderRadius * D * .2, e.color, R), E.createCylinder(e.coord.clone().sub(_), t.coord.clone().sub(_), E.cylinderRadius * D * .2, e.color, R)) : E.bImpo ? E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord, t.coord, E.cylinderRadius * D * .2, e.color, R, t.color), E.createCylinder(e.coord.clone().add(_), t.coord.clone().add(_), E.cylinderRadius * D * .2, e.color, R, t.color), E.createCylinder(e.coord.clone().sub(_), t.coord.clone().sub(_), E.cylinderRadius * D * .2, e.color, R, t.color)) : E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord, i, E.cylinderRadius * D * .2, e.color, R), E.createCylinder(t.coord, i, E.cylinderRadius * D * .2, t.color, R), E.createCylinder(e.coord.clone().add(_), i.clone().add(_), E.cylinderRadius * D * .2, e.color, R), E.createCylinder(t.coord.clone().add(_), i.clone().add(_), E.cylinderRadius * D * .2, t.color, R), E.createCylinder(e.coord.clone().sub(_), i.clone().sub(_), E.cylinderRadius * D * .2, e.color, R), E.createCylinder(t.coord.clone().sub(_), i.clone().sub(_), E.cylinderRadius * D * .2, t.color, R))
            } else e.color === t.color ? E.createCylinder(e.coord, t.coord, x, e.color, R) : E.bImpo ? E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && E.createCylinder(e.coord, t.coord, x, e.color, R, t.color) : E.dAtoms.hasOwnProperty(e.serial) && E.dAtoms.hasOwnProperty(t.serial) && (E.createCylinder(e.coord, i, x, e.color, R), E.createCylinder(t.coord, i, x, t.color, R))
        })
    }, iCn3D.prototype.createLineRepresentation = function(e, t) {
        var i, n = new THREE.Geometry;
        (this.createRepresentationSub(e, void 0, function(e, t) {
            if (e.color === t.color) n.vertices.push(e.coord), n.vertices.push(t.coord), n.colors.push(e.color), n.colors.push(t.color);
            else {
                var i = e.coord.clone().add(t.coord).multiplyScalar(.5);
                n.vertices.push(e.coord), n.vertices.push(i), n.vertices.push(t.coord), n.vertices.push(i), n.colors.push(e.color), n.colors.push(e.color), n.colors.push(t.color), n.colors.push(t.color)
            }
        }), 2 !== t) ? (1 === t || (i = new THREE.LineSegments(n, new THREE.LineBasicMaterial({
            linewidth: this.linewidth,
            vertexColors: !0
        })), this.mdl.add(i)), 1 === t ? this.prevHighlightObjects.push(i) : this.objects.push(i)) : 2 === t && this.createBoxRepresentation_P_CA(e, .8, t)
    }, iCn3D.prototype.getKnot = function(e, t, i, n) {
        return i.distanceTo(n) + t
    }, iCn3D.prototype.getValueFromKnot = function(e, t, i, n, o, r, s, a, c) {
        var d, l, h = (s - r) / (i - t),
            p = (a - s) / (n - i),
            m = (c - a) / (o - n),
            u = (i + n) * (i + n) - 4 * (t * i + n * o - t * o);
        return l = 0 == u ? d = 9999 : (d = 6 * (3 * p * i + 2 * h * o + m * i - 2 * h * i - 2 * p * o - p * n - m * i) / u, 6 * (3 * p * n + 2 * m * t + h * i - 2 * p * t - 2 * m * n - h * n - p * i) / u), p * (e - i) + s + ((2 * d + l) / 6 / (i - n) * (e - i) * (e - n) * (e - n) + (2 * l + d) / 6 / (n - i) * (e - i) * (e - i) * (e - n))
    }, iCn3D.prototype.subdivide = function(e, t, i, n, o, r, s, a) {
        var c = [],
            d = [],
            l = [],
            h = new Array,
            p = void 0 !== r ? r.length : 0,
            m = void 0 !== s ? s.length : 0;
        p = 0 < p && Math.abs(r[0].x - e[0].x) <= 6 && Math.abs(r[0].y - e[0].y) <= 6 && Math.abs(r[0].z - e[0].z) <= 6 ? (h.push(r[0]), 1) : 0, h.push(e[0]);
        for (var u = 1, f = e.length - 1; u < f; ++u) {
            var g = e[u],
                v = e[u + 1];
            h.push(g.smoothen ? g.clone().add(v).multiplyScalar(.5) : g)
        }
        h.push(e[e.length - 1]);
        var b = 0;
        0 < m && Math.abs(s[0].x - e[e.length - 1].x) <= 6 && Math.abs(s[0].y - e[e.length - 1].y) <= 6 && Math.abs(s[0].z - e[e.length - 1].z) <= 6 && (h.push(s[0]), ++b), 1 < m && Math.abs(s[0].x - s[1].x) <= 6 && Math.abs(s[0].y - s[1].y) <= 6 && Math.abs(s[0].z - s[1].z) <= 6 && (h.push(s[1]), ++b);
        var y = [],
            _ = [],
            C = [];
        a && (b = 0 < m ? m - 1 : 0);
        u = -1;
        for (var w = h.length, S = 1 / i; u <= w - 3; ++u) {
            var k = u - p,
                A = (g = h[-1 === u ? 0 : u], v = h[u + 1], h[u + 2]),
                x = h[u === w - 3 ? w - 1 : u + 3],
                R = this.getKnot(1, 0, g, v),
                E = this.getKnot(1, R, v, A),
                D = this.getKnot(1, E, A, x); + R < 1e-4 && (R = 1), E - R < 1e-4 && (E = R + 1), D - E < 1e-4 && (D = E + 1), -1 < u && (void 0 === n || n[k + 1]) && -1 + p <= u && u <= w - 3 - b + 1 && (c = c.concat(y), d = d.concat(_), l = l.concat(C)), y = [], _ = [], C = [];
            for (var O = (E - R) * S, T = 0; T < i; ++T) {
                var H = R + O * T,
                    M = this.getValueFromKnot(H, 0, R, E, D, g.x, v.x, A.x, x.x),
                    I = this.getValueFromKnot(H, 0, R, E, D, g.y, v.y, A.y, x.y),
                    $ = this.getValueFromKnot(H, 0, R, E, D, g.z, v.z, A.z, x.z);
                n ? (-1 + p <= u && u <= w - 3 - b && n[k + 1] && T <= parseInt(i / 2) && (c.push(new THREE.Vector3(M, I, $)), d.push(n[k + 1]), l.push(t[k + 1])), -1 + p <= u && u <= w - 3 - b + 1 && n[k + 2] && T > parseInt(i / 2) && (y.push(new THREE.Vector3(M, I, $)), _.push(n[k + 2]), C.push(t[k + 2]))) : -1 + p <= u && u <= w - 3 - b && (c.push(new THREE.Vector3(M, I, $)), d.push(k + 1), l.push(t[k + 1]))
            }
        }
        n && !n[k + 1] || (c = c.concat(y), d = d.concat(_), l = l.concat(C), c.push(h[h.length - 1 - b]), d.push(h.length - 1 - b), l.push(t[h.length - 1 - b])), y = [], _ = [], C = [], h = [];
        var L = [];
        return L.push(c), L.push(d), L.push(l), L
    }, iCn3D.prototype.createCurveSubArrow = function(e, t, i, n, o, r, s, a, c, d, l, h, p, m, u) {
        var f = [],
            g = [];
        f.push(e), g.push(a), this.prepareStrand(f, g, t, i, n, void 0, o, r, s, c, d, !1, l, h, p, m, u), f = [], g = []
    }, iCn3D.prototype.setCalphaDrawnCoord = function(e, t, i) {
        var n = 0;
        if (void 0 !== i)
            for (var o = 0, r = e.length; o < r; o += t) {
                var s = i[n];
                this.atoms.hasOwnProperty(s) && (this.atoms[s].coord2 = e[o].clone()), ++n
            }
    }, iCn3D.prototype.createCurveSub = function(e, t, i, n, o, r, s, a, c, d, l, h) {
        if (0 !== e.length) {
            var p;
            if (n = n || 5, s) p = e;
            else {
                var m = this.subdivide(e, i, n, a, o, l, h, !0);
                p = m[0], i = m[2]
            }
            if (0 !== p.length) {
                if (this.setCalphaDrawnCoord(p, n, c), 1 === o) {
                    var u = this.coilWidth / 2;
                    if (1 < p.length)
                        if (void 0 !== d) {
                            for (var f, g, v = [], b = 0, y = p.length; b < y; ++b) {
                                if ((f = d[b]) !== g && f !== g + 1 && void 0 !== g || b === y - 1) {
                                    var _ = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(v), v.length, u, 4, !1);
                                    (C = new THREE.Mesh(_, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(C), this.prevHighlightObjects.push(C), _ = null, v = []
                                }
                                v.push(p[b]), g = f
                            }
                            v = []
                        } else {
                            var C;
                            _ = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(p), p.length, u, 4, !1);
                            (C = new THREE.Mesh(_, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(C), this.prevHighlightObjects.push(C), _ = null
                        }
                } else {
                    var w = new THREE.Geometry;
                    if (2 === o && r)
                        for (b = 0; b < p.length; ++b) p[b].addScalar(.6), w.vertices.push(p[b]), w.colors.push(new THREE.Color(i[b]));
                    else
                        for (b = 0; b < p.length; ++b) w.vertices.push(p[b]), w.colors.push(new THREE.Color(i[b]));
                    var S = new THREE.Line(w, new THREE.LineBasicMaterial({
                        linewidth: t,
                        vertexColors: !0
                    }));
                    this.mdl.add(S), 2 === o ? this.prevHighlightObjects.push(S) : this.objects.push(S)
                }
                p = null
            }
        }
    }, iCn3D.prototype.createCylinderCurve = function(e, t, i, n, o) {
        var r, s, a, c = null;
        for (a in e) {
            var d = e[a];
            if (!d.het && -1 != t.indexOf(d.name)) {
                if (null !== c && r === d.chain && s + 1 === d.resi && Math.abs(c.coord.x - d.coord.x) < 8 && Math.abs(c.coord.y - d.coord.y) < 8 && Math.abs(c.coord.z - d.coord.z) < 8) {
                    var l = c.coord.clone().add(d.coord).multiplyScalar(.5);
                    if (o) 1 === o && (this.createCylinder(c.coord, l, i, c.color, o), this.createCylinder(l, d.coord, i, d.color, o), this.createSphere(d, i, !0, 1, o));
                    else if (n) {
                        var h = this.createSingleLine(c.coord, l, c.color, !1);
                        this.mdl.add(h), this.objects.push(h), h = this.createSingleLine(l, d.coord, d.color, !1), this.mdl.add(h), this.objects.push(h)
                    } else this.createCylinder(c.coord, l, i, c.color), this.createCylinder(l, d.coord, i, d.color), this.createSphere(d, i, !0, 1, o)
                }
                r = (c = d).chain, s = d.resi, 2 === o && this.createBox(d, void 0, void 0, void 0, void 0, o)
            }
        }
        if (null !== c && r === d.chain && s + 1 === d.resi && Math.abs(c.coord.x - d.coord.x) < 8 && Math.abs(c.coord.y - d.coord.y) < 8 && Math.abs(c.coord.z - d.coord.z) < 8) {
            l = c.coord.add(d.coord).multiplyScalar(.5);
            if (o) 1 === o && (this.createCylinder(c.coord, l, i, c.color, o), this.createCylinder(l, d.coord, i, d.color, o), this.createSphere(d, i, !0, 1, o));
            else if (n) {
                h = this.createSingleLine(c.coord, l, c.color, !1);
                this.mdl.add(h), this.objects.push(h), h = this.createSingleLine(l, d.coord, d.color, !1), this.mdl.add(h), this.objects.push(h)
            } else this.createCylinder(c.coord, l, i, c.color), this.createCylinder(l, d.coord, i, d.color)
        }
    }, iCn3D.prototype.prepareStrand = function(e, t, i, n, o, r, s, a, c, d, l, h, p, m, u, f, g) {
        if (1 !== d.length) {
            var v = [];
            v.push(n[n.length - 2]), v.push(n[n.length - 1]), o = o || this.axisDIV;
            for (var b = 2 / (c - 1), y = {}, _ = [], C = 0, w = t.length; C < w; ++C) y[C] = [];
            var S = this.subdivide(d, n, o, void 0, void 0, f, g)[0];
            if (1 !== S.length) {
                for (_ = [], C = 0, w = void 0 === u || u ? d.length - 2 : d.length; C < w; ++C) {
                    for (var k = 0, A = t.length; k < A; ++k) y[k].push(e[k][C]);
                    _.push(n[C])
                }
                if (_.push(n[C]), void 0 === u || u)
                    for (C = 0, w = t.length; C < w; ++C) H = b * t[C] - 1, M = S.length - 1 - o, I = d.length - 2, T = new THREE.Vector3(S[M].x + l[I].x * H, S[M].y + l[I].y * H, S[M].z + l[I].z * H), y[C].push(T);
                var x, R = [];
                for (C = 0, w = t.length; C < w; ++C) x = this.subdivide(y[C], _, o, p, s), y[C] = x[0], n = x[2], 0 === C && (R = x[1]);
                if (h ? this.createStrip(y[0], y[1], n, o, r, s, !0, void 0, m, R, f, g) : this.createCurveSub(y[0], i, n, o, s, a, !0, void 0, m, R, f, g), void 0 === u || u) {
                    _ = [], R = [];
                    for (k = 0, A = t.length; k < A; ++k) {
                        y[k] = [];
                        for (C = o * (d.length - 2), w = o * (d.length - 1); p[parseInt(C / o)] && C < w; C += o)
                            for (var E = parseInt(C / o), D = 0; D < o; ++D) {
                                H = 1.8 * (H = b * t[k] - 1) * (o - D) / o;
                                var O = parseInt(C / o);
                                (T = new THREE.Vector3(S[C + D].x + l[O].x * H, S[C + D].y + l[O].y * H, S[C + D].z + l[O].z * H)).smoothen = !0, y[k].push(T), _.push(v[0]), 0 === k && R.push(E)
                            }
                        var T, H = 0,
                            M = S.length - 1,
                            I = d.length - 1;
                        (T = new THREE.Vector3(S[M].x + l[I].x * H, S[M].y + l[I].y * H, S[M].z + l[I].z * H)).smoothen = !0, y[k].push(T), _.push(v[1]), 0 === k && R.push(M)
                    }
                    S = [], h ? this.createStrip(y[0], y[1], _, o, r, s, !0, void 0, void 0, R, f, g) : this.createCurveSub(y[0], i, _, o, s, a, !0, void 0, void 0, R, f, g)
                }
                for (var C in y) {
                    D = 0;
                    for (var $ = y[C].length; D < $; ++D) y[C][D] = null;
                    y[C] = []
                }
                y = {}
            }
        }
    }, iCn3D.prototype.createStripArrow = function(e, t, i, n, o, r, s, a, c, d, l, h, p, m, u, f) {
        var g = [],
            v = [];
        g.push(e), g.push(t), v.push(a), v.push(c), this.prepareStrand(g, v, void 0, i, n, o, r, void 0, s, d, l, !0, h, p, m, u, f), g = [], v = []
    }, iCn3D.prototype.createStrip = function(e, t, i, n, o, r, s, a, c, d, l, h) {
        if (!(e.length < 2)) {
            if (n = n || this.axisDIV, !s) {
                var p = this.subdivide(e, i, n, a, r, l, h, !0),
                    m = this.subdivide(t, i, n, a, r, l, h, !0);
                e = p[0], t = m[0], i = p[2]
            }
            if (!(e.length < 2)) {
                if (this.setCalphaDrawnCoord(e, n, c), 1 === r) {
                    var u = this.coilWidth / 2;
                    if (void 0 !== d) {
                        for (var f, g, v = [], b = [], y = 0, _ = e.length; y < _; ++y) {
                            if ((f = d[y]) !== g && f !== g + 1 && void 0 !== g || y === _ - 1) {
                                var C = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(v), v.length, u, 4, !1);
                                (L = new THREE.Mesh(C, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(L), this.prevHighlightObjects.push(L), C = null;
                                var w = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(b), b.length, u, 4, !1);
                                (L = new THREE.Mesh(w, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(L), this.prevHighlightObjects.push(L), w = null, v = [], b = []
                            }
                            v.push(e[y]), b.push(t[y]), g = f
                        }
                        v = [], b = []
                    } else {
                        C = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(e), e.length, u, 4, !1);
                        (L = new THREE.Mesh(C, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(L), this.prevHighlightObjects.push(L), C = null;
                        w = new THREE.TubeGeometry(new THREE.CatmullRomCurve3(t), t.length, u, 4, !1);
                        (L = new THREE.Mesh(w, this.matShader)).renderOrder = this.renderOrderPicking, this.mdl.add(L), this.prevHighlightObjects.push(L), w = null
                    }
                } else {
                    for (var S, k, A, x, R, E = new THREE.Geometry, D = E.vertices, O = E.faces, T = (y = 0, e.length); y < T; ++y) D.push(k = e[y]), D.push(k), D.push(A = t[y]), D.push(A), y < T - 1 && (S = t[y].clone().sub(e[y]).cross(e[y + 1].clone().sub(e[y])).normalize().multiplyScalar(o)), D.push(x = e[y].clone().add(S)), D.push(x), D.push(R = t[y].clone().add(S)), D.push(R);
                    var H = [
                        [0, 2, -6, -8],
                        [-4, -2, 6, 4],
                        [7, 3, -5, -1],
                        [-3, -7, 1, 5]
                    ];
                    for (y = 1, T = e.length; y < T; ++y)
                        for (var M = 8 * y, I = new THREE.Color(i[y - 1]), $ = 0; $ < 4; ++$) O.push(new THREE.Face3(M + H[$][0], M + H[$][1], M + H[$][2], void 0, I)), O.push(new THREE.Face3(M + H[$][3], M + H[$][0], M + H[$][2], void 0, I));
                    var L, F = D.length - 8;
                    for (y = 0; y < 4; ++y) D.push(D[2 * y]), D.push(D[F + 2 * y]);
                    F += 8, O.push(new THREE.Face3(F, F + 2, F + 6, void 0, O[0].color)), O.push(new THREE.Face3(F + 4, F, F + 6, void 0, O[0].color)), O.push(new THREE.Face3(F + 1, F + 5, F + 7, void 0, O[O.length - 3].color)), O.push(new THREE.Face3(F + 3, F + 1, F + 7, void 0, O[O.length - 3].color)), E.computeFaceNormals(), E.computeVertexNormals(!1), 2 === r ? (L = new THREE.Mesh(E, new THREE.MeshPhongMaterial({
                        transparent: !0,
                        opacity: .5,
                        specular: this.frac,
                        shininess: 30,
                        emissive: 0,
                        vertexColors: THREE.FaceColors,
                        side: THREE.DoubleSide
                    })), this.mdl.add(L), this.prevHighlightObjects.push(L)) : (L = new THREE.Mesh(E, new THREE.MeshPhongMaterial({
                        specular: this.frac,
                        shininess: 30,
                        emissive: 0,
                        vertexColors: THREE.FaceColors,
                        side: THREE.DoubleSide
                    })), this.mdl.add(L), this.objects.push(L))
                }
                t = e = null
            }
        }
    }, iCn3D.prototype.getSSExpandedAtoms = function(e, t) {
        var i, n, o, r, s, a, c, d, l = 0,
            h = Object.keys(e).length,
            p = this.cloneHash(e);
        for (var m in e) {
            if (i = e[m].structure + "_" + e[m].chain, n = parseInt(e[m].resi), o = e[m], void 0 === r && (c = e[m]), i !== r && void 0 !== r || n !== s && n !== s + 1 && void 0 !== s || l === h - 1) {
                i !== r && void 0 !== r || n !== s && n !== s + 1 && void 0 !== s ? d = a : l === h - 1 && (d = o);
                var u = c.resi;
                if ("coil" !== c.ss && !c.ssbegin) {
                    for (var f = c.resi - 1; 0 < f; --f) {
                        var g = c.structure + "_" + c.chain + "_" + f;
                        if (!this.residues.hasOwnProperty(g)) break;
                        if ((y = this.getFirstCalphaAtomObj(this.residues[g])).ss === c.ss && y.ssbegin) {
                            u = y.resi;
                            break
                        }
                    }
                    for (f = u; f < c.resi; ++f) {
                        g = c.structure + "_" + c.chain + "_" + f;
                        p = this.unionHash(p, this.hash2Atoms(this.residues[g]))
                    }
                }
                if (3 === this.pk && 1 === t && "coil" === c.ss) {
                    g = c.structure + "_" + c.chain + "_" + (c.resi - 1);
                    this.residues.hasOwnProperty(g) && (p = this.unionHash(p, this.hash2Atoms(this.residues[g])), e = this.unionHash(e, this.hash2Atoms(this.residues[g])))
                }
                var v = d.resi;
                if (void 0 !== d.ss && "coil" !== d.ss && !d.ssend && !d.notshow) {
                    var b = this.getLastAtomObj(this.chains[d.structure + "_" + d.chain]).resi;
                    for (f = d.resi + 1; f <= b; ++f) {
                        var y;
                        g = d.structure + "_" + d.chain + "_" + f;
                        if (!this.residues.hasOwnProperty(g)) break;
                        if ((y = this.getFirstCalphaAtomObj(this.residues[g])).ss === d.ss && y.ssend) {
                            v = y.resi;
                            break
                        }
                    }
                    for (f = d.resi + 1; f <= v; ++f) {
                        g = d.structure + "_" + d.chain + "_" + f;
                        p = this.unionHash(p, this.hash2Atoms(this.residues[g]))
                    }
                }
                if (3 === this.pk && 1 === t && "coil" === d.ss) {
                    g = d.structure + "_" + d.chain + "_" + (d.resi + 1);
                    this.residues.hasOwnProperty(g) && (p = this.unionHash(p, this.hash2Atoms(this.residues[g])), e = this.unionHash(e, this.hash2Atoms(this.residues[g])))
                }
                d.notshow && (d.notshow = void 0), c = o
            }
            r = i, s = n, a = o, ++l
        }
        return p
    }, iCn3D.prototype.createStrand = function(e, t, i, n, o, r, s, a, c) {
        var d = !!n,
            l = {};
        l = this.bAllAtoms ? e : this.getSSExpandedAtoms(e), 2 === c && (a = n ? (n = !1, void(r = o = i = t = null)) : (n = !0, t = 2, r = o = i = void 0, this.ribbonthickness)), t = t || this.strandDIV, i = i || this.axisDIV, o = o || this.coilWidth, s = s || !1, r = r || this.helixSheetWidth;
        for (var h = {}, p = 0; p < t; ++p) h[p] = [];
        var m, u, f = [],
            g = [],
            v = [],
            b = [],
            y = [],
            _ = null,
            C = null,
            w = null,
            S = null,
            k = null,
            A = null,
            x = null,
            R = null,
            E = !1,
            D = null,
            O = null,
            T = null,
            H = null,
            M = null,
            I = !1,
            $ = !1,
            L = {};
        this.bCalphaOnly = this.isCalphaPhosOnly(l);
        var F = {};
        for (var P in l) {
            var N;
            F[(N = l[P]).structure + "_" + N.chain + "_" + N.resi] = 1
        }
        var z = Object.keys(F).length,
            q = 0,
            j = Object.keys(this.hAtoms).length == Object.keys(this.atoms).length,
            U = [];
        for (var P in l) {
            if (("O" === (N = l[P]).name || "CA" === N.name) && !N.het && ("CA" === N.name && (e.hasOwnProperty(P) && ("helix" !== N.ss && "sheet" !== N.ss || N.ssend || N.ssbegin) && (L[P] = N), _ = N.coord, w = N.color, H = N.serial, U.push(N.serial)), "O" === N.name || this.bCalphaOnly && "CA" === N.name)) {
                null == _ && (_ = N.coord, w = N.color, H = N.serial), "O" === N.name && (C = N.coord);
                var B = !0;
                if (m !== N.chain && (B = !1), N.ssend && "sheet" === N.ss ? I = !0 : N.ssend && "helix" === N.ss && ($ = !0), k) {
                    1 === c || 2 === c ? y.push(this.hColor) : y.push(A), u = "coil" !== R && "coil" === N.ss || E && N.ssbegin || "coil" === R ? o : r;
                    var G = 4;
                    "O" === N.name ? (re = k.clone(), null != S ? re.sub(S) : (S = k.clone(), U.length > G + 1 ? (re = S.clone(), se = this.atoms[U[U.length - 1 - G - 1]].coord.clone(), re.sub(se)) : re = new THREE.Vector3(Math.random(), Math.random(), Math.random()))) : this.bCalphaOnly && "CA" === N.name && (U.length > G + 1 ? (re = S.clone(), se = this.atoms[U[U.length - 1 - G - 1]].coord.clone(), re.sub(se)) : re = new THREE.Vector3(Math.random(), Math.random(), Math.random())), re.normalize(), re.multiplyScalar(u), null !== x && re.dot(x) < 0 && re.negate(), x = re;
                    for (var V = 0, W = 2 / (t - 1); V < t; ++V) {
                        var Y = W * V - 1,
                            X = new THREE.Vector3(S.x + x.x * Y, S.y + x.y * Y, S.z + x.z * Y);
                        s || "sheet" !== R || (X.smoothen = !0), h[V].push(X)
                    }
                    f.push(S), g.push(x), e.hasOwnProperty(O) ? (v.push(T), b.push(M), 0) : (v.push(0), b.push(0)), ++q
                }
                var K = S && 6 < Math.abs(_.x - S.x) || S && 6 < Math.abs(_.y - S.y) || S && 6 < Math.abs(_.z - S.z);
                if ((N.ssbegin || N.ssend || q === z - 1 || K) && 0 < h[0].length && B) {
                    var Z = "CA",
                        Q = [],
                        J = [],
                        ee = this.atoms[O].structure + "_" + this.atoms[O].chain + "_" + (this.atoms[O].resi - 1).toString();
                    Q = void 0 !== (de = this.getAtomCoordFromResi(ee, Z)) ? [de] : [];
                    var te = this.atoms[O].structure + "_" + this.atoms[O].chain + "_" + (this.atoms[O].resi + 1).toString(),
                        ie = this.getAtomCoordFromResi(te, Z);
                    void 0 !== ie && J.push(ie);
                    var ne = this.atoms[O].structure + "_" + this.atoms[O].chain + "_" + (this.atoms[O].resi + 2).toString(),
                        oe = this.getAtomCoordFromResi(ne, Z);
                    if (void 0 !== oe && J.push(oe), !K) {
                        1 === c || 2 === c ? y.push(this.hColor) : y.push(A), u = N.ssend && "sheet" === N.ss ? 0 : "coil" === R && N.ssbegin || E && N.ssbegin || "coil" === N.ss ? o : r;
                        var re, se;
                        G = 4;
                        "O" === N.name ? (re = C.clone()).sub(_) : this.bCalphaOnly && "CA" === N.name && (U.length > G ? (re = _.clone(), se = this.atoms[U[U.length - 1 - G]].coord.clone(), re.sub(se)) : re = new THREE.Vector3(Math.random(), Math.random(), Math.random())), re.normalize(), re.multiplyScalar(u), null !== x && re.dot(x) < 0 && re.negate(), x = re;
                        for (V = 0, W = 2 / (t - 1); V < t; ++V) {
                            Y = W * V - 1, X = new THREE.Vector3(_.x + x.x * Y, _.y + x.y * Y, _.z + x.z * Y);
                            s || "sheet" !== R || (X.smoothen = !0), h[V].push(X)
                        }
                        D = N.serial, f.push(_), g.push(x), e.hasOwnProperty(D) ? (v.push(N.resi), b.push(H)) : (v.push(0), b.push(0))
                    }
                    for (V = 0; !n && V < t; ++V) I ? this.createCurveSubArrow(h[V], 1, y, i, c, d, t, V, f, g, v, b, !0, Q, J) : $ && (j ? this.createCurveSub(h[V], 1, y, i, c, d, !1, v, b, void 0, Q, J) : this.createCurveSubArrow(h[V], 1, y, i, c, d, t, V, f, g, v, b, !1, Q, J));
                    if (n)
                        if (I) {
                            var ae = 0,
                                ce = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, c, t, ae, ce, f, g, v, b, !0, Q, J)
                        } else if ($)
                        if (j) this.createStrip(h[0], h[t - 1], y, i, a, c, !1, v, b, void 0, Q, J);
                        else {
                            ae = 0, ce = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, c, t, ae, ce, f, g, v, b, !0, Q, J)
                        }
                    else 2 === c && this.createStrip(h[0], h[t - 1], y, i, a, c, !1, v, b, void 0, Q, J);
                    for (p = 0; p < t; ++p) h[p] = [];
                    y = [], f = [], g = [], v = [], $ = I = !(b = [])
                }
                if (m !== N.chain && 0 < h[0].length) {
                    var de;
                    for (Z = "CA", ee = this.atoms[O].structure + "_" + this.atoms[O].chain + "_" + (this.atoms[O].resi - 1).toString(), Q = void 0 !== (de = this.getAtomCoordFromResi(ee, Z)) ? [de] : [], J = [], V = 0; !n && V < t; ++V) I ? this.createCurveSubArrow(h[V], 1, y, i, c, d, t, V, f, g, v, b, !0, Q, J) : $ && (j ? this.createCurveSub(h[V], 1, y, i, c, d, !1, v, b, void 0, Q, J) : this.createCurveSubArrow(h[V], 1, y, i, c, d, t, V, f, g, v, b, !1, Q, J));
                    if (n)
                        if (I) {
                            ae = 0, ce = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, c, t, ae, ce, f, g, v, b, !0, Q, J)
                        } else if ($)
                        if (j) this.createStrip(h[0], h[t - 1], y, i, a, c, !1, v, b, void 0, Q, J);
                        else {
                            ae = 0, ce = t - 1;
                            this.createStripArrow(h[0], h[t - 1], y, i, a, c, t, ae, ce, f, g, v, b, !1, Q, J)
                        } for (p = 0; p < t; ++p) h[p] = [];
                    y = [], f = [], g = [], v = [], $ = I = !(b = [])
                }
                m = N.chain, N.resi, R = N.ss, E = N.ssend, O = N.serial, T = N.resi, M = H, S = _, k = N.coord, A = w
            }
        }
        U = [], this.createTube(L, "CA", o, c), L = {}, h = {}
    }, iCn3D.prototype.createTubeSub = function(e, t, i, n, o, r) {
        if (!(e.length < 2)) {
            var s = this.tubeDIV,
                a = this.axisDIV,
                c = 1 / s,
                d = 1 / a,
                l = new THREE.Geometry,
                h = this.subdivide(e, t, a, void 0, void 0, o, r),
                p = h[0];
            t = h[2];
            for (var m, u = new THREE.Vector3, f = 0, g = p.length; f < g; ++f) {
                var v, b, y, _, C = (f - 1) * d;
                if (0 === f) v = i[0];
                else if (C % 1 == 0) v = i[C];
                else {
                    var w = Math.floor(C),
                        S = C - w;
                    v = i[w] * S + i[w + 1] * (1 - S)
                }
                f < g - 1 ? (b = p[f].clone().sub(p[f + 1]), y = new THREE.Vector3(0, -b.z, b.y).normalize().multiplyScalar(v), _ = b.clone().cross(y).normalize().multiplyScalar(v), u.dot(y) < 0 && (y.negate(), _.negate()), u = y, m = _) : (y = u, _ = m);
                for (var k = 0; k < s; ++k) {
                    var A = 2 * Math.PI * c * k;
                    l.vertices.push(p[f].clone().add(y.clone().multiplyScalar(Math.cos(A))).add(_.clone().multiplyScalar(Math.sin(A))))
                }
            }
            var x, R = 0;
            for (f = 0, g = p.length - 1; f < g; ++f) {
                var E = new THREE.Color(t[f]),
                    D = 0,
                    O = l.vertices[R].clone().sub(l.vertices[R + s]).lengthSq(),
                    T = l.vertices[R].clone().sub(l.vertices[R + s + 1]).lengthSq();
                T < O && (O = T, D = 1);
                for (k = 0; k < s; ++k) l.faces.push(new THREE.Face3(R + k, R + (k + D) % s + s, R + (k + 1) % s, void 0, E)), l.faces.push(new THREE.Face3(R + (k + 1) % s, R + (k + D) % s + s, R + (k + D + 1) % s + s, void 0, E));
                R += s
            }
            l.computeFaceNormals(), l.computeVertexNormals(!1), 2 === n ? x = new THREE.Mesh(l, new THREE.MeshPhongMaterial({
                transparent: !0,
                opacity: .5,
                specular: this.frac,
                shininess: 30,
                emissive: 0,
                vertexColors: THREE.FaceColors,
                side: THREE.DoubleSide
            })) : 1 === n ? (x = new THREE.Mesh(l, this.matShader)).renderOrder = this.renderOrderPicking : x = new THREE.Mesh(l, new THREE.MeshPhongMaterial({
                specular: this.frac,
                shininess: 30,
                emissive: 0,
                vertexColors: THREE.FaceColors,
                side: THREE.DoubleSide
            })), this.mdl.add(x), 1 === n || 2 === n ? this.prevHighlightObjects.push(x) : this.objects.push(x)
        }
    }, iCn3D.prototype.getAtomFromResi = function(e, t) {
        if (this.residues.hasOwnProperty(e))
            for (var i in this.residues[e])
                if (this.atoms[i].name === t && !this.atoms[i].het) return this.atoms[i]
    }, iCn3D.prototype.getAtomCoordFromResi = function(e, t) {
        var i = this.getAtomFromResi(e, t);
        if (void 0 !== i) return void 0 !== i.coord2 ? i.coord2 : i.coord
    }, iCn3D.prototype.getRadius = function(e, t) {
        return e || (0 < t.b && t.b <= 100 ? .01 * t.b : 100 < t.b ? 1 : this.coilWidth)
    }, iCn3D.prototype.getCustomtubesize = function(e) {
        var t = e.lastIndexOf("_"),
            i = e.substr(t + 1),
            n = e.substr(0, t);
        return this.queryresi2score[n].hasOwnProperty(i) ? .01 * this.queryresi2score[n][i] : this.coilWidth
    }, iCn3D.prototype.createTube = function(e, t, i, n, o) {
        var r, s, a, c, d, l = [],
            h = [],
            p = [],
            m = [],
            u = [],
            f = 0,
            g = [];
        for (var v in e)
            if ((c = e[v]).name === t && !c.het) {
                if (0 == f && (a = c), 0 < f && (r !== c.chain || 6 < Math.abs(c.coord.x - d.coord.x) || 6 < Math.abs(c.coord.y - d.coord.y) || 6 < Math.abs(c.coord.z - d.coord.z) || s + 1 !== c.resi && (3 < Math.abs(c.coord.x - d.coord.x) || 3 < Math.abs(c.coord.y - d.coord.y) || 3 < Math.abs(c.coord.z - d.coord.z)))) {
                    if (2 !== n) {
                        var b = a.structure + "_" + a.chain + "_" + (a.resi - 1).toString();
                        m = void 0 !== (S = this.getAtomCoordFromResi(b, t)) ? [S] : [];
                        var y = d.structure + "_" + d.chain + "_" + (d.resi + 1).toString(),
                            _ = d.structure + "_" + d.chain + "_" + (d.resi + 2).toString();
                        if (this.residues.hasOwnProperty(y)) {
                            var C = this.getAtomFromResi(y, t);
                            void 0 !== C && C.ssbegin && (y = d.structure + "_" + d.chain + "_" + (d.resi + 2).toString(), _ = d.structure + "_" + d.chain + "_" + (d.resi + 3).toString(), l.push(C.coord), o ? p.push(this.getCustomtubesize(y)) : p.push(this.getRadius(i, C)), h.push(C.color))
                        }
                        void 0 !== (k = this.getAtomCoordFromResi(y, t)) && u.push(k), void 0 !== (A = this.getAtomCoordFromResi(_, t)) && u.push(A), g.push({
                            pnts: l,
                            colors: h,
                            radii: p,
                            prevone: m,
                            nexttwo: u
                        })
                    }
                    l = [], h = [], p = [], m = [], u = [], a = c, f = 0
                }
                if (0 == l.length) {
                    b = c.structure + "_" + c.chain + "_" + (c.resi - 1).toString();
                    this.residues.hasOwnProperty(b) && void 0 !== (d = this.getAtomFromResi(b, t)) && d.ssend && (l.push(d.coord), o ? p.push(this.getCustomtubesize(b)) : p.push(this.getRadius(i, d)), h.push(d.color))
                }
                var w;
                l.push(c.coord), w = o ? this.getCustomtubesize(c.structure + "_" + c.chain + "_" + c.resi) : this.getRadius(i, c), p.push(w), h.push(c.color), 1 === f && (h[h.length - 2] = c.color), r = c.chain, s = c.resi;
                2 !== n || c.ssbegin || this.createBox(c, void 0, void 0, 1.2, void 0, n), ++f, d = c
            } if (2 !== n) {
            if (m = [], void 0 !== a) {
                var S;
                b = a.structure + "_" + a.chain + "_" + (a.resi - 1).toString();
                m = void 0 !== (S = this.getAtomCoordFromResi(b, t)) ? [S] : []
            }
            if (u = [], void 0 !== c) {
                var k;
                y = c.structure + "_" + c.chain + "_" + (c.resi + 1).toString();
                void 0 !== (k = this.getAtomCoordFromResi(y, t)) && u.push(k);
                var A;
                _ = c.structure + "_" + c.chain + "_" + (c.resi + 2).toString();
                void 0 !== (A = this.getAtomCoordFromResi(_, t)) && u.push(A)
            }
            g.push({
                pnts: l,
                colors: h,
                radii: p,
                prevone: m,
                nexttwo: u
            })
        }
        v = 0;
        for (var x = g.length; v < x; ++v) {
            l = g[v].pnts, h = g[v].colors, p = g[v].radii, m = g[v].prevone, u = g[v].nexttwo;
            this.createTubeSub(l, h, p, n, m, u)
        }
        g = []
    }, iCn3D.prototype.createCylinderHelix = function(e, t, i) {
        var n, o, r, s = null,
            a = {},
            c = {};
        for (r in e) {
            var d = e[r];
            d.het || (("helix" !== d.ss && "sheet" !== d.ss || d.ssend || d.ssbegin) && (a[d.serial] = d), "sheet" === d.ss && (c[d.serial] = d), "CA" === d.name && ("helix" === d.ss && d.ssend && (null !== s && n === d.chain && o < d.resi && (1 === i || 2 === i ? this.createCylinder(s.coord, d.coord, t, this.hColor, i) : this.createCylinder(s.coord, d.coord, t, d.color)), s = null), null === s && "helix" === d.ss && d.ssbegin && (n = (s = d).chain, o = d.resi)))
        }
        1 === i || 2 === i ? (0 < Object.keys(a).length && this.createTube(a, "CA", this.coilWidth, i), 0 < Object.keys(c).length && this.createStrand(c, void 0, void 0, !0, 0, this.helixSheetWidth, !1, 2 * this.ribbonthickness, i)) : (0 < Object.keys(a).length && this.createTube(a, "CA", this.coilWidth), 0 < Object.keys(c).length && this.createStrand(c, void 0, void 0, !0, 0, this.helixSheetWidth, !1, 2 * this.ribbonthickness))
    }, iCn3D.prototype.drawNucleicAcidStick = function(e, t) {
        var i, n, o, r = null,
            s = null;
        for (o in e) {
            var a = e[o];
            void 0 === a || a.het || (a.resi === n && a.chain === i || (null !== r && null !== s && this.createCylinder(new THREE.Vector3(r.coord.x, r.coord.y, r.coord.z), new THREE.Vector3(s.coord.x, s.coord.y, s.coord.z), this.cylinderRadius, r.color, t), s = r = null), "O3'" !== a.name && "O3*" !== a.name || (r = a), "  A" === a.resn || "  G" === a.resn || " DA" === a.resn || " DG" === a.resn ? "N1" === a.name && (s = a) : "N3" === a.name && (s = a), n = a.resi, i = a.chain)
        }
        null !== r && null !== s && this.createCylinder(new THREE.Vector3(r.coord.x, r.coord.y, r.coord.z), new THREE.Vector3(s.coord.x, s.coord.y, s.coord.z), this.cylinderRadius, r.color, t)
    }, iCn3D.prototype.isCalphaPhosOnly = function(e) {
        var t = !1,
            i = 0,
            n = 0;
        for (var o in e) {
            if (!(i < 50)) break;
            "CA" !== e[o].name && "P" !== e[o].name && "O3'" !== e[o].name && "O3*" !== e[o].name && ++n, ++i
        }
        return n < .5 * i && (t = !0), t
    }, iCn3D.prototype.drawCartoonNucleicAcid = function(e, t, i, n) {
        this.drawStrandNucleicAcid(e, 2, t, !0, void 0, i, n)
    }, iCn3D.prototype.drawStrandNucleicAcid = function(e, t, i, n, o, r, s) {
        var a, c, d;
        2 === s && (r = t = void 0), o = o || this.nucleicAcidWidth, i = i || this.axisDIV, t = t || this.nucleicAcidStrandDIV;
        var l = [];
        for (d = 0; d < t; d++) l[d] = [];
        var h, p, m, u = [],
            f = null;
        for (a in e) {
            var g = e[a];
            if (void 0 !== g && (("O3'" === g.name || "OP2" === g.name || "O3*" === g.name || "O2P" === g.name) && !g.het))
                if ("O3'" === g.name || "O3*" === g.name) {
                    if (h !== g.chain || p + 1 !== g.resi) {
                        if (m && f)
                            for (c = 0; c < t; c++) {
                                var v = 2 / (t - 1) * c - 1;
                                l[c].push(new THREE.Vector3(m.x + f.x * v, m.y + f.y * v, m.z + f.z * v))
                            }
                        for (n && this.createStrip(l[0], l[1], u, i, r, s), c = 0; !r && c < t; c++) this.createCurveSub(l[c], 1, u, i, s);
                        l = [];
                        for (d = 0; d < t; d++) l[d] = [];
                        u = [], f = null
                    }
                    m = new THREE.Vector3(g.coord.x, g.coord.y, g.coord.z), h = g.chain, p = g.resi, 1 === s || 2 === s ? u.push(this.hColor) : u.push(g.color)
                } else if ("OP2" === g.name || "O2P" === g.name) {
                if (!m) {
                    f = null;
                    continue
                }
                var b = new THREE.Vector3(g.coord.x, g.coord.y, g.coord.z);
                for (b.sub(m), b.normalize().multiplyScalar(o), null !== f && b.dot(f) < 0 && b.negate(), f = b, c = 0; c < t; c++) {
                    v = 2 / (t - 1) * c - 1;
                    l[c].push(new THREE.Vector3(m.x + f.x * v, m.y + f.y * v, m.z + f.z * v))
                }
                m = null
            }
        }
        if (m && f)
            for (c = 0; c < t; c++) {
                v = 2 / (t - 1) * c - 1;
                l[c].push(new THREE.Vector3(m.x + f.x * v, m.y + f.y * v, m.z + f.z * v))
            }
        for (n && this.createStrip(l[0], l[1], u, i, r, s), c = 0; !r && c < t; c++) this.createCurveSub(l[c], 1, u, i, s)
    }, iCn3D.prototype.createSingleLine = function(e, t, i, n, o) {
        var r, s = new THREE.Geometry;
        return r = n ? new THREE.LineDashedMaterial({
            linewidth: 1,
            color: i,
            dashSize: o,
            gapSize: .5 * o
        }) : new THREE.LineBasicMaterial({
            linewidth: 1,
            color: i
        }), s.vertices.push(e), s.vertices.push(t), n && s.computeLineDistances(), new THREE.LineSegments(s, r)
    }, iCn3D.prototype.createBox = function(e, t, i, n, o, r) {
        var s;
        void 0 === t && (t = .8), void 0 === i && (i = !1), void 0 === n && (n = .8), (s = r ? (void 0 === o && (o = this.hColor), new THREE.Mesh(this.boxGeometry, new THREE.MeshPhongMaterial({
            transparent: !0,
            opacity: .5,
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: o
        }))) : (void 0 === o && (o = e.color), new THREE.Mesh(this.boxGeometry, new THREE.MeshPhongMaterial({
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: o
        })))).scale.x = s.scale.y = s.scale.z = i ? t : (this.vdwRadii[e.elem.toUpperCase()] || t) * (n || 1), s.position.copy(e.coord), this.mdl.add(s), r ? this.prevHighlightObjects.push(s) : this.objects.push(s)
    }, iCn3D.prototype.makeTextSprite = function(e, t) {
        void 0 === t && (t = {});
        var i, n, o, r = t.hasOwnProperty("fontface") ? t.fontface : "Arial",
            s = t.hasOwnProperty("fontsize") ? t.fontsize : 18,
            a = t.hasOwnProperty("alpha") ? t.alpha : 1,
            c = !0,
            d = !1;
        t.hasOwnProperty("bSchematic") && t.bSchematic && (d = !0, s = 40), o = t.hasOwnProperty("backgroundColor") && void 0 !== t.backgroundColor ? (i = this.hexToRgb(t.backgroundColor, a), n = t.hasOwnProperty("borderColor") ? this.hexToRgb(t.borderColor, a) : {
            r: 0,
            g: 0,
            b: 0,
            a: 1
        }, t.hasOwnProperty("borderThickness") ? t.borderThickness : 4) : (c = !1, n = i = void 0, 0);
        var l = t.hasOwnProperty("textColor") && void 0 !== t.textColor ? this.hexToRgb(t.textColor, 1) : {
                r: 255,
                g: 255,
                b: 0,
                a: 1
            },
            h = document.createElement("canvas"),
            p = h.getContext("2d");
        p.font = "Bold " + s + "px " + r;
        var m = p.measureText(e).width,
            u = m + 2 * o,
            f = s + 2 * o;
        d && (f < u ? f = u : u = f);
        var g = 3 * this.oriMaxD / 100 * this.labelScale,
            v = .8 * m / f;
        if (h.width = u, h.height = f, p.clearRect(0, 0, u, f), c)
            if (p.fillStyle = "rgba(" + i.r + "," + i.g + "," + i.b + "," + i.a + ")", p.strokeStyle = "rgba(" + n.r + "," + n.g + "," + n.b + "," + n.a + ")", p.lineWidth = o, d) {
                var b = .35 * u;
                this.circle(p, 0, 0, u, f, b)
            } else {
                b = 0;
                this.roundRect(p, 0, 0, u, f, b)
            } p.font = "Bold " + s + "px " + r, p.textAlign = "center", p.textBaseline = "middle", p.fillStyle = "rgba(" + l.r + ", " + l.g + ", " + l.b + ", 1.0)", p.strokeStyle = "rgba(" + l.r + ", " + l.g + ", " + l.b + ", 1.0)", p.fillText(e, .5 * u, .5 * f);
        var y = new THREE.Texture(h),
            _ = (y.needsUpdate = !0, new THREE.SpriteMaterial({
                map: y,
                depthTest: !1,
                depthWrite: !1
            }));
        _.map.minFilter = THREE.LinearFilter;
        var C = new THREE.Sprite(_);
        return d ? C.scale.set(g, g, 1) : C.scale.set(v * g, g, 1), C
    }, iCn3D.prototype.roundRect = function(e, t, i, n, o, r) {
        e.beginPath(), e.moveTo(t + r, i), e.lineTo(t + n - r, i), e.quadraticCurveTo(t + n, i, t + n, i + r), e.lineTo(t + n, i + o - r), e.quadraticCurveTo(t + n, i + o, t + n - r, i + o), e.lineTo(t + r, i + o), e.quadraticCurveTo(t, i + o, t, i + o - r), e.lineTo(t, i + r), e.quadraticCurveTo(t, i, t + r, i), e.closePath(), e.fill(), e.stroke()
    }, iCn3D.prototype.circle = function(e, t, i, n, o, r) {
        e.beginPath(), e.arc(t + n / 2, i + o / 2, r, 0, 2 * Math.PI, !0), e.closePath(), e.fill(), e.stroke()
    }, iCn3D.prototype.createLabelRepresentation = function(e) {
        for (var t in e)
            for (var i = void 0 !== e[t] ? e[t] : [], n = 0, o = i.length; n < o; ++n) {
                var r = i[n];
                0 == r.size && (r.size = void 0), 0 == r.color && (r.color = void 0), 0 == r.background && (r.background = void 0);
                var s, a = void 0 !== r.size ? r.size : this.LABELSIZE,
                    c = void 0 !== r.color ? r.color : "#ffff00",
                    d = void 0 !== r.background ? r.background : "#cccccc",
                    l = void 0 !== r.alpha ? r.alpha : 1;
                d = r.background, void 0 !== c && void 0 !== d && c.toLowerCase() === d.toLowerCase() && (c = "#888888"), (s = void 0 !== r.bSchematic && r.bSchematic || 1 === r.text.length ? this.makeTextSprite(r.text, {
                    fontsize: parseInt(a),
                    textColor: c,
                    borderColor: d,
                    backgroundColor: d,
                    alpha: l,
                    bSchematic: 1
                }) : this.makeTextSprite(r.text, {
                    fontsize: parseInt(a),
                    textColor: c,
                    borderColor: d,
                    backgroundColor: d,
                    alpha: l,
                    bSchematic: 0
                })).position.set(r.position.x, r.position.y, r.position.z), this.mdl.add(s)
            }
    }, iCn3D.prototype.setAtmClr = function(e, t) {
        for (var i in e) {
            var n = this.atoms[i];
            n.color = (new THREE.Color).setHex(t), this.atomPrevColors[i] = n.color
        }
    }, iCn3D.prototype.updateChainsColor = function(e) {
        var t = e.structure + "_" + e.chain;
        void 0 !== this.chainsColor[t] && (this.chainsColor[t] = e.color)
    }, iCn3D.prototype.setMmdbChainColor = function(e) {
        var t, i = void 0 === e ? this.hAtoms : e;
        for (var n in this.applyOriginalColor(this.hash2Atoms(i)), t = this.unionHash(t, this.chemicals), t = this.unionHash(t, this.ions)) {
            var o = this.atoms[n];
            o.color = this.atomColors[o.elem] || this.defaultAtomColor, this.atomPrevColors[n] = o.color
        }
    }, iCn3D.prototype.setConservationColor = function(e, t) {
        for (var i in this.setMmdbChainColor(e), this.alnChainsSeq)
            for (var n = this.alnChainsSeq[i], o = 0, r = n.length; o < r; ++o) {
                var s = i + "_" + n[o].resi;
                for (var a in this.residues[s])
                    if (e.hasOwnProperty(a)) {
                        var c = t ? new THREE.Color(n[o].color) : new THREE.Color(n[o].color2);
                        this.atoms[a].color = c, this.atomPrevColors[a] = c
                    }
            }
    }, iCn3D.prototype.setColorByOptions = function(e, t, i) {
        if (void 0 !== e)
            if (i)
                for (var n in t) {
                    var o = this.atoms[n];
                    this.atomPrevColors[n] = o.color
                } else if (0 === e.color.indexOf("#"))
                    for (var n in t) {
                        (o = this.atoms[n]).color = (new THREE.Color).setStyle(e.color.toLowerCase()), this.atomPrevColors[n] = o.color
                    } else switch (e.color.toLowerCase()) {
                        case "spectrum":
                            var r = 0,
                                a = 0;
                            for (var n in t) {
                                (o = this.atoms[n]).het || ++a
                            }
                            var c = 1 < a ? 1 / (a - 1) : 1;
                            for (var n in t) {
                                (o = this.atoms[n]).color = o.het ? this.atomColors[o.elem] || this.defaultAtomColor : (new THREE.Color).setHSL(.75 * (1 - r++ * c), 1, .45), this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "chain":
                            if (void 0 !== this.chainsColor && 0 < Object.keys(this.chainsColor).length) this.setMmdbChainColor();
                            else {
                                var d = -1,
                                    l = "",
                                    h = this.stdChainColors.length;
                                for (var n in t) {
                                    (o = this.atoms[n]).chain != l && (++d, d %= h), o.het ? o.color = this.atomColors[o.elem] : (o.color = this.stdChainColors[d], 0 < Object.keys(this.chainsColor).length && this.updateChainsColor(o)), this.atomPrevColors[n] = o.color, l = o.chain
                                }
                            }
                            break;
                        case "domain":
                            r = 0, a = 0;
                            for (var p = Object.keys(this.tddomains), m = (c = 1 < (a = p.length) ? 1 / (a - 1) : 1, n = 0, p.length); n < m; ++n) {
                                var u = (new THREE.Color).setHSL(.75 * (1 - r++ * c), 1, .45);
                                for (var f in this.tddomains[p[n]])
                                    for (var g in this.residues[f]) {
                                        (o = this.atoms[g]).color = u, this.atomPrevColors[g] = o.color
                                    }
                            }
                            break;
                        case "secondary structure green":
                            for (var n in this.sheetcolor = "green", t) {
                                (o = this.atoms[n]).color = o.het ? this.atomColors[o.elem] || this.defaultAtomColor : this.ssColors[o.ss] || new THREE.Color(16711935), this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "secondary structure yellow":
                        case "secondary structure":
                            for (var n in this.sheetcolor = "yellow", t) {
                                (o = this.atoms[n]).color = o.het ? this.atomColors[o.elem] || this.defaultAtomColor : this.ssColors2[o.ss] || new THREE.Color(16711935), this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "secondary structure spectrum":
                            r = 0, a = 0;
                            var v, b, y = [],
                                _ = [],
                                C = -9999;
                            for (var n in t)
                                if (this.proteins.hasOwnProperty(n)) {
                                    o = this.atoms[n]; - 9999 == C && (v = parseInt(n)), -9999 != C && (o.ss != b.ss || 1 < Math.abs(o.resi - b.resi) || o.ssbegin && b.ssend) && ("coil" == b.ss ? _.push([v, C]) : y.push([v, C]), v = n), C = parseInt(n), b = o
                                }
                            "coil" == b.ss ? _.push([v, C]) : y.push([v, C]);
                            for (c = 1 < (a = y.length) ? 1 / (a - 1) : 1, n = 0, m = y.length; n < m; ++n)
                                for (u = (new THREE.Color).setHSL(.75 * (1 - r++ * c), 1, .45), g = y[n][0]; g <= y[n][1]; ++g) {
                                    (o = this.atoms[g]).color = u, this.atomPrevColors[g] = o.color
                                }
                            for (u = this.ssColors2.coil, n = 0, m = _.length; n < m; ++n)
                                for (g = _[n][0]; g <= _[n][1]; ++g) {
                                    (o = this.atoms[g]).color = u, this.atomPrevColors[g] = o.color
                                }
                            break;
                        case "residue":
                            for (var n in t) {
                                (o = this.atoms[n]).color = o.het ? this.atomColors[o.elem] || this.defaultAtomColor : this.residueColors[o.resn] || this.defaultResidueColor, this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "residue custom":
                            for (var n in t) {
                                (o = this.atoms[n]).color = o.het ? this.atomColors[o.elem] || this.defaultAtomColor : this.customResidueColors[o.resn] || this.defaultResidueColor, this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "align custom":
                            var w = 50;
                            for (var g in t) {
                                var S = this.atoms[g].structure + "_" + this.atoms[g].chain;
                                if (void 0 !== this.queryresi2score && this.queryresi2score.hasOwnProperty(S)) {
                                    var k = this.atoms[g].resi;
                                    if (this.queryresi2score[S].hasOwnProperty(k)) 100 < (O = this.queryresi2score[S][k]) && (O = 100), u = O < w ? (new THREE.Color).setRGB(1 - (s = .02 * (w - O)), 1 - s, 1) : (new THREE.Color).setRGB(1, 1 - (s = .02 * (O - w)), 1 - s);
                                    else u = this.defaultAtomColor;
                                    this.atoms[g].color = u, this.atomPrevColors[g] = u
                                }
                            }
                            break;
                        case "charge":
                            for (var n in t) {
                                (o = this.atoms[n]).color = o.het ? this.defaultAtomColor : this.chargeColors[o.resn] || this.defaultResidueColor, this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "hydrophobic":
                            for (var n in t) {
                                (o = this.atoms[n]).color = o.het ? this.defaultAtomColor : this.hydrophobicColors[o.resn] || this.defaultResidueColor, this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "atom":
                            for (var n in t) {
                                (o = this.atoms[n]).color = this.atomColors[o.elem] || this.defaultAtomColor, this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "b factor":
                            for (var n in this.middB = 50, this.spanBinv1 = .02, this.spanBinv2 = .02, t) {
                                if (void 0 === (o = this.atoms[n]).b || 0 == parseInt(1e3 * o.b)) o.color = (new THREE.Color).setRGB(0, 1, 0);
                                else 100 < (O = o.b) && (O = 100), o.color = O < this.middB ? (new THREE.Color).setRGB(1 - (s = (this.middB - O) * this.spanBinv1), 1 - s, 1) : (new THREE.Color).setRGB(1, 1 - (s = (O - this.middB) * this.spanBinv2), 1 - s);
                                this.bOpm && "DUM" == o.resn && (o.color = this.atomColors[o.elem]), this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "b factor percentile":
                            var A = 1e3,
                                x = -1e3;
                            if (!this.bfactorArray) {
                                for (var n in this.bfactorArray = [], this.atoms) {
                                    A > (o = this.atoms[n]).b && (A = o.b), x < o.b && (x = o.b), this.bfactorArray.push(o.b)
                                }
                                this.bfactorArray.sort(function(e, t) {
                                    return e - t
                                })
                            }
                            var R = this.bfactorArray.length;
                            for (var n in t) {
                                if (void 0 === (o = this.atoms[n]).b || 0 == parseInt(1e3 * o.b) || 0 == this.bfactorArray.length) o.color = (new THREE.Color).setRGB(0, 1, 0);
                                else {
                                    var E = this.bfactorArray.indexOf(o.b) / R;
                                    o.color = E < .5 ? (new THREE.Color).setRGB(2 * E, 2 * E, 1) : (new THREE.Color).setRGB(1, 2 * (1 - E), 2 * (1 - E))
                                }
                                this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "area":
                            if (void 0 === this.resid2area) {
                                var D = this.cloneHash(this.hAtoms);
                                this.hAtoms = this.cloneHash(this.atoms), this.bCalcArea = !0, this.opts.surface = "solvent accessible surface", this.applySurfaceOptions(), this.bCalcArea = !1, this.hAtoms = this.cloneHash(D)
                            }
                            w = void 0 !== this.midpercent ? this.midpercent : 35;
                            for (var n in this.spanBinv1 = .02, this.spanBinv2 = .02, t) {
                                var O;
                                f = (o = this.atoms[n]).structure + "_" + o.chain + "_" + o.resi + "_" + o.resn;
                                100 < (O = this.residueArea.hasOwnProperty(o.resn) ? this.resid2area[f] / this.residueArea[o.resn] * 100 : w) && (O = 100), o.color = O < w ? (new THREE.Color).setRGB(1 - (s = (w - O) * this.spanBinv1), 1 - s, 1) : (new THREE.Color).setRGB(1, 1 - (s = (O - w) * this.spanBinv2), 1 - s), this.bOpm && "DUM" == o.resn && (o.color = this.atomColors[o.elem]), this.atomPrevColors[n] = o.color
                            }
                            break;
                        case "identity":
                        case "conserved":
                            this.setConservationColor(t, !0);
                            break;
                        case "conservation":
                            this.setConservationColor(t, !1);
                            break;
                        case "white":
                            this.setAtmClr(t, 16777215);
                            break;
                        case "grey":
                            this.setAtmClr(t, 8947848);
                            break;
                        case "red":
                            this.setAtmClr(t, 16711680);
                            break;
                        case "green":
                            this.setAtmClr(t, 65280);
                            break;
                        case "blue":
                            this.setAtmClr(t, 255);
                            break;
                        case "magenta":
                            this.setAtmClr(t, 16711935);
                            break;
                        case "yellow":
                            this.setAtmClr(t, 16776960);
                            break;
                        case "cyan":
                            this.setAtmClr(t, 65535);
                            break;
                        case "custom":
                            break;
                        default:
                            for (var n in t) {
                                (o = this.atoms[n]).color = (new THREE.Color).setStyle("#" + e.color.toLowerCase()), this.atomPrevColors[n] = o.color
                            }
                    }
    }, iCn3D.prototype.applyDisplayOptions = function(e, t, i) {
        void 0 === e && (e = this.opts);
        var n = {},
            o = {},
            r = {};
        if (1 === i && Object.keys(t).length < Object.keys(this.atoms).length) {
            for (var s in r = this.hash2Atoms(t), n = this.getResiduesFromAtoms(t)) {
                var a = (u = s).lastIndexOf("_"),
                    c = s.substr(0, a + 1),
                    d = parseInt(s.substr(a + 1)),
                    l = c + (d - 1).toString(),
                    h = c + (d + 1).toString();
                n.hasOwnProperty(l) || n.hasOwnProperty(l) || (o[s] = 1)
            }
            if (1 === Object.keys(r).length && 1 < Object.keys(this.residues[u]).length && "sphere" !== r[Object.keys(r)[0]].style && "dot" !== r[Object.keys(r)[0]].style) {
                if (void 0 === this.bCid || !this.bCid)
                    for (var s in r) {
                        var p = r[s],
                            m = 1;
                        this.createBox(p, void 0, void 0, m, void 0, i)
                    }
            } else
                for (var u in o) {
                    var f = this.getFirstCalphaAtomObj(this.residues[u]);
                    l = (p = f).structure + "_" + p.chain + "_" + parseInt(p.resi - 1), h = p.structure + "_" + p.chain + "_" + parseInt(p.resi + 1);
                    if ("cylinder and plate" === p.style && "helix" === p.ss)
                        for (var s in this.residues[u]) {
                            p = this.atoms[s], m = 1;
                            this.createBox(p, void 0, void 0, m, void 0, i)
                        } else if ("ribbon" === p.style && "coil" === p.ss || "strand" === p.style && "coil" === p.ss || "o3 trace" === p.style || "schematic" === p.style || "c alpha trace" === p.style || "b factor tube" === p.style || "cylinder and plate" === p.style && "helix" !== p.ss) {
                            if (void 0 !== f && void 0 !== f.style2 && "nothing" !== f.style2) continue;
                            if (!(y = !1) && this.residues.hasOwnProperty(h)) {
                                var g = Object.keys(this.residues[h])[0],
                                    v = this.hash2Atoms(this.residues[h])[g];
                                if (p.style === v.style && !v.ssbegin || v.ssbegin) {
                                    var b = this.residues[h];
                                    if (t = this.unionHash(t, b), y = !0, v.ssbegin)
                                        for (var s in b) this.atoms[s].notshow = !0
                                }
                            }
                            if (!y && this.residues.hasOwnProperty(l)) {
                                g = Object.keys(this.residues[l])[0], v = this.hash2Atoms(this.residues[l])[g];
                                p.style === v.style && (t = this.unionHash(t, this.residues[l]), y = !0)
                            }
                        } else if ("ribbon" === p.style && "coil" !== p.ss && p.ssend || "strand" === p.style && "coil" !== p.ss && p.ssend) {
                        if (void 0 !== f && void 0 !== f.style2 && "nothing" !== f.style2) continue;
                        var y;
                        if (!(y = !1) && this.residues.hasOwnProperty(h)) {
                            g = Object.keys(this.residues[h])[0], v = this.hash2Atoms(this.residues[h])[g];
                            t = this.unionHash(t, this.residues[h]), y = !0
                        }
                    }
                }
            r = {}
        }
        this.setStyle2Atoms(t), this.bAllAtoms = !1, t && void 0 !== t && (this.bAllAtoms = Object.keys(t).length === Object.keys(this.atoms).length);
        var _ = .5 * this.cylinderRadius;
        void 0 !== this.labels && delete this.labels.schematic;
        var C = !1;
        if (i) {
            var w = this.getResiduesFromCalphaAtoms(this.hAtoms),
                S = this.intHash(this.hAtoms, this.proteins);
            n = this.getResiduesFromAtoms(S);
            Object.keys(n) > Object.keys(w) && (C = !0)
        }
        for (var k in this.style2atoms) {
            var A = this.style2atoms[k],
                x = this.isCalphaPhosOnly(this.hash2Atoms(A));
            if ("ribbon" !== k || i && (!i || C))
                if ("strand" !== k || i && (!i || C))
                    if ("cylinder and plate" !== k || i && (!i || C))
                        if ("nucleotide cartoon" === k) x ? this.createCylinderCurve(this.hash2Atoms(A), ["P"], this.traceRadius, !1, i) : (this.drawCartoonNucleicAcid(this.hash2Atoms(A), null, this.ribbonthickness, i), 2 !== i && this.drawNucleicAcidStick(this.hash2Atoms(A), i));
                        else if ("o3 trace" === k) x ? this.createCylinderCurve(this.hash2Atoms(A), ["P"], this.traceRadius, !1, i) : this.createCylinderCurve(this.hash2Atoms(A), ["O3'", "O3*"], this.traceRadius, !1, i);
            else if ("schematic" === k) {
                var R = this.getFirstAtomObj(A);
                this.chemicals.hasOwnProperty(R.serial) ? (this.addNonCarbonAtomLabels(this.hash2Atoms(A)), bSchematic = !0, this.createStickRepresentation(this.hash2Atoms(A), _, _, void 0, i, bSchematic)) : (this.addResiudeLabels(this.hash2Atoms(A), !0), x ? this.createCylinderCurve(this.hash2Atoms(A), ["P"], this.traceRadius, !1, i) : this.createCylinderCurve(this.hash2Atoms(A), ["O3'", "O3*"], this.traceRadius, !1, i), this.createCylinderCurve(this.hash2Atoms(A), ["CA"], this.traceRadius, !1, i))
            } else if ("c alpha trace" === k) this.createCylinderCurve(this.hash2Atoms(A), ["CA"], this.traceRadius, !1, i);
            else if ("b factor tube" === k) this.createTube(this.hash2Atoms(A), "CA", null, i);
            else if ("custom tube" === k) this.createTube(this.hash2Atoms(A), "CA", null, i, !0);
            else if ("lines" === k) 1 === i ? this.createStickRepresentation(this.hash2Atoms(A), this.hlLineRadius, this.hlLineRadius, void 0, i) : this.createLineRepresentation(this.hash2Atoms(A), i), this.createConnCalphSidechain(this.hash2Atoms(A), k);
            else if ("stick" === k) this.createStickRepresentation(this.hash2Atoms(A), this.cylinderRadius, this.cylinderRadius, void 0, i, void 0), this.createConnCalphSidechain(this.hash2Atoms(A), k);
            else if ("backbone" === k) {
                A = this.selectMainChainSubset(A);
                this.createStickRepresentation(this.hash2Atoms(A), this.cylinderRadius, this.cylinderRadius, void 0, i, void 0)
            } else "ball and stick" === k ? (this.createStickRepresentation(this.hash2Atoms(A), this.cylinderRadius, .5 * this.cylinderRadius, this.dotSphereScale, i, void 0), this.createConnCalphSidechain(this.hash2Atoms(A), k)) : "sphere" === k ? this.createSphereRepresentation(this.hash2Atoms(A), this.sphereRadius, void 0, void 0, i) : "dot" === k && this.createSphereRepresentation(this.hash2Atoms(A), this.sphereRadius, !1, this.dotSphereScale, i);
            else this.createCylinderHelix(this.hash2Atoms(A), this.cylinderHelixRadius, i);
            else this.createStrand(this.hash2Atoms(A), null, null, null, null, null, !1, void 0, i);
            else this.createStrand(this.hash2Atoms(A), 2, void 0, !0, void 0, void 0, !1, this.ribbonthickness, i)
        }
        this.cnt > this.maxmaxatomcnt && this.init_base(), void 0 !== this.labels && 0 < Object.keys(this.labels).length && (this.hideLabels(), this.createLabelRepresentation(this.labels))
    }, iCn3D.prototype.hideLabels = function() {
        if (void 0 !== this.mdl)
            for (var e = 0, t = this.mdl.children.length; e < t; ++e) {
                var i = this.mdl.children[e];
                void 0 !== i && "Sprite" === i.type && this.mdl.remove(i)
            }
    }, iCn3D.prototype.setStyle2Atoms = function(e) {
        for (var t in this.style2atoms = {}, e) void 0 === this.style2atoms[this.atoms[t].style] && (this.style2atoms[this.atoms[t].style] = {}), this.style2atoms[this.atoms[t].style][t] = 1, void 0 !== this.atoms[t].style2 && "nothing" !== this.atoms[t].style2 && (void 0 === this.style2atoms[this.atoms[t].style2] && (this.style2atoms[this.atoms[t].style2] = {}), this.style2atoms[this.atoms[t].style2][t] = 1)
    }, iCn3D.prototype.setAtomStyleByOptions = function(e) {
        if (void 0 === e && (e = this.opts), void 0 !== e.proteins)
            for (var t in this.intHash(this.hAtoms, this.proteins)) this.atoms[t].style = e.proteins.toLowerCase();
        if (void 0 !== e.sidec && "nothing" !== e.sidec)
            for (var t in this.intHash(this.hAtoms, this.sidec)) this.atoms[t].style2 = e.sidec.toLowerCase();
        if (void 0 !== e.chemicals)
            for (var t in this.intHash(this.hAtoms, this.chemicals)) this.atoms[t].style = e.chemicals.toLowerCase();
        if (void 0 !== e.ions)
            for (var t in this.intHash(this.hAtoms, this.ions)) this.atoms[t].style = e.ions.toLowerCase();
        if (void 0 !== e.water)
            for (var t in this.intHash(this.hAtoms, this.water)) this.atoms[t].style = e.water.toLowerCase();
        if (void 0 !== e.nucleotides)
            for (var t in this.intHash(this.hAtoms, this.nucleotides)) this.atoms[t].style = e.nucleotides.toLowerCase()
    }, iCn3D.prototype.rebuildSceneBase = function(e) {
        if (jQuery.extend(this.opts, e), this.cam_z = 2 * this.maxD, void 0 !== this.scene)
            for (var t = this.scene.children.length - 1; 0 <= t; t--) {
                var i = this.scene.children[t];
                this.scene.remove(i)
            } else this.scene = new THREE.Scene;
        if (void 0 !== this.scene_ghost)
            for (t = this.scene_ghost.children.length - 1; 0 <= t; t--) {
                i = this.scene_ghost.children[t];
                this.scene_ghost.remove(i)
            } else this.scene_ghost = new THREE.Scene;
        this.directionalLight = new THREE.DirectionalLight(16777215, 1), 0 < this.cam_z ? this.directionalLight.position.set(0, 0, 1) : this.directionalLight.position.set(0, 0, -1);
        var n = new THREE.AmbientLight(4210752);
        this.scene.add(this.directionalLight), this.scene.add(n), this.mdl = new THREE.Object3D, this.mdlImpostor = new THREE.Object3D, this.scene.add(this.mdl), this.scene.add(this.mdlImpostor), this.mdl_ghost = new THREE.Object3D, this.scene_ghost.add(this.mdl_ghost), this.objects = [], this.objects_ghost = [], this.raycaster = new THREE.Raycaster, this.projector = new THREE.Projector, this.mouse = new THREE.Vector2;
        var o = this.backgroundColors[this.opts.background.toLowerCase()];
        "transparent" === this.opts.background.toLowerCase() ? this.renderer.setClearColor(o, 0) : this.renderer.setClearColor(o, 1), this.perspectiveCamera = new THREE.PerspectiveCamera(20, this.container.whratio, .1, 1e4), this.perspectiveCamera.position.set(0, 0, this.cam_z), this.perspectiveCamera.lookAt(new THREE.Vector3(0, 0, 0)), this.orthographicCamera = new THREE.OrthographicCamera, this.orthographicCamera.position.set(0, 0, this.cam_z), this.orthographicCamera.lookAt(new THREE.Vector3(0, 0, 0)), this.cams = {
            perspective: this.perspectiveCamera,
            orthographic: this.orthographicCamera
        }
    }, iCn3D.prototype.setCamera = function() {
        if (this.bControlGl) {
            window.cam = this.cams[this.opts.camera.toLowerCase()];
            var e = this.maxD;
            if (window.cam === this.perspectiveCamera)(t = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt) ? window.camMaxDFactor = 1 : void 0 !== window.camMaxDFactorFog ? window.camMaxDFactor = window.camMaxDFactorFog : window.camMaxDFactor = 2, 0 < window.cam_z ? window.cam.position.z = e * window.camMaxDFactor : window.cam.position.z = -e * window.camMaxDFactor, "yes" === this.opts.slab ? t ? window.cam.near = .1 : void 0 !== window.camMaxDFactorFog ? window.cam.near = e * window.camMaxDFactorFog - 10 : window.cam.near = e * window.camMaxDFactor : window.cam.near = .1, window.cam.far = 1e4, this.bControlGl ? window.controls = new THREE.TrackballControls(window.cam, void 0, void 0) : this.controls = new THREE.TrackballControls(this.cam, document.getElementById(this.id), this);
            else window.cam === this.orthographicCamera && (void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > 10 * this.maxatomcnt ? window.cam.right = this.maxD / 2 * 1.5 : window.cam.right = this.maxD / 2 * 2.5, window.cam.left = -window.cam.right, window.cam.top = window.cam.right / this.container.whratio, window.cam.bottom = -window.cam.right / this.container.whratio, "yes" === this.opts.slab ? window.cam.near = 2 * this.maxD : window.cam.near = 0, window.cam.far = 1e4, this.bControlGl ? window.controls = new THREE.OrthographicTrackballControls(window.cam, void 0, void 0) : this.controls = new THREE.OrthographicTrackballControls(this.cam, document.getElementById(this.id), this));
            window.cam.updateProjectionMatrix()
        }
        this.cam = this.cams[this.opts.camera.toLowerCase()];
        var t;
        e = this.maxD;
        this.cam === this.perspectiveCamera ? ((t = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt) ? this.camMaxDFactor = 1 : void 0 !== this.camMaxDFactorFog ? this.camMaxDFactor = this.camMaxDFactorFog : this.camMaxDFactor = 2, 0 < this.cam_z ? this.cam.position.z = e * this.camMaxDFactor : this.cam.position.z = -e * this.camMaxDFactor, "yes" === this.opts.slab ? t ? this.cam.near = .1 : void 0 !== this.camMaxDFactorFog ? this.cam.near = e * this.camMaxDFactorFog - 10 : this.cam.near = e * this.camMaxDFactor : this.cam.near = .1, this.cam.far = 1e4, this.bControlGl ? window.controls = new THREE.TrackballControls(this.cam, void 0, void 0) : this.controls = new THREE.TrackballControls(this.cam, document.getElementById(this.id), this)) : this.cam === this.orthographicCamera && (void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > 10 * this.maxatomcnt ? this.cam.right = this.maxD / 2 * 1.5 : this.cam.right = this.maxD / 2 * 2.5, this.cam.left = -this.cam.right, this.cam.top = this.cam.right / this.container.whratio, this.cam.bottom = -this.cam.right / this.container.whratio, "yes" === this.opts.slab ? this.cam.near = 2 * this.maxD : this.cam.near = 0, this.cam.far = 1e4, this.bControlGl ? window.controls = new THREE.OrthographicTrackballControls(this.cam, void 0, void 0) : this.controls = new THREE.OrthographicTrackballControls(this.cam, document.getElementById(this.id), this));
        this.cam.updateProjectionMatrix()
    }, iCn3D.prototype.render = function() {
        this.bControlGl ? (this.directionalLight && this.directionalLight.position.copy(window.cam.position), this.renderer.gammaInput = !0, this.renderer.gammaOutput = !0, this.renderer.setPixelRatio(window.devicePixelRatio), this.scene && this.renderer.render(this.scene, window.cam)) : (this.directionalLight && this.directionalLight.position.copy(this.cam.position), this.renderer.gammaInput = !0, this.renderer.gammaOutput = !0, this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.render(this.scene, this.cam))
    }, iCn3D.prototype.clearImpostors = function() {
        this.posArray = [], this.colorArray = [], this.pos2Array = [], this.color2Array = [], this.radiusArray = [], this.posArraySphere = [], this.colorArraySphere = [], this.radiusArraySphere = []
    }, iCn3D.prototype.applyTransformation = function(e, t, i) {
        var n = {
            update: !1
        };
        n._zoomFactor = e, n.mouseChange = new THREE.Vector2, n.mouseChange.copy(t), n.quaternion = new THREE.Quaternion, n.quaternion.copy(i), this.bControlGl ? window.controls.update(n) : this.controls.update(n)
    }, iCn3D.prototype.applyCenterOptions = function(e) {
        switch (void 0 === e && (e = this.opts), e.rotationcenter.toLowerCase()) {
            case "molecule center":
                void 0 !== this.center && this.setRotationCenter(this.center);
                break;
            case "pick center":
                void 0 !== this.pAtom && this.setRotationCenter(this.pAtom.coord);
                break;
            case "display center":
                var t = this.centerAtoms(this.dAtoms).center;
                this.setRotationCenter(t);
                break;
            case "highlight center":
                t = this.centerAtoms(this.hAtoms).center;
                this.setRotationCenter(t)
        }
    }, iCn3D.prototype.setRotationCenter = function(e) {
        this.setCenter(e)
    }, iCn3D.prototype.applyOriginalColor = function(e) {
        for (var t in void 0 === e && (e = this.atoms), e) {
            var i = e[t],
                n = i.structure + "_" + i.chain;
            this.chainsColor.hasOwnProperty(n) ? i.color = this.chainsColor[n] : i.color = this.atomColors[i.elem], this.atomPrevColors[t] = i.color
        }
    }, iCn3D.prototype.onBeforeRender = function(e, t, i, n, o) {
        var r = o.uniforms,
            s = [];
        if (r.objectId && (r.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255, s.push("objectId")), (r.modelViewMatrixInverse || r.modelViewMatrixInverseTranspose || r.modelViewProjectionMatrix || r.modelViewProjectionMatrixInverse) && this.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, this.matrixWorld), r.modelViewMatrixInverse && (r.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix), s.push("modelViewMatrixInverse")), r.modelViewMatrixInverseTranspose && (r.modelViewMatrixInverse ? r.modelViewMatrixInverseTranspose.value.copy(r.modelViewMatrixInverse.value).transpose() : r.modelViewMatrixInverseTranspose.value.getInverse(this.modelViewMatrix).transpose(), s.push("modelViewMatrixInverseTranspose")), r.modelViewProjectionMatrix && (i.updateProjectionMatrix(), r.modelViewProjectionMatrix.value.multiplyMatrices(i.projectionMatrix, this.modelViewMatrix), s.push("modelViewProjectionMatrix")), r.modelViewProjectionMatrixInverse) {
            var a = new THREE.Matrix4;
            r.modelViewProjectionMatrix ? a.copy(r.modelViewProjectionMatrix.value) : (i.updateProjectionMatrix(), a.multiplyMatrices(i.projectionMatrix, this.modelViewMatrix)), r.modelViewProjectionMatrixInverse.value.getInverse(a), s.push("modelViewProjectionMatrixInverse")
        }
        if (r.projectionMatrix && (i.updateProjectionMatrix(), r.projectionMatrix.value.copy(i.projectionMatrix), s.push("projectionMatrix")), r.projectionMatrixInverse && (i.updateProjectionMatrix(), r.projectionMatrixInverse.value.getInverse(i.projectionMatrix), s.push("projectionMatrixInverse")), s.length) {
            var c = e.properties.get(o);
            if (c.program) {
                var d = e.getContext(),
                    l = c.program;
                d.useProgram(l.program);
                var h = l.getUniforms();
                s.forEach(function(e) {
                    h.setValue(d, e, r[e].value)
                })
            }
        }
    }, iCn3D.prototype.setParametersForShader = function(e) {
        var t, i = this.backgroundColors[this.opts.background.toLowerCase()],
            n = 2.5 * this.maxD,
            o = 4 * this.maxD,
            r = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt;
        "yes" === this.opts.slab ? r ? t = .1 : void 0 !== this.camMaxDFactorFog ? (t = this.maxD * this.camMaxDFactorFog - 10, n = 2.5 * this.maxD - t < 0 ? 0 : 2.5 * this.maxD - t, o = 4 * this.maxD - t) : t = this.maxD * this.camMaxDFactor : t = .1;
        var s = void 0 !== e ? e : 1;
        this.uniforms = THREE.UniformsUtils.merge([THREE.UniformsLib.common, {
            modelViewMatrix: {
                value: new THREE.Matrix4
            },
            modelViewMatrixInverse: {
                value: new THREE.Matrix4
            },
            modelViewMatrixInverseTranspose: {
                value: new THREE.Matrix4
            },
            modelViewProjectionMatrix: {
                value: new THREE.Matrix4
            },
            modelViewProjectionMatrixInverse: {
                value: new THREE.Matrix4
            },
            projectionMatrix: {
                value: new THREE.Matrix4
            },
            projectionMatrixInverse: {
                value: new THREE.Matrix4
            },
            diffuse: {
                type: "v3",
                value: [1, 1, 1]
            },
            emissive: {
                type: "v3",
                value: [0, 0, 0]
            },
            roughness: {
                type: "f",
                value: .5
            },
            metalness: {
                type: "f",
                value: .3
            },
            opacity: {
                type: "f",
                value: s
            },
            nearClip: {
                type: "f",
                value: t
            },
            ortho: {
                type: "f",
                value: 0
            },
            shrink: {
                type: "f",
                value: .13
            },
            fogColor: {
                type: "v3",
                value: [i.r, i.g, i.b]
            },
            fogNear: {
                type: "f",
                value: n
            },
            fogFar: {
                type: "f",
                value: o
            },
            fogDensity: {
                type: "f",
                value: 2
            }
        }, THREE.UniformsLib.ambient, THREE.UniformsLib.lights]), this.defines = {
            USE_COLOR: 1,
            NEAR_CLIP: 1,
            CAP: 1
        }, "yes" !== this.opts.fog || r || (this.defines.USE_FOG = 1, "orthographic" === this.opts.camera && (this.defines.FOG_EXP2 = 1)), this.bExtFragDepth && (this.defines.USE_LOGDEPTHBUF_EXT = 1)
    }, iCn3D.prototype.drawImpostorShader = function() {
        this.setParametersForShader(), this.createImpostorShaderSphere("SphereImpostor"), this.createImpostorShaderCylinder("CylinderImpostor")
    }, iCn3D.prototype.getShader = function(e) {
        var t = $NGL_shaderTextHash[e];
        return t = t.replace(/#include\s+(\S+)/gim, function(e, t) {
            var i;
            return THREE.ShaderChunk.hasOwnProperty(t) && (i = THREE.ShaderChunk[t]), i || ""
        })
    }, iCn3D.prototype.createImpostorShaderBase = function(e, t, i, n, o, r, s, a, c) {
        var d = new THREE.ShaderMaterial({
            defines: this.defines,
            uniforms: this.uniforms,
            vertexShader: this.getShader(e + ".vert"),
            fragmentShader: this.getShader(e + ".frag"),
            depthTest: !0,
            depthWrite: !0,
            needsUpdate: !0,
            lights: !0
        });
        d.extensions.fragDepth = !0, "CylinderImpostor" == e ? this.CylinderImpostorMaterial = d : "SphereImpostor" == e && (this.SphereImpostorMaterial = d);
        for (var l, h, p = r * s, m = r * a, u = new(65535 < p ? Uint32Array : Uint16Array)(m), f = 0; f < r; f++) {
            l = f * a, h = f * s, u.set(i, l);
            for (var g = 0; g < a; ++g) u[l + g] += h
        }
        var v = new THREE.BufferGeometry;
        u && (v.setIndex(new THREE.BufferAttribute(u, 1)), v.getIndex().setDynamic(!0));
        var b = {
            f: 1,
            v2: 2,
            v3: 3,
            c: 3
        };
        for (var y in o) {
            var _, C = o[y];
            _ = new Float32Array(p * b[C.type]), v.addAttribute(y, new THREE.BufferAttribute(_, b[C.type]).setDynamic(!0))
        }
        var w, S, k, A, x, R = v.attributes;
        for (var y in n) {
            w = n[y], S = (C = R[y]).itemSize, k = C.array;
            for (var E = 0; E < r; ++E) {
                A = (m = E * S) * s;
                for (var D = 0; D < s; ++D) {
                    x = A + S * D;
                    for (var O = 0; O < S; ++O) k[x + O] = w[m + O]
                }
            }
            C.needsUpdate = !0
        }
        var T = v.attributes.mapping.array;
        for (f = 0; f < r; f++) T.set(t, f * c * s);
        var H = new THREE.Mesh(v, d);
        H.frustumCulled = !1, H.scale.x = H.scale.y = H.scale.z = 1, "CylinderImpostor" == e ? H.type = "Cylinder" : "SphereImpostor" == e && (H.type = "Sphere"), H.onBeforeRender = this.onBeforeRender, this.mdlImpostor.add(H)
    }, iCn3D.prototype.createImpostorShaderCylinder = function(e) {
        var t = this,
            i = new Float32Array(t.posArray),
            n = new Float32Array(t.colorArray),
            o = new Float32Array(t.pos2Array),
            r = new Float32Array(t.color2Array),
            s = new Float32Array(t.radiusArray),
            a = new Float32Array([-1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, 1, -1, -1, 1, -1, 1]),
            c = new Uint16Array([0, 1, 2, 1, 4, 2, 2, 4, 3, 4, 5, 3]),
            d = i.length / 3,
            l = {
                position1: i,
                color: n,
                position2: o,
                color2: r,
                radius: s
            },
            h = {
                position1: {
                    type: "v3",
                    value: null
                },
                color: {
                    type: "v3",
                    value: null
                },
                position2: {
                    type: "v3",
                    value: null
                },
                color2: {
                    type: "v3",
                    value: null
                },
                radius: {
                    type: "f",
                    value: null
                },
                mapping: {
                    type: "v3",
                    value: null
                }
            };
        this.createImpostorShaderBase(e, a, c, l, h, d, 6, 12, 3), s = r = o = n = i = l = null, t.posArray = [], t.colorArray = [], t.pos2Array = [], t.color2Array = [], t.radiusArray = []
    }, iCn3D.prototype.createImpostorShaderSphere = function(e) {
        var t = this,
            i = new Float32Array(t.posArraySphere),
            n = new Float32Array(t.colorArraySphere),
            o = new Float32Array(t.radiusArraySphere),
            r = new Float32Array([-1, 1, -1, -1, 1, 1, 1, -1]),
            s = new Uint16Array([0, 1, 2, 1, 3, 2]),
            a = i.length / 3,
            c = {
                position: i,
                color: n,
                radius: o
            },
            d = {
                position: {
                    type: "v3",
                    value: null
                },
                color: {
                    type: "v3",
                    value: null
                },
                radius: {
                    type: "f",
                    value: null
                },
                mapping: {
                    type: "v2",
                    value: null
                }
            };
        this.createImpostorShaderBase(e, r, s, c, d, a, 4, 6, 2), o = n = i = c = null, t.posArraySphere = [], t.colorArraySphere = [], t.radiusArraySphere = []
    }, iCn3D.prototype.positionFromGeometry = function(e) {
        for (var t, i, n = e.geometry, o = n.vertices, r = e.position, s = e.scale, a = e.matrix, c = o.length, d = [], l = 0; l < c; l++) t = 3 * l, i = "SphereGeometry" == n.type || "BoxGeometry" == n.type ? o[l].clone().multiply(s).add(r) : "CylinderGeometry" == n.type ? o[l].clone().applyMatrix4(a) : o[l], d[0 + t] = i.x, d[1 + t] = i.y, d[2 + t] = i.z;
        return d
    }, iCn3D.prototype.colorFromGeometry = function(e) {
        var t = e.geometry,
            i = new THREE.Color(1, 1, 1);
        "SphereGeometry" != t.type && "BoxGeometry" != t.type && "CylinderGeometry" != t.type || void 0 !== e.material && (i = e.material.color);
        for (var n, o, r, s, a, c = t.faces, d = (t.vertices.length, t.type, c.length), l = [], h = 0; h < d; h++) o = c[h], a = "Surface" == t.type ? (r = o.vertexColors[0], s = o.vertexColors[1], o.vertexColors[2]) : "SphereGeometry" == t.type || "BoxGeometry" == t.type || "CylinderGeometry" == t.type ? s = r = i : (r = o.color, s = o.color, o.color), l[(n = 3 * o.a) + 0] = r.r, l[n + 1] = r.g, l[n + 2] = r.b, l[(n = 3 * o.b) + 0] = s.r, l[n + 1] = s.g, l[n + 2] = s.b, l[(n = 3 * o.c) + 0] = a.r, l[n + 1] = a.g, l[n + 2] = a.b;
        return l
    }, iCn3D.prototype.indexFromGeometry = function(e) {
        for (var t, i, n = e.geometry.faces, o = n.length, r = [], s = 0; s < o; s++) t = 3 * s, i = n[s], r[0 + t] = i.a, r[1 + t] = i.b, r[2 + t] = i.c;
        return r
    }, iCn3D.prototype.normalFromGeometry = function(e) {
        for (var t, i, n, o, r, s, a = e.geometry, c = a.faces, d = (a.vertices.length, c.length), l = [], h = 0; h < d; h++) o = (n = (i = c[h]).vertexNormals)[0], r = n[1], s = n[2], l[(t = 3 * i.a) + 0] = o.x, l[t + 1] = o.y, l[t + 2] = o.z, l[(t = 3 * i.b) + 0] = r.x, l[t + 1] = r.y, l[t + 2] = r.z, l[(t = 3 * i.c) + 0] = s.x, l[t + 1] = s.y, l[t + 2] = s.z;
        return l
    }, iCn3D.prototype.hashvalue2array = function(e) {
        var t = [];
        for (var i in e) t.push(e[i]);
        return t
    }, iCn3D.prototype.drawSymmetryMates = function() {
        this.bInstanced && Object.keys(this.atoms).length * this.biomtMatrices.length > this.maxatomcnt ? this.drawSymmetryMatesInstancing() : this.drawSymmetryMatesNoInstancing()
    }, iCn3D.prototype.applyMat = function(e, t, i) {
        if (void 0 === this.rmsd_supr) void 0 === i ? e.applyMatrix(t) : i && e.applyMatrix4(t);
        else {
            var n = this.rmsd_supr.rot,
                o = this.rmsd_supr.trans1,
                r = this.rmsd_supr.trans2,
                s = new THREE.Matrix4;
            s.set(n[0], n[1], n[2], 0, n[3], n[4], n[5], 0, n[6], n[7], n[8], 0, 0, 0, 0, 1);
            var a = new THREE.Matrix4;
            a.getInverse(s);
            var c = new THREE.Matrix4;
            void 0 === i ? (c.makeTranslation(-r.x, -r.y, -r.z), e.applyMatrix(c), e.applyMatrix(a), c.makeTranslation(o.x, o.y, o.z), e.applyMatrix(c), e.applyMatrix(t), c.makeTranslation(-o.x, -o.y, -o.z), e.applyMatrix(c), e.applyMatrix(s), c.makeTranslation(r.x, r.y, r.z), e.applyMatrix(c)) : i && (c.makeTranslation(-r.x, -r.y, -r.z), e.applyMatrix4(c), e.applyMatrix4(a), c.makeTranslation(o.x, o.y, o.z), e.applyMatrix4(c), e.applyMatrix4(t), c.makeTranslation(-o.x, -o.y, -o.z), e.applyMatrix4(c), e.applyMatrix4(s), c.makeTranslation(r.x, r.y, r.z), e.applyMatrix4(c))
        }
    }, iCn3D.prototype.drawSymmetryMatesNoInstancing = function() {
        if (void 0 !== this.biomtMatrices && 0 != this.biomtMatrices.length) {
            var e = 1,
                t = this.center.clone(),
                i = new THREE.Matrix4;
            i.identity();
            for (var n = new THREE.Object3D, o = new THREE.Object3D, r = new THREE.Object3D, s = 0; s < this.biomtMatrices.length; s++) {
                var a = this.biomtMatrices[s];
                if (void 0 !== a && !a.equals(i)) {
                    var c;
                    if (void 0 !== this.mdl && (c = this.mdl.clone(), this.applyMat(c, a), n.add(c)), void 0 !== this.mdlImpostor) {
                        c = this.mdlImpostor.clone(), this.applyMat(c, a);
                        for (var d = c.children.length - 1; 0 <= d; d--) {
                            c.children[d].onBeforeRender = this.onBeforeRender
                        }
                        o.add(c)
                    }
                    void 0 !== this.mdl_ghost && (c = this.mdl_ghost.clone(), this.applyMat(c, a), r.add(c));
                    var l = this.center.clone();
                    this.applyMat(l, a, !0), t.add(l), ++e
                }
            }
            this.mdl.add(n), this.mdlImpostor.add(o), this.mdl_ghost.add(r), void 0 !== this.bSetInstancing && this.bSetInstancing ? (this.maxD = this.maxDAssembly, this.center = this.centerAssembly.clone()) : (this.maxD *= Math.sqrt(e), this.center = t.multiplyScalar(1 / e), this.maxDAssembly = this.maxD, this.centerAssembly = this.center.clone()), this.setCenter(this.center), this.setCamera(), this.bSetInstancing = !0
        }
    }, iCn3D.prototype.createInstancedGeometry = function(e) {
        var t = e.geometry,
            i = new THREE.InstancedBufferGeometry,
            n = [],
            o = [],
            r = [],
            s = [],
            a = [],
            c = [],
            d = [],
            l = [];
        if (t.vertices && t.faces) {
            this.instancedMaterial = this.getInstancedMaterial("Instancing");
            var h = this.positionFromGeometry(e),
                p = this.normalFromGeometry(e),
                m = this.colorFromGeometry(e),
                u = this.indexFromGeometry(e);
            n = n.concat(h), o = o.concat(p), r = r.concat(m), s = s.concat(u);
            for (var f = [], g = "CylinderGeometry" == t.type ? 1 : 0, v = 0, b = n.length / 3; v < b; ++v) f.push(g);
            i.addAttribute("position", new THREE.BufferAttribute(new Float32Array(n), 3)), i.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(o), 3)), i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(r), 3)), i.addAttribute("cylinder", new THREE.BufferAttribute(new Float32Array(f), 1)), i.setIndex(new THREE.BufferAttribute(new Uint32Array(s), 1)), u = m = p = h = null
        } else if (this.bImpo && void 0 !== t.attributes.color2) {
            this.instancedMaterial = this.getInstancedMaterial("CylinderInstancing");
            h = this.hashvalue2array(t.attributes.position1.array), m = this.hashvalue2array(t.attributes.color.array);
            var y = this.hashvalue2array(t.attributes.position2.array),
                _ = this.hashvalue2array(t.attributes.color2.array),
                C = (u = this.hashvalue2array(t.index.array), this.hashvalue2array(t.attributes.radius.array)),
                w = this.hashvalue2array(t.attributes.mapping.array);
            n = n.concat(h), r = r.concat(m), d = d.concat(y), l = l.concat(_), s = s.concat(u), a = a.concat(C), c = c.concat(w), i.addAttribute("position1", new THREE.BufferAttribute(new Float32Array(n), 3)), i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(r), 3)), i.addAttribute("position2", new THREE.BufferAttribute(new Float32Array(d), 3)), i.addAttribute("color2", new THREE.BufferAttribute(new Float32Array(l), 3)), i.addAttribute("radius", new THREE.BufferAttribute(new Float32Array(a), 1)), i.addAttribute("mapping", new THREE.BufferAttribute(new Float32Array(c), 3)), i.setIndex(new THREE.BufferAttribute(new Uint32Array(s), 1)), w = C = u = _ = y = m = h = null
        } else if (this.bImpo && void 0 !== t.attributes.color) {
            this.instancedMaterial = this.getInstancedMaterial("SphereInstancing");
            h = this.hashvalue2array(t.attributes.position.array), m = this.hashvalue2array(t.attributes.color.array), u = this.hashvalue2array(t.index.array), C = this.hashvalue2array(t.attributes.radius.array), w = this.hashvalue2array(t.attributes.mapping.array);
            n = n.concat(h), r = r.concat(m), s = s.concat(u), a = a.concat(C), c = c.concat(w), i.addAttribute("position", new THREE.BufferAttribute(new Float32Array(n), 3)), i.addAttribute("color", new THREE.BufferAttribute(new Float32Array(r), 3)), i.addAttribute("radius", new THREE.BufferAttribute(new Float32Array(a), 1)), i.addAttribute("mapping", new THREE.BufferAttribute(new Float32Array(c), 2)), i.setIndex(new THREE.BufferAttribute(new Uint32Array(s), 1)), w = C = u = m = h = null
        }
        l = d = c = a = s = r = o = n = null;
        var S = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements1), 4),
            k = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements2), 4),
            A = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements3), 4),
            x = new THREE.InstancedBufferAttribute(new Float32Array(this.matricesElements4), 4);
        return i.addAttribute("matrix1", S), i.addAttribute("matrix2", k), i.addAttribute("matrix3", A), i.addAttribute("matrix4", x), i
    }, iCn3D.prototype.getInstancedMaterial = function(e) {
        var t = new THREE.ShaderMaterial({
            defines: this.defines,
            uniforms: this.uniforms,
            vertexShader: this.getShader(e + ".vert"),
            fragmentShader: this.getShader(e + ".frag"),
            depthTest: !0,
            depthWrite: !0,
            needsUpdate: !0,
            lights: !0
        });
        return t.extensions.fragDepth = !0, t.extensions.derivatives = "#extension GL_OES_standard_derivatives : enable", t
    }, iCn3D.prototype.createInstancedMesh = function(e) {
        for (var t = 0, i = e.children.length; t < i; ++t) {
            var n = e.children[t];
            if ("Sprite" !== n.type) {
                var o = this.createInstancedGeometry(n),
                    r = new THREE.Mesh(o, this.instancedMaterial);
                r.onBeforeRender = this.onBeforeRender, r.frustumCulled = !1, o = null, e.add(r)
            }
        }
    }, iCn3D.prototype.drawSymmetryMatesInstancing = function() {
        if (void 0 !== this.biomtMatrices && 0 != this.biomtMatrices.length) {
            var e = 1,
                t = this.center.clone();
            if (this.setParametersForShader(), void 0 === this.bSetInstancing || !this.bSetInstancing) {
                this.matricesElements1 = [], this.matricesElements2 = [], this.matricesElements3 = [], this.matricesElements4 = [];
                var i = new THREE.Matrix4;
                i.identity();
                for (var n = 0; n < this.biomtMatrices.length; n++) {
                    var o = this.biomtMatrices[n];
                    if (void 0 !== o) {
                        var r = o.toArray();
                        if (!o.equals(i)) {
                            this.matricesElements1.push(r[0], r[1], r[2], r[3]), this.matricesElements2.push(r[4], r[5], r[6], r[7]), this.matricesElements3.push(r[8], r[9], r[10], r[11]), this.matricesElements4.push(r[12], r[13], r[14], r[15]);
                            var s = this.center.clone();
                            s.applyMatrix4(o), t.add(s), ++e
                        }
                    }
                }
            }
            this.createInstancedMesh(this.mdl), this.createInstancedMesh(this.mdlImpostor), void 0 !== this.bSetInstancing && this.bSetInstancing ? (this.maxD = this.maxDAssembly, this.center = this.centerAssembly.clone()) : (this.maxD *= Math.sqrt(e), this.center = t.multiplyScalar(1 / e), this.maxDAssembly = this.maxD, this.centerAssembly = this.center.clone()), this.setCenter(this.center), this.setCamera(), this.bSetInstancing = !0
        }
    }, iCn3D.prototype.cloneHash = function(e) {
        var t = {};
        for (var i in e) t[i] = e[i];
        return t
    }, iCn3D.prototype.residueName2Abbr = function(e) {
        var t = e.indexOf(" ");
        switch (0 < t && (e = e.substr(0, t)), e) {
            case "  A":
                return "A";
            case "  C":
                return "C";
            case "  G":
                return "G";
            case "  T":
                return "T";
            case "  U":
                return "U";
            case "  I":
                return "I";
            case " DA":
                return "A";
            case " DC":
                return "C";
            case " DG":
                return "G";
            case " DT":
                return "T";
            case " DU":
                return "U";
            case " DI":
                return "I";
            case "DA":
                return "A";
            case "DC":
                return "C";
            case "DG":
                return "G";
            case "DT":
                return "T";
            case "DU":
                return "U";
            case "DI":
                return "I";
            case "ALA":
                return "A";
            case "ARG":
                return "R";
            case "ASN":
                return "N";
            case "ASP":
                return "D";
            case "CYS":
                return "C";
            case "GLU":
                return "E";
            case "GLN":
                return "Q";
            case "GLY":
                return "G";
            case "HIS":
                return "H";
            case "ILE":
                return "I";
            case "LEU":
                return "L";
            case "LYS":
                return "K";
            case "MET":
                return "M";
            case "PHE":
                return "F";
            case "PRO":
                return "P";
            case "SER":
                return "S";
            case "THR":
                return "T";
            case "TRP":
                return "W";
            case "TYR":
                return "Y";
            case "VAL":
                return "V";
            case "SEC":
                return "U";
            case "HOH":
            case "WAT":
                return "O";
            default:
                return e.trim()
        }
    }, iCn3D.prototype.intHash = function(e, t) {
        var i = {};
        if (Object.keys(e).length < Object.keys(t).length)
            for (var n in e) void 0 !== t && t[n] && (i[n] = e[n]);
        else
            for (var n in t) void 0 !== e && e[n] && (i[n] = t[n]);
        return i
    }, iCn3D.prototype.exclHash = function(e, t) {
        for (var i in e) void 0 !== t && t[i] && delete e[i];
        return e
    }, iCn3D.prototype.unionHash = function(e, t) {
        return this.unionHashInPlace(e, t)
    }, iCn3D.prototype.unionHashInPlace = function(e, t) {
        return void 0 === e && (e = {}), void 0 === t && (t = {}), jQuery.extend(e, t), e
    }, iCn3D.prototype.unionHashNotInPlace = function(e, t) {
        return jQuery.extend({}, e, t)
    }, iCn3D.prototype.intHash2Atoms = function(e, t) {
        return this.hash2Atoms(this.intHash(e, t))
    }, iCn3D.prototype.exclHash2Atoms = function(e, t) {
        return this.hash2Atoms(this.exclHash(e, t))
    }, iCn3D.prototype.unionHash2Atoms = function(e, t) {
        return this.hash2Atoms(this.unionHash(e, t))
    }, iCn3D.prototype.hash2Atoms = function(e) {
        var t = {};
        for (var i in e) t[i] = this.atoms[i];
        return t
    }, iCn3D.prototype.exportCanvas = function() {
        this.bRender && this.render(), window.open(this.renderer.domElement.toDataURL("image/png"))
    }, iCn3D.prototype.zoomIn = function(e) {
        var t = {};
        t._zoomFactor = 1 - e, t.update = !0, this.bControlGl ? window.controls.update(t) : this.controls.update(t), this.bRender && this.render()
    }, iCn3D.prototype.zoomOut = function(e) {
        var t = {};
        t._zoomFactor = 1 + e, t.update = !0, this.bControlGl ? window.controls.update(t) : this.controls.update(t), this.bRender && this.render()
    }, iCn3D.prototype.rotateLeft = function(e) {
        var t = new THREE.Vector3(0, 1, 0),
            i = -e / 180 * Math.PI;
        this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
        var n = new THREE.Quaternion;
        n.setFromAxisAngle(t, -i);
        var o = {};
        o.quaternion = n, o.update = !0, this.bControlGl ? window.controls.update(o) : this.controls.update(o), this.bRender && this.render()
    }, iCn3D.prototype.rotateRight = function(e) {
        var t = new THREE.Vector3(0, 1, 0),
            i = e / 180 * Math.PI;
        this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
        var n = new THREE.Quaternion;
        n.setFromAxisAngle(t, -i);
        var o = {};
        o.quaternion = n, o.update = !0, this.bControlGl ? window.controls.update(o) : this.controls.update(o), this.bRender && this.render()
    }, iCn3D.prototype.rotateUp = function(e) {
        var t = new THREE.Vector3(1, 0, 0),
            i = -e / 180 * Math.PI;
        this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
        var n = new THREE.Quaternion;
        n.setFromAxisAngle(t, -i);
        var o = {};
        o.quaternion = n, o.update = !0, this.bControlGl ? window.controls.update(o) : this.controls.update(o), this.bRender && this.render()
    }, iCn3D.prototype.rotateDown = function(e) {
        var t = new THREE.Vector3(1, 0, 0),
            i = e / 180 * Math.PI;
        this.bControlGl ? t.applyQuaternion(window.cam.quaternion).normalize() : t.applyQuaternion(this.cam.quaternion).normalize();
        var n = new THREE.Quaternion;
        n.setFromAxisAngle(t, -i);
        var o = {};
        o.quaternion = n, o.update = !0, this.bControlGl ? window.controls.update(o) : this.controls.update(o), this.bRender && this.render()
    }, iCn3D.prototype.translateLeft = function(e) {
        var t = new THREE.Vector2(0, 0);
        t.x -= e / 100;
        var i = {};
        i.mouseChange = t, i.update = !0, this.bControlGl ? window.controls.update(i) : this.controls.update(i), this.bRender && this.render()
    }, iCn3D.prototype.translateRight = function(e) {
        var t = new THREE.Vector2(0, 0);
        t.x += e / 100;
        var i = {};
        i.mouseChange = t, i.update = !0, this.bControlGl ? window.controls.update(i) : this.controls.update(i), this.bRender && this.render()
    }, iCn3D.prototype.translateUp = function(e) {
        var t = new THREE.Vector2(0, 0);
        t.y -= e / 100;
        var i = {};
        i.mouseChange = t, i.update = !0, this.bControlGl ? window.controls.update(i) : this.controls.update(i), this.bRender && this.render()
    }, iCn3D.prototype.translateDown = function(e) {
        var t = new THREE.Vector2(0, 0);
        t.y += e / 100;
        var i = {};
        i.mouseChange = t, i.update = !0, this.bControlGl ? window.controls.update(i) : this.controls.update(i), this.bRender && this.render()
    }, iCn3D.prototype.select3ddomainFromAtom = function(e) {
        var t, i = e.structure + "_" + e.chain,
            n = i + "_" + e.resi;
        for (var o in this.tddomains) {
            var r = o.indexOf("_3d_domain");
            if (o.substr(0, r) == i && -1 !== Object.keys(this.tddomains[o]).indexOf(n)) {
                t = o;
                break
            }
        }
        var s = {};
        for (var n in this.tddomains[t]) s = this.unionHash(s, this.residues[n]);
        return s
    }, iCn3D.prototype.showPickingHilight = function(e) {
        if (this.bShift || this.bCtrl || this.removeHlObjects(), this.pickedAtomList = {}, 1 === this.pk) this.pickedAtomList[e.serial] = 1;
        else if (2 === this.pk) {
            var t = e.structure + "_" + e.chain + "_" + e.resi;
            this.pickedAtomList = this.residues[t]
        } else if (3 === this.pk) this.pickedAtomList = this.selectStrandHelixFromAtom(e);
        else if (4 === this.pk) this.pickedAtomList = this.select3ddomainFromAtom(e);
        else if (5 === this.pk) {
            var i = e.structure + "_" + e.chain;
            this.pickedAtomList = this.chains[i]
        }
        0 === this.pk ? this.bShowHighlight = !1 : this.bShowHighlight = !0;
        var n = Object.keys(this.hAtoms).length == Object.keys(this.atoms).length ? {} : this.intHash(this.hAtoms, this.pickedAtomList),
            o = Object.keys(n).length;
        if (this.bShift || this.bCtrl)
            if (this.bShift) {
                if (void 0 === this.prevPickedAtomList) this.hAtoms = this.unionHash(this.hAtoms, this.pickedAtomList);
                else {
                    var r = this.getFirstAtomObj(this.prevPickedAtomList),
                        s = this.getFirstAtomObj(this.pickedAtomList);
                    if (r.structure + "_" + r.chain != s.structure + "_" + s.chain) this.hAtoms = this.unionHash(this.hAtoms, this.pickedAtomList);
                    else {
                        var a;
                        a = this.unionHash(a, this.prevPickedAtomList), a = this.unionHash(a, this.pickedAtomList);
                        for (var c = this.getFirstAtomObj(a), d = this.getLastAtomObj(a), l = c.serial; l <= d.serial; ++l) this.hAtoms[l] = 1
                    }
                }
                this.prevPickedAtomList = this.cloneHash(this.pickedAtomList)
            } else this.bCtrl && (this.hAtoms = 0 < o ? this.exclHash(this.hAtoms, this.pickedAtomList) : this.unionHash(this.hAtoms, this.pickedAtomList));
        else this.hAtoms = this.cloneHash(this.pickedAtomList);
        this.removeHlObjects(), this.addHlObjects()
    }, iCn3D.prototype.showPicking = function(e, t, i) {
        this.showPickingBase(e, t, i)
    }, iCn3D.prototype.showPickingBase = function(e, t, i) {
        void 0 === t && void 0 === i && this.showPickingHilight(e)
    }, iCn3D.prototype.removeHlObjects = function() {
        for (var e in this.prevHighlightObjects) this.mdl.remove(this.prevHighlightObjects[e]);
        for (var e in this.prevHighlightObjects = [], this.prevHighlightObjects_ghost) this.mdl.remove(this.prevHighlightObjects_ghost[e]);
        this.prevHighlightObjects_ghost = []
    }, iCn3D.prototype.addHlObjects = function(e, t, i) {
        void 0 === e && (e = this.hColor), void 0 === i && (i = this.hAtoms), this.applyDisplayOptions(this.opts, this.intHash(i, this.dAtoms), this.bHighlight), (t || this.bRender) && this.render()
    }, iCn3D.prototype.resetOrientation = function() {
        var e = !1;
        if (0 < this.commands.length) {
            var t = this.commands[0].split("|||");
            if (2 == t.length) {
                var i = JSON.parse(t[1]);
                this._zoomFactor = i.factor, this.mouseChange.x = i.mouseChange.x, this.mouseChange.y = i.mouseChange.y, this.quaternion._x = i.quaternion._x, this.quaternion._y = i.quaternion._y, this.quaternion._z = i.quaternion._z, this.quaternion._w = i.quaternion._w, e = !0
            }
        }
        e || (this._zoomFactor = 1, this.mouseChange = new THREE.Vector2(0, 0), this.quaternion = new THREE.Quaternion(0, 0, 0, 1)), this.maxD = this.oriMaxD, this.center = this.oriCenter.clone(), "show" == this.ori_chemicalbinding ? this.bSkipChemicalbinding = !1 : "hide" == this.ori_chemicalbinding && (this.bSkipChemicalbinding = !0)
    }, iCn3D.prototype.getAtomsFromPosition = function(e, t) {
        var i;
        for (i in null == t && (t = 1), this.dAtoms) {
            var n = this.atoms[i];
            if (this.ions.hasOwnProperty(i) && "sphere" === this.opts.ions) {
                var o = this.vdwRadii[n.elem.toUpperCase()];
                if (Math.abs(n.coord.x - e.x) - o > t) continue;
                if (Math.abs(n.coord.y - e.y) - o > t) continue;
                if (Math.abs(n.coord.z - e.z) - o > t) continue
            } else {
                if (n.coord.x < e.x - t || n.coord.x > e.x + t) continue;
                if (n.coord.y < e.y - t || n.coord.y > e.y + t) continue;
                if (n.coord.z < e.z - t || n.coord.z > e.z + t) continue
            }
            return n
        }
        return null
    }, iCn3D.prototype.getFirstAtomObj = function(e) {
        if (void 0 !== e && 0 !== Object.keys(e).length) {
            var t = Object.keys(e)[0];
            return this.atoms[t]
        }
    }, iCn3D.prototype.getFirstCalphaAtomObj = function(e) {
        if (void 0 !== e && 0 !== Object.keys(e).length) {
            var t;
            for (var i in e)
                if ("CA" == this.atoms[i].name) {
                    t = i;
                    break
                } return void 0 !== t ? this.atoms[t] : this.getFirstAtomObj(e)
        }
    }, iCn3D.prototype.getFirstAtomObjByName = function(e, t) {
        var i;
        if (void 0 === e || 0 === Object.keys(e).length) return this.atoms[0];
        for (var n in e)
            if (this.atoms[n].name == t) {
                i = n;
                break
            } return void 0 !== i ? this.atoms[i] : void 0
    }, iCn3D.prototype.getLastAtomObj = function(e) {
        if (void 0 === e || 0 === Object.keys(e).length) return this.atoms[0];
        var t = Object.keys(e),
            i = t[t.length - 1];
        return this.atoms[i]
    }, iCn3D.prototype.hexToRgb = function(e, t) {
        var i = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
        return i ? {
            r: parseInt(i[1], 16),
            g: parseInt(i[2], 16),
            b: parseInt(i[3], 16),
            a: t
        } : null
    }, iCn3D.prototype.selectStrandHelixFromAtom = function(e) {
        var t = e,
            i = e,
            n = {},
            o = t.resi;
        if (!t.ssbegin) {
            for (var r = t.resi - 1; 0 < r; --r) {
                var s = t.structure + "_" + t.chain + "_" + r;
                if (!this.residues.hasOwnProperty(s)) break;
                if (o = (e = this.getFirstCalphaAtomObj(this.residues[s])).resi, "coil" !== t.ss && e.ss === t.ss && e.ssbegin || "coil" === t.ss && e.ss !== t.ss) {
                    "coil" === t.ss && e.ss !== t.ss && (o = e.resi + 1);
                    break
                }
            }
            for (r = o; r <= t.resi; ++r) {
                s = t.structure + "_" + t.chain + "_" + r;
                n = this.unionHash(n, this.hash2Atoms(this.residues[s]))
            }
        }
        var a = i.resi,
            c = this.getLastAtomObj(this.chains[i.structure + "_" + i.chain]).resi;
        for (r = i.resi + 1; r <= c; ++r) {
            s = i.structure + "_" + i.chain + "_" + r;
            if (!this.residues.hasOwnProperty(s)) break;
            if (a = (e = this.getFirstCalphaAtomObj(this.residues[s])).resi, "coil" !== i.ss && e.ss === i.ss && e.ssend || "coil" === i.ss && e.ss !== i.ss) {
                "coil" === i.ss && e.ss !== i.ss && (a = e.resi - 1);
                break
            }
        }
        for (r = i.resi + 1; r <= a; ++r) {
            s = i.structure + "_" + i.chain + "_" + r;
            n = this.unionHash(n, this.hash2Atoms(this.residues[s]))
        }
        return n
    }, iCn3D.prototype.addNonCarbonAtomLabels = function(e) {
        var t = this.intHash(this.hAtoms, e);
        for (var i in void 0 === this.labels.schematic && (this.labels.schematic = []), t) {
            var n = this.atoms[i];
            if (this.residues.hasOwnProperty(n.structure + "_" + n.chain + "_" + n.resi) && "C" !== n.elem) {
                var o = {};
                o.position = n.coord, o.bSchematic = 1, o.text = n.elem, o.size = 18, o.color = "#" + n.color.getHexString(), o.background = "#FFFFFF", this.labels.schematic.push(o)
            }
        }
        this.removeHlObjects()
    }, iCn3D.prototype.addResiudeLabels = function(e, t, i, n) {
        void 0 === i && (i = 1);
        var o = this.intHash(this.hAtoms, e);
        t ? void 0 === this.labels.schematic && (this.labels.schematic = []) : void 0 === this.labels.residue && (this.labels.residue = []);
        var r = "";
        for (var s in o) {
            var a = this.atoms[s],
                c = {},
                d = a.structure + "_" + a.chain + "_" + a.resi;
            if (!a.het && ("CA" === a.name || "O3'" === a.name || "O3*" === a.name) || this.water.hasOwnProperty(a.serial) || this.ions.hasOwnProperty(a.serial) || this.chemicals.hasOwnProperty(a.serial) && d !== r) {
                c.position = a.coord, c.bSchematic = 0, t && (c.bSchematic = 1), c.text = this.residueName2Abbr(a.resn), n && (c.text += a.resi), c.size = 18;
                var l = a.color.getHexString().toUpperCase();
                c.color = "CCCCCC" === l || "C8C8C8" === l ? "#888888" : "#" + l, c.background = "#CCCCCC", t ? this.labels.schematic.push(c) : this.labels.residue.push(c)
            }
            r = d
        }
        this.removeHlObjects()
    }, iCn3D.prototype.addAtomLabels = function(e) {
        var t = this.intHash(this.hAtoms, e);
        for (var i in t = this.intHash(this.dAtoms, t), void 0 === this.labels.residue && (this.labels.residue = []), t) {
            var n = this.atoms[i],
                o = {};
            o.position = n.coord, o.bSchematic = 0, o.text = n.name, o.size = 18;
            var r = n.color.getHexString().toUpperCase();
            o.color = "CCCCCC" === r || "C8C8C8" === r ? "#888888" : "#" + r, o.background = "#CCCCCC", this.labels.residue.push(o)
        }
        this.removeHlObjects()
    }, iCn3D.prototype.setCenter = function(e) {
        this.mdl.position.set(0, 0, 0), this.mdlImpostor.position.set(0, 0, 0), this.mdl_ghost.position.set(0, 0, 0), this.mdl.position.sub(e), this.mdlImpostor.position.sub(e), this.mdl_ghost.position.sub(e)
    }, iCn3D.prototype.getResiduesFromAtoms = function(e) {
        var t = {};
        for (var i in e) {
            t[this.atoms[i].structure + "_" + this.atoms[i].chain + "_" + this.atoms[i].resi] = 1
        }
        return t
    }, iCn3D.prototype.getResiduesFromCalphaAtoms = function(e) {
        var t = {};
        for (var i in e) {
            if ("CA" == this.atoms[i].name && this.proteins.hasOwnProperty(i) || !this.proteins.hasOwnProperty(i)) t[this.atoms[i].structure + "_" + this.atoms[i].chain + "_" + this.atoms[i].resi] = 1
        }
        return t
    }, iCn3D.prototype.selectMainChainSubset = function(e) {
        var t = ["C1'", "C1*", "C2'", "C2*", "C3'", "C3*", "C4'", "C4*", "C5'", "C5*", "O3'", "O3*", "O4'", "O4*", "O5'", "O5*", "P", "OP1", "O1P", "OP2", "O2P"],
            i = {};
        for (var n in e)(this.proteins.hasOwnProperty(n) && ("N" === this.atoms[n].name || "C" === this.atoms[n].name || "O" === this.atoms[n].name || "CA" === this.atoms[n].name && "C" === this.atoms[n].elem) || this.nucleotides.hasOwnProperty(n) && -1 !== t.indexOf(this.atoms[n].name)) && (i[n] = 1);
        return i
    }, iCn3D.prototype.transformMemPro = function(e, t, i, n) {
        var o = e.clone();
        o.sub(i);
        var r = o.x * t[0] + o.y * t[1] + o.z * t[2] + n.x,
            s = o.x * t[3] + o.y * t[4] + o.z * t[5] + n.y,
            a = o.x * t[6] + o.y * t[7] + o.z * t[8] + n.z;
        return o.x = r, o.y = s, o.z = a, o
    },
    function(e) {
        "use strict";
        var o = e.HTMLCanvasElement && e.HTMLCanvasElement.prototype,
            l = e.Blob && function() {
                try {
                    return Boolean(new Blob)
                } catch (e) {
                    return !1
                }
            }(),
            h = l && e.Uint8Array && function() {
                try {
                    return 100 === new Blob([new Uint8Array(100)]).size
                } catch (e) {
                    return !1
                }
            }(),
            p = e.BlobBuilder || e.WebKitBlobBuilder || e.MozBlobBuilder || e.MSBlobBuilder,
            m = /^data:((.*?)(;charset=.*?)?)(;base64)?,/,
            r = (l || p) && e.atob && e.ArrayBuffer && e.Uint8Array && function(e) {
                var t, i, n, o, r, s, a, c, d;
                if (!(t = e.match(m))) throw new Error("invalid data URI");
                for (i = t[2] ? t[1] : "text/plain" + (t[3] || ";charset=US-ASCII"), n = !!t[4], o = e.slice(t[0].length), r = (n ? atob : decodeURIComponent)(o), s = new ArrayBuffer(r.length), a = new Uint8Array(s), c = 0; c < r.length; c += 1) a[c] = r.charCodeAt(c);
                return l ? new Blob([h ? a : s], {
                    type: i
                }) : ((d = new p).append(s), d.getBlob(i))
            };
        e.HTMLCanvasElement && !o.toBlob && (o.mozGetAsFile ? o.toBlob = function(e, t, i) {
            var n = this;
            setTimeout(function() {
                i && o.toDataURL && r ? e(r(n.toDataURL(t, i))) : e(n.mozGetAsFile("blob", t))
            })
        } : o.toDataURL && r && (o.toBlob = function(e, t, i) {
            var n = this;
            setTimeout(function() {
                e(r(n.toDataURL(t, i)))
            })
        })), "function" == typeof define && define.amd ? define(function() {
            return r
        }) : "object" == typeof module && module.exports ? module.exports = r : e.dataURLtoBlob = r
    }(window);
var saveAs = saveAs || function(a) {
        "use strict";
        if (!(void 0 === a || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
            var e = a.document,
                c = function() {
                    return a.URL || a.webkitURL || a
                },
                d = e.createElementNS("http://www.w3.org/1999/xhtml", "a"),
                l = "download" in d,
                h = /constructor/i.test(a.HTMLElement) || a.safari,
                p = /CriOS\/[\d]+/.test(navigator.userAgent),
                m = a.setImmediate || a.setTimeout,
                u = function(e) {
                    m(function() {
                        throw e
                    }, 0)
                },
                f = function(e) {
                    setTimeout(function() {
                        "string" == typeof e ? c().revokeObjectURL(e) : e.remove()
                    }, 4e4)
                },
                g = function(e) {
                    return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([String.fromCharCode(65279), e], {
                        type: e.type
                    }) : e
                },
                n = function(e, i, t) {
                    t || (e = g(e));

                    function n() {
                        ! function(e, t, i) {
                            for (var n = (t = [].concat(t)).length; n--;) {
                                var o = e["on" + t[n]];
                                if ("function" == typeof o) try {
                                    o.call(e, i || e)
                                } catch (e) {
                                    u(e)
                                }
                            }
                        }(r, "writestart progress write writeend".split(" "))
                    }
                    var o, r = this,
                        s = "application/octet-stream" === (e ? e.type : void 0);
                    if (r.readyState = r.INIT, l) return o = o || c().createObjectURL(e), void m(function() {
                        var e, t;
                        d.href = o, d.download = i, e = d, t = new MouseEvent("click"), e.dispatchEvent(t), n(), f(o), r.readyState = r.DONE
                    }, 0);
                    ! function() {
                        if ((p || s && h) && a.FileReader) {
                            var t = new FileReader;
                            return t.onloadend = function() {
                                var e = p ? t.result : t.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                                a.open(e, "_blank") || (a.location.href = e), e = void 0, r.readyState = r.DONE, n()
                            }, t.readAsDataURL(e), r.readyState = r.INIT
                        }(o = o || c().createObjectURL(e), s) ? a.location.href = o: a.open(o, "_blank") || (a.location.href = o);
                        r.readyState = r.DONE, n(), f(o)
                    }()
                },
                t = n.prototype;
            return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e, t, i) {
                return t = t || e.name || "download", i || (e = g(e)), navigator.msSaveOrOpenBlob(e, t)
            } : (t.abort = function() {}, t.readyState = t.INIT = 0, t.WRITING = 1, t.DONE = 2, t.error = t.onwritestart = t.onprogress = t.onwrite = t.onabort = t.onerror = t.onwriteend = null, function(e, t, i) {
                return new n(e, t || e.name || "download", i)
            })
        }
    }("undefined" != typeof self && self || "undefined" != typeof window && window || this),
    $3Dmol = $3Dmol || {};
$3Dmol.MarchingCubeInitializer = function() {
    var e = {};
    e.march = function(e, d, t, i) {
        var n = !!i.fulltable,
            l = i.hasOwnProperty("origin") && i.origin.hasOwnProperty("x") ? i.origin : {
                x: 0,
                y: 0,
                z: 0
            },
            h = !!i.voxel,
            p = i.matrix,
            o = i.nX || 0,
            m = i.nY || 0,
            u = i.nZ || 0,
            r = i.scale || 1,
            f = null;
        f = i.unitCube ? i.unitCube : {
            x: r,
            y: r,
            z: r
        };
        var s, a, g = new Int32Array(o * m * u);
        for (s = 0, a = g.length; s < a; ++s) g[s] = -1;

        function c(e, t, i, n, o, r) {
            var s = {
                    x: 0,
                    y: 0,
                    z: 0
                },
                a = o;
            !(n & 1 << o) && n & 1 << r && (a = r), 1 & a && i++, 2 & a && t++, 4 & a && e++, p ? s = {
                x: (s = (s = new $3Dmol.Vector3(e, t, i)).applyMatrix4(p)).x,
                y: s.y,
                z: s.z
            } : (s.x = l.x + f.x * e, s.y = l.y + f.y * t, s.z = l.z + f.z * i);
            var c = (m * e + t) * u + i;
            return h ? (d.push(s), d.length - 1) : (g[c] < 0 && (g[c] = d.length, d.push(s)), g[c])
        }
        var v = new Int32Array(12),
            b = n ? H : O,
            y = n ? M : T;
        for (s = 0; s < o - 1; ++s)
            for (var _ = 0; _ < m - 1; ++_)
                for (var C = 0; C < u - 1; ++C) {
                    for (var w = 0, S = 0; S < 8; ++S) {
                        w |= !!(2 & e[(m * (s + ((4 & S) >> 2)) + _ + ((2 & S) >> 1)) * u + C + (1 & S)]) << S
                    }
                    if (0 !== w && 255 !== w) {
                        var k = b[w];
                        if (0 !== k) {
                            var A = y[w];
                            1 & k && (v[0] = c(s, _, C, w, 0, 1)), 2 & k && (v[1] = c(s, _, C, w, 1, 3)), 4 & k && (v[2] = c(s, _, C, w, 3, 2)), 8 & k && (v[3] = c(s, _, C, w, 2, 0)), 16 & k && (v[4] = c(s, _, C, w, 4, 5)), 32 & k && (v[5] = c(s, _, C, w, 5, 7)), 64 & k && (v[6] = c(s, _, C, w, 7, 6)), 128 & k && (v[7] = c(s, _, C, w, 6, 4)), 256 & k && (v[8] = c(s, _, C, w, 0, 4)), 512 & k && (v[9] = c(s, _, C, w, 1, 5)), 1024 & k && (v[10] = c(s, _, C, w, 3, 7)), 2048 & k && (v[11] = c(s, _, C, w, 2, 6));
                            for (var x = 0; x < A.length; x += 3) {
                                var R = v[A[x]],
                                    E = v[A[x + 1]],
                                    D = v[A[x + 2]];
                                h && 3 <= x && (d.push(d[R]), R = d.length - 1, d.push(d[E]), E = d.length - 1, d.push(d[D]), D = d.length - 1), t.push(R), t.push(E), t.push(D)
                            }
                        }
                    }
                }
    }, e.laplacianSmooth = function(e, t, i) {
        var n, o, r, s, a, c = new Array(t.length);
        for (n = 0, o = t.length; n < o; n++) c[n] = {
            x: 0,
            y: 0,
            z: 0
        };
        var d, l = new Array(20);
        for (n = 0; n < 20; n++) l[n] = new Array(t.length);
        for (n = 0, o = t.length; n < o; n++) l[0][n] = 0;
        for (n = 0, o = i.length / 3; n < o; n++) {
            var h = 3 * n,
                p = 3 * n + 1,
                m = 3 * n + 2;
            for (d = !0, s = l[r = 0][i[h]]; r < s; r++)
                if (i[p] == l[r + 1][i[h]]) {
                    d = !1;
                    break
                } for (d && (l[0][i[h]]++, l[l[0][i[h]]][i[h]] = i[p]), d = !0, s = l[r = 0][i[h]]; r < s; r++)
                if (i[m] == l[r + 1][i[h]]) {
                    d = !1;
                    break
                } for (d && (l[0][i[h]]++, l[l[0][i[h]]][i[h]] = i[m]), d = !0, s = l[r = 0][i[p]]; r < s; r++)
                if (i[h] == l[r + 1][i[p]]) {
                    d = !1;
                    break
                } for (d && (l[0][i[p]]++, l[l[0][i[p]]][i[p]] = i[h]), d = !0, s = l[r = 0][i[p]]; r < s; r++)
                if (i[m] == l[r + 1][i[p]]) {
                    d = !1;
                    break
                } for (d && (l[0][i[p]]++, l[l[0][i[p]]][i[p]] = i[m]), d = !0, r = 0; r < l[0][i[m]]; r++)
                if (i[h] == l[r + 1][i[m]]) {
                    d = !1;
                    break
                } for (d && (l[0][i[m]]++, l[l[0][i[m]]][i[m]] = i[h]), d = !0, s = l[r = 0][i[m]]; r < s; r++)
                if (i[p] == l[r + 1][i[m]]) {
                    d = !1;
                    break
                } d && (l[0][i[m]]++, l[l[0][i[m]]][i[m]] = i[p])
        }
        for (a = 0; a < e; a++) {
            for (n = 0, o = t.length; n < o; n++)
                if (l[0][n] < 3) c[n].x = t[n].x, c[n].y = t[n].y, c[n].z = t[n].z;
                else if (3 == l[0][n] || 4 == l[0][n]) {
                for (c[n].x = 0, c[n].y = 0, s = l[r = c[n].z = 0][n]; r < s; r++) c[n].x += t[l[r + 1][n]].x, c[n].y += t[l[r + 1][n]].y, c[n].z += t[l[r + 1][n]].z;
                c[n].x += .5 * t[n].x, c[n].y += .5 * t[n].y, c[n].z += .5 * t[n].z, c[n].x /= .5 + l[0][n], c[n].y /= .5 + l[0][n], c[n].z /= .5 + l[0][n]
            } else {
                for (c[n].x = 0, c[n].y = 0, s = l[r = c[n].z = 0][n]; r < s; r++) c[n].x += t[l[r + 1][n]].x, c[n].y += t[l[r + 1][n]].y, c[n].z += t[l[r + 1][n]].z;
                c[n].x += +t[n].x, c[n].y += +t[n].y, c[n].z += +t[n].z, c[n].x /= 1 + l[0][n], c[n].y /= 1 + l[0][n], c[n].z /= 1 + l[0][n]
            }
            for (n = 0, o = t.length; n < o; n++) t[n].x = c[n].x, t[n].y = c[n].y, t[n].z = c[n].z
        }
    }, e.edgeTable = [0, 0, 0, 0, 0, 0, 0, 2816, 0, 0, 0, 1792, 0, 3328, 3584, 3840, 0, 0, 0, 138, 0, 21, 0, 134, 0, 0, 0, 652, 0, 2067, 3865, 3600, 0, 0, 0, 42, 0, 0, 0, 294, 0, 0, 21, 28, 0, 3875, 1049, 3360, 0, 168, 162, 170, 0, 645, 2475, 2210, 0, 687, 293, 172, 4010, 3747, 3497, 3232, 0, 0, 0, 0, 0, 69, 0, 900, 0, 0, 0, 1792, 138, 131, 1608, 1920, 0, 81, 0, 2074, 84, 85, 84, 86, 0, 81, 0, 3676, 330, 1105, 1881, 1616, 0, 0, 0, 42, 0, 69, 0, 502, 0, 0, 21, 3580, 138, 2035, 1273, 1520, 2816, 104, 2337, 106, 840, 581, 367, 102, 2816, 3695, 3429, 3180, 1898, 1635, 1385, 1120, 0, 0, 0, 0, 0, 0, 0, 3910, 0, 0, 69, 588, 42, 2083, 41, 2880, 0, 0, 0, 1722, 0, 2293, 4095, 3830, 0, 255, 757, 764, 2538, 2291, 3065, 2800, 0, 0, 81, 338, 0, 3925, 1119, 3414, 84, 855, 85, 340, 2130, 2899, 89, 2384, 1792, 712, 194, 1162, 4036, 3781, 3535, 3270, 708, 719, 197, 204, 3018, 2755, 2505, 2240, 0, 0, 0, 0, 168, 420, 168, 1958, 162, 162, 676, 2988, 170, 163, 680, 928, 3328, 3096, 3328, 3642, 52, 53, 1855, 1590, 2340, 2111, 2869, 2620, 298, 51, 825, 560, 3584, 3584, 3090, 3482, 1668, 1941, 1183, 1430, 146, 2975, 2069, 2460, 154, 915, 153, 400, 3840, 3592, 3329, 3082, 1796, 1541, 1295, 1030, 2818, 2575, 2309, 2060, 778, 515, 265, 0];
    var O = new Uint32Array(e.edgeTable),
        T = e.triTable = [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [11, 9, 8],
            [],
            [],
            [],
            [8, 10, 9],
            [],
            [10, 8, 11],
            [9, 11, 10],
            [8, 10, 9, 8, 11, 10],
            [],
            [],
            [],
            [1, 7, 3],
            [],
            [4, 2, 0],
            [],
            [2, 1, 7],
            [],
            [],
            [],
            [2, 7, 3, 2, 9, 7],
            [],
            [1, 4, 11, 1, 0, 4],
            [3, 8, 0, 11, 9, 4, 11, 10, 9],
            [4, 11, 9, 11, 10, 9],
            [],
            [],
            [],
            [5, 3, 1],
            [],
            [],
            [],
            [2, 5, 8, 2, 1, 5],
            [],
            [],
            [2, 4, 0],
            [3, 2, 4],
            [],
            [0, 9, 1, 8, 10, 5, 8, 11, 10],
            [3, 4, 0, 3, 10, 4],
            [5, 8, 10, 8, 11, 10],
            [],
            [3, 5, 7],
            [7, 1, 5],
            [1, 7, 3, 1, 5, 7],
            [],
            [9, 2, 0, 9, 7, 2],
            [0, 3, 8, 1, 7, 11, 1, 5, 7],
            [11, 1, 7, 1, 5, 7],
            [],
            [9, 1, 0, 5, 3, 2, 5, 7, 3],
            [8, 2, 5, 8, 0, 2],
            [2, 5, 3, 5, 7, 3],
            [3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5],
            [9, 1, 0, 10, 7, 11, 10, 5, 7],
            [3, 8, 0, 7, 10, 5, 7, 11, 10],
            [11, 5, 7, 11, 10, 5],
            [],
            [],
            [],
            [],
            [],
            [0, 6, 2],
            [],
            [7, 2, 9, 7, 9, 8],
            [],
            [],
            [],
            [8, 10, 9],
            [7, 1, 3],
            [7, 1, 0],
            [6, 9, 3, 6, 10, 9],
            [7, 10, 8, 10, 9, 8],
            [],
            [6, 0, 4],
            [],
            [11, 1, 4, 11, 3, 1],
            [2, 4, 6],
            [2, 0, 4, 2, 4, 6],
            [2, 4, 6],
            [1, 4, 2, 4, 6, 2],
            [],
            [6, 0, 4],
            [],
            [2, 11, 3, 6, 9, 4, 6, 10, 9],
            [8, 6, 1, 8, 1, 3],
            [10, 0, 6, 0, 4, 6],
            [8, 0, 3, 9, 6, 10, 9, 4, 6],
            [10, 4, 6, 10, 9, 4],
            [],
            [],
            [],
            [5, 3, 1],
            [],
            [0, 6, 2],
            [],
            [7, 4, 8, 5, 2, 1, 5, 6, 2],
            [],
            [],
            [2, 4, 0],
            [7, 4, 8, 2, 11, 3, 10, 5, 6],
            [7, 1, 3],
            [5, 6, 10, 0, 9, 1, 8, 7, 4],
            [5, 6, 10, 7, 0, 3, 7, 4, 0],
            [10, 5, 6, 4, 8, 7],
            [9, 11, 8],
            [3, 5, 6],
            [0, 5, 11, 0, 11, 8],
            [6, 3, 5, 3, 1, 5],
            [3, 9, 6, 3, 8, 9],
            [9, 6, 0, 6, 2, 0],
            [0, 3, 8, 2, 5, 6, 2, 1, 5],
            [1, 6, 2, 1, 5, 6],
            [9, 11, 8],
            [1, 0, 9, 6, 10, 5, 11, 3, 2],
            [6, 10, 5, 2, 8, 0, 2, 11, 8],
            [3, 2, 11, 10, 5, 6],
            [10, 5, 6, 9, 3, 8, 9, 1, 3],
            [0, 9, 1, 5, 6, 10],
            [8, 0, 3, 10, 5, 6],
            [10, 5, 6],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [1, 10, 2, 9, 11, 6, 9, 8, 11],
            [],
            [],
            [6, 0, 2],
            [3, 6, 9, 3, 2, 6],
            [3, 5, 1],
            [0, 5, 1, 0, 11, 5],
            [0, 3, 5],
            [6, 9, 11, 9, 8, 11],
            [],
            [],
            [],
            [4, 5, 9, 7, 1, 10, 7, 3, 1],
            [],
            [11, 6, 7, 2, 4, 5, 2, 0, 4],
            [11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5],
            [6, 7, 11, 1, 10, 2, 9, 4, 5],
            [],
            [4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2],
            [9, 4, 5, 0, 6, 7, 0, 2, 6],
            [4, 5, 9, 6, 3, 2, 6, 7, 3],
            [6, 7, 11, 5, 3, 8, 5, 1, 3],
            [6, 7, 11, 4, 1, 0, 4, 5, 1],
            [4, 5, 9, 3, 8, 0, 11, 6, 7],
            [9, 4, 5, 7, 11, 6],
            [],
            [],
            [0, 6, 4],
            [8, 6, 4, 8, 1, 6],
            [],
            [0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6],
            [10, 2, 1, 6, 0, 3, 6, 4, 0],
            [10, 2, 1, 11, 4, 8, 11, 6, 4],
            [4, 2, 6],
            [1, 0, 9, 2, 4, 8, 2, 6, 4],
            [2, 4, 0, 2, 6, 4],
            [8, 2, 4, 2, 6, 4],
            [11, 4, 1, 11, 6, 4],
            [0, 9, 1, 4, 11, 6, 4, 8, 11],
            [3, 6, 0, 6, 4, 0],
            [8, 6, 4, 8, 11, 6],
            [10, 8, 9],
            [6, 3, 9, 6, 7, 3],
            [6, 7, 1],
            [10, 7, 1, 7, 3, 1],
            [7, 11, 6, 8, 10, 2, 8, 9, 10],
            [11, 6, 7, 10, 0, 9, 10, 2, 0],
            [2, 1, 10, 7, 11, 6, 8, 0, 3],
            [1, 10, 2, 6, 7, 11],
            [7, 2, 6, 7, 9, 2],
            [1, 0, 9, 3, 6, 7, 3, 2, 6],
            [7, 0, 6, 0, 2, 6],
            [2, 7, 3, 2, 6, 7],
            [7, 11, 6, 3, 9, 1, 3, 8, 9],
            [9, 1, 0, 11, 6, 7],
            [0, 3, 8, 11, 6, 7],
            [11, 6, 7],
            [],
            [],
            [],
            [],
            [5, 3, 7],
            [8, 5, 2, 8, 7, 5],
            [5, 3, 7],
            [1, 10, 2, 5, 8, 7, 5, 9, 8],
            [1, 7, 5],
            [1, 7, 5],
            [9, 2, 7, 9, 7, 5],
            [11, 3, 2, 8, 5, 9, 8, 7, 5],
            [1, 3, 7, 1, 7, 5],
            [0, 7, 1, 7, 5, 1],
            [9, 3, 5, 3, 7, 5],
            [9, 7, 5, 9, 8, 7],
            [8, 10, 11],
            [3, 4, 10, 3, 10, 11],
            [8, 10, 11],
            [5, 9, 4, 1, 11, 3, 1, 10, 11],
            [2, 4, 5],
            [5, 2, 4, 2, 0, 4],
            [0, 3, 8, 5, 9, 4, 10, 2, 1],
            [2, 1, 10, 9, 4, 5],
            [2, 8, 5, 2, 11, 8],
            [3, 2, 11, 1, 4, 5, 1, 0, 4],
            [9, 4, 5, 8, 2, 11, 8, 0, 2],
            [11, 3, 2, 9, 4, 5],
            [8, 5, 3, 5, 1, 3],
            [5, 0, 4, 5, 1, 0],
            [3, 8, 0, 4, 5, 9],
            [9, 4, 5],
            [11, 9, 10],
            [11, 9, 10],
            [1, 11, 4, 1, 10, 11],
            [8, 7, 4, 11, 1, 10, 11, 3, 1],
            [2, 7, 9, 2, 9, 10],
            [4, 8, 7, 0, 10, 2, 0, 9, 10],
            [2, 1, 10, 0, 7, 4, 0, 3, 7],
            [10, 2, 1, 8, 7, 4],
            [1, 7, 4],
            [3, 2, 11, 4, 8, 7, 9, 1, 0],
            [11, 4, 2, 4, 0, 2],
            [2, 11, 3, 7, 4, 8],
            [4, 1, 7, 1, 3, 7],
            [1, 0, 9, 8, 7, 4],
            [3, 4, 0, 3, 7, 4],
            [8, 7, 4],
            [8, 9, 10, 8, 10, 11],
            [3, 9, 11, 9, 10, 11],
            [0, 10, 8, 10, 11, 8],
            [10, 3, 1, 10, 11, 3],
            [2, 8, 10, 8, 9, 10],
            [9, 2, 0, 9, 10, 2],
            [8, 0, 3, 1, 10, 2],
            [10, 2, 1],
            [1, 11, 9, 11, 8, 9],
            [11, 3, 2, 0, 9, 1],
            [11, 0, 2, 11, 8, 0],
            [11, 3, 2],
            [8, 1, 3, 8, 9, 1],
            [9, 1, 0],
            [8, 0, 3],
            []
        ],
        H = [0, 265, 515, 778, 2060, 2309, 2575, 2822, 1030, 1295, 1541, 1804, 3082, 3331, 3593, 3840, 400, 153, 915, 666, 2460, 2197, 2975, 2710, 1430, 1183, 1941, 1692, 3482, 3219, 3993, 3728, 560, 825, 51, 314, 2620, 2869, 2111, 2358, 1590, 1855, 1077, 1340, 3642, 3891, 3129, 3376, 928, 681, 419, 170, 2988, 2725, 2479, 2214, 1958, 1711, 1445, 1196, 4010, 3747, 3497, 3232, 2240, 2505, 2755, 3018, 204, 453, 719, 966, 3270, 3535, 3781, 4044, 1226, 1475, 1737, 1984, 2384, 2137, 2899, 2650, 348, 85, 863, 598, 3414, 3167, 3925, 3676, 1370, 1107, 1881, 1616, 2800, 3065, 2291, 2554, 764, 1013, 255, 502, 3830, 4095, 3317, 3580, 1786, 2035, 1273, 1520, 2912, 2665, 2403, 2154, 876, 613, 367, 102, 3942, 3695, 3429, 3180, 1898, 1635, 1385, 1120, 1120, 1385, 1635, 1898, 3180, 3429, 3695, 3942, 102, 367, 613, 876, 2154, 2403, 2665, 2912, 1520, 1273, 2035, 1786, 3580, 3317, 4095, 3830, 502, 255, 1013, 764, 2554, 2291, 3065, 2800, 1616, 1881, 1107, 1370, 3676, 3925, 3167, 3414, 598, 863, 85, 348, 2650, 2899, 2137, 2384, 1984, 1737, 1475, 1226, 4044, 3781, 3535, 3270, 966, 719, 453, 204, 3018, 2755, 2505, 2240, 3232, 3497, 3747, 4010, 1196, 1445, 1711, 1958, 2214, 2479, 2725, 2988, 170, 419, 681, 928, 3376, 3129, 3891, 3642, 1340, 1077, 1855, 1590, 2358, 2111, 2869, 2620, 314, 51, 825, 560, 3728, 3993, 3219, 3482, 1692, 1941, 1183, 1430, 2710, 2975, 2197, 2460, 666, 915, 153, 400, 3840, 3593, 3331, 3082, 1804, 1541, 1295, 1030, 2822, 2575, 2309, 2060, 778, 515, 265, 0],
        M = [
            [],
            [8, 3, 0],
            [9, 0, 1],
            [8, 3, 1, 8, 1, 9],
            [11, 2, 3],
            [11, 2, 0, 11, 0, 8],
            [11, 2, 3, 0, 1, 9],
            [2, 1, 11, 1, 9, 11, 11, 9, 8],
            [10, 1, 2],
            [8, 3, 0, 1, 2, 10],
            [9, 0, 2, 9, 2, 10],
            [3, 2, 8, 2, 10, 8, 8, 10, 9],
            [10, 1, 3, 10, 3, 11],
            [1, 0, 10, 0, 8, 10, 10, 8, 11],
            [0, 3, 9, 3, 11, 9, 9, 11, 10],
            [8, 10, 9, 8, 11, 10],
            [8, 4, 7],
            [3, 0, 4, 3, 4, 7],
            [1, 9, 0, 8, 4, 7],
            [9, 4, 1, 4, 7, 1, 1, 7, 3],
            [2, 3, 11, 7, 8, 4],
            [7, 11, 4, 11, 2, 4, 4, 2, 0],
            [3, 11, 2, 4, 7, 8, 9, 0, 1],
            [2, 7, 11, 2, 1, 7, 1, 4, 7, 1, 9, 4],
            [10, 1, 2, 8, 4, 7],
            [2, 10, 1, 0, 4, 7, 0, 7, 3],
            [4, 7, 8, 0, 2, 10, 0, 10, 9],
            [2, 7, 3, 2, 9, 7, 7, 9, 4, 2, 10, 9],
            [8, 4, 7, 11, 10, 1, 11, 1, 3],
            [11, 4, 7, 1, 4, 11, 1, 11, 10, 1, 0, 4],
            [3, 8, 0, 7, 11, 4, 11, 9, 4, 11, 10, 9],
            [7, 11, 4, 4, 11, 9, 11, 10, 9],
            [9, 5, 4],
            [3, 0, 8, 4, 9, 5],
            [5, 4, 0, 5, 0, 1],
            [4, 8, 5, 8, 3, 5, 5, 3, 1],
            [11, 2, 3, 9, 5, 4],
            [9, 5, 4, 8, 11, 2, 8, 2, 0],
            [3, 11, 2, 1, 5, 4, 1, 4, 0],
            [8, 5, 4, 2, 5, 8, 2, 8, 11, 2, 1, 5],
            [2, 10, 1, 9, 5, 4],
            [0, 8, 3, 5, 4, 9, 10, 1, 2],
            [10, 5, 2, 5, 4, 2, 2, 4, 0],
            [3, 4, 8, 3, 2, 4, 2, 5, 4, 2, 10, 5],
            [5, 4, 9, 1, 3, 11, 1, 11, 10],
            [0, 9, 1, 4, 8, 5, 8, 10, 5, 8, 11, 10],
            [3, 4, 0, 3, 10, 4, 4, 10, 5, 3, 11, 10],
            [4, 8, 5, 5, 8, 10, 8, 11, 10],
            [9, 5, 7, 9, 7, 8],
            [0, 9, 3, 9, 5, 3, 3, 5, 7],
            [8, 0, 7, 0, 1, 7, 7, 1, 5],
            [1, 7, 3, 1, 5, 7],
            [11, 2, 3, 8, 9, 5, 8, 5, 7],
            [9, 2, 0, 9, 7, 2, 2, 7, 11, 9, 5, 7],
            [0, 3, 8, 2, 1, 11, 1, 7, 11, 1, 5, 7],
            [2, 1, 11, 11, 1, 7, 1, 5, 7],
            [1, 2, 10, 5, 7, 8, 5, 8, 9],
            [9, 1, 0, 10, 5, 2, 5, 3, 2, 5, 7, 3],
            [5, 2, 10, 8, 2, 5, 8, 5, 7, 8, 0, 2],
            [10, 5, 2, 2, 5, 3, 5, 7, 3],
            [3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5],
            [9, 1, 0, 10, 7, 11, 10, 5, 7],
            [3, 8, 0, 7, 10, 5, 7, 11, 10],
            [11, 5, 7, 11, 10, 5],
            [11, 7, 6],
            [0, 8, 3, 11, 7, 6],
            [9, 0, 1, 11, 7, 6],
            [7, 6, 11, 3, 1, 9, 3, 9, 8],
            [2, 3, 7, 2, 7, 6],
            [8, 7, 0, 7, 6, 0, 0, 6, 2],
            [1, 9, 0, 3, 7, 6, 3, 6, 2],
            [7, 6, 2, 7, 2, 9, 2, 1, 9, 7, 9, 8],
            [1, 2, 10, 6, 11, 7],
            [2, 10, 1, 7, 6, 11, 8, 3, 0],
            [11, 7, 6, 10, 9, 0, 10, 0, 2],
            [7, 6, 11, 3, 2, 8, 8, 2, 10, 8, 10, 9],
            [6, 10, 7, 10, 1, 7, 7, 1, 3],
            [6, 10, 1, 6, 1, 7, 7, 1, 0, 7, 0, 8],
            [9, 0, 3, 6, 9, 3, 6, 10, 9, 6, 3, 7],
            [6, 10, 7, 7, 10, 8, 10, 9, 8],
            [8, 4, 6, 8, 6, 11],
            [11, 3, 6, 3, 0, 6, 6, 0, 4],
            [0, 1, 9, 4, 6, 11, 4, 11, 8],
            [1, 9, 4, 11, 1, 4, 11, 3, 1, 11, 4, 6],
            [3, 8, 2, 8, 4, 2, 2, 4, 6],
            [2, 0, 4, 2, 4, 6],
            [1, 9, 0, 3, 8, 2, 2, 8, 4, 2, 4, 6],
            [9, 4, 1, 1, 4, 2, 4, 6, 2],
            [10, 1, 2, 11, 8, 4, 11, 4, 6],
            [10, 1, 2, 11, 3, 6, 6, 3, 0, 6, 0, 4],
            [0, 2, 10, 0, 10, 9, 4, 11, 8, 4, 6, 11],
            [2, 11, 3, 6, 9, 4, 6, 10, 9],
            [8, 4, 6, 8, 6, 1, 6, 10, 1, 8, 1, 3],
            [1, 0, 10, 10, 0, 6, 0, 4, 6],
            [8, 0, 3, 9, 6, 10, 9, 4, 6],
            [10, 4, 6, 10, 9, 4],
            [9, 5, 4, 7, 6, 11],
            [4, 9, 5, 3, 0, 8, 11, 7, 6],
            [6, 11, 7, 4, 0, 1, 4, 1, 5],
            [6, 11, 7, 4, 8, 5, 5, 8, 3, 5, 3, 1],
            [4, 9, 5, 6, 2, 3, 6, 3, 7],
            [9, 5, 4, 8, 7, 0, 0, 7, 6, 0, 6, 2],
            [4, 0, 1, 4, 1, 5, 6, 3, 7, 6, 2, 3],
            [7, 4, 8, 5, 2, 1, 5, 6, 2],
            [6, 11, 7, 1, 2, 10, 9, 5, 4],
            [11, 7, 6, 8, 3, 0, 1, 2, 10, 9, 5, 4],
            [11, 7, 6, 10, 5, 2, 2, 5, 4, 2, 4, 0],
            [7, 4, 8, 2, 11, 3, 10, 5, 6],
            [4, 9, 5, 6, 10, 7, 7, 10, 1, 7, 1, 3],
            [5, 6, 10, 0, 9, 1, 8, 7, 4],
            [5, 6, 10, 7, 0, 3, 7, 4, 0],
            [10, 5, 6, 4, 8, 7],
            [5, 6, 9, 6, 11, 9, 9, 11, 8],
            [0, 9, 5, 0, 5, 3, 3, 5, 6, 3, 6, 11],
            [0, 1, 5, 0, 5, 11, 5, 6, 11, 0, 11, 8],
            [11, 3, 6, 6, 3, 5, 3, 1, 5],
            [9, 5, 6, 3, 9, 6, 3, 8, 9, 3, 6, 2],
            [5, 6, 9, 9, 6, 0, 6, 2, 0],
            [0, 3, 8, 2, 5, 6, 2, 1, 5],
            [1, 6, 2, 1, 5, 6],
            [1, 2, 10, 5, 6, 9, 9, 6, 11, 9, 11, 8],
            [1, 0, 9, 6, 10, 5, 11, 3, 2],
            [6, 10, 5, 2, 8, 0, 2, 11, 8],
            [3, 2, 11, 10, 5, 6],
            [10, 5, 6, 9, 3, 8, 9, 1, 3],
            [0, 9, 1, 5, 6, 10],
            [8, 0, 3, 10, 5, 6],
            [10, 5, 6],
            [10, 6, 5],
            [8, 3, 0, 10, 6, 5],
            [0, 1, 9, 5, 10, 6],
            [10, 6, 5, 9, 8, 3, 9, 3, 1],
            [3, 11, 2, 10, 6, 5],
            [6, 5, 10, 2, 0, 8, 2, 8, 11],
            [1, 9, 0, 6, 5, 10, 11, 2, 3],
            [1, 10, 2, 5, 9, 6, 9, 11, 6, 9, 8, 11],
            [1, 2, 6, 1, 6, 5],
            [0, 8, 3, 2, 6, 5, 2, 5, 1],
            [5, 9, 6, 9, 0, 6, 6, 0, 2],
            [9, 6, 5, 3, 6, 9, 3, 9, 8, 3, 2, 6],
            [11, 6, 3, 6, 5, 3, 3, 5, 1],
            [0, 5, 1, 0, 11, 5, 5, 11, 6, 0, 8, 11],
            [0, 5, 9, 0, 3, 5, 3, 6, 5, 3, 11, 6],
            [5, 9, 6, 6, 9, 11, 9, 8, 11],
            [10, 6, 5, 4, 7, 8],
            [5, 10, 6, 7, 3, 0, 7, 0, 4],
            [5, 10, 6, 0, 1, 9, 8, 4, 7],
            [4, 5, 9, 6, 7, 10, 7, 1, 10, 7, 3, 1],
            [7, 8, 4, 2, 3, 11, 10, 6, 5],
            [11, 6, 7, 10, 2, 5, 2, 4, 5, 2, 0, 4],
            [11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5],
            [6, 7, 11, 1, 10, 2, 9, 4, 5],
            [7, 8, 4, 5, 1, 2, 5, 2, 6],
            [4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2],
            [9, 4, 5, 8, 0, 7, 0, 6, 7, 0, 2, 6],
            [4, 5, 9, 6, 3, 2, 6, 7, 3],
            [6, 7, 11, 4, 5, 8, 5, 3, 8, 5, 1, 3],
            [6, 7, 11, 4, 1, 0, 4, 5, 1],
            [4, 5, 9, 3, 8, 0, 11, 6, 7],
            [9, 4, 5, 7, 11, 6],
            [10, 6, 4, 10, 4, 9],
            [8, 3, 0, 9, 10, 6, 9, 6, 4],
            [1, 10, 0, 10, 6, 0, 0, 6, 4],
            [8, 6, 4, 8, 1, 6, 6, 1, 10, 8, 3, 1],
            [2, 3, 11, 6, 4, 9, 6, 9, 10],
            [0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6],
            [10, 2, 1, 11, 6, 3, 6, 0, 3, 6, 4, 0],
            [10, 2, 1, 11, 4, 8, 11, 6, 4],
            [9, 1, 4, 1, 2, 4, 4, 2, 6],
            [1, 0, 9, 3, 2, 8, 2, 4, 8, 2, 6, 4],
            [2, 4, 0, 2, 6, 4],
            [3, 2, 8, 8, 2, 4, 2, 6, 4],
            [1, 4, 9, 11, 4, 1, 11, 1, 3, 11, 6, 4],
            [0, 9, 1, 4, 11, 6, 4, 8, 11],
            [11, 6, 3, 3, 6, 0, 6, 4, 0],
            [8, 6, 4, 8, 11, 6],
            [6, 7, 10, 7, 8, 10, 10, 8, 9],
            [9, 3, 0, 6, 3, 9, 6, 9, 10, 6, 7, 3],
            [6, 1, 10, 6, 7, 1, 7, 0, 1, 7, 8, 0],
            [6, 7, 10, 10, 7, 1, 7, 3, 1],
            [7, 11, 6, 3, 8, 2, 8, 10, 2, 8, 9, 10],
            [11, 6, 7, 10, 0, 9, 10, 2, 0],
            [2, 1, 10, 7, 11, 6, 8, 0, 3],
            [1, 10, 2, 6, 7, 11],
            [7, 2, 6, 7, 9, 2, 2, 9, 1, 7, 8, 9],
            [1, 0, 9, 3, 6, 7, 3, 2, 6],
            [8, 0, 7, 7, 0, 6, 0, 2, 6],
            [2, 7, 3, 2, 6, 7],
            [7, 11, 6, 3, 9, 1, 3, 8, 9],
            [9, 1, 0, 11, 6, 7],
            [0, 3, 8, 11, 6, 7],
            [11, 6, 7],
            [11, 7, 5, 11, 5, 10],
            [3, 0, 8, 7, 5, 10, 7, 10, 11],
            [9, 0, 1, 10, 11, 7, 10, 7, 5],
            [3, 1, 9, 3, 9, 8, 7, 10, 11, 7, 5, 10],
            [10, 2, 5, 2, 3, 5, 5, 3, 7],
            [5, 10, 2, 8, 5, 2, 8, 7, 5, 8, 2, 0],
            [9, 0, 1, 10, 2, 5, 5, 2, 3, 5, 3, 7],
            [1, 10, 2, 5, 8, 7, 5, 9, 8],
            [2, 11, 1, 11, 7, 1, 1, 7, 5],
            [0, 8, 3, 2, 11, 1, 1, 11, 7, 1, 7, 5],
            [9, 0, 2, 9, 2, 7, 2, 11, 7, 9, 7, 5],
            [11, 3, 2, 8, 5, 9, 8, 7, 5],
            [1, 3, 7, 1, 7, 5],
            [8, 7, 0, 0, 7, 1, 7, 5, 1],
            [0, 3, 9, 9, 3, 5, 3, 7, 5],
            [9, 7, 5, 9, 8, 7],
            [4, 5, 8, 5, 10, 8, 8, 10, 11],
            [3, 0, 4, 3, 4, 10, 4, 5, 10, 3, 10, 11],
            [0, 1, 9, 4, 5, 8, 8, 5, 10, 8, 10, 11],
            [5, 9, 4, 1, 11, 3, 1, 10, 11],
            [3, 8, 4, 3, 4, 2, 2, 4, 5, 2, 5, 10],
            [10, 2, 5, 5, 2, 4, 2, 0, 4],
            [0, 3, 8, 5, 9, 4, 10, 2, 1],
            [2, 1, 10, 9, 4, 5],
            [8, 4, 5, 2, 8, 5, 2, 11, 8, 2, 5, 1],
            [3, 2, 11, 1, 4, 5, 1, 0, 4],
            [9, 4, 5, 8, 2, 11, 8, 0, 2],
            [11, 3, 2, 9, 4, 5],
            [4, 5, 8, 8, 5, 3, 5, 1, 3],
            [5, 0, 4, 5, 1, 0],
            [3, 8, 0, 4, 5, 9],
            [9, 4, 5],
            [7, 4, 11, 4, 9, 11, 11, 9, 10],
            [3, 0, 8, 7, 4, 11, 11, 4, 9, 11, 9, 10],
            [11, 7, 4, 1, 11, 4, 1, 10, 11, 1, 4, 0],
            [8, 7, 4, 11, 1, 10, 11, 3, 1],
            [2, 3, 7, 2, 7, 9, 7, 4, 9, 2, 9, 10],
            [4, 8, 7, 0, 10, 2, 0, 9, 10],
            [2, 1, 10, 0, 7, 4, 0, 3, 7],
            [10, 2, 1, 8, 7, 4],
            [2, 11, 7, 2, 7, 1, 1, 7, 4, 1, 4, 9],
            [3, 2, 11, 4, 8, 7, 9, 1, 0],
            [7, 4, 11, 11, 4, 2, 4, 0, 2],
            [2, 11, 3, 7, 4, 8],
            [9, 1, 4, 4, 1, 7, 1, 3, 7],
            [1, 0, 9, 8, 7, 4],
            [3, 4, 0, 3, 7, 4],
            [8, 7, 4],
            [8, 9, 10, 8, 10, 11],
            [0, 9, 3, 3, 9, 11, 9, 10, 11],
            [1, 10, 0, 0, 10, 8, 10, 11, 8],
            [10, 3, 1, 10, 11, 3],
            [3, 8, 2, 2, 8, 10, 8, 9, 10],
            [9, 2, 0, 9, 10, 2],
            [8, 0, 3, 1, 10, 2],
            [10, 2, 1],
            [2, 11, 1, 1, 11, 9, 11, 8, 9],
            [11, 3, 2, 0, 9, 1],
            [11, 0, 2, 11, 8, 0],
            [11, 3, 2],
            [8, 1, 3, 8, 9, 1],
            [9, 1, 0],
            [8, 0, 3],
            []
        ];
    return e
}, $3Dmol.MarchingCube = $3Dmol.MarchingCubeInitializer(), "undefined" == typeof console && (console = {
    log: function() {}
}), $3Dmol.ProteinSurface = function(c) {
    function x(e) {
        return e.elem && void 0 !== b[e.elem.toUpperCase()] ? e.elem : "X"
    }
    var D, O, R = 0,
        E = 0,
        T = 0,
        l = 1.4,
        H = 2,
        M = {},
        I = 0,
        $ = 0,
        L = 0,
        m = 0,
        F = null,
        v = null,
        P = null,
        d = 0,
        h = 0,
        p = 0,
        u = 0,
        f = 0,
        g = 0,
        N = !1,
        z = {},
        b = {
            H: 1.2,
            LI: 1.82,
            Na: 2.27,
            K: 2.75,
            C: 1.7,
            N: 1.55,
            O: 1.52,
            F: 1.47,
            P: 1.8,
            S: 1.8,
            CL: 1.75,
            BR: 1.85,
            SE: 1.9,
            ZN: 1.39,
            CU: 1.4,
            NI: 1.63,
            X: 2
        },
        q = {},
        j = {},
        y = [new Int32Array([1, 0, 0]), new Int32Array([-1, 0, 0]), new Int32Array([0, 1, 0]), new Int32Array([0, -1, 0]), new Int32Array([0, 0, 1]), new Int32Array([0, 0, -1]), new Int32Array([1, 1, 0]), new Int32Array([1, -1, 0]), new Int32Array([-1, 1, 0]), new Int32Array([-1, -1, 0]), new Int32Array([1, 0, 1]), new Int32Array([1, 0, -1]), new Int32Array([-1, 0, 1]), new Int32Array([-1, 0, -1]), new Int32Array([0, 1, 1]), new Int32Array([0, 1, -1]), new Int32Array([0, -1, 1]), new Int32Array([0, -1, -1]), new Int32Array([1, 1, 1]), new Int32Array([1, 1, -1]), new Int32Array([1, -1, 1]), new Int32Array([-1, 1, 1]), new Int32Array([1, -1, -1]), new Int32Array([-1, -1, 1]), new Int32Array([-1, 1, -1]), new Int32Array([-1, -1, -1])];
    this.getFacesAndVertices = function() {
        var e, t, i = O;
        for (e = 0, t = i.length; e < t; e++) i[e].x = i[e].x / H - R, i[e].y = i[e].y / H - E, i[e].z = i[e].z / H - T;
        var n = [];
        for (e = 0, t = D.length; e < t; e += 3) {
            var o = D[e],
                r = D[e + 1],
                s = D[e + 2],
                a = i[o].atomid,
                c = i[r].atomid,
                d = i[s].atomid;
            z[a] && z[c] && z[d] && o !== r && r !== s && o !== s && n.push({
                a: o,
                b: r,
                c: s
            })
        }
        return P = v = F = null, {
            vertices: i,
            faces: n
        }
    }, this.initparm = function(e, t, n, o) {
        for (N = n, i = 0, il = o.length; i < il; i++) z[o[i]] = 1;
        var r = 1 / H * 5.5;
        d = e[0][0], u = e[1][0], h = e[0][1], f = e[1][1], p = e[0][2], g = e[1][2], t ? (d -= l + r, h -= l + r, p -= l + r, u += l + r, f += l + r, g += l + r) : (d -= r, h -= r, p -= r, u += r, f += r, g += r), d = Math.floor(d * H) / H, h = Math.floor(h * H) / H, p = Math.floor(p * H) / H, u = Math.ceil(u * H) / H, f = Math.ceil(f * H) / H, g = Math.ceil(g * H) / H, R = -d, E = -h, T = -p;
        var s = 128,
            a = u - d;
        a < f - h && (a = f - h), a < g - p && (a = g - p), H = (s - 1) / a, H = 2, (N || c < 2 * a) && (s = Math.floor(c), H = (c - 1) / a), L = Math.ceil(H * (u - d)) + 1, $ = Math.ceil(H * (f - h)) + 1, I = Math.ceil(H * (g - p)) + 1, M.x = (L - 1) / (u - d), M.y = ($ - 1) / (f - h), M.z = (I - 1) / (g - p), this.boundingatom(t), m = l * H, F = new Uint8Array(L * $ * I), v = new Float64Array(L * $ * I), P = new Int32Array(L * $ * I)
    }, this.boundingatom = function(e) {
        var t, i, n, o, r = [];
        for (var s in b)
            if (b.hasOwnProperty(s)) {
                var a = b[s];
                r[s] = e ? (a + l) * H + .5 : a * H + .5, n = r[s] * r[s], j[s] = Math.floor(r[s]) + 1, q[s] = new Int32Array(j[s] * j[s]);
                for (var c = o = 0; c < j[s]; c++)
                    for (var d = 0; d < j[s]; d++) n < (t = c * c + d * d) ? q[s][o] = -1 : (i = Math.sqrt(n - t), q[s][o] = Math.floor(i)), o++
            }
    }, this.fillvoxels = function(e, t) {
        var i, n;
        for (i = 0, n = F.length; i < n; i++) F[i] = 0, v[i] = -1, P[i] = -1;
        for (i in t) {
            var o = e[t[i]];
            void 0 !== o && "DUM" !== o.resn && this.fillAtom(o, e)
        }
        for (i = 0, n = F.length; i < n; i++) 1 & F[i] && (F[i] |= 2)
    }, this.fillAtom = function(e, t) {
        var i, n, o, r, s, a, c, d, l, h, p, m, u, f, g, v, b, y, _;
        i = Math.floor(.5 + H * (e.coord.x + R)), n = Math.floor(.5 + H * (e.coord.y + E)), o = Math.floor(.5 + H * (e.coord.z + T));
        var C = x(e),
            w = 0,
            S = $ * I;
        for (h = 0, _ = j[C]; h < _; h++)
            for (p = 0; p < _; p++) {
                if (-1 != q[C][w])
                    for (v = -1; v < 2; v++)
                        for (b = -1; b < 2; b++)
                            for (y = -1; y < 2; y++)
                                if (0 !== v && 0 !== b && 0 !== y)
                                    for (c = v * h, l = y * p, m = 0; m <= q[C][w]; m++)
                                        if (f = n + (d = m * b), g = o + l, !((u = i + c) < 0 || f < 0 || g < 0 || L <= u || $ <= f || I <= g)) {
                                            var k = u * S + f * I + g;
                                            if (1 & F[k]) {
                                                var A = t[P[k]];
                                                A.serial != e.serial && c * c + d * d + l * l < (r = i + c - Math.floor(.5 + H * (A.x + R))) * r + (s = n + d - Math.floor(.5 + H * (A.y + E))) * s + (a = o + l - Math.floor(.5 + H * (A.z + T))) * a && (P[k] = e.serial)
                                            } else F[k] |= 1, P[k] = e.serial
                                        } w++
            }
    }, this.fillvoxelswaals = function(e, t) {
        var i, n;
        for (i = 0, n = F.length; i < n; i++) F[i] &= -3;
        for (i in t) {
            var o = e[t[i]];
            void 0 !== o && this.fillAtomWaals(o, e)
        }
    }, this.fillAtomWaals = function(e, t) {
        var i, n, o, r, s, a, c, d, l, h, p, m, u, f, g, v, b, y, _, C = 0;
        i = Math.floor(.5 + H * (e.coord.x + R)), n = Math.floor(.5 + H * (e.coord.y + E)), o = Math.floor(.5 + H * (e.coord.z + T));
        var w = x(e),
            S = $ * I;
        for (u = 0, _ = j[w]; u < _; u++)
            for (f = 0; f < _; f++) {
                if (-1 != q[w][C])
                    for (v = -1; v < 2; v++)
                        for (b = -1; b < 2; b++)
                            for (y = -1; y < 2; y++)
                                if (0 !== v && 0 !== b && 0 !== y)
                                    for (c = v * u, l = y * f, g = 0; g <= q[w][C]; g++)
                                        if (p = n + (d = g * b), m = o + l, !((h = i + c) < 0 || p < 0 || m < 0 || L <= h || $ <= p || I <= m)) {
                                            var k = h * S + p * I + m;
                                            if (2 & F[k]) {
                                                var A = t[P[k]];
                                                A.serial != e.serial && c * c + d * d + l * l < (r = i + c - Math.floor(.5 + H * (A.x + R))) * r + (s = n + d - Math.floor(.5 + H * (A.y + E))) * s + (a = o + l - Math.floor(.5 + H * (A.z + T))) * a && (P[k] = e.serial)
                                            } else F[k] |= 2, P[k] = e.serial
                                        } C++
            }
    }, this.buildboundary = function() {
        for (var e = $ * I, t = 0; t < L; t++)
            for (var i = 0; i < I; i++)
                for (var n = 0; n < $; n++) {
                    var o = t * e + n * I + i;
                    if (1 & F[o])
                        for (var r = 0; r < 26;) {
                            var s = t + y[r][0],
                                a = i + y[r][2],
                                c = n + y[r][1];
                            if (-1 < s && s < L && -1 < c && c < $ && -1 < a && a < I && !(1 & F[s * e + c * I + a])) {
                                F[o] |= 4;
                                break
                            }
                            r++
                        }
                }
    };

    function _(e, r, s) {
        var a = new Int32Array(e * r * s * 3);
        this.set = function(e, t, i, n) {
            var o = 3 * ((e * r + t) * s + i);
            a[o] = n.ix, a[1 + o] = n.iy, a[2 + o] = n.iz
        }, this.get = function(e, t, i) {
            var n = 3 * ((e * r + t) * s + i);
            return {
                ix: a[n],
                iy: a[1 + n],
                iz: a[2 + n]
            }
        }
    }
    this.fastdistancemap = function() {
        var e, t, i, n, o, r = new _(L, $, I),
            s = $ * I,
            a = m * m,
            c = [],
            d = [];
        for (e = 0; e < L; e++)
            for (t = 0; t < $; t++)
                for (i = 0; i < I; i++)
                    if (F[o = e * s + t * I + i] &= -3, 1 & F[o] && 4 & F[o]) {
                        var l = {
                            ix: e,
                            iy: t,
                            iz: i
                        };
                        r.set(e, t, i, l), c.push(l), v[o] = 0, F[o] |= 2, F[o] &= -5
                    } do {
            for (d = this.fastoneshell(c, r), c = [], e = 0, n = d.length; e < n; e++) o = s * d[e].ix + I * d[e].iy + d[e].iz, F[o] &= -5, v[o] <= 1.0404 * a && c.push({
                ix: d[e].ix,
                iy: d[e].iy,
                iz: d[e].iz
            })
        } while (0 !== c.length);
        c = [], d = [], r = null;
        var h = H - .5;
        h < 0 && (h = 0);
        var p = a - .5 / (.1 + h);
        for (e = 0; e < L; e++)
            for (t = 0; t < $; t++)
                for (i = 0; i < I; i++) F[o = e * s + t * I + i] &= -5, 1 & F[o] && (2 & F[o] && !(2 & F[o] && v[o] >= p) || (F[o] |= 4))
    }, this.fastoneshell = function(e, t) {
        var i, n, o, r, s, a, c, d, l, h, p, m, u = [];
        if (0 === e.length) return u;
        var f = {
                ix: -1,
                iy: -1,
                iz: -1
            },
            g = $ * I;
        for (c = 0, l = e.length; c < l; c++)
            for (i = e[c].ix, n = e[c].iy, o = e[c].iz, p = t.get(i, n, o), d = 0; d < 6; d++) f.ix = i + y[d][0], f.iy = n + y[d][1], f.iz = o + y[d][2], f.ix < L && -1 < f.ix && f.iy < $ && -1 < f.iy && f.iz < I && -1 < f.iz && (m = f.ix * g + I * f.iy + f.iz, 1 & F[m] && !(2 & F[m]) ? (t.set(f.ix, f.iy, o + y[d][2], p), h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a, v[m] = h, F[m] |= 2, F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            })) : 1 & F[m] && 2 & F[m] && (h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a) < v[m] && (t.set(f.ix, f.iy, f.iz, p), v[m] = h, 4 & F[m] || (F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            }))));
        for (c = 0, l = e.length; c < l; c++)
            for (i = e[c].ix, n = e[c].iy, o = e[c].iz, p = t.get(i, n, o), d = 6; d < 18; d++) f.ix = i + y[d][0], f.iy = n + y[d][1], f.iz = o + y[d][2], f.ix < L && -1 < f.ix && f.iy < $ && -1 < f.iy && f.iz < I && -1 < f.iz && (m = f.ix * g + I * f.iy + f.iz, 1 & F[m] && !(2 & F[m]) ? (t.set(f.ix, f.iy, o + y[d][2], p), h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a, v[m] = h, F[m] |= 2, F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            })) : 1 & F[m] && 2 & F[m] && (h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a) < v[m] && (t.set(f.ix, f.iy, f.iz, p), v[m] = h, 4 & F[m] || (F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            }))));
        for (c = 0, l = e.length; c < l; c++)
            for (i = e[c].ix, n = e[c].iy, o = e[c].iz, p = t.get(i, n, o), d = 18; d < 26; d++) f.ix = i + y[d][0], f.iy = n + y[d][1], f.iz = o + y[d][2], f.ix < L && -1 < f.ix && f.iy < $ && -1 < f.iy && f.iz < I && -1 < f.iz && (m = f.ix * g + I * f.iy + f.iz, 1 & F[m] && !(2 & F[m]) ? (t.set(f.ix, f.iy, o + y[d][2], p), h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a, v[m] = h, F[m] |= 2, F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            })) : 1 & F[m] && 2 & F[m] && (h = (r = f.ix - p.ix) * r + (s = f.iy - p.iy) * s + (a = f.iz - p.iz) * a) < v[m] && (t.set(f.ix, f.iy, f.iz, p), v[m] = h, 4 & F[m] || (F[m] |= 4, u.push({
                ix: f.ix,
                iy: f.iy,
                iz: f.iz
            }))));
        return u
    }, this.marchingcubeinit = function(e) {
        for (var t = 0, i = F.length; t < i; t++) 1 == e ? F[t] &= -5 : 4 == e ? (F[t] &= -3, 4 & F[t] && (F[t] |= 2), F[t] &= -5) : 2 == e ? 4 & F[t] && 2 & F[t] ? F[t] &= -5 : 4 & F[t] && !(2 & F[t]) && (F[t] |= 2) : 3 == e && (F[t] &= -5)
    };
    this.marchingcube = function(e) {
        this.marchingcubeinit(e), O = [], D = [], $3Dmol.MarchingCube.march(F, O, D, {
            smooth: 1,
            nX: L,
            nY: $,
            nZ: I
        });
        for (var t = $ * I, i = 0, n = O.length; i < n; i++) O[i].atomid = P[O[i].x * t + I * O[i].y + O[i].z];
        var o = 0;
        if (N) {
            for (var r = {}, s = {}, a = (i = 0, D.length); i < a; i += 3) {
                var c = D[i],
                    d = D[i + 1],
                    l = D[i + 2];
                if (c != d && d != l && c != l) {
                    var h = Math.min(c, d, l),
                        p = Math.max(c, d, l),
                        m = h + "_" + (c + d + l - h - p) + "_" + p;
                    if (!r.hasOwnProperty(m)) {
                        r[m] = 1;
                        var u = O[c].atomid,
                            f = O[d].atomid,
                            g = O[l].atomid;
                        if (z[u] && z[f] && z[g]) {
                            var v = O[c],
                                b = O[d],
                                y = O[l],
                                _ = (v.x - b.x) * (v.x - b.x) + (v.y - b.y) * (v.y - b.y) + (v.z - b.z) * (v.z - b.z),
                                C = (v.x - y.x) * (v.x - y.x) + (v.y - y.y) * (v.y - y.y) + (v.z - y.z) * (v.z - y.z),
                                w = (y.x - b.x) * (y.x - b.x) + (y.y - b.y) * (y.y - b.y) + (y.z - b.z) * (y.z - b.z),
                                S = Math.min(_, C, w),
                                k = Math.max(_, C, w),
                                A = _ + C + w - S - k,
                                x = 0,
                                R = (x = 0 == parseInt(100 * (k - S)) ? .433 * S : 0 == parseInt(100 * (A - S)) ? .5 * S : .707 * S) / 3;
                            void 0 === s[u] ? s[u] = R : s[u] += R, void 0 === s[f] ? s[f] = R : s[f] += R, void 0 === s[g] ? s[g] = R : s[g] += R, o += x
                        }
                    }
                }
            }
            var E = Math.max(M.x, M.y, M.z);
            o = o / E / E
        }
        return N || $3Dmol.MarchingCube.laplacianSmooth(1, O, D), {
            area: o,
            serial2area: s,
            scaleFactor: E
        }
    }
}, $3Dmol.SetupSurface = function(e) {
    var t = e.threshbox,
        i = new $3Dmol.ProteinSurface(t);
    i.initparm(e.extent, 1 !== e.type, e.bCalcArea, e.atomsToShow), i.fillvoxels(e.allatoms, e.extendedAtoms), i.buildboundary(), 2 === e.type && (i.fastdistancemap(), i.boundingatom(!1), i.fillvoxelswaals(e.allatoms, e.extendedAtoms));
    var n = i.marchingcube();
    i.vpBits = null, i.vpDistance = null, i.vpAtomID = null;
    var o = i.getFacesAndVertices(e.atomsToShow);
    return o.area = n.area, o.serial2area = n.serial2area, o.scaleFactor = n.scaleFactor, i.faces = null, i.verts = null, o
}, "undefined" == typeof console && (console = {
    log: function() {}
}), $3Dmol.ElectronMap = function(e) {
    var C, w, S, k, A, h, p, x = 1.5,
        R = {},
        m = 0,
        u = 0,
        f = 0,
        g = 2,
        E = 0,
        D = 0,
        v = 0,
        O = null,
        T = null,
        b = 0,
        y = 0,
        _ = 0,
        H = 0,
        M = 0,
        I = 0,
        d = [new Int32Array([1, 0, 0]), new Int32Array([-1, 0, 0]), new Int32Array([0, 1, 0]), new Int32Array([0, -1, 0]), new Int32Array([0, 0, 1]), new Int32Array([0, 0, -1]), new Int32Array([1, 1, 0]), new Int32Array([1, -1, 0]), new Int32Array([-1, 1, 0]), new Int32Array([-1, -1, 0]), new Int32Array([1, 0, 1]), new Int32Array([1, 0, -1]), new Int32Array([-1, 0, 1]), new Int32Array([-1, 0, -1]), new Int32Array([0, 1, 1]), new Int32Array([0, 1, -1]), new Int32Array([0, -1, 1]), new Int32Array([0, -1, -1]), new Int32Array([1, 1, 1]), new Int32Array([1, 1, -1]), new Int32Array([1, -1, 1]), new Int32Array([-1, 1, 1]), new Int32Array([1, -1, -1]), new Int32Array([-1, -1, 1]), new Int32Array([-1, 1, -1]), new Int32Array([-1, -1, -1])];
    this.getFacesAndVertices = function(e, t) {
        var i, n, o = {};
        for (i = 0, n = t.length; i < n; i++) o[t[i]] = 1;
        var r = p;
        for (i = 0, n = r.length; i < n; i++) {
            var s = new THREE.Vector3(r[i].x, r[i].y, r[i].z).applyMatrix4(C);
            r[i].x = s.x / g - m, r[i].y = s.y / g - u, r[i].z = s.z / g - f
        }
        var a = [];
        for (i = 0, n = h.length; i < n; i += 3) {
            var c = h[i],
                d = h[i + 1],
                l = h[i + 2];
            c !== d && d !== l && c !== l && a.push({
                a: c,
                b: d,
                c: l
            })
        }
        return T = O = null, {
            vertices: r,
            faces: a
        }
    }, this.initparm = function(e, t, i, n, o, r, s, a, c, d, l) {
        x = void 0 !== (S = e).max ? S.min + (S.max - S.min) * n / 100 : void 0 !== S.mean ? S.mean + S.sigma * n : n, R = t, C = i, w = r, k = d, A = l;
        b = 0, H = S.xExtent - 1, y = 0, M = S.yExtent - 1, _ = 0, I = S.zExtent - 1, m = -b, u = -y, f = -_;
        var h = H - b;
        h < M - y && (h = M - y), h < I - _ && (h = I - _), g = 1;
        v = Math.ceil(g * (H - b)) + 1, D = Math.ceil(g * (M - y)) + 1, E = Math.ceil(g * (I - _)) + 1, O = new Uint8Array(v * D * E), T = new Uint8Array(v * D * E)
    }, this.transformMemPro = function(e, t, i, n) {
        var o = e.clone();
        o.sub(i);
        var r = o.x * t[0] + o.y * t[1] + o.z * t[2] + n.x,
            s = o.x * t[3] + o.y * t[4] + o.z * t[5] + n.y,
            a = o.x * t[6] + o.y * t[7] + o.z * t[8] + n.z;
        return o.x = r, o.y = s, o.z = a, o
    }, this.fillvoxels = function(e, t) {
        var i, n, o, r, s, a;
        for (i = 0, r = O.length; i < r; i++) O[i] = 0, T[i] = 0;
        var c = (new THREE.Matrix4).getInverse(C),
            d = [];
        w = parseInt(w);
        var l, h, p, m = D * E,
            u = new Array(9);
        if (void 0 !== A && void 0 !== A.rot) {
            l = A.rot, h = A.trans1, p = A.trans2;
            var f = new THREE.Matrix3,
                g = new THREE.Matrix3;
            f.set(l[0], l[1], l[2], l[3], l[4], l[5], l[6], l[7], l[8]), g.getInverse(f), u[0] = g.elements[0], u[1] = g.elements[3], u[2] = g.elements[6], u[3] = g.elements[1], u[4] = g.elements[4], u[5] = g.elements[7], u[6] = g.elements[2], u[7] = g.elements[5], u[8] = g.elements[8]
        }
        for (var v in t) {
            var b = e[t[v]];
            if ("DUM" !== b.resn) {
                var y;
                if (void 0 !== A && void 0 !== A.rot) y = this.transformMemPro(b.coord, u, p, h).applyMatrix4(c);
                else y = b.coord.clone().applyMatrix4(c);
                for (i = Math.floor(y.x) - w, r = Math.ceil(y.x) + w; i <= r; ++i)
                    if (!(i < 0 || i > S.xExtent - 1))
                        for (n = Math.floor(y.y) - w, s = Math.ceil(y.y) + w; n <= s; ++n)
                            if (!(n < 0 || n > S.yExtent - 1))
                                for (o = Math.floor(y.z) - w, a = Math.ceil(y.z) + w; o <= a; ++o)
                                    if (!(o < 0 || o > S.zExtent - 1)) {
                                        var _ = i * m + n * E + o;
                                        d.push(_)
                                    }
            }
        }
        for (i = 0, r = d.length; i < r; ++i) {
            _ = d[i];
            "2fofc" == k ? O[_] = R[_] >= x ? 1 : 0 : "fofc" == k ? (O[_] = R[_] >= x || R[_] <= -x ? 1 : 0, T[_] = 0 <= R[_] ? 1 : 0) : "em" == k && (O[_] = R[_] >= x ? 1 : 0)
        }
        for (i = 0, r = O.length; i < r; i++) 1 & O[i] && (O[i] |= 2)
    }, this.buildboundary = function() {
        var e, t, i, n = D * E;
        for (e = 0; e < v; e++)
            for (t = 0; t < E; t++)
                for (i = 0; i < D; i++) {
                    var o = e * n + i * E + t;
                    if (1 & O[o])
                        for (var r = 0; r < 26;) {
                            var s = e + d[r][0],
                                a = t + d[r][2],
                                c = i + d[r][1];
                            if (-1 < s && s < v && -1 < c && c < D && -1 < a && a < E && !(1 & O[s * n + c * E + a])) {
                                O[o] |= 4;
                                break
                            }
                            r++
                        }
                }
    }, this.marchingcubeinit = function(e) {
        for (var t = 0, i = O.length; t < i; t++) 1 == e ? O[t] &= -5 : 4 == e ? (O[t] &= -3, 4 & O[t] && (O[t] |= 2), O[t] &= -5) : 2 == e ? 4 & O[t] && 2 & O[t] ? O[t] &= -5 : 4 & O[t] && !(2 & O[t]) && (O[t] |= 2) : O[t] &= -5
    };
    this.marchingcube = function(e) {
        this.marchingcubeinit(e), p = [], h = [], $3Dmol.MarchingCube.march(O, p, h, {
            smooth: 1,
            nX: v,
            nY: D,
            nZ: E
        });
        for (var t = D * E, i = 0, n = p.length; i < n; i++) p[i].atomid = T[p[i].x * t + E * p[i].y + p[i].z];
        $3Dmol.MarchingCube.laplacianSmooth(1, p, h)
    }
}, $3Dmol.SetupMap = function(e) {
    "use strict";
    var t = new $3Dmol.ElectronMap;
    t.initparm(e.header, e.data, e.matrix, e.isovalue, e.center, e.maxdist, e.pmin, e.pmax, e.water, e.type, e.rmsd_supr), t.fillvoxels(e.allatoms, e.extendedAtoms), t.buildboundary(), t.marchingcube(), t.vpBits = null, t.vpAtomID = null;
    var i = t.getFacesAndVertices(e.allatoms, e.atomsToShow);
    return t.faces = null, t.verts = null, i
}, iCn3D.prototype.createSurfaceRepresentation = function(e, n, t, i) {
    var l = this;
    if (0 != Object.keys(e).length) {
        var o;
        null == i && (i = 1), this.opacity = i;
        var r, s = this.getExtent(e),
            a = [];
        if (this.bConsiderNeighbors) r = this.unionHash(r, e), r = this.unionHash(r, this.getAtomsWithinAtom(this.atoms, e, 5)), a = Object.keys(r);
        else a = Object.keys(e);
        var c, d = 1,
            h = !(10 == parseInt(10 * i) || t || this.bInstanced && Object.keys(this.atoms).length * this.biomtMatrices.length > this.maxatomcnt);
        if (c = 11 == n ? $3Dmol.SetupMap({
                allatoms: this.atoms,
                atomsToShow: Object.keys(e),
                extendedAtoms: a,
                water: this.water,
                header: l.mapData.header2,
                data: l.mapData.data2,
                matrix: l.mapData.matrix2,
                isovalue: l.mapData.sigma2,
                center: this.center,
                maxdist: d,
                pmin: this.pmin,
                pmax: this.pmax,
                type: "2fofc",
                rmsd_supr: this.rmsd_supr
            }) : 12 == n ? $3Dmol.SetupMap({
                allatoms: this.atoms,
                atomsToShow: Object.keys(e),
                extendedAtoms: a,
                water: this.water,
                header: l.mapData.header,
                data: l.mapData.data,
                matrix: l.mapData.matrix,
                isovalue: l.mapData.sigma,
                center: this.center,
                maxdist: d,
                pmin: this.pmin,
                pmax: this.pmax,
                type: "fofc",
                rmsd_supr: this.rmsd_supr
            }) : 13 == n ? (d = 3, $3Dmol.SetupMap({
                allatoms: this.atoms,
                atomsToShow: Object.keys(e),
                extendedAtoms: a,
                water: this.water,
                header: l.mapData.headerEm,
                data: l.mapData.dataEm,
                matrix: l.mapData.matrixEm,
                isovalue: l.mapData.sigmaEm,
                center: this.center,
                maxdist: d,
                pmin: this.pmin,
                pmax: this.pmax,
                type: "em",
                rmsd_supr: this.rmsd_supr
            })) : $3Dmol.SetupSurface({
                extent: s,
                allatoms: this.atoms,
                atomsToShow: Object.keys(e),
                extendedAtoms: a,
                type: n,
                threshbox: h ? 60 : this.threshbox,
                bCalcArea: this.bCalcArea
            }), this.bCalcArea) {
            this.areavalue = c.area.toFixed(2);
            var p = c.serial2area,
                m = c.scaleFactor * c.scaleFactor;
            this.resid2area = {};
            var u = {},
                f = {};
            for (var g in p) {
                var v = this.atoms[g],
                    b = v.structure + "_" + v.chain + "_" + v.resi + "_" + v.resn;
                u[v.structure] = 1, f[v.structure + "_" + v.chain] = 1, void 0 === this.resid2area[b] ? this.resid2area[b] = p[g] : this.resid2area[b] += p[g]
            }
            var y = '<table border="1" cellpadding="10" cellspacing="0">',
                _ = 1 < Object.keys(u).length ? "<th>Structure</th>" : "",
                C = 1 < Object.keys(f).length ? "<th>Chain</th>" : "";
            for (var b in y += "<tr>" + _ + C + "<th>Residue</th><th>Number</th><th>SASA (&#8491;<sup>2</sup>)</th><th>Percent Out</th><th>In/Out</th></tr>", this.resid2area) {
                var w = b.split("_");
                _ = 1 < Object.keys(u).length ? "<td>" + w[0] + "</td>" : "", C = 1 < Object.keys(f).length ? "<td>" + w[1] + "</td>" : "";
                var S = "",
                    k = "";
                if (this.resid2area[b] = (this.resid2area[b] / m).toFixed(2), this.residueArea.hasOwnProperty(w[3])) {
                    100 < (k = parseInt(this.resid2area[b] / this.residueArea[w[3]] * 100)) && (k = 100), 50 <= k && (S = "out"), k < 20 && (S = "in")
                }
                y += '<tr align="center">' + _ + C + "<td>" + w[3] + '</td><td align="right">' + w[2] + '</td><td align="right">' + this.resid2area[b] + '</td><td align="right">' + k + "%</td><td>" + S + "</td></tr>"
            }
            return y += "</table>", void(this.areahtml = y)
        }
        var A, x, R, E = c.vertices,
            D = c.faces,
            O = new THREE.Color("#00FFFF"),
            T = new THREE.Color("#00FF00"),
            H = new THREE.Color("#ff0000"),
            M = new THREE.Color("#00FFFF");
        11 != n && 12 != n && 13 != n || void 0 === this.rmsd_supr || void 0 === this.rmsd_supr.rot || (A = l.rmsd_supr.rot, x = l.rmsd_supr.trans1, R = l.rmsd_supr.trans2), (o = new THREE.Geometry).vertices = E.map(function(e) {
            var t = new THREE.Vector3(e.x, e.y, e.z);
            return 11 != n && 12 != n && 13 != n || void 0 === l.rmsd_supr || void 0 === l.rmsd_supr.rot || (t = l.transformMemPro(t, A, x, R)), t.atomid = e.atomid, t
        }), o.faces = D.map(function(i) {
            var e = ["a", "b", "c"].map(function(e) {
                if (11 == n) return O;
                if (12 == n) return o.vertices[i[e]].atomid ? T : H;
                if (13 == n) return M;
                var t = o.vertices[i[e]].atomid;
                return l.atoms[t].color
            });
            return new THREE.Face3(i.a, i.b, i.c, void 0, e)
        }), o.computeVertexNormals(!0), o.colorsNeedUpdate = !0, o.normalsNeedUpdate = !0, o.type = "Surface";
        var I = JSON.parse(JSON.stringify(o)).data.normals;
        if (h) {
            for (var $ = {}, L = (g = 0, D.length); g < L; ++g) {
                var F = D[g].a,
                    P = D[g].b,
                    N = D[g].c;
                void 0 === $[F] && ($[F] = []), $[F].push(P), $[F].push(N)
            }
            for (var F in $) {
                var z = new THREE.Geometry;
                z.vertices = [], z.faces = [];
                var q = $[F];
                for (g = 0, L = q.length; g < L; g += 2) {
                    P = q[g], N = q[g + 1];
                    z.vertices.push(new THREE.Vector3(E[F].x, E[F].y, E[F].z)), z.vertices.push(new THREE.Vector3(E[P].x, E[P].y, E[P].z)), z.vertices.push(new THREE.Vector3(E[N].x, E[N].y, E[N].z));
                    var j = [];
                    j.push(l.atoms[E[F].atomid].color), j.push(l.atoms[E[P].atomid].color), j.push(l.atoms[E[N].atomid].color);
                    var U = [];
                    U.push(I[F]), U.push(I[P]), U.push(I[N]);
                    var B = g / 2 * 3;
                    z.faces.push(new THREE.Face3(B, 1 + B, 2 + B, U, j))
                }
                z.colorsNeedUpdate = !0, z.type = "Surface";
                var G, V = new THREE.Mesh(z, new THREE.MeshPhongMaterial({
                        specular: this.frac,
                        shininess: 10,
                        emissive: 0,
                        vertexColors: THREE.VertexColors,
                        wireframe: t,
                        opacity: i,
                        transparent: !0,
                        side: THREE.DoubleSide
                    })),
                    W = new THREE.Vector3(0, 0, 0);
                for (g = 0, L = V.geometry.vertices.length; g < L; ++g) W = W.add(V.geometry.vertices[g]);
                G = l.bControlGl ? W.multiplyScalar(1 / V.geometry.vertices.length).sub(l.oriCenter).applyMatrix4(window.cam.matrixWorldInverse) : W.multiplyScalar(1 / V.geometry.vertices.length).sub(l.oriCenter).applyMatrix4(l.cam.matrixWorldInverse), V.renderOrder = 0 < l.cam_z ? -parseInt(G.z) : parseInt(G.z), V.onBeforeRender = function(e, t, i, n, o, r) {
                    for (var s, a = new THREE.Vector3(0, 0, 0), c = 0, d = this.geometry.vertices.length; c < d; ++c) a = a.add(this.geometry.vertices[c]);
                    s = l.bControlGl ? a.multiplyScalar(1 / this.geometry.vertices.length).sub(l.oriCenter).applyMatrix4(window.cam.matrixWorldInverse) : a.multiplyScalar(1 / this.geometry.vertices.length).sub(l.oriCenter).applyMatrix4(l.cam.matrixWorldInverse), this.renderOrder = 0 < l.cam_z ? -parseInt(s.z) : parseInt(s.z)
                }, l.mdl.add(V), 11 == n || 12 == n ? this.prevMaps.push(V) : 13 == n ? this.prevEmmaps.push(V) : this.prevSurfaces.push(V)
            }
        } else {
            (V = new THREE.Mesh(o, new THREE.MeshPhongMaterial({
                specular: this.frac,
                shininess: 10,
                emissive: 0,
                vertexColors: THREE.VertexColors,
                wireframe: t,
                opacity: i,
                transparent: !0,
                side: THREE.DoubleSide
            }))).renderOrder = -2, l.mdl.add(V), 11 == n || 12 == n ? this.prevMaps.push(V) : 13 == n ? this.prevEmmaps.push(V) : this.prevSurfaces.push(V)
        }
        o = D = E = c = null
    }
}, iCn3D.prototype.buildAxes = function(e) {
    var t = new THREE.Object3D,
        i = 0,
        n = 0,
        o = 0;
    this.bOpm && (i = -this.oriCenter.x, n = -this.oriCenter.y, o = -this.oriCenter.z), t.add(this.createSingleLine(new THREE.Vector3(i, n, o), new THREE.Vector3(i + e, n, o), 16711680, !1, .5)), t.add(this.createSingleLine(new THREE.Vector3(i, n, o), new THREE.Vector3(i, n + e, o), 65280, !1, .5)), t.add(this.createSingleLine(new THREE.Vector3(i, n, o), new THREE.Vector3(i, n, o + e), 255, !1, .5)), this.scene.add(t)
}, iCn3D.prototype.createLines = function(e) {
    if (void 0 !== e)
        for (var t in e)
            for (var i = e[t], n = 0, o = i.length; n < o; ++n) {
                var r = i[n],
                    s = r.position1,
                    a = r.position2,
                    c = !!r.dashed && r.dashed,
                    d = this.lineRadius,
                    l = "#" + r.color.replace(/\#/g, ""),
                    h = new THREE.Color(l);
                if (c)
                    for (var p, m, u = s.distanceTo(a), f = parseInt(u / .3), g = a.clone().sub(s).multiplyScalar(.3 / u), v = 0; v < f; ++v) v % 2 == 1 && (p = s.clone().add(g.clone().multiplyScalar(v)), m = s.clone().add(g.clone().multiplyScalar(v + 1)), "stabilizer" == t ? this.createBrick(p, m, d, h) : this.createCylinder(p, m, d, h));
                else "stabilizer" == t ? this.createBrick(s, a, d, h) : this.createCylinder(s, a, d, h)
            }
}, iCn3D.prototype.createBrick = function(e, t, i, n) {
    var o = new THREE.CylinderGeometry(1, 1, 1, 4, 1),
        r = new THREE.Mesh(o, new THREE.MeshPhongMaterial({
            specular: this.frac,
            shininess: 30,
            emissive: 0,
            color: n
        }));
    r.position.copy(e).add(t).multiplyScalar(.5), r.matrixAutoUpdate = !1, r.lookAt(t.clone().sub(e)), r.updateMatrix(), r.matrix.multiply((new THREE.Matrix4).makeScale(i, i, e.distanceTo(t))).multiply((new THREE.Matrix4).makeRotationX(.5 * Math.PI)), this.mdl.add(r)
}, iCn3D.prototype.applySymmetry = function(e) {
    var t = this,
        i = this.symmetryHash[e],
        n = e.substr(0, 1),
        o = parseInt(e.substring(1, e.indexOf(" "))),
        r = 2 * this.cylinderRadius * this.oriMaxD / 150,
        s = this.cylinderRadius * this.oriMaxD / 150;
    "I" == n && (r *= 2, s *= 2);
    for (var a = [], c = 0, d = i.length; c < d; ++c) {
        var l = i[c][0],
            h = i[c][1],
            p = i[c][2],
            m = i[c][3],
            u = i[c][4],
            f = i[c][5];
        if (t.createCylinder(l, h, r, p, 0), "C" == n || "D" == n && u == o) {
            var g = Object.keys(this.structures)[0] + "_" + f;
            if (this.chains.hasOwnProperty(g) || (g = Object.keys(this.structures)[0] + "_" + f.toLowerCase()), !this.chains.hasOwnProperty(g))
                for (var v in g = Object.keys(this.chains)[0], this.chains) {
                    var b = Object.keys(this.chains[v])[0];
                    if (this.proteins.hasOwnProperty(b)) {
                        g = v;
                        break
                    }
                }
            var y = l.clone().add(h).multiplyScalar(.5),
                _ = new THREE.Vector3,
                C = 0,
                w = h.clone().sub(l).normalize(),
                S = new THREE.Vector3(0, 0, 1),
                k = new THREE.Quaternion;
            k.setFromUnitVectors(w, S);
            var A = -9999;
            for (var x in this.chains[g]) {
                var R = this.atoms[x].coord.clone();
                _.add(R), R.sub(y).applyQuaternion(k);
                var E = R.x * R.x + R.y * R.y;
                A < E && (A = E), ++C
            }
            var D = _.multiplyScalar(1 / C),
                O = new THREE.Line3(l, h),
                T = new THREE.Vector3;
            O.closestPointToPoint(D, !0, T);
            for (var H, M, I, $, L = Math.sqrt(A), F = D.clone().sub(T).normalize().multiplyScalar(L), P = y.clone().add(l.clone().sub(y).multiplyScalar(.83)).add(F), N = y.clone().add(h.clone().sub(y).multiplyScalar(.83)).add(F), z = 2 * Math.PI / o, q = 0; q < o; ++q) {
                var j = (.5 + q) * z,
                    U = P.clone().sub(l);
                U.applyAxisAngle(w, j).add(l);
                var B = N.clone().sub(l);
                B.applyAxisAngle(w, j).add(l), t.createCylinder(U, B, s, m, 0), t.createSphereBase(U, m, s, 1, 0), t.createSphereBase(B, m, s, 1, 0), 0 == q ? (H = U, M = B) : (t.createCylinder(U, I, s, m, 0), t.createCylinder(B, $, s, m, 0)), I = U, $ = B
            }
            t.createCylinder(H, I, s, m, 0), t.createCylinder(M, $, s, m, 0)
        } else("T" == n && 3 == u || "O" == n && 4 == u || "I" == n && 5 == u) && (a.push(l), a.push(h))
    }
    if ("T" == n) {
        var G = a[0];
        t.createSphereBase(G, m, s, 1, 0);
        var V, W, Y, X = G.distanceTo(a[2]);
        W = X < (J = G.distanceTo(a[3])) ? (V = X, a[3]) : (V = J, a[2]), t.createSphereBase(W, m, s, 1, 0), t.createCylinder(G, W, s, m, 0);
        for (c = 4, d = a.length; c < d; ++c) {
            var K = a[c];
            V < G.distanceTo(K) && (t.createSphereBase(K, m, s, 1, 0), t.createCylinder(G, K, s, m, 0), t.createCylinder(W, K, s, m, 0), void 0 !== Y && t.createCylinder(a[Y], K, s, m, 0), Y = c)
        }
    } else if ("O" == n)
        for (c = 0, d = a.length; c < d; c += 2) {
            G = a[c], K = a[c + 1];
            t.createSphereBase(G, m, s, 1, 0), t.createSphereBase(K, m, s, 1, 0);
            q = c + 2;
            for (var Z = a.length; q < Z; ++q) {
                var Q = a[q];
                t.createSphereBase(Q, m, s, 1, 0), t.createCylinder(G, Q, s, m, 0), t.createCylinder(K, Q, s, m, 0)
            }
        } else if ("I" == n)
            for (c = 0, d = a.length; c < d; c += 2) {
                G = a[c], K = a[c + 1];
                t.createSphereBase(G, m, s, 1, 0), t.createSphereBase(K, m, s, 1, 0);
                for (q = c + 2, Z = a.length; q < Z; q += 2) {
                    Q = a[q];
                    var J, ee, te, ie = a[q + 1];
                    te = (J = G.distanceTo(Q)) < G.distanceTo(ie) ? (ee = Q, ie) : (ee = ie, Q), t.createSphereBase(ee, m, s, 1, 0), t.createSphereBase(te, m, s, 1, 0), t.createCylinder(G, ee, s, m, 0), t.createCylinder(K, te, s, m, 0)
                }
            }
}, iCn3D.prototype.applyPrevColor = function() {
    for (var e in this.atoms) {
        this.atoms[e].color = this.atomPrevColors[e]
    }
}, iCn3D.prototype.applyChemicalbindingOptions = function(e) {
    if (void 0 === e && (e = this.opts), "show" === e.chemicalbinding) {
        var t;
        void 0 !== this.chemicals && 0 < Object.keys(this.chemicals).length && (t = this.hash2Atoms(this.chemicals));
        if (void 0 !== t) {
            var i = this.getAtomsWithinAtom(this.atoms, t, 4);
            this.opts.hbonds = "yes", 0 < Object.keys(i).length && this.calculateChemicalHbonds(t, i, parseFloat(3.5)), this.bSetFog || this.zoominSelection(this.unionHash(t, i))
        }
    } else "hide" === e.chemicalbinding && (this.hideHbonds(), this.bSetFog || this.zoominSelection(this.atoms))
}, iCn3D.prototype.hideHbonds = function() {
    for (var e in this.opts.hbonds = "no", void 0 === this.lines && (this.lines = {}), this.lines.hbond = [], this.hbondpnts = [], this.atoms) this.atoms[e].style2 = "nothing";
    for (var e in this.sidec) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}, iCn3D.prototype.hideSaltbridge = function() {
    for (var e in this.opts.saltbridge = "no", void 0 === this.lines && (this.lines = {}), this.lines.saltbridge = [], this.saltbridgepnts = [], this.atoms) this.atoms[e].style2 = "nothing";
    for (var e in this.sidec) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}, iCn3D.prototype.hideContact = function() {
    for (var e in this.opts.contact = "no", void 0 === this.lines && (this.lines = {}), this.lines.contact = [], this.contactpnts = [], this.atoms) this.atoms[e].style2 = "nothing";
    for (var e in this.sidec) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}, iCn3D.prototype.hideHalogenPi = function() {
    for (var e in this.opts.halogen = "no", this.opts["pi-cation"] = "no", this.opts["pi-stacking"] = "no", void 0 === this.lines && (this.lines = {}), this.lines.halogen = [], this.lines["pi-cation"] = [], this.lines["pi-stacking"] = [], this.halogenpnts = [], this.picationpnts = [], this.pistackingpnts = [], this.atoms) this.atoms[e].style2 = "nothing";
    for (var e in this.sidec) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style2 = this.opts.sidec);
    for (var e in this.water) this.hAtoms.hasOwnProperty(e) && (this.atoms[e].style = this.opts.water)
}, iCn3D.prototype.applySsbondsOptions = function(e) {
    if (void 0 === e && (e = this.opts), "yes" === e.ssbonds.toLowerCase() && void 0 !== this.ssbondpnts) {
        var t, i, n = new THREE.Color(16776960),
            o = Object.keys(this.structures);
        i = this.bAlternate ? (t = this.ALTERNATE_STRUCTURE, this.ALTERNATE_STRUCTURE + 1) : (t = 0, o.length), this.lines.ssbond = [];
        for (var r = t, s = i; r < s; ++r) {
            var a = o[r];
            if (void 0 !== this.ssbondpnts[a])
                for (var c = Math.floor(this.ssbondpnts[a].length / 2) - 1; 0 <= c; c--) {
                    var d = this.ssbondpnts[a][2 * c],
                        l = this.ssbondpnts[a][2 * c + 1],
                        h = {
                            color: "#FFFF00",
                            dashed: !0
                        },
                        p = [],
                        m = [],
                        u = [],
                        f = [],
                        g = !1,
                        v = !1;
                    for (var b in this.residues[d]) "SG" === this.atoms[b].name && (u.push(this.atoms[b].coord), p.push(this.atoms[b].serial), g = !0);
                    if (!g)
                        for (var b in this.residues[d])
                            if ("CA" === this.atoms[b].name) {
                                u.push(this.atoms[b].coord), p.push(this.atoms[b].serial), v = g = !0;
                                break
                            } for (var b in g = !1, this.residues[l]) "SG" === this.atoms[b].name && (f.push(this.atoms[b].coord), m.push(this.atoms[b].serial), g = !0);
                    if (!g)
                        for (var b in this.residues[l])
                            if ("CA" === this.atoms[b].name) {
                                f.push(this.atoms[b].coord), m.push(this.atoms[b].serial), v = g = !0;
                                break
                            } for (var y = v ? 7 : 3, _ = !1, C = 0, w = u.length; C < w; ++C)
                        for (var S = 0, k = f.length; S < k; ++S)
                            if (u[C].distanceTo(f[S]) < y) {
                                _ = !0, h.serial1 = p[C], h.position1 = u[C], h.serial2 = m[S], h.position2 = f[S];
                                break
                            } if (void 0 === h.serial1 || void 0 === h.serial2 || this.dAtoms.hasOwnProperty(h.serial1) || this.dAtoms.hasOwnProperty(h.serial2))
                        if (_) {
                            var A, x, R, E = this.atoms[h.serial1].bonds.indexOf(h.serial2); - 1 != E && (A = this.atoms[h.serial1].bonds.slice(0, E), x = this.atoms[h.serial1].bonds.slice(E + 1), this.atoms[h.serial1].bonds = A.concat(x)), -1 != (E = this.atoms[h.serial2].bonds.indexOf(h.serial1)) && (A = this.atoms[h.serial2].bonds.slice(0, E), x = this.atoms[h.serial2].bonds.slice(E + 1), this.atoms[h.serial2].bonds = A.concat(x)), this.lines.ssbond.push(h), this.createCylinder(h.position1, h.position2, this.cylinderRadius, n), R = this.unionHash(R, this.residues[d]), R = this.unionHash(R, this.residues[l]);
                            var D = this.intHash(R, this.sidec);
                            for (var b in D) this.atoms[b].style2 = "stick"
                        } else this.ssbondpnts[a].splice(2 * c, 2)
                }
        }
    }
}, iCn3D.prototype.applyClbondsOptions = function(e) {
    var t = this;
    if (void 0 === e && (e = this.opts), t.bCalcCrossLink || (this.clbondpnts = {}, t.clbondResid2serial = {}, t.applyClbondsOptions_base("chemical"), t.applyClbondsOptions_base("all"), t.bCalcCrossLink = !0), "yes" === e.clbonds.toLowerCase() && "nothing" !== e.chemicals) {
        var i = new THREE.Color(25600);
        if (this.lines.clbond = [], t.residuesHashClbonds = {}, t.structures)
            for (var n = Object.keys(t.structures), o = 0, r = n.length; o < r; ++o) {
                var s = n[o];
                if (t.clbondpnts[s])
                    for (var a = 0, c = t.clbondpnts[s].length; a < c; a += 2) {
                        var d = t.clbondpnts[s][a],
                            l = t.clbondpnts[s][a + 1],
                            h = {
                                color: "#006400",
                                dashed: !1
                            };
                        if (h.serial1 = t.clbondResid2serial[d + "," + l], h.serial2 = t.clbondResid2serial[l + "," + d], t.dAtoms.hasOwnProperty(h.serial1) && t.dAtoms.hasOwnProperty(h.serial2)) {
                            h.position1 = t.atoms[h.serial1].coord, h.position2 = t.atoms[h.serial2].coord, this.lines.clbond.push(h), this.createCylinder(h.position1, h.position2, this.cylinderRadius, i);
                            var p = {};
                            p = this.unionHash(p, this.residues[d]), p = this.unionHash(p, this.residues[l]);
                            var m = this.intHash(p, this.sidec);
                            for (var u in m) this.atoms[u].style2 = "stick";
                            t.residuesHashClbonds[d] = 1, t.residuesHashClbonds[l] = 1
                        }
                    }
            }
    }
    return t.residuesHashClbonds
}, iCn3D.prototype.applyClbondsOptions_base = function(e) {
    var t = this;
    for (var i in t.chemicals) {
        var n = t.atoms[i],
            o = n.structure + "_" + n.chain,
            r = o + "_" + n.resi;
        for (var s in n.bonds) {
            var a = t.atoms[n.bonds[s]];
            if (void 0 !== a && (a.chain !== n.chain || a.resi !== n.resi)) {
                var c = a.structure + "_" + a.chain,
                    d = c + "_" + a.resi;
                if ("chemical" != e || a.het) {
                    if (t.residues[d] = t.unionHash(t.residues[d], t.residues[r]), t.chains[c] = t.unionHash(t.chains[c], t.residues[r]), t.residues[r] = t.unionHash(t.residues[r], t.residues[d]), t.chains[o] = t.unionHash(t.chains[o], t.residues[d]), "chemical" == e) continue;
                    void 0 === t.clbondpnts[n.structure] && (t.clbondpnts[n.structure] = []), t.clbondpnts[n.structure].push(r), t.clbondpnts[a.structure].push(d), t.clbondResid2serial[r + "," + d] = n.serial, t.clbondResid2serial[d + "," + r] = a.serial
                }
            }
        }
    }
}, iCn3D.prototype.applyMapOptions = function(e) {
    var t, i;
    switch (void 0 === e && (e = this.opts), e.mapwireframe) {
        case "yes":
            e.mapwireframe = !0;
            break;
        case "no":
            e.mapwireframe = !1
    }
    switch (t = this.intHash(this.dAtoms, this.hAtoms), i = this.hash2Atoms(t), e.map.toLowerCase()) {
        case "2fofc":
            this.createSurfaceRepresentation(i, 11, e.mapwireframe);
            break;
        case "fofc":
            this.createSurfaceRepresentation(i, 12, e.mapwireframe);
            break;
        case "nothing":
            this.removeMaps()
    }
}, iCn3D.prototype.applyEmmapOptions = function(e) {
    var t, i;
    switch (void 0 === e && (e = this.opts), e.emmapwireframe) {
        case "yes":
            e.emmapwireframe = !0;
            break;
        case "no":
            e.emmapwireframe = !1
    }
    switch (t = this.intHash(this.dAtoms, this.hAtoms), i = this.hash2Atoms(t), e.emmap.toLowerCase()) {
        case "em":
            this.createSurfaceRepresentation(i, 13, e.emmapwireframe);
            break;
        case "nothing":
            this.removeEmmaps()
    }
}, iCn3D.prototype.setFog = function(e) {
    var t = this.backgroundColors[this.opts.background.toLowerCase()];
    if (e) {
        var i = this.centerAtoms(this.hAtoms);
        this.maxD = i.maxD, this.maxD < 5 && (this.maxD = 5)
    }
    var n = void 0 !== this.biomtMatrices && this.biomtMatrices.length * this.cnt > this.maxatomcnt;
    "yes" === this.opts.fog ? "perspective" === this.opts.camera ? n ? (this.scene.fog = void 0, this.bSetFog = !1) : (this.scene.fog = new THREE.Fog(t, 2.5 * this.maxD, 4 * this.maxD), this.bSetFog = !0, this.camMaxDFactorFog = 3) : "orthographic" === this.opts.camera && (this.scene.fog = void 0, this.bSetFog = !1) : (this.scene.fog = void 0, this.bSetFog = !1), e && !n && this.zoominSelection()
}, iCn3D.prototype.alternateStructures = function() {
    var e = Object.keys(this.hAtoms).length,
        t = Object.keys(this.atoms).length;
    this.dAtoms = {};
    for (var i = Object.keys(this.structures), n = 0, o = i.length; n < o; ++n) {
        var r = i[n];
        if (n > this.ALTERNATE_STRUCTURE || this.ALTERNATE_STRUCTURE === o - 1 && 0 === n) {
            for (var s in this.structures[r]) {
                var a = this.structures[r][s];
                this.dAtoms = this.unionHash(this.dAtoms, this.chains[a])
            }
            this.ALTERNATE_STRUCTURE = n;
            break
        }
    }
    e < t && (this.dAtoms = this.intHash(this.dAtoms, this.hAtoms), this.bShowHighlight = !1, this.opts.rotationcenter = "highlight center"), this.removeSurfaces(), this.applySurfaceOptions(), this.removeMaps(), this.applyMapOptions(), this.removeEmmaps(), this.applyEmmapOptions(), this.draw(), this.bShowHighlight = !0, this.opts.rotationcenter = "molecule center"
}, iCn3D.prototype.updateStabilizer = function() {
    if (this.stabilizerpnts = [], void 0 !== this.pairArray)
        for (var e = 0, t = this.pairArray.length; e < t; e += 2) {
            var i = this.getResidueRepPos(this.pairArray[e]),
                n = this.getResidueRepPos(this.pairArray[e + 1]);
            this.stabilizerpnts.push(i), this.stabilizerpnts.push(n)
        }
}, iCn3D.prototype.getResidueRepPos = function(e) {
    var t, i = this.atoms[e],
        n = i.structure + "_" + i.chain + "_" + i.resi;
    if (this.proteins.hasOwnProperty(e) || this.nucleotides.hasOwnProperty(e))
        for (var o in this.residues[n]) {
            var r = this.atoms[o];
            if ("N3" === r.name) {
                t = this.atoms[o].coord;
                break
            }
            if ("CA" === r.name && "coil" == r.ss) {
                t = this.atoms[o].coord;
                break
            }
            if ("CA" === r.name && ("helix" == r.ss || "sheet" == r.ss)) {
                t = void 0 !== this.atoms[o].coord2 ? this.atoms[o].coord2 : this.atoms[o].coord;
                break
            }
        } else t = i.coord;
    return void 0 === t && (t = i.coord), t
}, iCn3D.prototype.applySurfaceOptions = function(e) {
    var t, i;
    switch (void 0 === e && (e = this.opts), e.wireframe) {
        case "yes":
            e.wireframe = !0;
            break;
        case "no":
            e.wireframe = !1
    }
    switch (e.opacity = parseFloat(e.opacity), t = this.intHash(this.dAtoms, this.hAtoms), "nothing" === e.water && (t = this.exclHash(t, this.water)), i = this.hash2Atoms(t), e.surface.toLowerCase()) {
        case "van der waals surface":
            this.createSurfaceRepresentation(i, 1, e.wireframe, e.opacity);
            break;
        case "solvent accessible surface":
            this.createSurfaceRepresentation(i, 3, e.wireframe, e.opacity);
            break;
        case "molecular surface":
            this.createSurfaceRepresentation(i, 2, e.wireframe, e.opacity);
            break;
        case "van der waals surface with context":
            this.createSurfaceRepresentation(i, 1, e.wireframe, e.opacity);
            break;
        case "solvent accessible surface with context":
            this.createSurfaceRepresentation(i, 3, e.wireframe, e.opacity);
            break;
        case "molecular surface with context":
            this.createSurfaceRepresentation(i, 2, e.wireframe, e.opacity);
            break;
        case "nothing":
            this.removeSurfaces()
    }
}, iCn3D.prototype.setHbondsContacts = function(e, t) {
    var i = t,
        n = "hbond" == t ? "hbonds" : t;
    if (this.lines[i] = [], "yes" === e[n].toLowerCase()) {
        var o, r;
        "hbond" == t ? (r = this.hbondpnts, o = "#0F0") : "saltbridge" == t ? (r = this.saltbridgepnts, o = "#0FF") : "contact" == t ? (r = this.contactpnts, o = "#222") : "halogen" == t ? (r = this.halogenpnts, o = "#F0F") : "pi-cation" == t ? (r = this.picationpnts, o = "#F00") : "pi-stacking" == t && (r = this.pistackingpnts, o = "#00F");
        for (var s = 0, a = Math.floor(r.length / 2); s < a; s++) {
            var c = {};
            c.position1 = r[2 * s].coord, c.serial1 = r[2 * s].serial, c.position2 = r[2 * s + 1].coord, c.serial2 = r[2 * s + 1].serial, c.color = o, c.dashed = !0, (void 0 === c.serial1 || void 0 === c.serial2 || this.dAtoms.hasOwnProperty(c.serial1) || this.dAtoms.hasOwnProperty(c.serial2)) && this.lines[i].push(c)
        }
    }
}, iCn3D.prototype.applyOtherOptions = function(e) {
    if (void 0 === e && (e = this.opts), void 0 !== this.lines) {
        if (this.setHbondsContacts(e, "contact"), this.setHbondsContacts(e, "halogen"), this.setHbondsContacts(e, "pi-cation"), this.setHbondsContacts(e, "pi-stacking"), this.setHbondsContacts(e, "hbond"), this.setHbondsContacts(e, "saltbridge"), void 0 !== this.pairArray && 0 < this.pairArray.length) {
            this.updateStabilizer();
            var t = this.stabilizerpnts;
            this.lines.stabilizer = [];
            for (var i = 0, n = Math.floor(t.length / 2); i < n; i++) {
                var o = {};
                o.position1 = t[2 * i], o.position2 = t[2 * i + 1], o.color = "#FFFFFF", o.dashed = !1, this.lines.stabilizer.push(o)
            }
        }
        this.createLines(this.lines)
    }
    if (void 0 !== this.prevMaps) {
        i = 0;
        for (var r = this.prevMaps.length; i < r; ++i) this.mdl.add(this.prevMaps[i])
    }
    if (void 0 !== this.prevEmmaps)
        for (i = 0, r = this.prevEmmaps.length; i < r; ++i) this.mdl.add(this.prevEmmaps[i]);
    if (void 0 !== this.prevSurfaces)
        for (i = 0, r = this.prevSurfaces.length; i < r; ++i) this.mdl.add(this.prevSurfaces[i]);
    switch (void 0 !== this.symmetryHash && void 0 !== this.symmetrytitle && this.applySymmetry(this.symmetrytitle), this.applyCenterOptions(e), e.axis.toLowerCase()) {
        case "yes":
            this.axis = !0, this.buildAxes(this.maxD / 2);
            break;
        case "no":
            this.axis = !1
    }
    switch (e.pk.toLowerCase()) {
        case "atom":
            this.pk = 1;
            break;
        case "no":
            this.pk = 0;
            break;
        case "residue":
            this.pk = 2;
            break;
        case "strand":
            this.pk = 3
    }
}, iCn3D.prototype.rebuildScene = function(e) {
    void 0 === e && (e = this.opts), this.rebuildSceneBase(e), this.setFog(), this.setCamera(), void 0 !== this.bSkipChemicalbinding && this.bSkipChemicalbinding || this.applyChemicalbindingOptions(), this.bSkipChemicalbinding = !0, "show" === e.chemicalbinding && (this.opts.hbonds = "yes"), this.applySsbondsOptions(), this.applyClbondsOptions(), this.applyDisplayOptions(this.opts, this.dAtoms), this.applyOtherOptions(), this.scene_ghost.updateMatrixWorld(!0)
}, iCn3D.prototype.draw = function() {
    this.rebuildScene(), this.bImpo && this.drawImpostorShader(), this.applyPrevColor(), void 0 !== this.biomtMatrices && 1 < this.biomtMatrices.length && (this.bAssembly ? this.drawSymmetryMates() : this.centerSelection());
    var e = void 0 !== this.hAtoms ? Object.keys(this.hAtoms).length : 0;
    0 < e && e < Object.keys(this.dAtoms).length && (this.removeHlObjects(), void 0 !== this.bShowHighlight && !this.bShowHighlight || this.addHlObjects()), !0 === this.bRender && ((this.bInitial || $("#" + this.pre + "wait").is(":visible")) && ($("#" + this.pre + "wait") && $("#" + this.pre + "wait").hide(), $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").show(), $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").show()), this.applyTransformation(this._zoomFactor, this.mouseChange, this.quaternion), this.render()), this.clearImpostors()
}, iCn3D.prototype.isHbondDonorAcceptor = function(e) {
    if ("N" == e.name && !e.het || "N" == e.elem && "Arg" == e.resn || "N" == e.elem && "Asn" == e.resn || "N" == e.elem && "Gln" == e.resn || "N" == e.elem && "Lys" == e.resn || "N" == e.elem && "Trp" == e.resn) return "donor";
    if ("O" == e.name && !e.het || "S" == e.elem && "Met" == e.resn || "O" == e.elem && "Asn" == e.resn || "O" == e.elem && "Asp" == e.resn || "O" == e.elem && "Gln" == e.resn || "O" == e.elem && "Glu" == e.resn) return "acceptor";
    if ("S" == e.elem && "Cys" == e.resn || "N" == e.elem && "His" == e.resn || "O" == e.elem && "Ser" == e.resn || "O" == e.elem && "Thr" == e.resn || "O" == e.elem && "Tyr" == e.resn) return "both";
    if ("Pro" == e.resn) return "none";
    if ("N" == e.elem) {
        if ("Asn" == e.resn || "Gln" == e.resn) return "both";
        for (var t = 0, i = 0, n = 0, o = e.bonds.length; n < o; ++n) "H" == this.atoms[e.bonds[n]].elem && ++t;
        if (2 == t) return "donor";
        for (var r = t = 0, s = e.bonds.length; r < s; ++r) {
            var a = this.atoms[e.bonds[r]];
            if ("H" != a.elem) {
                ++t;
                for (var c = 0, d = a.bonds.length; c < d; ++c) "N" == this.atoms[a.bonds[c]].elem && ++i
            }
        }
        return 1 == t ? "donor" : 2 == t ? 1 < i ? "ring" : "donor" : "none"
    }
    if ("O" == e.elem && 1 == e.bonds.length) {
        if ("Asn" == e.resn || "Gln" == e.resn) return "both";
        for (n = 0, o = e.bonds.length; n < o; ++n)
            if ("H" == this.atoms[e.bonds[n]].elem) return "donor";
        var l = this.atoms[e.bonds[0]];
        for (t = 0, n = 0, o = l.bonds.length; n < o; ++n) "O" != this.atoms[l.bonds[n]].elem && "N" != this.atoms[l.bonds[n]].elem && "S" != this.atoms[l.bonds[n]].elem || ++t;
        return 2 <= t ? "acceptor" : "both"
    }
    if ("O" != e.elem || 2 != e.bonds.length) return "both";
    for (n = 0, o = e.bonds.length; n < o; ++n)
        if ("H" == this.atoms[e.bonds[n]].elem) return "donor";
    return "acceptor"
}, iCn3D.prototype.calcAngles = function(e, t) {
    var i = [],
        n = new THREE.Vector3,
        o = new THREE.Vector3;
    n.subVectors(t.coord, e.coord);
    for (var r = 0, s = e.bonds.length; r < s; ++r) "H" != this.atoms[e.bonds[r]].elem && (o.subVectors(this.atoms[e.bonds[r]].coord, e.coord), i.push(n.angleTo(o)));
    return i
}, iCn3D.prototype.calcPlaneAngle = function(e, t) {
    var i = e,
        n = new THREE.Vector3;
    n.subVectors(t.coord, e.coord);
    for (var o = [new THREE.Vector3, new THREE.Vector3], r = 0, s = 0, a = e.bonds.length; s < a && !(1 < r); ++s) "H" != this.atoms[e.bonds[s]].elem && (i = this.atoms[e.bonds[s]], o[r++].subVectors(this.atoms[e.bonds[s]].coord, e.coord));
    if (1 === r)
        for (s = 0, a = i.bonds.length; s < a && !(1 < r); ++s) "H" != this.atoms[i.bonds[s]].elem && this.atoms[i.bonds[s]].serial != e.serial && o[r++].subVectors(this.atoms[i.bonds[s]].coord, e.coord);
    if (2 === r) {
        var c = o[0].cross(o[1]);
        return Math.abs(Math.PI / 2 - c.angleTo(n))
    }
}, iCn3D.prototype.isValidHbond = function(e, t, i) {
    var n, o, r = this.isHbondDonorAcceptor(e),
        s = this.isHbondDonorAcceptor(t),
        a = 50 * Math.PI / 180,
        c = 50 * Math.PI / 180,
        d = 90 * Math.PI / 180,
        l = 30 * Math.PI / 180;
    if ("donor" == r && ("acceptor" == s || "both" == s || "ring" == s) || "acceptor" == s && ("donor" == r || "both" == r || "ring" == r)) n = e, o = t;
    else if ("acceptor" == r && ("donor" == s || "both" == s || "ring" == s) || "donor" == s && ("acceptor" == r || "both" == r || "ring" == r)) o = e, n = t;
    else {
        if ("both" != r && "ring" != r || "both" != s && "ring" != s) return !1;
        n = e, o = t, this.nucleotides.hasOwnProperty(e.serial) && this.nucleotides.hasOwnProperty(t.serial) && ("ring" == r || "ring" == s) || (e.het || t.het) && "ring" == r && "ring" == s || (l = 90 * Math.PI / 180)
    }
    for (var h = this.calcAngles(n, o), p = 90 * Math.PI / 180, m = 0, u = h.length; m < u; ++m)
        if (Math.abs(p - h[m]) > c) return !1;
    var f = this.calcPlaneAngle(n, o);
    if (void 0 !== f && l < f) return !1;
    var g = this.calcAngles(o, n),
        v = 90 * Math.PI / 180;
    for (m = 0, u = g.length; m < u; ++m)
        if (Math.abs(v - g[m]) > a) return !1;
    var b = this.calcPlaneAngle(o, n);
    return !(void 0 !== b && d < b)
}, iCn3D.prototype.calculateChemicalHbonds = function(e, t, i, n, o, r) {
    var s = this;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        s.resid2Residhash = {};
        var a, c = {},
            d = i * i;
        for (var l in e) {
            var h = e[l],
                p = n ? "LYS" === h.resn && "N" === h.elem && "N" !== h.name || "ARG" === h.resn && ("NH1" === h.name || "NH2" === h.name) || ("GLU" === h.resn || "ASP" === h.resn) && "O" === h.elem && "O" !== h.name || h.het && ("N" === h.elem || "O" === h.elem || "S" === h.elem) : "N" === h.elem || "O" === h.elem || "S" === h.elem && (h.het || "Cys" === h.resn || "Met" === h.resn);
            (p = this.bOpm ? p && "DUM" !== h.resn : p) && (c[(a = h.structure + "_" + h.chain + "_" + h.resi) + "_" + h.name] = h)
        }
        var m = {},
            u = {},
            f = -27.888,
            g = {};
        for (var l in t) {
            h = t[l], p = n ? "LYS" === h.resn && "N" === h.elem && "N" !== h.name || "ARG" === h.resn && ("NH1" === h.name || "NH2" === h.name) || ("GLU" === h.resn || "ASP" === h.resn) && "O" === h.elem && "O" !== h.name || h.het && ("N" === h.elem || "O" === h.elem || "S" === h.elem) : "N" === h.elem || "O" === h.elem || "S" === h.elem && (h.het || "Cys" === h.resn || "Met" === h.resn);
            if (p = this.bOpm ? p && "DUM" !== h.resn : p) {
                a = h.structure + "_" + h.chain + "_" + h.resi, h.name;
                var v = h.resn + " $" + h.structure + "." + h.chain + ":" + h.resi + "@" + h.name;
                for (var b in void 0 === s.resid2Residhash[v] && (s.resid2Residhash[v] = {}), c)
                    if ((!n || ("LYS" !== h.resn && "ARG" !== h.resn || "LYS" !== c[b].resn && "ARG" !== c[b].resn) && ("GLU" !== h.resn && "ASP" !== h.resn || "GLU" !== c[b].resn && "ASP" !== c[b].resn)) && (s.crossstrucinter || h.structure == c[b].structure) && a != b.substr(0, b.lastIndexOf("_"))) {
                        var y = Math.abs(h.coord.x - c[b].coord.x);
                        if (!(i < y)) {
                            var _ = Math.abs(h.coord.y - c[b].coord.y);
                            if (!(i < _)) {
                                var C = Math.abs(h.coord.z - c[b].coord.z);
                                if (!(i < C)) {
                                    var w = y * y + _ * _ + C * C;
                                    if (!(d < w)) {
                                        if (!this.proteins.hasOwnProperty(h.serial) || !this.proteins.hasOwnProperty(c[b].serial) || "N" !== h.name && "O" !== h.name || "O" !== c[b].name && "N" !== c[b].name) {
                                            if (!this.isValidHbond(h, c[b], i)) continue
                                        } else {
                                            if (h.name === c[b].name) continue;
                                            if (h.structure == c[b].structure && h.chain == c[b].chain && Math.abs(h.resi - c[b].resi) <= 1) continue;
                                            var S, k = "N" === h.name ? h : c[b],
                                                A = "O" === h.name ? h : c[b];
                                            if ("Pro" === k.resn) continue;
                                            if (void 0 === k.hcoord) {
                                                if (!this.isValidHbond(h, c[b], i)) continue
                                            } else {
                                                var x, R = k.hcoord,
                                                    E = k.coord,
                                                    D = A.structure + "_" + A.chain + "_" + A.resi;
                                                for (var O in this.residues[D])
                                                    if ("C" === this.atoms[O].name) {
                                                        x = this.atoms[O];
                                                        break
                                                    } var T = x.coord,
                                                    H = A.coord,
                                                    M = R.distanceTo(H),
                                                    I = R.distanceTo(T),
                                                    $ = E.distanceTo(T),
                                                    L = E.distanceTo(H);
                                                if (S = M < .5 || I < .5 || $ < .5 || L < .5 ? -9.9 : f / M - f / I + f / $ - f / L, "helix" == h.ss && "helix" == c[b].ss && -.5 < S) continue
                                            }
                                        }
                                        if (!(2 < g[h.serial] || 2 < g[c[b].serial])) {
                                            void 0 === g[h.serial] ? g[h.serial] = 1 : ++g[h.serial], void 0 === g[c[b].serial] ? g[c[b].serial] = 1 : ++g[c[b].serial], "graph" !== o && (n ? (this.saltbridgepnts.push({
                                                serial: h.serial,
                                                coord: h.coord
                                            }), this.saltbridgepnts.push({
                                                serial: c[b].serial,
                                                coord: c[b].coord
                                            })) : (this.hbondpnts.push({
                                                serial: h.serial,
                                                coord: h.coord
                                            }), this.hbondpnts.push({
                                                serial: c[b].serial,
                                                coord: c[b].coord
                                            })));
                                            var F = c[b].structure + "_" + c[b].chain + "_" + c[b].resi;
                                            m = this.unionHash(m, this.residues[a]), m = this.unionHash(m, this.residues[F]), u[a] = 1, u[F] = 1;
                                            var P = c[b].resn + " $" + c[b].structure + "." + c[b].chain + ":" + c[b].resi + "@" + c[b].name,
                                                N = a + "_" + h.resn + "," + F + "_" + c[b].resn;
                                            void 0 !== s.resids2interAll[N] && void 0 !== s.resids2interAll[N].ionic && s.resids2interAll[N].ionic.hasOwnProperty(v + "," + P) || (s.resid2Residhash[v][P] = w.toFixed(1), r || (void 0 === s.resids2inter[N] && (s.resids2inter[N] = {}), void 0 === s.resids2inter[N].hbond && (s.resids2inter[N].hbond = {}), s.resids2inter[N].hbond[v + "," + P] = w.toFixed(1)), void 0 === s.resids2interAll[N] && (s.resids2interAll[N] = {}), void 0 === s.resids2interAll[N].hbond && (s.resids2interAll[N].hbond = {}), s.resids2interAll[N].hbond[v + "," + P] = w.toFixed(1))
                                        }
                                    }
                                }
                            }
                        }
                    }
            }
        }
        var z = Object.keys(u);
        if ("graph" !== o) {
            l = 0;
            for (var q = z.length; l < q; ++l)
                for (var b in this.residues[z[l]]) this.atoms[b].style2 = "stick"
        }
        return m
    }
}, iCn3D.prototype.calculateIonicInteractions = function(e, t, i, n, o, r) {
    var s = this;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        s.resid2Residhash = {};
        var a, c, d = {},
            l = {},
            h = i * i;
        for (var p in e) {
            if (!("ARG" === (v = e[p]).resn && "NH2" === v.name || "GLU" === v.resn && "OE2" === v.name || "ASP" === v.resn && "OD2" === v.name)) {
                var m = ("LYS" === v.resn || "HIS" === v.resn) && "N" === v.elem && "N" !== v.name || "ARG" === v.resn && ("NH1" === v.name || "NH2" === v.name) || v.het && -1 !== s.cationsTrimArray.indexOf(v.elem),
                    u = "GLU" === v.resn && ("OE1" === v.name || "OE2" === v.name) || "ASP" === v.resn && ("OD1" === v.name || "OD2" === v.name) || -1 !== s.nucleotidesArray.indexOf(v.resn) && ("OP1" === v.name || "OP2" === v.name || "O1P" === v.name || "O2P" === v.name) || v.het && -1 !== s.anionsTrimArray.indexOf(v.elem);
                m = this.bOpm ? m && "DUM" !== v.resn : m, u = this.bOpm ? u && "DUM" !== v.resn : u, (m || u) && (c = (a = v.structure + "_" + v.chain + "_" + v.resi) + "_" + v.name, m && (d[c] = v), u && (l[c] = v))
            }
        }
        var f = {},
            g = {};
        for (var p in t) {
            var v;
            if (!("ARG" === (v = t[p]).resn && "NH2" === v.name || "GLU" === v.resn && "OE2" === v.name || "ASP" === v.resn && "OD2" === v.name)) {
                m = ("LYS" === v.resn || "HIS" === v.resn) && "N" === v.elem && "N" !== v.name || "ARG" === v.resn && ("NH1" === v.name || "NH2" === v.name) || v.het && -1 !== s.cationsTrimArray.indexOf(v.elem), u = "GLU" === v.resn && ("OE1" === v.name || "OE2" === v.name) || "ASP" === v.resn && ("OD1" === v.name || "OD2" === v.name) || -1 !== s.nucleotidesArray.indexOf(v.resn) && ("OP1" === v.name || "OP2" === v.name || "O1P" === v.name || "O2P" === v.name) || v.het && -1 !== s.anionsTrimArray.indexOf(v.elem);
                m = this.bOpm ? m && "DUM" !== v.resn : m, u = this.bOpm ? u && "DUM" !== v.resn : u;
                if (m || u) {
                    c = (a = v.structure + "_" + v.chain + "_" + v.resi) + "_" + v.name;
                    var b = v.resn + " $" + v.structure + "." + v.chain + ":" + v.resi + "@" + v.name;
                    void 0 === s.resid2Residhash[b] && (s.resid2Residhash[b] = {});
                    var y = {};
                    m ? y = l : u && (y = d);
                    var _ = void 0,
                        C = v.structure + "_" + v.chain + "_" + v.resi;
                    m && "ARG" === v.resn && "NH1" === v.name ? _ = this.getFirstAtomObjByName(this.residues[C], "NH2") : u && "GLU" === v.resn && "OE1" === v.name ? _ = this.getFirstAtomObjByName(this.residues[C], "OE2") : u && "ASP" === v.resn && "OD1" === v.name && (_ = this.getFirstAtomObjByName(this.residues[C], "OD2"));
                    var w = void 0 === _ ? v.coord : v.coord.clone().add(_.coord).multiplyScalar(.5);
                    for (var S in y)
                        if (a != S.substr(0, S.lastIndexOf("_")) && (s.crossstrucinter || v.structure == y[S].structure)) {
                            var k = void 0,
                                A = y[S].structure + "_" + y[S].chain + "_" + y[S].resi;
                            u && "ARG" === y[S].resn && "NH1" === y[S].name ? k = this.getFirstAtomObjByName(this.residues[A], "NH2") : m && "GLU" === y[S].resn && "OE1" === y[S].name ? k = this.getFirstAtomObjByName(this.residues[A], "OE2") : m && "ASP" === y[S].resn && "OD1" === y[S].name && (k = this.getFirstAtomObjByName(this.residues[A], "OD2"));
                            var x = void 0 === k ? y[S].coord : y[S].coord.clone().add(k.coord).multiplyScalar(.5),
                                R = Math.abs(w.x - x.x);
                            if (!(i < R)) {
                                var E = Math.abs(w.y - x.y);
                                if (!(i < E)) {
                                    var D = Math.abs(w.z - x.z);
                                    if (!(i < D)) {
                                        var O = R * R + E * E + D * D;
                                        if (!(h < O)) {
                                            "graph" !== o && (this.saltbridgepnts.push({
                                                serial: v.serial,
                                                coord: w
                                            }), this.saltbridgepnts.push({
                                                serial: y[S].serial,
                                                coord: x
                                            }));
                                            var T = y[S].structure + "_" + y[S].chain + "_" + y[S].resi;
                                            f = this.unionHash(f, this.residues[a]), f = this.unionHash(f, this.residues[T]), g[a] = 1, g[T] = 1;
                                            var H = y[S].resn + " $" + y[S].structure + "." + y[S].chain + ":" + y[S].resi + "@" + y[S].name;
                                            s.resid2Residhash[b][H] = O.toFixed(1);
                                            var M = a + "_" + v.resn + "," + T + "_" + y[S].resn;
                                            r || (void 0 === s.resids2inter[M] && (s.resids2inter[M] = {}), void 0 === s.resids2inter[M].ionic && (s.resids2inter[M].ionic = {}), s.resids2inter[M].ionic[b + "," + H] = O.toFixed(1)), void 0 === s.resids2interAll[M] && (s.resids2interAll[M] = {}), void 0 === s.resids2interAll[M].ionic && (s.resids2interAll[M].ionic = {}), s.resids2interAll[M].ionic[b + "," + H] = O.toFixed(1)
                                        }
                                    }
                                }
                            }
                        }
                }
            }
        }
        var I = Object.keys(g);
        if ("graph" !== o) {
            p = 0;
            for (var $ = I.length; p < $; ++p)
                for (var S in this.residues[I[p]]) this.atoms[S].style2 = "stick", s.ions.hasOwnProperty(S) && (this.atoms[S].style2 = "sphere")
        }
        return f
    }
}, iCn3D.prototype.getHalogenDonar = function(e) {
    var t = {};
    "CL" !== e.elem && "BR" !== e.elem && "I" !== e.elem || (t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e);
    return t
}, iCn3D.prototype.getHalogenAcceptor = function(e) {
    var t = {},
        i = "N" === e.elem || "O" === e.elem || "S" === e.elem;
    (i = this.bOpm ? i && "DUM" !== e.resn : i) && (t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e);
    return t
}, iCn3D.prototype.getPi = function(e, t) {
    var i = {},
        n = e.structure + "_" + e.chain + "_" + e.resi,
        o = e.het || -1 !== $.inArray(e.resn, this.nucleotidesArray) || "PHE" === e.resn || "TYR" === e.resn || "TRP" === e.resn;
    if (t && (o = o || "HIS" === e.resn), o && !this.processedRes.hasOwnProperty(n)) {
        if (e.het) {
            var r = this.getAromaticPisLigand(n);
            i = this.unionHash(i, r)
        } else {
            var s = void 0,
                a = void 0,
                c = void 0;
            void 0 !== (c = -1 !== $.inArray(e.resn, this.nucleotidesArray) ? this.getAromaticRings(e.resn, n, "nucleotide") : this.getAromaticRings(e.resn, n, "protein")) && (s = c.piPosArray, a = c.normalArray);
            for (var d = 0, l = s.length; d < l; ++d) i[n + "_pi" + d] = {
                resn: e.resn,
                name: "pi" + d,
                coord: s[d],
                serial: e.serial,
                structure: e.structure,
                chain: e.chain,
                resi: e.resi,
                normal: a[d]
            }
        }
        this.processedRes[n] = 1
    }
    return i
}, iCn3D.prototype.getCation = function(e) {
    var t = {};
    if ("ARG" !== e.resn || "NH2" !== e.name) {
        var i = "LYS" === e.resn && "N" === e.elem && "N" !== e.name || "ARG" === e.resn && ("NH1" === e.name || "NH2" === e.name) || e.het && -1 !== this.cationsTrimArray.indexOf(e.elem);
        if (i = this.bOpm ? i && "DUM" !== e.resn : i) t[e.structure + "_" + e.chain + "_" + e.resi + "_" + e.name] = e;
        return t
    }
}, iCn3D.prototype.calculateHalogenPiInteractions = function(e, t, i, n, o, r) {
    var s = this;
    if (0 !== Object.keys(e).length && 0 !== Object.keys(t).length) {
        var a = {},
            c = {},
            d = {},
            l = {};
        if ("halogen" == o) {
            for (var h in e) {
                var p = e[h];
                a = this.unionHash(a, this.getHalogenDonar(p)), d = this.unionHash(d, this.getHalogenAcceptor(p))
            }
            for (var h in t) {
                p = t[h];
                l = this.unionHash(l, this.getHalogenDonar(p)), c = this.unionHash(c, this.getHalogenAcceptor(p))
            }
        } else if ("pi-cation" == o) {
            for (var h in this.processedRes = {}, e) {
                p = e[h];
                a = this.unionHash(a, this.getPi(p, !1)), d = this.unionHash(d, this.getCation(p))
            }
            for (var h in this.processedRes = {}, t) {
                p = t[h];
                l = this.unionHash(l, this.getPi(p, !1)), c = this.unionHash(c, this.getCation(p))
            }
        } else if ("pi-stacking" == o) {
            for (var h in this.processedRes = {}, e) {
                p = e[h];
                a = this.unionHash(a, this.getPi(p, !0))
            }
            for (var h in this.processedRes = {}, t) {
                p = t[h];
                c = this.unionHash(c, this.getPi(p, !0))
            }
        }
        var m = {},
            u = {};
        s.resid2Residhash = {};
        var f = i * i;
        for (var h in a) {
            var g = (S = a[h]).resn + " $" + S.structure + "." + S.chain + ":" + S.resi + "@" + S.name;
            for (var v in void 0 === s.resid2Residhash[g] && (s.resid2Residhash[g] = {}), c) {
                var b = c[v];
                if ((s.crossstrucinter || S.structure == b.structure) && h.substr(0, h.lastIndexOf("_")) != v.substr(0, v.lastIndexOf("_"))) {
                    if ("pi-cation" == o && "ARG" === b.resn && "NH1" === b.name) {
                        var y = b.structure + "_" + b.chain + "_" + b.resi,
                            _ = this.getFirstAtomObjByName(this.residues[y], "NH2"),
                            C = b.coord.clone().add(_.coord).multiplyScalar(.5);
                        (b = this.cloneHash(b)).coord = C
                    }
                    if ("pi-stacking" == o && void 0 !== S.normal && void 0 !== b.normal) {
                        var w = Math.abs(S.normal.dot(b.normal));
                        if (.5 < w && w < .866) continue
                    }
                    this.getHalogenPiInteractions(S, b, n, o, i, f, g, r) && (m = this.unionHash(m, this.residues[S.structure + "_" + S.chain + "_" + S.resi]), m = this.unionHash(m, this.residues[b.structure + "_" + b.chain + "_" + b.resi]), u[S.structure + "_" + S.chain + "_" + S.resi] = 1, u[b.structure + "_" + b.chain + "_" + b.resi] = 1)
                }
            }
        }
        for (var h in d) {
            var S;
            g = (S = d[h]).resn + " $" + S.structure + "." + S.chain + ":" + S.resi + "@" + S.name;
            if (void 0 === s.resid2Residhash[g] && (s.resid2Residhash[g] = {}), "pi-cation" == o && "ARG" === S.resn && "NH1" === S.name) {
                var k = S.structure + "_" + S.chain + "_" + S.resi;
                _ = this.getFirstAtomObjByName(this.residues[k], "NH2"), C = S.coord.clone().add(_.coord).multiplyScalar(.5);
                (S = this.cloneHash(S)).coord = C
            }
            for (var v in l) {
                b = l[v];
                if (s.crossstrucinter || S.structure == b.structure)
                    if (h.substr(0, h.lastIndexOf("_")) != v.substr(0, v.lastIndexOf("_"))) this.getHalogenPiInteractions(S, b, n, o, i, f, g, r) && (m = this.unionHash(m, this.residues[S.structure + "_" + S.chain + "_" + S.resi]), m = this.unionHash(m, this.residues[b.structure + "_" + b.chain + "_" + b.resi]), u[S.structure + "_" + S.chain + "_" + S.resi] = 1, u[b.structure + "_" + b.chain + "_" + b.resi] = 1)
            }
        }
        var A = Object.keys(u);
        if ("graph" !== n) {
            h = 0;
            for (var x = A.length; h < x; ++h)
                for (var v in this.residues[A[h]]) this.atoms[v].style2 = "stick", s.ions.hasOwnProperty(v) && (this.atoms[v].style2 = "sphere")
        }
        return m
    }
}, iCn3D.prototype.getHalogenPiInteractions = function(e, t, i, n, o, r, s, a) {
    var c = this,
        d = Math.abs(e.coord.x - t.coord.x);
    if (o < d) return !1;
    var l = Math.abs(e.coord.y - t.coord.y);
    if (o < l) return !1;
    var h = Math.abs(e.coord.z - t.coord.z);
    if (o < h) return !1;
    var p = d * d + l * l + h * h;
    if (r < p) return !1;
    "graph" !== i && ("halogen" == n ? (this.halogenpnts.push({
        serial: e.serial,
        coord: e.coord
    }), this.halogenpnts.push({
        serial: t.serial,
        coord: t.coord
    })) : "pi-cation" == n ? (this.picationpnts.push({
        serial: e.serial,
        coord: e.coord
    }), this.picationpnts.push({
        serial: t.serial,
        coord: t.coord
    })) : "pi-stacking" == n && (this.pistackingpnts.push({
        serial: e.serial,
        coord: e.coord
    }), this.pistackingpnts.push({
        serial: t.serial,
        coord: t.coord
    })));
    var m = t.resn + " $" + t.structure + "." + t.chain + ":" + t.resi + "@" + t.name;
    c.resid2Residhash[s][m] = p.toFixed(1);
    var u = e.structure + "_" + e.chain + "_" + e.resi + "_" + e.resn + "," + t.structure + "_" + t.chain + "_" + t.resi + "_" + t.resn;
    return a || (void 0 === c.resids2inter[u] && (c.resids2inter[u] = {}), void 0 === c.resids2inter[u][n] && (c.resids2inter[u][n] = {}), c.resids2inter[u][n][s + "," + m] = p.toFixed(1)), void 0 === c.resids2interAll[u] && (c.resids2interAll[u] = {}), void 0 === c.resids2interAll[u][n] && (c.resids2interAll[u][n] = {}), c.resids2interAll[u][n][s + "," + m] = p.toFixed(1), !0
}, iCn3D.prototype.getChainsFromAtoms = function(e) {
    var t = {};
    for (var i in e) {
        var n = this.atoms[i];
        t[n.structure + "_" + n.chain] = 1
    }
    return t
}, iCn3D.prototype.getNeighboringAtoms = function(e, t, i) {
    var n = this.getExtent(t),
        o = (n[2][0] - n[0][0]) * (n[2][0] - n[0][0]) + (n[2][1] - n[0][1]) * (n[2][1] - n[0][1]) + (n[2][2] - n[0][2]) * (n[2][2] - n[0][2]),
        r = (n[2][0] - n[1][0]) * (n[2][0] - n[1][0]) + (n[2][1] - n[1][1]) * (n[2][1] - n[1][1]) + (n[2][2] - n[1][2]) * (n[2][2] - n[1][2]),
        s = r < o ? o : r,
        a = Math.sqrt(s),
        c = (a + i) * (a + i),
        d = {};
    for (var l in e) {
        var h = this.atoms[l];
        if (!(h.serial in t))
            if (!this.bOpm || "DUM" !== h.resn)
                if (!(h.coord.x < n[0][0] - i || h.coord.x > n[1][0] + i))
                    if (!(h.coord.y < n[0][1] - i || h.coord.y > n[1][1] + i))
                        if (!(h.coord.z < n[0][2] - i || h.coord.z > n[1][2] + i))(h.coord.x - n[2][0]) * (h.coord.x - n[2][0]) + (h.coord.y - n[2][1]) * (h.coord.y - n[2][1]) + (h.coord.z - n[2][2]) * (h.coord.z - n[2][2]) < c && (d[h.serial] = h)
    }
    return d
}, iCn3D.prototype.getAtomsWithinAtom = function(e, t, i, n, o, r) {
    var s = this,
        a = this.getNeighboringAtoms(e, t, i);
    n && (s.resid2Residhash = {});
    var c = {};
    for (var d in t) {
        var l = s.atoms[d],
            h = void 0,
            p = void 0,
            m = l.structure + "_" + l.chain + "_" + l.resi;
        for (var u in s.residues[m])
            if ("CA" === s.atoms[u].name && "C" === s.atoms[u].elem || "O3'" === s.atoms[u].name || "O3*" === s.atoms[u].name) {
                h = s.atoms[u];
                break
            } void 0 === h && (h = l), n && (p = l.resn + " $" + l.structure + "." + l.chain + ":" + l.resi, void 0 === s.resid2Residhash[p] && (s.resid2Residhash[p] = {}));
        var f = l.structure + "_" + l.chain + "_" + l.resi;
        for (var g in a) {
            var v = a[g];
            if ((s.crossstrucinter || l.structure == v.structure) && !(v.serial in t || this.bOpm && "DUM" === v.resn)) {
                var b = v.coord.distanceTo(l.coord);
                if (b < i) {
                    c[v.serial] = v;
                    var y = void 0,
                        _ = void 0;
                    o && (c[l.serial] = l);
                    var C = v.structure + "_" + v.chain + "_" + v.resi;
                    for (var u in s.residues[C])
                        if ("CA" === s.atoms[u].name && "C" === s.atoms[u].elem || "O3'" === s.atoms[u].name || "O3*" === s.atoms[u].name) {
                            y = s.atoms[u];
                            break
                        } if (void 0 === y && (y = v), o && (this.contactpnts.push({
                            serial: y.serial,
                            coord: y.coord
                        }), this.contactpnts.push({
                            serial: h.serial,
                            coord: h.coord
                        })), n) {
                        var w = v.structure + "_" + v.chain + "_" + v.resi;
                        _ = v.resn + " $" + v.structure + "." + v.chain + ":" + v.resi;
                        var S = b.toFixed(1),
                            k = y.coord.distanceTo(h.coord).toFixed(1),
                            A = f + "_" + l.resn + "," + w + "_" + v.resn,
                            x = p + "," + _;
                        if ((void 0 === s.resids2interAll[A] || void 0 === s.resids2interAll[A].contact || !s.resids2interAll[A].contact.hasOwnProperty(x) || void 0 !== s.resids2interAll[A].hbond && !s.resids2interAll[A].hbond.hasOwnProperty(x) || void 0 !== s.resids2interAll[A].ionic && !s.resids2interAll[A].ionic.hasOwnProperty(x) || void 0 !== s.resids2interAll[A].halogen && !s.resids2interAll[A].halogen.hasOwnProperty(x) || void 0 !== s.resids2interAll[A]["pi-cation"] && !s.resids2interAll[A]["pi-cation"].hasOwnProperty(x) || void 0 !== s.resids2interAll[A]["pi-stacking"] && !s.resids2interAll[A]["pi-stacking"].hasOwnProperty(x)) && (void 0 === s.resid2Residhash[p][_] || S < s.resid2Residhash[p][_].split("_")[0])) {
                            var R = void 0 === s.resid2Residhash[p][_] ? 1 : parseInt(s.resid2Residhash[p][_].split("_")[4]) + 1;
                            s.resid2Residhash[p][_] = S + "_" + k + "_" + l.name + "_" + v.name + "_" + R, r || (void 0 === s.resids2inter[A] && (s.resids2inter[A] = {}), void 0 === s.resids2inter[A].contact && (s.resids2inter[A].contact = {}), s.resids2inter[A].contact[p + "," + _] = S + "_" + k + "_" + l.name + "_" + v.name + "_" + R), void 0 === s.resids2interAll[A] && (s.resids2interAll[A] = {}), void 0 === s.resids2interAll[A].contact && (s.resids2interAll[A].contact = {}), s.resids2interAll[A].contact[p + "," + _] = S + "_" + k + "_" + l.name + "_" + v.name + "_" + R
                        }
                    }
                }
            }
        }
    }
    return c
}, iCn3D.prototype.getExtent = function(e) {
    var t, i, n, o, r, s, a, c, d, l, h;
    for (h in t = i = n = 9999, o = r = s = -9999, a = c = d = l = 0, e) {
        var p = this.atoms[h];
        l++, a += p.coord.x, c += p.coord.y, d += p.coord.z, t = t < p.coord.x ? t : p.coord.x, i = i < p.coord.y ? i : p.coord.y, n = n < p.coord.z ? n : p.coord.z, o = o > p.coord.x ? o : p.coord.x, r = r > p.coord.y ? r : p.coord.y, s = s > p.coord.z ? s : p.coord.z
    }
    return [
        [t, i, n],
        [o, r, s],
        [a / l, c / l, d / l]
    ]
}, iCn3D.prototype.centerAtoms = function(e) {
    var t = new THREE.Vector3(9999, 9999, 9999),
        i = new THREE.Vector3(-9999, -9999, -9999),
        n = new THREE.Vector3,
        o = 0;
    for (var r in e) {
        var s = this.atoms[r].coord;
        n.add(s), t.min(s), i.max(s), ++o
    }
    var a = i.distanceTo(t);
    return {
        center: n.multiplyScalar(1 / o),
        maxD: a
    }
}, iCn3D.prototype.removeSurfaces = function() {
    for (var e = 0, t = this.prevSurfaces.length; e < t; ++e) this.mdl.remove(this.prevSurfaces[e]);
    this.prevSurfaces = []
}, iCn3D.prototype.removeLastSurface = function() {
    0 < this.prevSurfaces.length && (this.mdl.remove(this.prevSurfaces[this.prevSurfaces.length - 1]), this.prevSurfaces.slice(this.prevSurfaces.length - 1, 1))
}, iCn3D.prototype.removeMaps = function() {
    for (var e = 0, t = this.prevMaps.length; e < t; ++e) this.mdl.remove(this.prevMaps[e]);
    this.prevMaps = []
}, iCn3D.prototype.removeEmmaps = function() {
    for (var e = 0, t = this.prevEmmaps.length; e < t; ++e) this.mdl.remove(this.prevEmmaps[e]);
    this.prevEmmaps = []
}, iCn3D.prototype.removeLastMap = function() {
    0 < this.prevMaps.length && (this.mdl.remove(this.prevMaps[this.prevMaps.length - 1]), this.prevMaps.slice(this.prevMaps.length - 1, 1))
}, iCn3D.prototype.removeLastEmmap = function() {
    0 < this.prevEmmaps.length && (this.mdl.remove(this.prevEmmaps[this.prevEmmaps.length - 1]), this.prevEmmaps.slice(this.prevEmmaps.length - 1, 1))
}, iCn3D.prototype.zoominSelection = function(e) {
    var t = {};
    if (t._zoomFactor = 1 / this._zoomFactor, t.update = !0, this.bControlGl ? window.controls.update(t) : this.controls.update(t), void 0 === e && (e = this.hash2Atoms(this.hAtoms)), 1 < Object.keys(e).length) {
        var i = this.centerAtoms(e);
        this.maxD = i.maxD, this.maxD < 5 && (this.maxD = 5), this.center = i.center, this.setCenter(this.center), this.setCamera()
    }
}, iCn3D.prototype.centerSelection = function(e) {
    if (this.opts.rotationcenter = "highlight center", void 0 === e && (e = this.hash2Atoms(this.hAtoms)), this._zoomFactor = 1, this.mouseChange = new THREE.Vector2(0, 0), this.quaternion = new THREE.Quaternion(0, 0, 0, 1), 1 < Object.keys(e).length) {
        var t = this.centerAtoms(e);
        this.center = t.center, this.setCenter(this.center), this.setCamera()
    }
}, iCn3D.prototype.getRingNormal = function(e) {
    if (!(e.length < 3)) {
        var t = e[0].clone().sub(e[1]),
            i = e[1].clone().sub(e[2]);
        return t.cross(i).normalize()
    }
}, iCn3D.prototype.getAromaticRings = function(e, t, i) {
    var n = [],
        o = [],
        r = [],
        s = [];
    if ("nucleotide" == i) {
        var a = new THREE.Vector3,
            c = new THREE.Vector3;
        if ("A" == e.trim().toUpperCase() || "DA" == e.trim().toUpperCase() || "G" == e.trim().toUpperCase() || "DG" == e.trim().toUpperCase()) {
            for (var d in this.residues[t]) {
                "N1" == (l = this.atoms[d]).name || "C2" == l.name || "N3" == l.name || "C6" == l.name ? (a.add(l.coord), r.push(l.coord)) : "C4" == l.name || "C5" == l.name ? (a.add(l.coord), c.add(l.coord), r.push(l.coord), s.push(l.coord)) : "N7" != l.name && "C8" != l.name && "N9" != l.name || (c.add(l.coord), s.push(l.coord))
            }
            6 == r.length && (a.multiplyScalar(1 / 6), n.push(a), o.push(this.getRingNormal(r))), 5 == s.length && (c.multiplyScalar(.2), n.push(c), o.push(this.getRingNormal(s)))
        } else if ("C" == e.trim().toUpperCase() || "DC" == e.trim().toUpperCase() || "T" == e.trim().toUpperCase() || "DT" == e.trim().toUpperCase() || "U" == e.trim().toUpperCase() || "DU" == e.trim().toUpperCase()) {
            for (var d in this.residues[t]) {
                "N1" == (l = this.atoms[d]).name || "C2" == l.name || "N3" == l.name || "C6" == l.name ? (a.add(l.coord), r.push(l.coord)) : "C4" != l.name && "C5" != l.name || (a.add(l.coord), r.push(l.coord))
            }
            6 == r.length && (a.multiplyScalar(1 / 6), n.push(a), o.push(this.getRingNormal(r)))
        }
    } else if ("protein" == i) {
        a = new THREE.Vector3, c = new THREE.Vector3;
        if ("PHE" == e.toUpperCase() || "TYR" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                "CG" != (l = this.atoms[d]).name && "CD1" != l.name && "CE1" != l.name && "CZ" != l.name && "CE2" != l.name && "CD2" != l.name || (a.add(l.coord), r.push(l.coord))
            }
            6 == r.length && (a.multiplyScalar(1 / 6), n.push(a), o.push(this.getRingNormal(r)))
        } else if ("HIS" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                "CG" != (l = this.atoms[d]).name && "ND1" != l.name && "CE1" != l.name && "NE2" != l.name && "CD2" != l.name || (a.add(l.coord), r.push(l.coord))
            }
            5 == r.length && (a.multiplyScalar(.2), n.push(a), o.push(this.getRingNormal(r)))
        } else if ("TRP" == e.toUpperCase()) {
            for (var d in this.residues[t]) {
                var l;
                "CE2" == (l = this.atoms[d]).name || "CH2" == l.name || "CZ3" == l.name || "CE3" == l.name ? (a.add(l.coord), r.push(l.coord)) : "CD2" == l.name || "CE2" == l.name ? (a.add(l.coord), c.add(l.coord), r.push(l.coord), s.push(l.coord)) : "CG" != l.name && "CD1" != l.name && "NE1" != l.name || (c.add(l.coord), s.push(l.coord))
            }
            6 == r.length && (a.multiplyScalar(1 / 6), n.push(a), o.push(this.getRingNormal(r))), 5 == s.length && (c.multiplyScalar(.2), n.push(c), o.push(this.getRingNormal(s)))
        }
    }
    return {
        piPosArray: n,
        normalArray: o
    }
}, iCn3D.prototype.dfs_cycle = function(e, t, i) {
    var n = this;
    if (2 == n.ring_color[e]) return i;
    if (1 == n.ring_color[e]) {
        i++;
        var o = t;
        for (n.ring_mark[o] = i; o != e;) o = n.ring_par[o], n.ring_mark[o] = i;
        return i
    }
    if (n.ring_par[e] = t, n.ring_color[e] = 1, void 0 !== this.atoms[e])
        for (var r = 0, s = this.atoms[e].bonds.length; r < s; ++r) {
            var a = this.atoms[e].bonds[r];
            a != n.ring_par[e] && (i = this.dfs_cycle(a, e, i))
        }
    return n.ring_color[e] = 2, i
}, iCn3D.prototype.getAromaticPisLigand = function(e) {
    var t = this,
        i = {},
        n = Object.keys(this.residues[e]),
        o = n.length;
    t.ring_color = {}, t.ring_par = {}, t.ring_mark = {};
    var r = 0;
    r = this.dfs_cycle(n[1], n[0], r);
    for (var s = {}, a = 0; a < o; a++) {
        var c = n[a];
        0 != t.ring_mark[c] && (void 0 === s[t.ring_mark[c]] && (s[t.ring_mark[c]] = []), s[t.ring_mark[c]].push(c))
    }
    for (a = 1; a <= r; a++) {
        var d = new THREE.Vector3,
            l = 0,
            h = [];
        if (s.hasOwnProperty(a))
            for (var p = 0, m = s[a].length; p < m; ++p) {
                c = s[a][p];
                d.add(this.atoms[c].coord), h.push(this.atoms[c].coord), ++l
            }
        if (5 == l || 6 == l) {
            var u = h[0].clone().sub(h[1]).normalize(),
                f = h[1].clone().sub(h[2]).normalize(),
                g = h[2].clone().sub(h[3]).normalize(),
                v = u.cross(f).normalize(),
                b = v.dot(g);
            if (Math.abs(b) < .017) {
                d.multiplyScalar(1 / l);
                var y = this.atoms[c];
                i[e + "_pi" + c] = {
                    resn: y.resn,
                    name: "pi" + c,
                    coord: d,
                    serial: y.serial,
                    structure: y.structure,
                    chain: y.chain,
                    resi: y.resi,
                    normal: v
                }
            }
        }
    }
    return i
}, $.ui.dialog.prototype._makeDraggableBase || ($.ui.dialog.prototype._makeDraggableBase = $.ui.dialog.prototype._makeDraggable, $.ui.dialog.prototype._makeDraggable = function() {
    this._makeDraggableBase(), this.uiDialog.draggable("option", "containment", !1)
});
var iCn3DUI = function(e) {
    var t = this;
    this.REVISION = "2.17.7", t.bFullUi = !0, t.cfg = e, t.divid = t.cfg.divid, t.pre = t.divid + "_", void 0 === t.cfg.command && (t.cfg.command = ""), void 0 === t.cfg.width && (t.cfg.width = "100%"), void 0 === t.cfg.height && (t.cfg.height = "100%"), void 0 === t.cfg.resize && (t.cfg.resize = !0), void 0 === t.cfg.showmenu && (t.cfg.showmenu = !0), void 0 === t.cfg.showtitle && (t.cfg.showtitle = !0), void 0 === t.cfg.showcommand && (t.cfg.showcommand = !0), void 0 === t.cfg.simplemenu && (t.cfg.simplemenu = !1), void 0 === t.cfg.mobilemenu && (t.cfg.mobilemenu = !1), void 0 === t.cfg.closepopup && (t.cfg.closepopup = !1), void 0 === t.cfg.showanno && (t.cfg.showanno = !1), void 0 === t.cfg.showseq && (t.cfg.showseq = !1), void 0 === t.cfg.showalignseq && (t.cfg.showalignseq = !1), void 0 === t.cfg.show2d && (t.cfg.show2d = !1), void 0 === t.cfg.showsets && (t.cfg.showsets = !1), void 0 === t.cfg.rotate && (t.cfg.rotate = "right"), t.inputid = "", t.setOperation = "or", t.currSelectedSets = [], t.WIDTH = 400, t.HEIGHT = 400, t.RESIDUE_WIDTH = 10, t.isMobile() || t.cfg.mobilemenu ? t.MENU_HEIGHT = 0 : t.MENU_HEIGHT = 40, t.LOG_HEIGHT = 40, t.MENU_WIDTH = 750, t.LESSWIDTH = 20, t.LESSWIDTH_RESIZE = 20, t.LESSHEIGHT = 20, t.ROT_DIR = "right", t.bHideSelection = !0, t.CMD_HEIGHT = .8 * t.LOG_HEIGHT, t.EXTRAHEIGHT = t.MENU_HEIGHT + t.CMD_HEIGHT, null != t.cfg.showmenu && 0 == t.cfg.showmenu && (t.EXTRAHEIGHT -= t.MENU_HEIGHT), null != t.cfg.showcommand && 0 == t.cfg.showcommand && (t.EXTRAHEIGHT -= t.CMD_HEIGHT), t.GREY8 = "#888888", t.GREYB = "#BBBBBB", t.GREYC = "#CCCCCC", t.GREYD = "#DDDDDD", t.ORANGE = "#FFA500", t.cmd2menu = {}, t.ssValue = 3, t.coilValue = 3, t.contactValue = 11, t.contactInsideValue = 12, t.hbondValue = 13, t.hbondInsideValue = 14, t.ssbondValue = 4, t.ionicValue = 5, t.ionicInsideValue = 6, t.clbondValue = 15, t.halogenValue = 17, t.halogenInsideValue = 18, t.picationValue = 19, t.picationInsideValue = 20, t.pistackingValue = 21, t.pistackingInsideValue = 22, t.contactColor = "888", t.contactInsideColor = "FFF", t.hbondColor = "0F0", t.hbondInsideColor = "FFF", t.ssbondColor = "FFA500", t.ionicColor = "0FF", t.ionicInsideColor = "FFF", t.clbondColor = "006400", t.halogenColor = "F0F", t.halogenInsideColor = "FFF", t.picationColor = "F00", t.picationInsideColor = "FFF", t.pistackingColor = "00F", t.pistackingInsideColor = "FFF", t.hideedges = 1, t.force = 4, t.baseUrl = "https://www.ncbi.nlm.nih.gov/Structure/", t.divStr = "<div id='" + t.pre, t.divNowrapStr = "<div style='white-space:nowrap'>", t.spanNowrapStr = "<span style='white-space:nowrap'>", t.inputTextStr = "<input type='text' ", t.inputFileStr = "<input type='file' ", t.inputRadioStr = "<input type='radio' ", t.inputCheckStr = "<input type='checkbox' ", t.buttonStr = "<button id='" + t.pre, t.postfix = "2", t.closeAc = {
        collapsible: !0,
        active: !1
    }, t.b62ResArray = ["A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V", "B", "Z", "X", "*"], t.b62Matrix = [
        [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0, -4],
        [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1, -4],
        [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1, -4],
        [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1, -4],
        [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2, -4],
        [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1, -4],
        [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4],
        [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1, -4],
        [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1, -4],
        [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1, -4],
        [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1, -4],
        [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1, -4],
        [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1, -4],
        [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1, -4],
        [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2, -4],
        [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0, -4],
        [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0, -4],
        [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2, -4],
        [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1, -4],
        [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1, -4],
        [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1, -4],
        [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1, -4],
        [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1, -4],
        [-4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 1]
    ], t.opts = {}, t.opts.camera = "perspective", t.opts.background = "transparent", t.opts.color = "chain", t.opts.proteins = "ribbon", t.opts.sidec = "nothing", t.opts.nucleotides = "nucleotide cartoon", t.opts.surface = "nothing", t.opts.opacity = "1.0", t.opts.wireframe = "no", t.opts.map = "nothing", t.opts.mapwireframe = "yes", t.opts.emmap = "nothing", t.opts.emmapwireframe = "yes", t.opts.chemicals = "stick", t.opts.water = "nothing", t.opts.ions = "sphere", t.opts.hbonds = "no", t.opts.saltbridge = "no", t.opts.contact = "no", t.opts.halogen = "no", t.opts["pi-cation"] = "no", t.opts["pi-stacking"] = "no", t.opts.ssbonds = "yes", t.opts.clbonds = "yes", t.opts.rotationcenter = "molecule center", t.opts.axis = "no", t.opts.fog = "no", t.opts.slab = "no", t.opts.pk = "residue", t.opts.chemicalbinding = "hide", void 0 !== t.cfg.align && (t.opts.color = "identity"), void 0 !== t.cfg.chainalign && (t.opts.color = "identity"), void 0 !== t.cfg.blast_rep_id && (t.opts.color = "conservation"), void 0 !== t.cfg.cid && (t.opts.color = "atom"), void 0 !== t.cfg.options && jQuery.extend(t.opts, t.cfg.options), t.init(), t.modifyIcn3d()
};
if (iCn3DUI.prototype = {
        constructor: iCn3DUI,
        init: function() {
            var e = this;
            e.bSelectResidue = !1, e.bSelectAlignResidue = !1, e.selectedResidues = {}, e.bAnnoShown = !1, e.bSetChainsAdvancedMenu = !1, e.b2DShown = !1, e.bCrashed = !1, e.prevCommands = "", e.bAddCommands = !0, e.bAddLogs = !0, e.bNotLoadStructure = !1, $("#" + e.pre + "dl_annotations").html(""), $("#" + e.pre + "dl_2ddgm").html("")
        },
        modifyIcn3d: function() {
            this.modifyIcn3dshowPicking()
        },
        switchHighlightLevelUp: function() {
            var e = this;
            if (e.icn3d.bShift || e.icn3d.bCtrl || e.icn3d.removeHlObjects(), void 0 !== e.icn3d.pickedAtomList && 0 !== Object.keys(e.icn3d.pickedAtomList).length || (e.icn3d.pickedAtomList = e.icn3d.cloneHash(e.icn3d.hAtoms)), 0 === Object.keys(e.icn3d.pickedAtomList).length && (e.icn3d.pickedAtomList = e.icn3d.dAtoms), 1 === e.icn3d.highlightlevel) {
                e.icn3d.highlightlevel = 2;
                var t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.residues[t.structure + "_" + t.chain + "_" + t.resi]) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.residues[t.structure + "_" + t.chain + "_" + t.resi])
            } else if (2 === e.icn3d.highlightlevel) {
                e.icn3d.highlightlevel = 3;
                t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.selectStrandHelixFromAtom(t)) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.selectStrandHelixFromAtom(t))
            } else if (3 === e.icn3d.highlightlevel) {
                var i;
                if (void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi) {
                    e.icn3d.highlightlevel = 4;
                    t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                    i = e.icn3d.select3ddomainFromAtom(t), e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, i) : e.icn3d.hAtoms = e.icn3d.cloneHash(i)
                }
                if (void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || 0 == Object.keys(i).length) {
                    e.icn3d.highlightlevel = 5;
                    t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                    e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.chains[t.structure + "_" + t.chain]) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.chains[t.structure + "_" + t.chain])
                }
            } else if (4 === e.icn3d.highlightlevel) {
                e.icn3d.highlightlevel = 5;
                t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.chains[t.structure + "_" + t.chain]) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.chains[t.structure + "_" + t.chain])
            } else if (5 === e.icn3d.highlightlevel || 6 === e.icn3d.highlightlevel) {
                e.icn3d.highlightlevel = 6;
                t = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                e.icn3d.bShift || e.icn3d.bCtrl || (e.icn3d.hAtoms = {});
                for (var n = e.icn3d.structures[t.structure], o = 0, r = n.length; o < r; ++o) e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.chains[n[o]])
            }
            e.icn3d.addHlObjects(), e.updateHlAll()
        },
        switchHighlightLevelDown: function() {
            var e = this;
            if (e.icn3d.removeHlObjects(), void 0 !== e.icn3d.pickedAtomList && 0 !== Object.keys(e.icn3d.pickedAtomList).length || (e.icn3d.pickedAtomList = e.icn3d.cloneHash(e.icn3d.hAtoms)), 2 !== e.icn3d.highlightlevel && 1 !== e.icn3d.highlightlevel || 1 !== Object.keys(e.icn3d.pickedAtomList).length) {
                if (3 === e.icn3d.highlightlevel) {
                    var t = {};
                    for (var i in e.icn3d.pickedAtomList) residueid = e.icn3d.atoms[i].structure + "_" + e.icn3d.atoms[i].chain + "_" + e.icn3d.atoms[i].resi, t[residueid] = 1;
                    if (1 === Object.keys(t).length) {
                        e.icn3d.highlightlevel = 2;
                        var n = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                        e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.residues[n.structure + "_" + n.chain + "_" + n.resi]) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.residues[n.structure + "_" + n.chain + "_" + n.resi])
                    }
                } else if (4 === e.icn3d.highlightlevel) {
                    e.icn3d.highlightlevel = 3;
                    n = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                    e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.selectStrandHelixFromAtom(n)) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.selectStrandHelixFromAtom(n))
                } else if (5 === e.icn3d.highlightlevel) {
                    var o;
                    if (void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi) {
                        e.icn3d.highlightlevel = 4;
                        n = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                        o = e.icn3d.select3ddomainFromAtom(n), e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, o) : e.icn3d.hAtoms = e.icn3d.cloneHash(o)
                    }
                    if (void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || 0 == Object.keys(o).length) {
                        e.icn3d.highlightlevel = 3;
                        n = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                        e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.selectStrandHelixFromAtom(n)) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.selectStrandHelixFromAtom(n))
                    }
                } else if (6 === e.icn3d.highlightlevel) {
                    e.icn3d.highlightlevel = 5;
                    n = e.icn3d.getFirstAtomObj(e.icn3d.pickedAtomList);
                    e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.chains[n.structure + "_" + n.chain]) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.chains[n.structure + "_" + n.chain])
                }
            } else e.icn3d.highlightlevel = 1, e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.pickedAtomList), e.icn3d.bShift || e.icn3d.bCtrl ? e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.pickedAtomList) : e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.pickedAtomList);
            e.icn3d.addHlObjects(), e.updateHlAll()
        },
        switchHighlightLevel: function() {
            var t = this;
            $(document).bind("keydown", function(e) {
                38 === e.keyCode ? (e.preventDefault(), 0 != Object.keys(t.icn3d.pickedAtomList).length && t.icn3d.hAtoms.hasOwnProperty(t.icn3d.getFirstAtomObj(t.icn3d.pickedAtomList).serial) || (t.icn3d.pickedAtomList = t.icn3d.cloneHash(t.icn3d.hAtoms)), t.switchHighlightLevelUp(), t.setLogCmd("highlight level up", !0)) : 40 === e.keyCode && (e.preventDefault(), 0 != Object.keys(t.icn3d.pickedAtomList).length && t.icn3d.hAtoms.hasOwnProperty(t.icn3d.getFirstAtomObj(t.icn3d.pickedAtomList).serial) || (t.icn3d.pickedAtomList = t.icn3d.cloneHash(t.icn3d.hAtoms)), t.switchHighlightLevelDown(), t.setLogCmd("highlight level down", !0))
            })
        },
        allCustomEvents: function() {},
        setCustomDialogs: function() {
            return ""
        },
        modifyIcn3dshowPicking: function() {
            var r = this;
            iCn3D.prototype.rayCaster = function(e, t) {
                (r = r.setIcn3dui(this.id)).icn3d.rayCasterBase(e, t)
            }, iCn3D.prototype.showPicking = function(e, t, i) {
                if (void 0 !== (r = r.setIcn3dui(this.id)).cfg.cid && (this.pk = 1), r.icn3d.highlightlevel = r.icn3d.pk, this.showPickingBase(e, t, i), void 0 !== t && void 0 !== i) {
                    null != r.cfg.showmenu && 1 == r.cfg.showmenu && (i += r.MENU_HEIGHT);
                    var n = 1 == this.pk ? e.resn + e.resi + "@" + e.name : e.resn + e.resi;
                    void 0 !== r.icn3d.structures && 1 < Object.keys(r.icn3d.structures).length ? (n = e.structure + "_" + e.chain + " " + n, $("#" + r.pre + "popup").css("width", "140px")) : $("#" + r.pre + "popup").css("width", "80px"), $("#" + r.pre + "popup").html(n), $("#" + r.pre + "popup").css("top", i).css("left", t + 20).show()
                } else {
                    r.updateHlAll();
                    var o = {};
                    o.factor = this._zoomFactor, o.mouseChange = this.mouseChange, o.quaternion = {}, o.quaternion._x = parseFloat(this.quaternion._x).toPrecision(5), o.quaternion._y = parseFloat(this.quaternion._y).toPrecision(5), o.quaternion._z = parseFloat(this.quaternion._z).toPrecision(5), o.quaternion._w = parseFloat(this.quaternion._w).toPrecision(5), r.bAddCommands && (this.commands.push("pickatom " + e.serial + "|||" + r.getTransformationStr(o)), this.optsHistory.push(this.cloneHash(this.opts)), this.optsHistory[this.optsHistory.length - 1].hlatomcount = Object.keys(this.hAtoms).length, r.isSessionStorageSupported() && r.saveCommandsToSession(), r.STATENUMBER = this.commands.length), this.logs.push("pickatom " + e.serial + " (chain: " + e.structure + "_" + e.chain + ", residue: " + e.resn + ", number: " + e.resi + ", atom: " + e.name + ")"), $("#" + r.pre + "logtext").length && $("#" + r.pre + "logtext").val("> " + this.logs.join("\n> ") + "\n> ").scrollTop($("#" + r.pre + "logtext")[0].scrollHeight), r.bSphereCalc = !1, r.bHbondCalc = !1
                }
            }
        },
        show3DStructure: function() {
            var h = this;
            return h.deferred = $.Deferred(function() {
                h.setViewerWidthHeight(), h.isMobile() || h.cfg.mobilemenu ? h.setTopMenusHtmlMobile(h.divid) : h.setTopMenusHtml(h.divid), h.isSessionStorageSupported() && h.getCommandsBeforeCrash();
                var e = h.WIDTH,
                    t = h.HEIGHT;
                h.oriWidth = e, h.oriHeight = t, h.allEventFunctions(), h.allCustomEvents();
                var i = 0;
                if (null != h.cfg.showmenu && !h.cfg.showmenu || (i += h.MENU_HEIGHT), null != h.cfg.showcommand && !h.cfg.showcommand || (i += h.CMD_HEIGHT), null != h.cfg.showmenu && 0 == h.cfg.showmenu ? h.hideMenu() : h.showMenu(), null != h.cfg.showtitle && 0 == h.cfg.showtitle ? $("#" + h.pre + "title").hide() : $("#" + h.pre + "title").show(), $("#" + h.pre + "viewer").width(e).height(parseInt(t) + i), $("#" + h.pre + "canvas").width(e).height(parseInt(t)), $("#" + h.pre + "canvas").resizable({
                        resize: function(e, t) {
                            h.WIDTH = $("#" + h.pre + "canvas").width(), h.HEIGHT = $("#" + h.pre + "canvas").height(), void 0 === h.icn3d || h.icn3d.bFullscreen || h.resizeCanvas(h.WIDTH, h.HEIGHT, !0)
                        }
                    }), h.icn3d = new iCn3D(h.pre + "canvas"), h.cfg.replay ? (h.bReplay = 1, $("#" + h.pre + "replay").show()) : (h.bReplay = 0, $("#" + h.pre + "replay").hide()), h.isMobile() && (h.icn3d.threshbox = 60), h.cfg.controlGl && (h.icn3d.bControlGl = !0, h.icn3d.container = h.icn3d.bControlGl ? $(document) : $("#" + h.icn3d.id)), h.icn3d.setControl(), h.handleContextLost(), h.icn3d.setWidthHeight(e, t), h.icn3d.ori_chemicalbinding = h.opts.chemicalbinding, void 0 !== h.cfg.bCalphaOnly && (h.icn3d.bCalphaOnly = h.cfg.bCalphaOnly), h.icn3d.opts = h.icn3d.cloneHash(h.opts), h.STATENUMBER = h.icn3d.commands.length, h.isSessionStorageSupported() && h.bCrashed) {
                    h.bCrashed = !1;
                    var n = h.commandsBeforeCrash.split("|||")[0],
                        o = n.substr(n.lastIndexOf(" ") + 1);
                    if (o === h.cfg.mmtfid || o === h.cfg.pdbid || o === h.cfg.opmid || o === h.cfg.mmdbid || o === h.cfg.gi || o === h.cfg.blast_rep_id || o === h.cfg.cid || o === h.cfg.mmcifid || o === h.cfg.align || o === h.cfg.chainalign) return void h.loadScript(h.commandsBeforeCrash, !0)
                }
                if (h.icn3d.molTitle = "", void 0 !== h.cfg.url) {
                    var r = h.cfg.url.split("|"),
                        s = r[0],
                        a = r[1];
                    h.icn3d.molTitle = "", h.inputid = a, h.setLogCmd("load url " + a + " | type " + s, !0), h.downloadUrl(a, s)
                } else if (void 0 !== h.cfg.mmtfid) h.inputid = h.cfg.mmtfid, h.setLogCmd("load mmtf " + h.cfg.mmtfid, !0), h.downloadMmtf(h.cfg.mmtfid);
                else if (void 0 !== h.cfg.pdbid) h.inputid = h.cfg.pdbid, h.setLogCmd("load pdb " + h.cfg.pdbid, !0), h.downloadPdb(h.cfg.pdbid);
                else if (void 0 !== h.cfg.opmid) h.inputid = h.cfg.opmid, h.setLogCmd("load opm " + h.cfg.opmid, !0), h.downloadOpm(h.cfg.opmid);
                else if (void 0 !== h.cfg.mmdbid) h.inputid = h.cfg.mmdbid, h.setLogCmd("load mmdb " + h.cfg.mmdbid + " | parameters " + h.cfg.inpara, !0), h.downloadMmdb(h.cfg.mmdbid);
                else if (void 0 !== h.cfg.gi) h.setLogCmd("load gi " + h.cfg.gi, !0), h.downloadGi(h.cfg.gi);
                else if (void 0 !== h.cfg.blast_rep_id)
                    if ("Query" !== h.cfg.query_id.substr(0, 5)) h.inputid = h.cfg.query_id + "_" + h.cfg.blast_rep_id, h.setLogCmd("load seq_struct_ids " + h.cfg.query_id + "," + h.cfg.blast_rep_id, !0), h.downloadBlast_rep_id(h.cfg.query_id + "," + h.cfg.blast_rep_id);
                    else if (void 0 !== h.cfg.rid) {
                    a = "https://blast.ncbi.nlm.nih.gov/Blast.cgi?RESULTS_FILE=on&FORMAT_TYPE=JSON2_S&FORMAT_OBJECT=Alignment&CMD=Get&RID=" + h.cfg.rid;
                    $.ajax({
                        url: a,
                        dataType: "json",
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            for (var t = 0, i = e.BlastOutput2.length; t < i; ++t)
                                if (e.BlastOutput2[t].report.results.search.query_id == h.cfg.query_id) {
                                    for (var n = e.BlastOutput2[t].report.results.search.hits, o = void 0, r = 0, s = n.length; r < s; ++r) {
                                        for (var a = n[r], c = !1, d = 0, l = a.description.length; d < l; ++d) {
                                            if (a.description[d].accession == h.cfg.blast_rep_id) {
                                                c = !0;
                                                break
                                            }
                                        }
                                        if (c) {
                                            o = (o = a.hsps[0].qseq).replace(/-/g, "");
                                            break
                                        }
                                    }
                                    void 0 !== o && (h.cfg.query_id = o), h.inputid = h.cfg.query_id + "_" + h.cfg.blast_rep_id, h.setLogCmd("load seq_struct_ids " + h.cfg.query_id + "," + h.cfg.blast_rep_id, !0), h.downloadBlast_rep_id(h.cfg.query_id + "," + h.cfg.blast_rep_id);
                                    break
                                }
                        },
                        error: function(e, t, i) {
                            this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : alert("The RID " + h.cfg.rid + " may have expired...")
                        }
                    })
                } else alert('BLAST "RID" is a required parameter...');
                else if (void 0 !== h.cfg.cid) {
                    h.inputid = h.cfg.cid;
                    a = "https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/" + h.inputid + "/description/jsonp";
                    $.ajax({
                        url: a,
                        dataType: "jsonp",
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            void 0 !== e.InformationList && void 0 !== e.InformationList.Information && (h.icn3d.molTitle = e.InformationList.Information[0].Title)
                        },
                        error: function(e, t, i) {
                            this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                        }
                    }), h.setLogCmd("load cid " + h.cfg.cid, !0), h.downloadCid(h.cfg.cid)
                } else if (void 0 !== h.cfg.mmcifid) h.inputid = h.cfg.mmcifid, h.setLogCmd("load mmcif " + h.cfg.mmcifid, !0), h.downloadMmcif(h.cfg.mmcifid);
                else if (void 0 !== h.cfg.align) {
                    var c = h.cfg.align.split(",");
                    6 === c.length ? h.inputid = c[0] + "_" + c[3] : 2 === c.length && (h.inputid = c[0] + "_" + c[1]), h.setLogCmd("load alignment " + h.cfg.align + " | parameters " + h.cfg.inpara, !0), h.downloadAlignment(h.cfg.align)
                } else void 0 !== h.cfg.chainalign ? (h.icn3d.bChainAlign = !0, h.inputid = h.cfg.chainalign, h.setLogCmd("load chainalignment " + h.cfg.chainalign + " | parameters " + h.cfg.inpara, !0), h.downloadChainAlignment(h.cfg.chainalign)) : void 0 !== h.cfg.command && "" !== h.cfg.command ? h.loadScript(h.cfg.command) : h.openDialog(h.pre + "dl_mmdbid", "Please input MMDB or PDB ID")
            }), h.deferred.promise()
        },
        hideMenu: function() {
            var e = this;
            void 0 !== $("#" + e.pre + "mnlist")[0] && ($("#" + e.pre + "mnlist")[0].style.display = "none"), void 0 !== $("#" + e.pre + "mnLogSection")[0] && ($("#" + e.pre + "mnLogSection")[0].style.display = "none"), void 0 !== $("#" + e.pre + "cmdlog")[0] && ($("#" + e.pre + "cmdlog")[0].style.display = "none"), $("#" + e.pre + "title")[0].style.margin = "10px 0 0 10px"
        },
        showMenu: function() {
            var e = this;
            void 0 !== $("#" + e.pre + "mnlist")[0] && ($("#" + e.pre + "mnlist")[0].style.display = "block"), void 0 !== $("#" + e.pre + "mnLogSection")[0] && ($("#" + e.pre + "mnLogSection")[0].style.display = "block"), void 0 !== $("#" + e.pre + "cmdlog")[0] && ($("#" + e.pre + "cmdlog")[0].style.display = "block")
        },
        saveSelectionIfSelected: function(e, t) {
            var i = this;
            if (i.bSelectResidue || i.bSelectAlignResidue) {
                var n = $("#" + i.pre + "seq_command_name2").val().replace(/\s+/g, "_");
                "" === n && (n = $("#" + i.pre + "alignseq_command_name").val().replace(/\s+/g, "_")), "" !== n && i.saveSelection(n, n), i.bSelectResidue = !1, i.bSelectAlignResidue = !1
            }
        },
        updateGraphCOlor: function() {
            var e = this;
            if (void 0 !== e.graphStr) {
                var t = JSON.parse(e.graphStr),
                    i = {};
                for (var n in e.icn3d.residues) {
                    var o = e.icn3d.getFirstAtomObj(e.icn3d.residues[n]);
                    i[n] = o.color.getHexString().toUpperCase()
                }
                for (var r = {}, s = 0, a = t.nodes.length; s < a; ++s) {
                    var c = t.nodes[s],
                        d = c.r.split("_");
                    n = d[2] + "_" + d[3] + "_" + d[4];
                    c.c = i[n], r[c.id] = n
                }
                for (s = 0, a = t.links.length; s < a; ++s) {
                    var l = t.links[s];
                    if (l.v == e.ssValue || l.v == e.coilValue) {
                        n = r[l.target];
                        l.c = i[n]
                    }
                }
                e.graphStr = JSON.stringify(t)
            }
            e.bGraph && e.drawGraph(e.graphStr, e.pre + "dl_graph"), e.bLinegraph && e.drawLineGraph(e.graphStr), e.bScatterplot && e.drawLineGraph(e.graphStr, !0)
        },
        setOption: function(e, t) {
            var i = this;
            if (i.icn3d.opts[e] = t, i.saveSelectionIfSelected(), "color" === e) {
                i.icn3d.setColorByOptions(i.icn3d.opts, i.icn3d.hAtoms), i.icn3d.draw();
                var n = i.icn3d.getResiduesFromCalphaAtoms(i.icn3d.hAtoms);
                i.changeSeqColor(Object.keys(n)), i.updateGraphCOlor()
            } else "surface" === e || "opacity" === e || "wireframe" === e ? ("opacity" !== e && "wireframe" !== e || i.icn3d.removeLastSurface(), i.icn3d.applySurfaceOptions()) : "map" === e || "mapwireframe" === e ? ("mapwireframe" === e && i.icn3d.removeLastMap(), i.icn3d.applyMapOptions()) : "emmap" === e || "emmapwireframe" === e ? ("emmapwireframe" === e && i.icn3d.removeLastEmmap(), i.icn3d.applyEmmapOptions()) : "chemicalbinding" === e && (i.icn3d.bSkipChemicalbinding = !1), i.icn3d.draw()
        },
        setStyle: function(e, t) {
            var i = this,
                n = {};
            switch (e) {
                case "proteins":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.proteins), Object.keys(i.icn3d.hAtoms).length < Object.keys(i.icn3d.proteins).length && 0;
                    break;
                case "sidec":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.sidec);
                    break;
                case "nucleotides":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.nucleotides), Object.keys(i.icn3d.hAtoms).length < Object.keys(i.icn3d.nucleotides).length && 0;
                    break;
                case "chemicals":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.chemicals);
                    break;
                case "ions":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.ions);
                    break;
                case "water":
                    n = i.icn3d.intHash(i.icn3d.hAtoms, i.icn3d.water)
            }
            if ("sidec" === e)
                for (var o in n) i.icn3d.atoms[o].style2 = t;
            else
                for (var o in n) i.icn3d.atoms[o].style = t;
            i.icn3d.opts[e] = t, i.saveSelectionIfSelected(), i.icn3d.draw()
        },
        setLogCmd: function(e, t, i) {
            var n = this;
            if ("" === e.trim()) return !1; - 1 !== (s = e.indexOf("|||")) && (e = e.substr(0, s));
            var o = {};
            if (o.factor = n.icn3d._zoomFactor, o.mouseChange = n.icn3d.mouseChange, o.quaternion = {}, o.quaternion._x = parseFloat(n.icn3d.quaternion._x).toPrecision(5), o.quaternion._y = parseFloat(n.icn3d.quaternion._y).toPrecision(5), o.quaternion._z = parseFloat(n.icn3d.quaternion._z).toPrecision(5), o.quaternion._w = parseFloat(n.icn3d.quaternion._w).toPrecision(5), t && n.bAddCommands)
                if (n.STATENUMBER < n.icn3d.commands.length) {
                    var r = n.icn3d.commands[n.STATENUMBER - 1],
                        s = r.indexOf("|||");
                    e !== r.substr(0, s) && (n.icn3d.commands = n.icn3d.commands.slice(0, n.STATENUMBER), n.icn3d.commands.push(e + "|||" + n.getTransformationStr(o)), n.icn3d.optsHistory.push(n.icn3d.cloneHash(n.icn3d.opts)), n.icn3d.optsHistory[n.icn3d.optsHistory.length - 1].hlatomcount = Object.keys(n.icn3d.hAtoms).length, n.isSessionStorageSupported() && n.saveCommandsToSession(), n.STATENUMBER = n.icn3d.commands.length)
                } else n.icn3d.commands.push(e + "|||" + n.getTransformationStr(o)), n.icn3d.optsHistory.push(n.icn3d.cloneHash(n.icn3d.opts)), void 0 !== n.icn3d.hAtoms && (n.icn3d.optsHistory[n.icn3d.optsHistory.length - 1].hlatomcount = Object.keys(n.icn3d.hAtoms).length), n.isSessionStorageSupported() && n.saveCommandsToSession(), n.STATENUMBER = n.icn3d.commands.length;
            n.bAddLogs && n.cfg.showcommand && (n.icn3d.logs.push(e), $("#" + n.pre + "logtext").val("> " + n.icn3d.logs.join("\n> ") + "\n> ").scrollTop($("#" + n.pre + "logtext")[0].scrollHeight)), n.adjustIcon()
        },
        renderStructure: function() {
            var i = this;
            if (i.icn3d.bInitial) {
                if (jQuery.extend(i.icn3d.opts, i.opts), i.icn3d.bOpm && (void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign)) {
                    var e = i.selectedPdbid + "_MEM_1";
                    for (var t in i.icn3d.residues[e]) {
                        var n = i.icn3d.atoms[t];
                        n.style = "stick", n.color = i.icn3d.atomColors[n.name], i.icn3d.atomPrevColors[t] = n.color, i.icn3d.dAtoms[t] = 1
                    }
                }
                if (void 0 !== i.cfg.command && "" !== i.cfg.command ? i.icn3d.bRender = !1 : i.oneStructurePerWindow(), i.icn3d.draw(), i.icn3d.bOpm) {
                    var o = new THREE.Vector3(1, 0, 0),
                        r = -.5 * Math.PI;
                    i.icn3d.setRotation(o, r)
                }
                1 < Object.keys(i.icn3d.structures).length ? $("#" + i.pre + "alternate").show() : $("#" + i.pre + "alternate").hide()
            } else i.saveSelectionIfSelected(), i.icn3d.draw();
            if (i.icn3d.bInitial && void 0 !== i.cfg.command && "" !== i.cfg.command) {
                if (1 == Object.keys(i.icn3d.structures).length) {
                    var s = Object.keys(i.icn3d.structures)[0];
                    i.cfg.command = i.cfg.command.replace(new RegExp("!", "g"), s + "_")
                }
                i.loadScript(i.cfg.command)
            }
            void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign || i.bRealign || i.bInputfile && "pdb" == i.InputfileType && 2 <= Object.keys(i.icn3d.structures).length ? ($("#" + i.pre + "mn2_alternateWrap").show(), $("#" + i.pre + "mn2_realignWrap").show()) : ($("#" + i.pre + "mn2_alternateWrap").hide(), $("#" + i.pre + "mn2_realignWrap").hide()), setTimeout(function() {
                if (i.icn3d.bInitial) {
                    if (i.cfg.showsets && i.showSets(), void 0 !== i.cfg.align || void 0 !== i.cfg.chainalign) {
                        var e = i.pre + "selection";
                        $("#" + e).show(), $("#" + e + "_expand").hide(), $("#" + e + "_shrink").show();
                        var t = i.getAlignSequencesAnnotations(Object.keys(i.icn3d.alnChains), void 0, void 0, !1);
                        $("#" + i.pre + "dl_sequence2").html(t.sequencesHtml), $("#" + i.pre + "dl_sequence2").width(i.RESIDUE_WIDTH * t.maxSeqCnt + 200)
                    }
                    if (i.cfg.showanno) {
                        i.setLogCmd("view annotations", !0), i.showAnnotations()
                    }
                    i.cfg.closepopup && i.closeDialogs()
                } else i.updateHlAll();
                0 < $("#" + i.pre + "atomsCustom").length && $("#" + i.pre + "atomsCustom")[0].blur(), i.icn3d.bInitial = !1
            }, 0)
        },
        closeDialogs: function() {
            var e = this;
            e.cfg.notebook ? ($("#" + e.pre + "dl_selectannotations").hide(), $("#" + e.pre + "dl_alignment").hide(), $("#" + e.pre + "dl_2ddgm").hide(), $("#" + e.pre + "dl_definedsets").hide(), $("#" + e.pre + "dl_graph").hide(), $("#" + e.pre + "dl_linegraph").hide(), $("#" + e.pre + "dl_scatterplot").hide(), $("#" + e.pre + "dl_allinteraction").hide()) : ($("#" + e.pre + "dl_selectannotations").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_selectannotations").dialog("isOpen") && $("#" + e.pre + "dl_selectannotations").dialog("close"), $("#" + e.pre + "dl_alignment").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_alignment").dialog("isOpen") && $("#" + e.pre + "dl_alignment").dialog("close"), $("#" + e.pre + "dl_2ddgm").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_2ddgm").dialog("isOpen") && $("#" + e.pre + "dl_2ddgm").dialog("close"), $("#" + e.pre + "dl_definedsets").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_definedsets").dialog("isOpen") && $("#" + e.pre + "dl_definedsets").dialog("close"), $("#" + e.pre + "dl_graph").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_graph").dialog("isOpen") && $("#" + e.pre + "dl_graph").dialog("close"), $("#" + e.pre + "dl_linegraph").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_linegraph").dialog("isOpen") && $("#" + e.pre + "dl_linegraph").dialog("close"), $("#" + e.pre + "dl_scatterplot").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_scatterplot").dialog("isOpen") && $("#" + e.pre + "dl_scatterplot").dialog("close"), $("#" + e.pre + "dl_allinteraction").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_allinteraction").dialog("isOpen") && $("#" + e.pre + "dl_allinteraction").dialog("close"), e.resizeCanvas(e.WIDTH, e.HEIGHT, !0))
        },
        exportCustomAtoms: function() {
            for (var e = this, t = "", i = void 0 !== e.icn3d.defNames2Residues ? Object.keys(e.icn3d.defNames2Residues).sort() : [], n = 0, o = i.length; n < o; ++n) {
                var r = i[n],
                    s = e.icn3d.defNames2Residues[r];
                e.icn3d.defNames2Descr[r];
                e.icn3d.defNames2Command[r].replace(/,/g, ", "), t += r + "\tselect ", t += e.residueids2spec(s), t += "\n"
            }
            for (n = 0, o = (i = void 0 !== e.icn3d.defNames2Atoms ? Object.keys(e.icn3d.defNames2Atoms).sort() : []).length; n < o; ++n) {
                r = i[n];
                var a = e.icn3d.defNames2Atoms[r];
                e.icn3d.defNames2Descr[r];
                e.icn3d.defNames2Command[r].replace(/,/g, ", "), 0 < (s = e.atoms2residues(a)).length && (t += r + "\tselect ", t += e.residueids2spec(s), t += "\n")
            }
            return t
        },
        atoms2residues: function(e) {
            for (var t = {}, i = 0, n = e.length; i < n; ++i) t[e[i]] = 1;
            var o = this.icn3d.getResiduesFromAtoms(t);
            return Object.keys(o)
        },
        residueids2spec: function(e) {
            var t = "";
            if (void 0 !== e) {
                for (var i, n, o, r, s, a, c, d = e.sort(function(e, t) {
                        if ("" !== e && !isNaN(e)) return parseInt(e) - parseInt(t);
                        var i = e.lastIndexOf("_"),
                            n = t.lastIndexOf("_");
                        if (e.substr(0, i) < t.substr(0, n)) return -1;
                        if (e.substr(0, i) > t.substr(0, n)) return 1;
                        if (e.substr(0, i) == t.substr(0, n)) {
                            if (parseInt(e.substr(i + 1)) < parseInt(t.substr(n + 1))) return -1;
                            if (parseInt(e.substr(i + 1)) > parseInt(t.substr(n + 1))) return 1;
                            if (parseInt(e.substr(i + 1)) == parseInt(t.substr(n + 1))) return 0
                        }
                    }), l = "", h = 0, p = 1 != Object.keys(this.icn3d.structures).length, m = 0, u = d.length; m < u; ++m) {
                    var f = d[m];
                    o = f.lastIndexOf("_"), i = f.substr(0, o), n = parseInt(f.substr(o + 1)), r = l.indexOf("_"), s = l.substr(0, r), a = l.substr(r + 1), l !== i ? (0 < m && (t += h === c ? p ? "$" + s + "." + a + ":" + c + " or " : "." + a + ":" + c + " or " : p ? "$" + s + "." + a + ":" + c + "-" + h + " or " : "." + a + ":" + c + "-" + h + " or "), c = n) : l === i && n !== h + 1 && (t += h === c ? p ? "$" + s + "." + a + ":" + c + " or " : "." + a + ":" + c + " or " : p ? "$" + s + "." + a + ":" + c + "-" + h + " or " : "." + a + ":" + c + "-" + h + " or ", c = n), l = i, h = n
                }
                r = l.indexOf("_"), s = l.substr(0, r), a = l.substr(r + 1), t += h === c ? p ? "$" + s + "." + a + ":" + c : "." + a + ":" + c : p ? "$" + s + "." + a + ":" + c + "-" + h : "." + a + ":" + c + "-" + h
            }
            return t
        },
        getAtomsFromSets: function(e) {
            for (var t = {}, i = 0, n = e.length; i < n; ++i) {
                commandname = e[i];
                var o = this.getAtomsFromSet(commandname);
                t = this.icn3d.unionHash(t, o)
            }
            return t
        },
        getAtomsFromSet: function(e) {
            var t = this,
                i = {};
            if (void 0 === t.icn3d.defNames2Residues.proteins && t.showSets(), -1 !== Object.keys(t.icn3d.chains).indexOf(e)) i = t.icn3d.unionHash(i, t.icn3d.chains[e]);
            else {
                if (void 0 !== t.icn3d.defNames2Residues[e] && 0 < t.icn3d.defNames2Residues[e].length)
                    for (var n = 0, o = t.icn3d.defNames2Residues[e].length; n < o; ++n) {
                        var r = t.icn3d.defNames2Residues[e][n];
                        i = t.icn3d.unionHash(i, t.icn3d.residues[r])
                    }
                if (void 0 !== t.icn3d.defNames2Atoms[e] && 0 < t.icn3d.defNames2Atoms[e].length)
                    for (n = 0, o = t.icn3d.defNames2Atoms[e].length; n < o; ++n) {
                        i[t.icn3d.defNames2Atoms[e][n]] = 1
                    }
            }
            return i
        },
        getAtomsFromNameArray: function(e) {
            for (var t = this, i = {}, n = 0, o = e.length; n < o; ++n)
                if ("non-selected" === e[n]) {
                    var r = {};
                    for (var n in t.icn3d.atoms) !t.icn3d.hAtoms.hasOwnProperty(n) && t.icn3d.dAtoms.hasOwnProperty(n) && (r[n] = t.icn3d.atoms[n]);
                    i = t.icn3d.unionHash(i, r)
                } else i = "selected" === e[n] ? t.icn3d.unionHash(i, t.icn3d.hash2Atoms(t.icn3d.hAtoms)) : t.icn3d.unionHash(i, t.icn3d.hash2Atoms(t.getAtomsFromSet(e[n])));
            return 0 == e.length && (i = t.icn3d.atoms), i
        },
        pickCustomSphere: function(e, t, i, n, o, r) {
            var s = this;
            if (!n) {
                var a, c, d = "select zone cutoff " + e + " | sets " + t + " " + i + " | " + n;
                o && (d = "interactions " + e + " | sets " + t + " " + i + " | " + n, s.icn3d.opts.contact = "yes"), a = s.getAtomsFromNameArray(t), c = s.getAtomsFromNameArray(i);
                var l, h = s.pickCustomSphere_base(e, a, c, n, o, r, d),
                    p = Object.keys(h.residues);
                s.icn3d.hAtoms = {};
                for (var m = 0, u = p.length; m < u; ++m) {
                    var f = p[m];
                    for (var g in s.icn3d.residues[f]) s.icn3d.hAtoms[g] = 1
                }
                var v = s.icn3d.getFirstAtomObj(a);
                void 0 !== v && (l = "sphere." + v.chain + ":" + s.icn3d.residueName2Abbr(v.resn.substr(0, 3)).trim() + v.resi + "-" + e + "A", o && (l = "interactions." + v.chain + ":" + s.icn3d.residueName2Abbr(v.resn.substr(0, 3)).trim() + v.resi + "-" + $("#" + s.pre + "contactthreshold").val() + "A"), s.addCustomSelection(p, l, l, d, !0)), s.saveSelectionIfSelected(), s.icn3d.draw()
            }
        },
        pickCustomSphere_base: function(e, t, i, n, o, r, s) {
            var a, c = this;
            o ? (a = c.icn3d.getAtomsWithinAtom(c.icn3d.intHash2Atoms(c.icn3d.dAtoms, i), c.icn3d.intHash2Atoms(c.icn3d.dAtoms, t), parseFloat(e), !0, o), c.resid2ResidhashInteractions = c.icn3d.cloneHash(c.icn3d.resid2Residhash)) : (a = c.icn3d.getAtomsWithinAtom(i, t, parseFloat(e), !0, o), c.resid2ResidhashSphere = c.icn3d.cloneHash(c.icn3d.resid2Residhash));
            var d = {};
            for (var l in a) {
                var h = a[l];
                if (!c.icn3d.bOpm || "DUM" !== h.resn) d[h.structure + "_" + h.chain + "_" + h.resi] = 1
            }
            return {
                residues: d,
                resid2Residhash: c.icn3d.resid2Residhash
            }
        },
        showHbonds: function(e, t, i, n, o, r) {
            var s = this;
            if (!n) {
                var a, c, d, l;
                c = o ? (a = "saltbridge", "salt bridge " + e + " | sets " + t + " " + i + " | " + n) : (a = "hbonds", "hbonds " + e + " | sets " + t + " " + i + " | " + n), s.icn3d.opts[a] = "yes", s.icn3d.opts.water = "dot", d = s.getAtomsFromNameArray(t), l = s.getAtomsFromNameArray(i);
                var h = s.icn3d.getFirstAtomObj(d);
                if (0 < Object.keys(l).length && 0 < Object.keys(d).length) {
                    var p, m = s.icn3d.calculateChemicalHbonds(s.icn3d.intHash2Atoms(s.icn3d.dAtoms, l), s.icn3d.intHash2Atoms(s.icn3d.dAtoms, d), parseFloat(e), o);
                    p = o ? (s.resid2ResidhashSaltbridge = s.icn3d.cloneHash(s.icn3d.resid2Residhash), "all atoms that have salt bridges with the selected atoms") : (s.resid2ResidhashHbond = s.icn3d.cloneHash(s.icn3d.resid2Residhash), "all atoms that are hydrogen-bonded with the selected atoms");
                    var u = {};
                    for (var f in m) {
                        u[s.icn3d.atoms[f].structure + "_" + s.icn3d.atoms[f].chain + "_" + s.icn3d.atoms[f].resi] = 1
                    }
                    for (var g in s.icn3d.hAtoms = {}, u)
                        for (var f in s.icn3d.residues[g]) s.icn3d.hAtoms[f] = 1, s.icn3d.atoms[f].style2 = "stick";
                    var v = a + "_" + h.serial;
                    s.addCustomSelection(Object.keys(u), v, p, c, !0);
                    i = [v];
                    s.saveSelectionIfSelected(), s.icn3d.draw()
                }
            }
        },
        showIonicInteractions: function(e, t, i, n, o, r) {
            var s = this;
            if (!n) {
                var a, c, d, l;
                a = "saltbridge", c = "salt bridge " + e + " | sets " + t + " " + i + " | " + n, s.icn3d.opts[a] = "yes", d = s.getAtomsFromNameArray(t), l = s.getAtomsFromNameArray(i);
                var h = s.icn3d.getFirstAtomObj(d);
                if (0 < Object.keys(l).length && 0 < Object.keys(d).length) {
                    var p = s.icn3d.calculateIonicInteractions(s.icn3d.intHash2Atoms(s.icn3d.dAtoms, l), s.icn3d.intHash2Atoms(s.icn3d.dAtoms, d), parseFloat(e), o);
                    s.resid2ResidhashSaltbridge = s.icn3d.cloneHash(s.icn3d.resid2Residhash), 0;
                    var m = {};
                    for (var u in p) {
                        m[s.icn3d.atoms[u].structure + "_" + s.icn3d.atoms[u].chain + "_" + s.icn3d.atoms[u].resi] = 1
                    }
                    for (var f in s.icn3d.hAtoms = {}, m)
                        for (var u in s.icn3d.residues[f]) s.icn3d.hAtoms[u] = 1, s.icn3d.atoms[u].style2 = "stick", s.icn3d.ions.hasOwnProperty(u) && (s.icn3d.atoms[u].style2 = "sphere");
                    var g = a + "_" + h.serial;
                    s.addCustomSelection(Object.keys(m), g, "all atoms that have ionic interactions with the selected atoms", c, !0);
                    i = [g];
                    s.saveSelectionIfSelected(), s.icn3d.draw()
                }
            }
        },
        showHalogenPi: function(e, t, i, n, o, r) {
            var s = this;
            if (!n) {
                var a, c, d = r + " " + e + " | sets " + t + " " + i + " | " + n;
                s.icn3d.opts[r] = "yes", a = s.getAtomsFromNameArray(t), c = s.getAtomsFromNameArray(i);
                var l = s.icn3d.getFirstAtomObj(a);
                if (0 < Object.keys(c).length && 0 < Object.keys(a).length) {
                    var h, p = s.icn3d.calculateHalogenPiInteractions(s.icn3d.intHash2Atoms(s.icn3d.dAtoms, a), s.icn3d.intHash2Atoms(s.icn3d.dAtoms, c), parseFloat(e), o, r);
                    "halogen" == r ? (s.resid2ResidhashHalogen = s.icn3d.cloneHash(s.icn3d.resid2Residhash), h = "all atoms that have halogen bonds with the selected atoms") : "pi-cation" == r ? (s.resid2ResidhashPication = s.icn3d.cloneHash(s.icn3d.resid2Residhash), h = "all atoms that have pi-cation interactions with the selected atoms") : "pi-stacking" == r && (s.resid2ResidhashPistacking = s.icn3d.cloneHash(s.icn3d.resid2Residhash), h = "all atoms that have pi-stacking with the selected atoms");
                    var m = {};
                    for (var u in p) {
                        m[s.icn3d.atoms[u].structure + "_" + s.icn3d.atoms[u].chain + "_" + s.icn3d.atoms[u].resi] = 1
                    }
                    for (var f in s.icn3d.hAtoms = {}, m)
                        for (var u in s.icn3d.residues[f]) s.icn3d.hAtoms[u] = 1, s.icn3d.atoms[u].style2 = "stick", s.icn3d.ions.hasOwnProperty(u) && (s.icn3d.atoms[u].style2 = "sphere");
                    var g = r + "_" + l.serial;
                    s.addCustomSelection(Object.keys(m), g, h, d, !0);
                    i = [g];
                    s.saveSelectionIfSelected(), s.icn3d.draw()
                }
            }
        },
        showSsbonds: function() {
            var e = this;
            e.icn3d.opts.ssbonds = "yes";
            for (var t = {}, i = Object.keys(e.icn3d.structures), n = 0, o = i.length; n < o; ++n) {
                var r = i[n];
                if (void 0 !== e.icn3d.ssbondpnts[r])
                    for (var s = 0, a = Math.floor(e.icn3d.ssbondpnts[r].length / 2); s < a; s++) {
                        var c = e.icn3d.ssbondpnts[r][2 * s],
                            d = e.icn3d.ssbondpnts[r][2 * s + 1];
                        t[c] = 1, t[d] = 1, e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.residues[c]), e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.residues[d])
                    }
            }
            if (0 < Object.keys(t).length) {
                e.addCustomSelection(Object.keys(t), "ssbonds", "all atoms that have disulfide bonds", "disulfide bonds", !0);
                e.saveSelectionIfSelected(), e.icn3d.draw()
            }
        },
        showClbonds: function() {
            this.icn3d.opts.clbonds = "yes";
            var e = this.icn3d.applyClbondsOptions();
            for (var t in e) this.icn3d.hAtoms = this.icn3d.unionHash(this.icn3d.hAtoms, this.icn3d.residues[t]);
            if (0 < Object.keys(e).length) {
                this.addCustomSelection(Object.keys(e), "clbonds", "all atoms that have cross-linkages", "cross linkage", !0);
                this.saveSelectionIfSelected(), this.icn3d.draw()
            }
        },
        addLine: function(e, t, i, n, o, r, s, a, c) {
            var d = {};
            d.position1 = new THREE.Vector3(e, t, i), d.position2 = new THREE.Vector3(n, o, r), d.color = s, d.dashed = a, void 0 === this.icn3d.lines[c] && (this.icn3d.lines[c] = []), void 0 !== c ? this.icn3d.lines[c].push(d) : this.icn3d.lines.custom.push(d), this.icn3d.removeHlObjects()
        },
        back: function() {
            var e = this;
            e.backForward = !0, e.STATENUMBER--, e.bAddCommands = !1, e.bAddLogs = !1, e.bNotLoadStructure = !0, e.STATENUMBER < 1 ? e.STATENUMBER = 1 : e.execCommands(0, e.STATENUMBER - 1, e.STATENUMBER, !0), e.adjustIcon(), e.bAddCommands = !0, e.bAddLogs = !0
        },
        forward: function() {
            var e = this;
            e.backForward = !0, e.STATENUMBER++, e.bAddCommands = !1, e.bAddLogs = !1, e.bNotLoadStructure = !0, e.STATENUMBER > e.icn3d.commands.length ? e.STATENUMBER = e.icn3d.commands.length : e.execCommands(0, e.STATENUMBER - 1, e.STATENUMBER, !0), e.adjustIcon(), e.bAddCommands = !0, e.bAddLogs = !0
        },
        toggleSelection: function() {
            var e = this;
            if (e.bHideSelection) {
                for (var t in e.icn3d.dAtoms) e.icn3d.hAtoms.hasOwnProperty(t) && delete e.icn3d.dAtoms[t];
                e.bHideSelection = !1
            } else e.icn3d.dAtoms = e.icn3d.unionHash(e.icn3d.dAtoms, e.icn3d.hAtoms), e.bHideSelection = !0;
            e.icn3d.draw()
        },
        adjustIcon: function() {
            var e = this;
            1 === e.STATENUMBER ? $("#" + e.pre + "back").hasClass("icn3d-middleIcon") && ($("#" + e.pre + "back").toggleClass("icn3d-middleIcon"), $("#" + e.pre + "back").toggleClass("icn3d-endIcon")) : $("#" + e.pre + "back").hasClass("icn3d-endIcon") && ($("#" + e.pre + "back").toggleClass("icn3d-middleIcon"), $("#" + e.pre + "back").toggleClass("icn3d-endIcon")), e.STATENUMBER === e.icn3d.commands.length ? $("#" + e.pre + "forward").hasClass("icn3d-middleIcon") && ($("#" + e.pre + "forward").toggleClass("icn3d-middleIcon"), $("#" + e.pre + "forward").toggleClass("icn3d-endIcon")) : $("#" + e.pre + "forward").hasClass("icn3d-endIcon") && ($("#" + e.pre + "forward").toggleClass("icn3d-middleIcon"), $("#" + e.pre + "forward").toggleClass("icn3d-endIcon"))
        },
        toggle: function(e, t, i, n) {
            $("#" + e).toggleClass("ui-icon-plus"), $("#" + e).toggleClass("ui-icon-minus"), $("#" + t).toggleClass("ui-icon-plus"), $("#" + t).toggleClass("ui-icon-minus"), $("#" + e).toggleClass("icn3d-shown"), $("#" + e).toggleClass("icn3d-hidden"), $("#" + t).toggleClass("icn3d-shown"), $("#" + t).toggleClass("icn3d-hidden"), $("#" + i).toggleClass("icn3d-shown"), $("#" + i).toggleClass("icn3d-hidden"), $("#" + n).toggleClass("icn3d-shown"), $("#" + n).toggleClass("icn3d-hidden")
        },
        selectComplement: function() {
            var e = {};
            for (var t in this.icn3d.atoms) this.icn3d.hAtoms.hasOwnProperty(t) || (e[t] = 1);
            this.icn3d.hAtoms = this.icn3d.cloneHash(e), this.updateHlAll()
        },
        saveCommandsToSession: function() {
            var e = this.icn3d.commands.join("\n"),
                t = decodeURIComponent(e);
            sessionStorage.setItem("commands", t)
        },
        addChainLabels: function(e) {
            var t = this,
                i = t.icn3d.intHash(t.icn3d.hAtoms, e);
            void 0 === t.icn3d.labels.chain && (t.icn3d.labels.chain = []);
            var n = t.icn3d.getChainsFromAtoms(i);
            for (var o in n) {
                var r = {};
                r.position = t.icn3d.centerAtoms(t.icn3d.chains[o]).center;
                var s = o.indexOf("_"),
                    a = o.substr(s + 1),
                    c = t.getProteinName(o);
                20 < c.length && (c = c.substr(0, 20) + "..."), r.text = "Chain " + a + ": " + c, r.size = 18;
                var d = t.icn3d.getFirstCalphaAtomObj(t.icn3d.chains[o]).color.getHexString().toUpperCase();
                r.color = "CCCCCC" === d || "C8C8C8" === d ? "#888888" : "#" + d, r.background = "#CCCCCC", t.icn3d.labels.chain.push(r)
            }
            t.icn3d.removeHlObjects()
        },
        addTerminiLabels: function(e) {
            var t, i = this;
            t = i.icn3d.unionHash(t, i.icn3d.proteins), t = i.icn3d.unionHash(t, i.icn3d.nucleotides);
            var n = i.icn3d.intHash(i.icn3d.dAtoms, t),
                o = i.icn3d.intHash(n, e);
            void 0 === i.icn3d.labels.chain && (i.icn3d.labels.chain = []);
            var r = i.icn3d.getChainsFromAtoms(o);
            for (var s in r) {
                var a = i.icn3d.intHash(n, i.icn3d.chains[s]),
                    c = Object.keys(a),
                    d = i.icn3d.atoms[c[0]],
                    l = i.icn3d.atoms[c[c.length - 1]],
                    h = {},
                    p = {};
                h.position = d.coord, p.position = l.coord, h.text = "N-", p.text = "C-", i.icn3d.nucleotides.hasOwnProperty(d.serial) && (h.text = "5'", p.text = "3'"), h.size = 18, p.size = 18;
                var m = d.color.getHexString().toUpperCase(),
                    u = l.color.getHexString().toUpperCase();
                h.color = "CCCCCC" === m || "C8C8C8" === m ? "#888888" : "#" + m, p.color = "CCCCCC" === u || "C8C8C8" === u ? "#888888" : "#" + u, h.background = "#CCCCCC", p.background = "#CCCCCC", i.icn3d.labels.chain.push(h), i.icn3d.labels.chain.push(p)
            }
            i.icn3d.removeHlObjects()
        },
        getCommandsBeforeCrash: function() {
            window.addEventListener("load", function() {
                sessionStorage.setItem("good_exit", "pending")
            }), window.addEventListener("beforeunload", function() {
                sessionStorage.setItem("good_exit", "true")
            }), sessionStorage.getItem("good_exit") && "pending" === sessionStorage.getItem("good_exit") && (this.isMac() || (this.bCrashed = !0), this.commandsBeforeCrash = sessionStorage.getItem("commands"), this.commandsBeforeCrash || (this.commandsBeforeCrash = ""))
        },
        addLineFromPicking: function(e) {
            var t = this,
                i = $("#" + t.pre + e + "color").val(),
                n = (t.icn3d.pAtom.coord.x, t.icn3d.pAtom2.coord.x, t.icn3d.pAtom.coord.y, t.icn3d.pAtom2.coord.y, t.icn3d.pAtom.coord.z, t.icn3d.pAtom2.coord.z, "stabilizer" != e);
            t.setLogCmd("add line | x1 " + t.icn3d.pAtom.coord.x.toPrecision(4) + " y1 " + t.icn3d.pAtom.coord.y.toPrecision(4) + " z1 " + t.icn3d.pAtom.coord.z.toPrecision(4) + " | x2 " + t.icn3d.pAtom2.coord.x.toPrecision(4) + " y2 " + t.icn3d.pAtom2.coord.y.toPrecision(4) + " z2 " + t.icn3d.pAtom2.coord.z.toPrecision(4) + " | color " + i + " | dashed " + n + " | type " + e, !0), t.addLine(t.icn3d.pAtom.coord.x, t.icn3d.pAtom.coord.y, t.icn3d.pAtom.coord.z, t.icn3d.pAtom2.coord.x, t.icn3d.pAtom2.coord.y, t.icn3d.pAtom2.coord.z, i, n, e), t.icn3d.pickpair = !1
        },
        setEntrezLinks: function(e) {
            var t, i = Object.keys(this.icn3d.structures);
            1 === i.length ? (t = "https://www.ncbi.nlm.nih.gov/" + e + "/?term=" + i[0], this.setLogCmd("Entrez " + e + " about PDB " + i[0] + ": " + t, !1), window.open(t, "_blank")) : 2 === i.length && (t = "https://www.ncbi.nlm.nih.gov/" + e + "/?term=" + i[0] + " OR " + i[1], this.setLogCmd("Entrez " + e + " about PDB " + i[0] + " OR " + i[1] + ": " + t, !1), window.open(t, "_blank"))
        },
        shareLink: function(a) {
            var c = this,
                d = c.shareLinkUrl(),
                e = 4e3 < d.length || 0 !== d.indexOf("http");
            a && (d += "&random=" + parseInt(1e3 * Math.random()));
            var l = Object.keys(c.icn3d.structures).join("_");
            if (a) {
                if (c.bInputfile || e) return void c.saveFile(l + "_image_icn3d_loadable.png", "png")
            } else {
                if (c.bInputfile) return void alert("Share Link does NOT work when the data is from custom files. Please save 'iCn3D PNG Image' in the File menu and open it in iCn3D.");
                if (e) return void alert("The url is more than 4000 characters and may not work. Please save 'iCn3D PNG Image' or 'State File' and open them in iCn3D.");
                c.setLogCmd("share link: " + d, !1)
            }
            $.ajax({
                url: "https://firebasedynamiclinks.googleapis.com/v1/shortLinks?key=AIzaSyBxl9CgM0dY5lagHL4UOhEpLWE1fuwdnvc",
                type: "POST",
                data: {
                    longDynamicLink: "https://icn3d.page.link/?link=" + encodeURIComponent(d)
                },
                dataType: "json",
                success: function(e) {
                    var t = "Problem in getting shortened URL";
                    if (void 0 !== e.shortLink && (t = e.shortLink, a)) {
                        var i = t.split("/"),
                            n = i[i.length - 1];
                        c.saveFile(l + "-" + n + ".png", "png");
                        var o = '<div style="float:left; border: solid 1px #0000ff; padding: 5px; margin: 10px; text-align:center;">';
                        o += '<a href="https://structure.ncbi.nlm.nih.gov/icn3d/share.html?' + n + '" target="_blank">', o += '<img style="height:300px" src ="' + l + "-" + n + '.png"><br>\n', o += "\x3c!--Start of your comments==================--\x3e\n";
                        var r = c.yournote ? ": " + c.yournote.replace(/\n/g, "<br>").replace(/; /g, ", ") : "";
                        o += "PDB " + l.toUpperCase() + r + "\n", o += "\x3c!--End of your comments====================--\x3e\n", o += "</a>", o += "</div>\n\n", c.saveFile(l + "-" + n + ".html", "html", o)
                    }
                    a && void 0 === e.shortLink && c.saveFile(l + "_image_icn3d_loadable.png", "png");
                    var s = t.split("page.link/");
                    2 == s.length && (t = "https://structure.ncbi.nlm.nih.gov/icn3d/share.html?" + s[1]), $("#" + c.pre + "ori_url").val(d), $("#" + c.pre + "short_url").val(t), a || c.openDialog(c.pre + "dl_copyurl", "Copy a Share Link URL")
                },
                error: function(e, t, i) {
                    $("#" + c.pre + "ori_url").val(d), $("#" + c.pre + "short_url").val("Problem in getting shortened URL"), a || c.openDialog(c.pre + "dl_copyurl", "Copy a Share Link URL")
                }
            })
        },
        exportInteractions: function() {
            var e = '<html><body><div style="text-align:center"><br><b>Interacting residues</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Base Chain: Residues</th><th>Interacting Chain</th></tr>';
            for (var t in this.chainname2residues)
                for (var i in this.chainname2residues[t]) {
                    var n = t.substr(0, t.indexOf("_")) + "_" + i.substr(0, i.indexOf(" "));
                    e += "<tr><td>" + t + ": ", e += this.residueids2spec(this.chainname2residues[t][i]), e += "</td><td>" + n + "</td></tr>"
                }
            e += "</table><br/></div></body></html>";
            var o = this.inputid ? this.inputid : "custom";
            this.saveFile(o + "_interactions.html", "html", e)
        },
        exportSsbondPairs: function() {
            var e = "",
                t = 0;
            for (var i in this.icn3d.structures) {
                var n = this.icn3d.ssbondpnts[i];
                if (void 0 === n) break;
                for (var o = 0, r = n.length; o < r; o += 2) {
                    e += "<tr><td>" + n[o] + " Cys</td><td>" + n[o + 1] + " Cys</td></tr>", ++t
                }
            }
            var s = '<html><body><div style="text-align:center"><br><b>' + t + " disulfide pairs</b>:<br><br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue ID 1</th><th>Residue ID 2</th></tr>";
            s += e, s += "</table><br/></div></body></html>";
            var a = this.inputid ? this.inputid : "custom";
            this.saveFile(a + "_disulfide_pairs.html", "html", s)
        },
        exportClbondPairs: function() {
            var e = "",
                t = 0,
                i = {};
            for (var n in this.icn3d.structures) {
                var o = this.icn3d.clbondpnts[n];
                if (void 0 === o) break;
                for (var r = 0, s = o.length; r < s; r += 2) {
                    var a = o[r],
                        c = o[r + 1];
                    if (!i.hasOwnProperty(a + "_" + c)) {
                        var d = this.icn3d.getFirstAtomObj(this.icn3d.residues[a]),
                            l = this.icn3d.getFirstAtomObj(this.icn3d.residues[c]);
                        e += "<tr><td>" + a + " " + d.resn + "</td><td>" + c + " " + l.resn + "</td></tr>", ++t
                    }
                    i[a + "_" + c] = 1, i[c + "_" + a] = 1
                }
            }
            var h = '<html><body><div style="text-align:center"><br><b>' + t + " cross-linkage pairs</b>:<br><br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue ID 1</th><th>Residue ID 2</th></tr>";
            h += e, h += "</table><br/></div></body></html>";
            var p = this.inputid ? this.inputid : "custom";
            this.saveFile(p + "_crosslinkage_pairs.html", "html", h)
        },
        getGraphLinks: function(e, t, i, n, o) {
            var r = "";
            o = void 0 === o ? 1 : o;
            var s = "";
            for (var a in e) {
                var c = (a = a.trim()).indexOf(" "),
                    d = a.indexOf(":"),
                    l = a.indexOf("@"),
                    h = -1 !== l ? l : a.length,
                    p = a.indexOf("."),
                    m = a.indexOf("$"),
                    u = this.icn3d.residueName2Abbr(a.substr(0, c)) + a.substr(d + 1, h - d - 1);
                for (var f in "chain" != n && "structure" != n || (u += "." + a.substr(p + 1, d - p - 1)), "structure" == n && (u += "." + a.substr(m + 1, p - m - 1)), t[a]) {
                    var g = (f = f.trim()).indexOf(" "),
                        v = f.indexOf(":"),
                        b = f.indexOf("@"),
                        y = -1 !== b ? b : f.length,
                        _ = f.indexOf("."),
                        C = f.indexOf("$"),
                        w = this.icn3d.residueName2Abbr(f.substr(0, g)) + f.substr(v + 1, y - v - 1);
                    f.substr(_ + 1, v - _ - 1), "chain" != n && "structure" != n || (w += "." + f.substr(_ + 1, v - _ - 1)), "structure" == n && (w += "." + f.substr(C + 1, _ - C - 1));
                    var S = ', {"source": "' + u + '", "target": "' + w + '", "v": ' + o + ', "c": "' + i + '"}';
                    S != s && (r += S), s = S
                }
            }
            return r
        },
        convertLabel2Resid: function(e) {
            e.indexOf(" ");
            var t = e.indexOf("@"),
                i = -1 !== t ? t : e.length,
                n = e.indexOf("$"),
                o = e.indexOf("."),
                r = e.indexOf(":");
            return e.substr(n + 1, o - n - 1) + "_" + e.substr(o + 1, r - o - 1) + "_" + e.substr(r + 1, i - r - 1)
        },
        exportHbondPairs: function(e, t) {
            var i = this,
                n = "",
                o = 0,
                r = ' <span style="background-color:#',
                s = '">&nbsp;&nbsp;&nbsp;</span>';
            for (var a in i.resid2ResidhashHbond) {
                var c = i.convertLabel2Resid(a),
                    d = i.icn3d.getFirstAtomObj(i.icn3d.residues[c]).color.getHexString();
                for (var l in i.resid2ResidhashHbond[a]) {
                    var h = i.convertLabel2Resid(l),
                        p = i.icn3d.getFirstAtomObj(i.icn3d.residues[h]).color.getHexString(),
                        m = Math.sqrt(i.resid2ResidhashHbond[a][l]).toFixed(1);
                    n += '<tr><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "hbond_" + o + 'a" resid="' + a + '"/> ' + a + r + d + s + '</td><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "hbond_" + o + 'b" resid="' + l + '"/> ' + l + r + p + s + '</td><td align="center">' + m + "</td>", "view" == e && (n += '<td align="center"><button class="' + i.pre + 'selres" resid="' + a + "|" + l + '">Highlight</button></td>'), n += "</tr>", ++o
                }
            }
            var u = '<div style="text-align:center"><br><b>' + o + " hydrogen bond pairs</b>:</div><br>";
            return 0 < o && (u += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>", "view" == e && (u += '<th align="center">Highlight in 3D</th>'), u += "</tr>", u += n, u += "</table><br/>"), "graph" != e && "linegraph" != e && "scatterplot" != e ? u : i.getGraphLinks(i.resid2ResidhashHbond, i.resid2ResidhashHbond, i.hbondColor, t, i.hbondValue)
        },
        exportSaltbridgePairs: function(e, t) {
            var i = this,
                n = "",
                o = 0,
                r = ' <span style="background-color:#',
                s = '">&nbsp;&nbsp;&nbsp;</span>';
            for (var a in i.resid2ResidhashSaltbridge) {
                var c = i.convertLabel2Resid(a),
                    d = i.icn3d.getFirstAtomObj(i.icn3d.residues[c]).color.getHexString();
                for (var l in i.resid2ResidhashSaltbridge[a]) {
                    var h = i.convertLabel2Resid(l),
                        p = i.icn3d.getFirstAtomObj(i.icn3d.residues[h]).color.getHexString(),
                        m = Math.sqrt(i.resid2ResidhashSaltbridge[a][l]).toFixed(1);
                    n += '<tr><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "saltb_" + o + 'a" resid="' + a + '"/> ' + a + r + d + s + '</td><td><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "saltb_" + o + 'b" resid="' + l + '"/> ' + l + r + p + s + '</td><td align="center">' + m + "</td>", "view" == e && (n += '<td align="center"><button class="' + i.pre + 'selres" resid="' + a + "|" + l + '">Highlight</button></td>'), n += "</tr>", ++o
                }
            }
            var u = '<div style="text-align:center"><br><b>' + o + " salt bridge/ionic interaction pairs</b>:</div><br>";
            return 0 < o && (u += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>", "view" == e && (u += '<th align="center">Highlight in 3D</th>'), u += "</tr>", u += n, u += "</table><br/>"), "graph" != e && "linegraph" != e && "scatterplot" != e ? u : i.getGraphLinks(i.resid2ResidhashSaltbridge, i.resid2ResidhashSaltbridge, i.ionicColor, t, i.ionicValue)
        },
        exportHalogenPiPairs: function(e, t, i) {
            var n, o, r, s = this,
                a = "",
                c = 0,
                d = ' <span style="background-color:#',
                l = '">&nbsp;&nbsp;&nbsp;</span>';
            for (var h in "halogen" == i ? (n = s.resid2ResidhashHalogen, o = s.halogenColor, r = s.halogenValue) : "pi-cation" == i ? (n = s.resid2ResidhashPication, o = s.picationColor, r = s.picationValue) : "pi-stacking" == i && (n = s.resid2ResidhashPistacking, o = s.pistackingColor, r = s.pistackingValue), n) {
                var p = s.convertLabel2Resid(h),
                    m = s.icn3d.getFirstAtomObj(s.icn3d.residues[p]).color.getHexString();
                for (var u in n[h]) {
                    var f = s.convertLabel2Resid(u),
                        g = s.icn3d.getFirstAtomObj(s.icn3d.residues[f]).color.getHexString(),
                        v = Math.sqrt(n[h][u]).toFixed(1);
                    a += '<tr><td><input type="checkbox" class="' + s.pre + 'seloneres" id="' + s.pre + i + "_" + c + 'a" resid="' + h + '"/> ' + h + d + m + l + '</td><td><input type="checkbox" class="' + s.pre + 'seloneres" id="' + s.pre + i + "_" + c + 'b" resid="' + u + '"/> ' + u + d + g + l + '</td><td align="center">' + v + "</td>", "view" == e && (a += '<td align="center"><button class="' + s.pre + 'selres" resid="' + h + "|" + u + '">Highlight</button></td>'), a += "</tr>", ++c
                }
            }
            var b = '<div style="text-align:center"><br><b>' + c + " " + i + " pairs</b>:</div><br>";
            return 0 < c && (b += "<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Atom 1</th><th>Atom 2</th><th>Distance (&#8491;)</th>", "view" == e && (b += '<th align="center">Highlight in 3D</th>'), b += "</tr>", b += a, b += "</table><br/>"), "graph" != e && "linegraph" != e && "scatterplot" != e ? b : s.getGraphLinks(n, n, o, t, r)
        },
        exportSpherePairs: function(e, t, i) {
            var n = this,
                o = "",
                r = 0,
                s = e ? n.resid2ResidhashInteractions : n.resid2ResidhashSphere,
                a = ' <span style="background-color:#',
                c = '">&nbsp;&nbsp;&nbsp;</span>';
            for (var d in s) {
                var l = n.convertLabel2Resid(d),
                    h = (b = n.icn3d.getFirstAtomObj(n.icn3d.residues[l])).color.getHexString();
                for (var p in s[d]) {
                    var m = n.convertLabel2Resid(p),
                        u = (y = n.icn3d.getFirstAtomObj(n.icn3d.residues[m])).color.getHexString(),
                        f = s[d][p].split("_"),
                        g = f[0],
                        v = f[1],
                        b = f[2],
                        y = f[3],
                        _ = f[4];
                    e ? (o += '<tr><td><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + "inter_" + r + 'a" resid="' + d + '"/> ' + d + "@" + b + a + h + c + '</td><td><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + "inter_" + r + 'b" resid="' + p + '"/> ' + p + "@" + y + a + u + c + '</td><td align="center">' + _ + '</td><td align="center">' + g + '</td><td align="center">' + v + "</td>", "view" == t && (o += '<td align="center"><button class="' + n.pre + 'selres" resid="' + d + "|" + p + '">Highlight</button></td>'), o += "</tr>") : o += "<tr><td>" + d + "</td><td>" + p + '</td><td align="center">' + _ + '</td><td align="center">' + dist1_dist2[0] + '</td><td align="center">' + dist1_dist2[1] + "</td></tr>", ++r
                }
            }
            var C = '<div style="text-align:center"><br><b>' + r + " residue pairs in " + (e ? "the contacts" : "sphere") + "</b>:</div><br>";
            return 0 < r && (e ? (C += '<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue 1</th><th>Residue 2</th><th align="center">Num Contacts</th><th align="center">Min Distance (&#8491;)</th><th align="center">C-alpha Distance (&#8491;)</th>', "view" == t && (C += '<th align="center">Highlight in 3D</th>'), C += "</tr>") : C += '<br><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Residue 1</th><th>Residue 2</th><th align="center">Num Contacts</th><th align="center">Min Distance (&#8491;)</th><th align="center">C-alpha Distance (&#8491;)</th></tr>', C += o, C += "</table><br/>"), "graph" != t && "linegraph" != t && "scatterplot" != t ? C : n.getGraphLinks(s, s, n.contactColor, i, n.contactValue)
        },
        saveColor: function() {
            for (var e in this.icn3d.atoms) {
                var t = this.icn3d.atoms[e];
                t.colorSave = t.color.clone()
            }
        },
        applySavedColor: function() {
            for (var e in this.icn3d.atoms) {
                var t = this.icn3d.atoms[e];
                void 0 !== t.colorSave && (t.color = t.colorSave.clone())
            }
            this.icn3d.draw(), this.changeSeqColor(Object.keys(this.icn3d.residues))
        },
        saveStyle: function() {
            for (var e in this.icn3d.atoms) {
                var t = this.icn3d.atoms[e];
                t.styleSave = t.style, void 0 !== t.style2 && (t.style2Save = t.style2)
            }
        },
        applySavedStyle: function() {
            for (var e in this.icn3d.atoms) {
                var t = this.icn3d.atoms[e];
                void 0 !== t.styleSave && (t.style = t.styleSave), void 0 !== t.style2Save && (t.style2 = t.style2Save)
            }
            this.icn3d.draw()
        },
        showHydrogens: function() {
            var e = this;
            for (var t in e.icn3d.hAtoms) {
                var i = e.icn3d.atoms[t];
                if ("H" !== i.name) {
                    e.icn3d.atoms[i.serial].bonds = e.icn3d.atoms[i.serial].bonds2.concat(), e.icn3d.atoms[i.serial].bondOrder = e.icn3d.atoms[i.serial].bondOrder2.concat();
                    for (var n = 0, o = e.icn3d.atoms[i.serial].bonds.length; n < o; ++n) {
                        var r = e.icn3d.atoms[i.serial].bonds[n];
                        "H" === e.icn3d.atoms[r].name && (e.icn3d.dAtoms[r] = 1, e.icn3d.hAtoms[r] = 1)
                    }
                }
            }
        },
        hideHydrogens: function() {
            for (var e in this.icn3d.hAtoms) {
                var t = this.icn3d.atoms[e];
                if ("H" === t.name) {
                    if (0 < this.icn3d.atoms[t.serial].bonds.length) {
                        var i = this.icn3d.atoms[t.serial].bonds[0],
                            n = this.icn3d.atoms[i].bonds.indexOf(t.serial); - 1 !== n && (this.icn3d.atoms[i].bonds.splice(n, 1), this.icn3d.atoms[i].bondOrder.splice(n, 1))
                    }
                    delete this.icn3d.dAtoms[t.serial], delete this.icn3d.hAtoms[t.serial]
                }
            }
        },
        showAll: function() {
            this.icn3d.dAtoms = this.icn3d.cloneHash(this.icn3d.atoms), this.icn3d.maxD = this.icn3d.oriMaxD, this.icn3d.draw()
        },
        clickBack: function() {
            var t = this;
            $("#" + t.pre + "back").add("#" + t.pre + "mn6_back").click(function(e) {
                e.preventDefault(), t.setLogCmd("back", !1), t.back()
            })
        },
        clickForward: function() {
            var t = this;
            $("#" + t.pre + "forward").add("#" + t.pre + "mn6_forward").click(function(e) {
                e.preventDefault(), t.setLogCmd("forward", !1), t.forward()
            })
        },
        openFullscreen: function(e) {
            document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || (e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen())
        },
        clickFullscreen: function() {
            var t = this;
            $("#" + t.pre + "fullscreen").add("#" + t.pre + "mn6_fullscreen").click(function(e) {
                e.preventDefault(), (t = t.setIcn3dui($(this).attr("id"))).setLogCmd("enter full screen", !1), t.icn3d.bFullscreen = !0, t.WIDTH = $(window).width(), t.HEIGHT = $(window).height(), t.icn3d.setWidthHeight(t.WIDTH, t.HEIGHT), t.icn3d.draw(), t.openFullscreen($("#" + t.pre + "canvas")[0])
            }), $(document).bind("fullscreenchange webkitfullscreenchange mozfullscreenchange msfullscreenchange", function(e) {
                document.fullscreenElement || document.webkitFullscreenElement || document.mozFullscreenElement || document.msFullscreenElement || (t.setLogCmd("exit full screen", !1), t.icn3d.bFullscreen = !1, t.setViewerWidthHeight(), t.icn3d.setWidthHeight(t.WIDTH, t.HEIGHT), t.icn3d.draw())
            })
        },
        clickToggle: function() {
            var t = this;
            $("#" + t.pre + "toggle").add("#" + t.pre + "mn2_toggle").click(function(e) {
                t.toggleSelection(), t.setLogCmd("toggle selection", !0)
            })
        },
        clickHlColorYellow: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_clrYellow").click(function(e) {
                t.setLogCmd("set highlight color yellow", !0), t.icn3d.hColor = new THREE.Color(16776960), t.icn3d.matShader = t.icn3d.setOutlineColor("yellow"), t.icn3d.draw()
            })
        },
        clickHlColorGreen: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_clrGreen").click(function(e) {
                t.setLogCmd("set highlight color green", !0), t.icn3d.hColor = new THREE.Color(65280), t.icn3d.matShader = t.icn3d.setOutlineColor("green"), t.icn3d.draw()
            })
        },
        clickHlColorRed: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_clrRed").click(function(e) {
                t.setLogCmd("set highlight color red", !0), t.icn3d.hColor = new THREE.Color(16711680), t.icn3d.matShader = t.icn3d.setOutlineColor("red"), t.icn3d.draw()
            })
        },
        clickHlStyleOutline: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_styleOutline").click(function(e) {
                t.setLogCmd("set highlight style outline", !0), t.icn3d.bHighlight = 1, t.showHighlight()
            })
        },
        clickHlStyleObject: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_styleObject").click(function(e) {
                t.setLogCmd("set highlight style 3d", !0), t.icn3d.bHighlight = 2, t.showHighlight()
            })
        },
        clickHlStyleNone: function() {
            var t = this;
            $("#" + t.pre + "mn2_hl_styleNone").click(function(e) {
                e.stopImmediatePropagation(), t.clearHighlight(), t.setLogCmd("clear selection", !0)
            })
        },
        clickAlternate: function() {
            var t = this;
            $("#" + t.pre + "alternate").add("#" + t.pre + "mn2_alternate").add("#" + t.pre + "alternate2").click(function(e) {
                t.icn3d.bAlternate = !0, t.icn3d.alternateStructures(), t.icn3d.bAlternate = !1, t.setLogCmd("alternate structures", !1)
            })
        },
        clickRealign: function() {
            var t = this;
            $("#" + t.pre + "mn2_realignresbyres").click(function(e) {
                t.realign(), t.setLogCmd("realign", !0)
            })
        },
        clickRealignonseqalign: function() {
            var n = this;
            $("#" + n.pre + "mn2_realignonseqalign").click(function(e) {
                if (void 0 === n.bSetChainsAdvancedMenu || !n.bSetChainsAdvancedMenu) {
                    var t = n.icn3d.cloneHash(n.icn3d.hAtoms);
                    n.setPredefinedInMenu(), n.bSetChainsAdvancedMenu = !0, n.icn3d.hAtoms = n.icn3d.cloneHash(t)
                }
                var i = n.setAtomMenu(["protein"]);
                $("#" + n.pre + "atomsCustomRealign").length && $("#" + n.pre + "atomsCustomRealign").html(i), $("#" + n.pre + "atomsCustomRealign2").length && $("#" + n.pre + "atomsCustomRealign2").html(i), n.icn3d.bRender && n.openDialog(n.pre + "dl_realign", "Please select two sets to realign"), $("#" + n.pre + "atomsCustomRealign").resizable(), $("#" + n.pre + "atomsCustomRealign2").resizable()
            })
        },
        clickApplyRealign: function() {
            var i = this;
            $("#" + i.pre + "applyRealign").click(function(e) {
                e.preventDefault(), i.cfg.notebook || dialog.dialog("close");
                var t = $("#" + i.pre + "atomsCustomRealign").val();
                0 < t.length && (i.icn3d.hAtoms = i.getAtomsFromNameArray(t)), i.realignOnSeqAlign(), 0 < t.length ? i.setLogCmd("realign on seq align | " + t, !0) : i.setLogCmd("realign on seq align", !0)
            })
        },
        clkMn1_mmtfid: function() {
            var t = this;
            $("#" + t.pre + "mn1_mmtfid").click(function(e) {
                t.openDialog(t.pre + "dl_mmtfid", "Please input MMTF ID")
            })
        },
        clkMn1_pdbid: function() {
            var t = this;
            $("#" + t.pre + "mn1_pdbid").click(function(e) {
                t.openDialog(t.pre + "dl_pdbid", "Please input PDB ID")
            })
        },
        clkMn1_opmid: function() {
            var t = this;
            $("#" + t.pre + "mn1_opmid").click(function(e) {
                t.openDialog(t.pre + "dl_opmid", "Please input OPM PDB ID")
            })
        },
        clkMn1_align: function() {
            var t = this;
            $("#" + t.pre + "mn1_align").click(function(e) {
                t.openDialog(t.pre + "dl_align", "Align two 3D structures")
            })
        },
        clkMn1_chainalign: function() {
            var t = this;
            $("#" + t.pre + "mn1_chainalign").click(function(e) {
                t.openDialog(t.pre + "dl_chainalign", "Align two chains of 3D structures")
            })
        },
        setIcn3dui: function(e) {
            var t = this,
                i = e.split("_");
            return t.pre = i[0] + "_", void 0 !== window.icn3duiHash && window.icn3duiHash.hasOwnProperty(i[0]) && (t = window.icn3duiHash[i[0]]), t
        },
        clkMn1_pdbfile: function() {
            var t = this;
            $("#" + t.pre + "mn1_pdbfile").click(function(e) {
                (t = t.setIcn3dui($(this).attr("id"))).openDialog(t.pre + "dl_pdbfile", "Please input PDB File")
            })
        },
        clkMn1_mol2file: function() {
            var t = this;
            $("#" + t.pre + "mn1_mol2file").click(function(e) {
                t.openDialog(t.pre + "dl_mol2file", "Please input Mol2 File")
            })
        },
        clkMn1_sdffile: function() {
            var t = this;
            $("#" + t.pre + "mn1_sdffile").click(function(e) {
                t.openDialog(t.pre + "dl_sdffile", "Please input SDF File")
            })
        },
        clkMn1_xyzfile: function() {
            var t = this;
            $("#" + t.pre + "mn1_xyzfile").click(function(e) {
                t.openDialog(t.pre + "dl_xyzfile", "Please input XYZ File")
            })
        },
        clkMn1_urlfile: function() {
            var t = this;
            $("#" + t.pre + "mn1_urlfile").click(function(e) {
                t.openDialog(t.pre + "dl_urlfile", "Load data by URL")
            })
        },
        clkMn1_fixedversion: function() {
            var i = this;
            $("#" + i.pre + "mn1_fixedversion").click(function(e) {
                i.openDialog(i.pre + "dl_fixedversion", "Open Share Link URL in the archived version of iCn3D")
            }), $("#" + i.pre + "reload_fixedversion").click(function(e) {
                var t = $("#" + i.pre + "sharelinkurl").val();
                i.setLogCmd("open " + t, !1), localStorage.setItem("fixedversion", "1"), window.open(t, "_blank")
            })
        },
        clkMn1_mmciffile: function() {
            var t = this;
            $("#" + t.pre + "mn1_mmciffile").click(function(e) {
                t.openDialog(t.pre + "dl_mmciffile", "Please input mmCIF File")
            })
        },
        clkMn1_mmcifid: function() {
            var t = this;
            $("#" + t.pre + "mn1_mmcifid").click(function(e) {
                t.openDialog(t.pre + "dl_mmcifid", "Please input mmCIF ID")
            })
        },
        clkMn1_mmdbid: function() {
            var t = this;
            $("#" + t.pre + "mn1_mmdbid").click(function(e) {
                t.openDialog(t.pre + "dl_mmdbid", "Please input MMDB or PDB ID")
            })
        },
        clkMn1_blast_rep_id: function() {
            var t = this;
            $("#" + t.pre + "mn1_blast_rep_id").click(function(e) {
                t.openDialog(t.pre + "dl_blast_rep_id", "Align sequence to structure")
            })
        },
        clkMn1_gi: function() {
            var t = this;
            $("#" + t.pre + "mn1_gi").click(function(e) {
                t.openDialog(t.pre + "dl_gi", "Please input protein gi")
            })
        },
        clkMn1_cid: function() {
            var t = this;
            $("#" + t.pre + "mn1_cid").click(function(e) {
                t.openDialog(t.pre + "dl_cid", "Please input PubChem CID")
            })
        },
        clkMn1_pngimage: function() {
            var t = this;
            $("#" + t.pre + "mn1_pngimage").click(function(e) {
                t.openDialog(t.pre + "dl_pngimage", "Please input the PNG image")
            })
        },
        clkMn1_state: function() {
            var t = this;
            $("#" + t.pre + "mn1_state").click(function(e) {
                t.openDialog(t.pre + "dl_state", "Please input the state file")
            })
        },
        clkMn1_selection: function() {
            var t = this;
            $("#" + t.pre + "mn1_selection").click(function(e) {
                t.openDialog(t.pre + "dl_selection", "Please input the selection file")
            })
        },
        clkMn1_dsn6: function() {
            var t = this;
            $("#" + t.pre + "mn1_dsn6").click(function(e) {
                t.openDialog(t.pre + "dl_dsn6", "Please input the DSN6 file to display electron density map")
            })
        },
        clkMn1_dsn6url: function() {
            var t = this;
            $("#" + t.pre + "mn1_dsn6url").click(function(e) {
                t.openDialog(t.pre + "dl_dsn6url", "Please input the DSN6 file to display electron density map")
            })
        },
        clkMn1_exportState: function() {
            var i = this;
            $("#" + i.pre + "mn1_exportState").click(function(e) {
                i.setLogCmd("export state file", !1);
                var t = i.inputid ? i.inputid : "custom";
                i.saveFile(t + "_statefile.txt", "command")
            })
        },
        exportStlFile: function(i) {
            var n = this;
            void 0 !== n.icn3d.biomtMatrices && 1 < n.icn3d.biomtMatrices.length && n.icn3d.bAssembly && (n.icn3d.threshbox = 180 / Math.pow(n.icn3d.biomtMatrices.length, .33), n.icn3d.removeSurfaces(), n.icn3d.applySurfaceOptions(), n.icn3d.removeMaps(), n.icn3d.applyMapOptions(), n.icn3d.removeEmmaps(), n.icn3d.applyEmmapOptions());
            var o = n.saveStlFile(),
                r = n.inputid ? n.inputid : "custom";
            if (n.saveFile(r + i + ".stl", "binary", o), void 0 !== n.icn3d.biomtMatrices && 1 < n.icn3d.biomtMatrices.length && n.icn3d.bAssembly && Object.keys(n.icn3d.dAtoms).length * n.icn3d.biomtMatrices.length > n.icn3d.maxAtoms3DMultiFile) {
                alert(n.icn3d.biomtMatrices.length + " files will be generated for this assembly. Please merge these files using some software and 3D print the merged file.");
                var e = new THREE.Matrix4;
                e.identity();
                for (var t = 1, s = 0; s < n.icn3d.biomtMatrices.length; s++) {
                    var a = n.icn3d.biomtMatrices[s];
                    if (void 0 !== a && !a.equals(e)) {
                        var c = 100 * (s + 1);
                        setTimeout(function(e, t) {
                            o = n.saveStlFile(e), n.saveFile(r + i + t + ".stl", "binary", o), o = ""
                        }.bind(this, a, t), c), ++t
                    }
                }
                n.icn3d.threshbox = 180
            }
        },
        exportVrmlFile: function(i) {
            var n = this;
            void 0 !== n.icn3d.biomtMatrices && 1 < n.icn3d.biomtMatrices.length && n.icn3d.bAssembly && (n.icn3d.threshbox = 180 / Math.pow(n.icn3d.biomtMatrices.length, .33), n.icn3d.removeSurfaces(), n.icn3d.applySurfaceOptions(), n.icn3d.removeMaps(), n.icn3d.applyMapOptions(), n.icn3d.removeEmmaps(), n.icn3d.applyEmmapOptions());
            var o = n.saveVrmlFile(),
                r = n.inputid ? n.inputid : "custom";
            if (n.saveFile(r + i + ".vrml", "text", o), void 0 !== n.icn3d.biomtMatrices && 1 < n.icn3d.biomtMatrices.length && n.icn3d.bAssembly && Object.keys(n.icn3d.dAtoms).length * n.icn3d.biomtMatrices.length > n.icn3d.maxAtoms3DMultiFile) {
                alert(n.icn3d.biomtMatrices.length + " files will be generated for this assembly. Please merge these files using some software and 3D print the merged file.");
                var e = new THREE.Matrix4;
                e.identity();
                for (var t = 1, s = 0; s < n.icn3d.biomtMatrices.length; s++) {
                    var a = n.icn3d.biomtMatrices[s];
                    if (void 0 !== a && !a.equals(e)) {
                        var c = 100 * (s + 1);
                        setTimeout(function(e, t) {
                            o = n.saveVrmlFile(e), n.saveFile(r + i + t + ".vrml", "text", o), o = ""
                        }.bind(this, a, t), c), ++t
                    }
                }
                n.icn3d.threshbox = 180
            }
        },
        clkMn1_exportStl: function() {
            var t = this;
            $("#" + t.pre + "mn1_exportStl").click(function(e) {
                t.setLogCmd("export stl file", !1), t.exportStlFile("")
            })
        },
        clkMn1_exportVrml: function() {
            var t = this;
            $("#" + t.pre + "mn1_exportVrml").click(function(e) {
                t.setLogCmd("export vrml file", !1), t.exportVrmlFile("")
            })
        },
        clkMn1_exportStlStab: function() {
            var t = this;
            $("#" + t.pre + "mn1_exportStlStab").click(function(e) {
                t.setLogCmd("export stl stabilizer file", !1), t.hideStabilizer(), t.resetAfter3Dprint(), t.addStabilizer(), t.exportStlFile("_stab")
            })
        },
        clkMn1_exportVrmlStab: function() {
            var t = this;
            $("#" + t.pre + "mn1_exportVrmlStab").click(function(e) {
                t.setLogCmd("export vrml stabilizer file", !1), t.hideStabilizer(), t.resetAfter3Dprint(), t.addStabilizer(), t.exportVrmlFile("_stab")
            })
        },
        clkMn6_exportInteraction: function() {
            var t = this;
            $("#" + t.pre + "mn6_exportInteraction").click(function(e) {
                t.setLogCmd("export interactions", !1), void 0 !== t.cfg.mmdbid && t.retrieveInteractionData(), t.exportInteractions()
            })
        },
        clkMn1_exportCanvas: function() {
            var t = this;
            $("#" + t.pre + "mn1_exportCanvas").add("#" + t.pre + "saveimage").click(function(e) {
                t.setLogCmd("export canvas", !1);
                t.shareLink(!0)
            }), $("#" + t.pre + "mn1_exportCanvas2").click(function(e) {
                t.setLogCmd("export canvas 2", !1), t.icn3d.scaleFactor = 2, t.shareLink(!0)
            }), $("#" + t.pre + "mn1_exportCanvas4").click(function(e) {
                t.setLogCmd("export canvas 4", !1), t.icn3d.scaleFactor = 4, t.shareLink(!0)
            }), $("#" + t.pre + "mn1_exportCanvas8").click(function(e) {
                t.setLogCmd("export canvas 8", !1), t.icn3d.scaleFactor = 8, t.shareLink(!0)
            })
        },
        clkMn1_exportCounts: function() {
            var m = this;
            $("#" + m.pre + "mn1_exportCounts").click(function(e) {
                m.setLogCmd("export counts", !1);
                var t = '<html><body><div style="text-align:center"><br><b>Total Count for atoms with coordinates</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Structure Count</th><th>Chain Count</th><th>Residue Count</th><th>Atom Count</th></tr>';
                t += "<tr><td>" + Object.keys(m.icn3d.structures).length + "</td><td>" + Object.keys(m.icn3d.chains).length + "</td><td>" + Object.keys(m.icn3d.residues).length + "</td><td>" + Object.keys(m.icn3d.atoms).length + "</td></tr>", t += "</table><br/>", t += "<b>Counts by Chain for atoms with coordinates</b>:<br/><table align=center border=1 cellpadding=10 cellspacing=0><tr><th>Structure</th><th>Chain</th><th>Residue Count</th><th>Atom Count</th></tr>";
                for (var i = Object.keys(m.icn3d.chains), n = 0, o = i.length; n < o; ++n) {
                    var r = i[n],
                        s = r.indexOf("_"),
                        a = r.substr(0, s),
                        c = r.substr(s + 1),
                        d = {},
                        l = m.icn3d.chains[r];
                    for (var h in l) d[m.icn3d.atoms[h].resi] = 1;
                    t += "<tr><td>" + a + "</td><td>" + c + "</td><td>" + Object.keys(d).length + "</td><td>" + Object.keys(m.icn3d.chains[r]).length + "</td></tr>"
                }
                t += "</table><br/></div></body></html>";
                var p = m.inputid ? m.inputid : "custom";
                m.saveFile(p + "_counts.html", "html", t)
            })
        },
        clkMn1_exportSelections: function() {
            var o = this;
            $("#" + o.pre + "mn1_exportSelections").click(function(e) {
                if (o.setLogCmd("export all selections", !1), void 0 === o.bSetChainsAdvancedMenu || !o.bSetChainsAdvancedMenu) {
                    var t = o.icn3d.cloneHash(o.icn3d.hAtoms);
                    o.setPredefinedInMenu(), o.bSetChainsAdvancedMenu = !0, o.icn3d.hAtoms = o.icn3d.cloneHash(t)
                }
                var i = o.exportCustomAtoms(),
                    n = o.inputid ? o.inputid : "custom";
                o.saveFile(n + "_selections.txt", "text", [i])
            })
        },
        clkMn1_sharelink: function() {
            var t = this;
            $("#" + t.pre + "mn1_sharelink").click(function(e) {
                t.shareLink()
            })
        },
        clkMn1_replay: function() {
            var t = this;
            $("#" + t.pre + "mn1_replayon").click(function(e) {
                t.replayon(), t.setLogCmd("replay on", !0)
            }), $("#" + t.pre + "mn1_replayoff").click(function(e) {
                t.replayoff(), t.setLogCmd("replay off", !0)
            })
        },
        replayon: function() {
            var e = this;
            for (var t in e.CURRENTNUMBER = 0, e.bReplay = 1, $("#" + e.pre + "replay").show(), e.closeDialogs(), e.icn3d.prevSurfaces = [], e.icn3d.prevMaps = [], e.icn3d.prevEmmaps = [], e.icn3d.labels = {}, e.icn3d.lines = {}, e.icn3d.atoms) e.icn3d.atoms[t].style2 = void 0;
            e.selectAll(), e.renderFinalStep(1);
            var i = e.CURRENTNUMBER,
                n = e.icn3d.commands[i].indexOf(" | "),
                o = e.icn3d.commands[i].substr(0, n),
                r = 20 < o.length ? o.substr(0, 20) + "..." : o,
                s = e.getMenuFromCmd(r);
            $("#" + e.pre + "replay_cmd").html("Cmd: " + r), $("#" + e.pre + "replay_menu").html("Menu: " + s)
        },
        replayoff: function() {
            this.bReplay = 0, $("#" + this.pre + "replay").hide(), ++this.CURRENTNUMBER, this.execCommands(this.CURRENTNUMBER, this.STATENUMBER - 1, this.STATENUMBER)
        },
        clkMn1_link_structure: function() {
            var i = this;
            $("#" + i.pre + "mn1_link_structure").click(function(e) {
                var t = i.getLinkToStructureSummary(!0);
                window.open(t, "_blank")
            })
        },
        clkMn1_link_bind: function() {
            var t = this;
            $("#" + t.pre + "mn1_link_bind").click(function(e) {
                url = "https://www.ncbi.nlm.nih.gov/pccompound?LinkName=pccompound_structure&from_uid=" + t.inputid, t.setLogCmd("link to 3D protein structures bound to CID " + t.inputid + ": " + url, !1), window.open(url, "_blank")
            })
        },
        clkMn1_link_vast: function() {
            var n = this;
            $("#" + n.pre + "mn1_link_vast").click(function(e) {
                if (void 0 === n.inputid) t = "https://www.ncbi.nlm.nih.gov/pccompound?term=" + n.icn3d.molTitle, n.setLogCmd("link to compounds " + n.icn3d.molTitle + ": " + t, !1);
                else {
                    if (void 0 !== n.cfg.cid) t = "https://www.ncbi.nlm.nih.gov/pccompound?LinkName=pccompound_pccompound_3d&from_uid=" + n.inputid, n.setLogCmd("link to compounds with structure similar to CID " + n.inputid + ": " + t, !1);
                    else {
                        var t, i = n.inputid.split("_");
                        1 === i.length ? (t = n.baseUrl + "vastplus/vastplus.cgi?uid=" + n.inputid, n.setLogCmd("link to structures similar to " + n.inputid + ": " + t, !1)) : 2 === i.length && (t = n.baseUrl + "vastplus/vastplus.cgi?uid=" + i[0], n.setLogCmd("link to structures similar to " + i[0] + ": " + t, !1))
                    }
                    window.open(t, "_blank")
                }
            })
        },
        clkMn1_link_pubmed: function() {
            var n = this;
            $("#" + n.pre + "mn1_link_pubmed").click(function(e) {
                if (void 0 === n.inputid) i = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + n.icn3d.molTitle, n.setLogCmd("link to literature about " + n.icn3d.molTitle + ": " + i, !1), window.open(i, "_blank");
                else if (void 0 !== n.pmid) {
                    1 === (t = n.pmid.toString().split("_")).length ? (i = "https://www.ncbi.nlm.nih.gov/pubmed/" + n.pmid, n.setLogCmd("link to PubMed ID " + n.pmid + ": " + i, !1)) : 2 === t.length && (i = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + t[0] + " OR " + t[1], n.setLogCmd("link to PubMed IDs " + t[0] + ", " + t[1] + ": " + i, !1)), window.open(i, "_blank")
                } else if (isNaN(n.inputid)) {
                    var t, i;
                    1 === (t = n.inputid.toString().split("_")).length ? (i = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + n.inputid, n.setLogCmd("link to literature about PDB " + n.inputid + ": " + i, !1)) : 2 === t.length && (i = "https://www.ncbi.nlm.nih.gov/pubmed/?term=" + t[0] + " OR " + t[1], n.setLogCmd("link to literature about PDB " + t[0] + " OR " + t[1] + ": " + i, !1)), window.open(i, "_blank")
                } else void 0 !== n.cfg.cid ? alert("No literature information is available for this compound in the SDF file.") : alert("No literature information is available for this structure.")
            })
        },
        clkMn1_link_protein: function() {
            var c = this;
            $("#" + c.pre + "mn1_link_protein").click(function(e) {
                for (var t = Object.keys(c.icn3d.structures), i = Object.keys(c.icn3d.chains), n = "", o = 0, r = i.length; o < r; ++o) {
                    var s = c.icn3d.getFirstCalphaAtomObj(c.icn3d.chains[i[o]]);
                    c.icn3d.proteins.hasOwnProperty(s.serial) && 6 == i[o].length && (n += i[o] + "[accession] OR ")
                }
                0 < n.length && (n = n.substr(0, n.length - 4));
                var a = "https://www.ncbi.nlm.nih.gov/protein/?term=" + n;
                c.setLogCmd("link to Entrez protein about PDB " + t + ": " + a, !1), window.open(a, "_blank")
            })
        },
        clkMn2_selectannotations: function() {
            var t = this;
            $("#" + t.pre + "mn6_selectannotations").click(function(e) {
                t.showAnnotations(), t.setLogCmd("view annotations", !0)
            })
        },
        clkMn2_selectall: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectall").click(function(e) {
                t.setLogCmd("select all", !0), t.selectAll(), t.removeHlAll(), t.icn3d.draw()
            }), $("#" + t.pre + "clearall").click(function(e) {
                t.setLogCmd("clear all", !0), t.bSelectResidue = !1, t.selectAll(), t.removeHlAll(), t.icn3d.draw()
            })
        },
        clkMn2_selectdisplayed: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectdisplayed").click(function(e) {
                t.setLogCmd("select displayed set", !0), t.icn3d.hAtoms = t.icn3d.cloneHash(t.icn3d.dAtoms), t.updateHlAll()
            })
        },
        clkMn2_fullstru: function() {
            var t = this;
            $("#" + t.pre + "mn2_fullstru").click(function(e) {
                t.setLogCmd("show all", !0), t.showAll()
            })
        },
        clkMn2_selectcomplement: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectcomplement").click(function(e) {
                Object.keys(t.icn3d.hAtoms).length < Object.keys(t.icn3d.atoms).length && (t.setLogCmd("select complement", !0), t.selectComplement())
            })
        },
        clkMn2_selectmainchains: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectmainchains").click(function(e) {
                t.setLogCmd("select main chains", !0), t.selectMainChains()
            })
        },
        clkMn2_selectsidechains: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectsidechains").click(function(e) {
                t.setLogCmd("select side chains", !0), t.selectSideChains()
            })
        },
        clkMn2_selectmainsidechains: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectmainsidechains").click(function(e) {
                t.setLogCmd("select main side chains", !0), t.selectMainSideChains()
            })
        },
        clkMn2_propperty: function() {
            var n = this;
            $("#" + n.pre + "mn2_propPos").click(function(e) {
                n.setLogCmd("select prop positive", !0), n.selectProperty("positive")
            }), $("#" + n.pre + "mn2_propNeg").click(function(e) {
                n.setLogCmd("select prop negative", !0), n.selectProperty("negative")
            }), $("#" + n.pre + "mn2_propHydro").click(function(e) {
                n.setLogCmd("select prop hydrophobic", !0), n.selectProperty("hydrophobic")
            }), $("#" + n.pre + "mn2_propPolar").click(function(e) {
                n.setLogCmd("select prop polar", !0), n.selectProperty("polar")
            }), $("#" + n.pre + "mn2_propBfactor").click(function(e) {
                n.openDialog(n.pre + "dl_propbybfactor", "Select residue based on B-factor")
            }), $("#" + n.pre + "mn2_propSolAcc").click(function(e) {
                n.openDialog(n.pre + "dl_propbypercentout", "Select residue based on the percentage of solvent accessilbe surface area")
            }), $("#" + n.pre + "applypropbybfactor").click(function(e) {
                var t = $("#" + n.pre + "minbfactor").val(),
                    i = $("#" + n.pre + "maxbfactor").val();
                n.setLogCmd("select prop b factor | " + t + "_" + i, !0), n.selectProperty("b factor", t, i)
            }), $("#" + n.pre + "applypropbypercentout").click(function(e) {
                var t = $("#" + n.pre + "minpercentout").val(),
                    i = $("#" + n.pre + "maxpercentout").val();
                n.setLogCmd("select prop percent out | " + t + "_" + i, !0), n.selectProperty("percent out", t, i)
            })
        },
        selectProperty: function(e, t, i) {
            var n = this,
                o = n.icn3d.cloneHash(n.icn3d.hAtoms);
            if ("positive" == e) {
                var r = ":r,k,h";
                n.icn3d.hAtoms = {}, n.selectBySpec(r, r, r)
            } else if ("negative" == e) {
                r = ":d,e";
                n.icn3d.hAtoms = {}, n.selectBySpec(r, r, r)
            } else if ("hydrophobic" == e) {
                r = ":w,f,y,l,i,c,m";
                n.icn3d.hAtoms = {}, n.selectBySpec(r, r, r)
            } else if ("polar" == e) {
                r = ":g,v,s,t,a,n,p,q";
                n.icn3d.hAtoms = {}, n.selectBySpec(r, r, r)
            } else if ("b factor" == e) {
                var s = n.icn3d.cloneHash(n.icn3d.calphas);
                for (var a in s = n.icn3d.unionHash(s, n.icn3d.nucleotidesO3), s = n.icn3d.unionHash(s, n.icn3d.chemicals), s = n.icn3d.unionHash(s, n.icn3d.ions), s = n.icn3d.unionHash(s, n.icn3d.water), n.icn3d.hAtoms = {}, s) {
                    var c = n.icn3d.atoms[a];
                    c.b >= t && c.b <= i && (n.icn3d.hAtoms = n.icn3d.unionHash(n.icn3d.hAtoms, n.icn3d.residues[c.structure + "_" + c.chain + "_" + c.resi]))
                }
            } else if ("percent out" == e)
                for (var d in n.icn3d.bCalcArea = !0, n.icn3d.opts.surface = "solvent accessible surface", n.icn3d.applySurfaceOptions(), n.icn3d.bCalcArea = !1, n.icn3d.hAtoms = {}, n.icn3d.resid2area) {
                    var l = d.split("_");
                    if (n.icn3d.residueArea.hasOwnProperty(l[3])) {
                        var h = parseInt(n.icn3d.resid2area[d] / n.icn3d.residueArea[l[3]] * 100);
                        if (t <= h && h <= i) {
                            var p = l[0] + "_" + l[1] + "_" + l[2];
                            n.icn3d.hAtoms = n.icn3d.unionHash(n.icn3d.hAtoms, n.icn3d.residues[p])
                        }
                    }
                }
            n.icn3d.hAtoms = n.icn3d.intHash(n.icn3d.hAtoms, o), n.icn3d.draw(), n.updateHlAll()
        },
        clkMn2_alignment: function() {
            var t = this;
            $("#" + t.pre + "mn2_alignment").click(function(e) {
                t.openDialog(t.pre + "dl_alignment", "Select residues in aligned sequences"), t.setLogCmd("window aligned sequences", !0)
            })
        },
        clkMn2_windows: function() {
            var t = this;
            $("#" + t.pre + "mn1_window_table").click(function(e) {
                t.openDialog(t.pre + "dl_allinteraction", "Show interactions"), t.setLogCmd("window interaction table", !0)
            }), $("#" + t.pre + "mn1_window_linegraph").click(function(e) {
                t.openDialog(t.pre + "dl_linegraph", "Show interactions between two lines of residue nodes"), t.setLogCmd("window interaction graph", !0)
            }), $("#" + t.pre + "mn1_window_scatterplot").click(function(e) {
                t.openDialog(t.pre + "dl_scatterplot", "Show interactions as scatterplot"), t.setLogCmd("window interaction scatterplot", !0)
            }), $("#" + t.pre + "mn1_window_graph").click(function(e) {
                t.openDialog(t.pre + "dl_graph", "Force-directed graph"), t.setLogCmd("window force-directed graph", !0)
            })
        },
        clkMn6_yournote: function() {
            var t = this;
            $("#" + t.pre + "mn6_yournote").click(function(e) {
                t.openDialog(t.pre + "dl_yournote", "Your note about the current display")
            })
        },
        clkApplyYournote: function() {
            var t = this;
            $("#" + t.pre + "applyyournote").click(function(e) {
                t.yournote = $("#" + t.pre + "yournote").val(), document.title = t.yournote, t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("your note | " + t.yournote, !0)
            })
        },
        clkMn2_command: function() {
            var t = this;
            $("#" + t.pre + "mn2_command").click(function(e) {
                t.openDialog(t.pre + "dl_advanced2", "Select by specification")
            })
        },
        clkMn2_definedsets: function() {
            var t = this;
            $("#" + t.pre + "mn2_definedsets").add("#" + t.pre + "definedsets").add("#" + t.pre + "definedsets2").click(function(e) {
                t.showSets(), t.setLogCmd("defined sets", !0)
            }), $("#" + t.pre + "setOr").click(function(e) {
                t.setOperation = "or"
            }), $("#" + t.pre + "setAnd").click(function(e) {
                t.setOperation = "and"
            }), $("#" + t.pre + "setNot").click(function(e) {
                t.setOperation = "not"
            })
        },
        clkMn2_pkNo: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkNo").click(function(e) {
                t.icn3d.pk = 0, t.icn3d.opts.pk = "no", t.setLogCmd("set pk off", !0), t.icn3d.draw(), t.icn3d.removeHlObjects()
            })
        },
        clkMn2_pkYes: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkYes").click(function(e) {
                t.icn3d.pk = 1, t.icn3d.opts.pk = "atom", t.setLogCmd("set pk atom", !0)
            })
        },
        clkMn2_pkResidue: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkResidue").click(function(e) {
                t.icn3d.pk = 2, t.icn3d.opts.pk = "residue", t.setLogCmd("set pk residue", !0)
            })
        },
        clkMn2_pkStrand: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkStrand").click(function(e) {
                t.icn3d.pk = 3, t.icn3d.opts.pk = "strand", t.setLogCmd("set pk strand", !0)
            })
        },
        clkMn2_pkDomain: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkDomain").click(function(e) {
                t.icn3d.pk = 4, t.icn3d.opts.pk = "domain", t.setLogCmd("set pk domain", !0)
            })
        },
        clkMn2_pkChain: function() {
            var t = this;
            $("#" + t.pre + "mn2_pkChain").click(function(e) {
                t.icn3d.pk = 5, t.icn3d.opts.pk = "chain", t.setLogCmd("set pk chain", !0)
            })
        },
        clk_adjustmem: function() {
            var t = this;
            $("#" + t.pre + "adjustmem").click(function(e) {
                t.openDialog(t.pre + "dl_adjustmem", "Adjust the Z-axis positions of the membrane")
            })
        },
        toggleMembrane: function() {
            var e = Object.keys(this.icn3d.structures)[0],
                t = this.icn3d.residues[e + "_MEM_1"],
                i = this.icn3d.getFirstAtomObj(t),
                n = i.style;
            for (var o in this.icn3d.dAtoms.hasOwnProperty(i.serial) || (this.icn3d.dAtoms = this.icn3d.unionHash(this.icn3d.dAtoms, t), n = "nothing"), t) {
                var r = this.icn3d.atoms[o];
                r.style = "nothing" !== n ? "nothing" : "stick"
            }
            this.icn3d.draw()
        },
        clk_togglemem: function() {
            var t = this;
            $("#" + t.pre + "togglemem").click(function(e) {
                t.toggleMembrane(), t.setLogCmd("toggle membrane", !0)
            })
        },
        clk_selectplane: function() {
            var t = this;
            $("#" + t.pre + "selectplane").click(function(e) {
                t.openDialog(t.pre + "dl_selectplane", "Select a region between two planes")
            })
        },
        clkMn2_aroundsphere: function() {
            var n = this;
            $("#" + n.pre + "mn2_aroundsphere").click(function(e) {
                if (void 0 === n.bSetChainsAdvancedMenu || !n.bSetChainsAdvancedMenu) {
                    var t = n.icn3d.cloneHash(n.icn3d.hAtoms);
                    n.setPredefinedInMenu(), n.bSetChainsAdvancedMenu = !0, n.icn3d.hAtoms = n.icn3d.cloneHash(t)
                }
                var i = n.setAtomMenu(["protein"]);
                $("#" + n.pre + "atomsCustomSphere").length && $("#" + n.pre + "atomsCustomSphere").html("  <option value='non-selected' selected>non-selected</option><option value='selected'>selected</option>" + i), $("#" + n.pre + "atomsCustomSphere2").length && $("#" + n.pre + "atomsCustomSphere2").html("  <option value='selected' selected>selected</option>" + i), n.openDialog(n.pre + "dl_aroundsphere", "Select a sphere around a set of residues"), n.bSphereCalc = !1, $("#" + n.pre + "atomsCustomSphere").resizable(), $("#" + n.pre + "atomsCustomSphere2").resizable()
            })
        },
        clkMn2_select_chain: function() {
            var t = this;
            $("#" + t.pre + "mn2_select_chain").add("#" + t.pre + "definedSets").click(function(e) {
                t.openDialog(t.pre + "dl_select_chain", "Select Structure/Chain/Custom Selection")
            })
        },
        clkMn3_proteinsRibbon: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsRibbon").click(function(e) {
                t.setStyle("proteins", "ribbon"), t.setLogCmd("style proteins ribbon", !0)
            })
        },
        clkMn3_proteinsStrand: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsStrand").click(function(e) {
                t.setStyle("proteins", "strand"), t.setLogCmd("style proteins strand", !0)
            })
        },
        clkMn3_proteinsCylinder: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsCylinder").click(function(e) {
                t.setStyle("proteins", "cylinder and plate"), t.setLogCmd("style proteins cylinder and plate", !0)
            })
        },
        clkMn3_proteinsSchematic: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsSchematic").click(function(e) {
                t.setStyle("proteins", "schematic"), t.setLogCmd("style proteins schematic", !0)
            })
        },
        clkMn3_proteinsCalpha: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsCalpha").click(function(e) {
                t.setStyle("proteins", "c alpha trace"), t.setLogCmd("style proteins c alpha trace", !0)
            })
        },
        clkMn3_proteinsBackbone: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsBackbone").click(function(e) {
                t.setStyle("proteins", "backbone"), t.setLogCmd("style proteins backbone", !0)
            })
        },
        clkMn3_proteinsBfactor: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsBfactor").click(function(e) {
                t.setStyle("proteins", "b factor tube"), t.setLogCmd("style proteins b factor tube", !0)
            })
        },
        clkMn3_proteinsLines: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsLines").click(function(e) {
                t.setStyle("proteins", "lines"), t.setLogCmd("style proteins lines", !0)
            })
        },
        clkMn3_proteinsStick: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsStick").click(function(e) {
                t.setStyle("proteins", "stick"), t.setLogCmd("style proteins stick", !0)
            })
        },
        clkMn3_proteinsBallstick: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsBallstick").click(function(e) {
                t.setStyle("proteins", "ball and stick"), t.setLogCmd("style proteins ball and stick", !0)
            })
        },
        clkMn3_proteinsSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsSphere").click(function(e) {
                t.setStyle("proteins", "sphere"), t.setLogCmd("style proteins sphere", !0)
            })
        },
        clkMn3_proteinsNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_proteinsNo").click(function(e) {
                t.setStyle("proteins", "nothing"), t.setLogCmd("style proteins nothing", !0)
            })
        },
        clkMn3_sidecLines: function() {
            var t = this;
            $("#" + t.pre + "mn3_sidecLines").click(function(e) {
                t.setStyle("sidec", "lines"), t.setLogCmd("style sidec lines", !0)
            })
        },
        clkMn3_sidecStick: function() {
            var t = this;
            $("#" + t.pre + "mn3_sidecStick").click(function(e) {
                t.setStyle("sidec", "stick"), t.setLogCmd("style sidec stick", !0)
            })
        },
        clkMn3_sidecBallstick: function() {
            var t = this;
            $("#" + t.pre + "mn3_sidecBallstick").click(function(e) {
                t.setStyle("sidec", "ball and stick"), t.setLogCmd("style sidec ball and stick", !0)
            })
        },
        clkMn3_sidecSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_sidecSphere").click(function(e) {
                t.setStyle("sidec", "sphere"), t.setLogCmd("style sidec sphere", !0)
            })
        },
        clkMn3_sidecNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_sidecNo").click(function(e) {
                t.setStyle("sidec", "nothing"), t.setLogCmd("style sidec nothing", !0)
            })
        },
        clkMn3_nuclCartoon: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclCartoon").click(function(e) {
                t.setStyle("nucleotides", "nucleotide cartoon"), t.setLogCmd("style nucleotides nucleotide cartoon", !0)
            })
        },
        clkMn3_nuclBackbone: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclBackbone").click(function(e) {
                t.setStyle("nucleotides", "backbone"), t.setLogCmd("style nucleotides backbone", !0)
            })
        },
        clkMn3_nuclSchematic: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclSchematic").click(function(e) {
                t.setStyle("nucleotides", "schematic"), t.setLogCmd("style nucleotides schematic", !0)
            })
        },
        clkMn3_nuclPhos: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclPhos").click(function(e) {
                t.setStyle("nucleotides", "o3 trace"), t.setLogCmd("style nucleotides o3 trace", !0)
            })
        },
        clkMn3_nuclLines: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclLines").click(function(e) {
                t.setStyle("nucleotides", "lines"), t.setLogCmd("style nucleotides lines", !0)
            })
        },
        clkMn3_nuclStick: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclStick").click(function(e) {
                t.setStyle("nucleotides", "stick"), t.setLogCmd("style nucleotides stick", !0)
            })
        },
        clkMn3_nuclBallstick: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclBallstick").click(function(e) {
                t.setStyle("nucleotides", "ball and stick"), t.setLogCmd("style nucleotides ball and stick", !0)
            })
        },
        clkMn3_nuclSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclSphere").click(function(e) {
                t.setStyle("nucleotides", "sphere"), t.setLogCmd("style nucleotides sphere", !0)
            })
        },
        clkMn3_nuclNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_nuclNo").click(function(e) {
                t.setStyle("nucleotides", "nothing"), t.setLogCmd("style nucleotides nothing", !0)
            })
        },
        clkMn3_ligLines: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligLines").click(function(e) {
                t.setStyle("chemicals", "lines"), t.setLogCmd("style chemicals lines", !0)
            })
        },
        clkMn3_ligStick: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligStick").click(function(e) {
                t.setStyle("chemicals", "stick"), t.setLogCmd("style chemicals stick", !0)
            })
        },
        clkMn3_ligBallstick: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligBallstick").click(function(e) {
                t.setStyle("chemicals", "ball and stick"), t.setLogCmd("style chemicals ball and stick", !0)
            })
        },
        clkMn3_ligSchematic: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligSchematic").click(function(e) {
                t.setStyle("chemicals", "schematic"), t.setLogCmd("style chemicals schematic", !0)
            })
        },
        clkMn3_ligSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligSphere").click(function(e) {
                t.setStyle("chemicals", "sphere"), t.setLogCmd("style chemicals sphere", !0)
            })
        },
        clkMn3_ligNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_ligNo").click(function(e) {
                t.setStyle("chemicals", "nothing"), t.setLogCmd("style chemicals nothing", !0)
            })
        },
        clkMn3_hydrogensYes: function() {
            var t = this;
            $("#" + t.pre + "mn3_hydrogensYes").click(function(e) {
                t.showHydrogens(), t.icn3d.draw(), t.setLogCmd("hydrogens", !0)
            })
        },
        clkMn3_hydrogensNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_hydrogensNo").click(function(e) {
                t.hideHydrogens(), t.icn3d.draw(), t.setLogCmd("set hydrogens off", !0)
            })
        },
        clkMn3_ionsSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_ionsSphere").click(function(e) {
                t.setStyle("ions", "sphere"), t.setLogCmd("style ions sphere", !0)
            })
        },
        clkMn3_ionsDot: function() {
            var t = this;
            $("#" + t.pre + "mn3_ionsDot").click(function(e) {
                t.setStyle("ions", "dot"), t.setLogCmd("style ions dot", !0)
            })
        },
        clkMn3_ionsNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_ionsNo").click(function(e) {
                t.setStyle("ions", "nothing"), t.setLogCmd("style ions nothing", !0)
            })
        },
        clkMn3_waterSphere: function() {
            var t = this;
            $("#" + t.pre + "mn3_waterSphere").click(function(e) {
                t.setStyle("water", "sphere"), t.setLogCmd("style water sphere", !0)
            })
        },
        clkMn3_waterDot: function() {
            var t = this;
            $("#" + t.pre + "mn3_waterDot").click(function(e) {
                t.setStyle("water", "dot"), t.setLogCmd("style water dot", !0)
            })
        },
        clkMn3_waterNo: function() {
            var t = this;
            $("#" + t.pre + "mn3_waterNo").click(function(e) {
                t.setStyle("water", "nothing"), t.setLogCmd("style water nothing", !0)
            })
        },
        clkMn4_clrSpectrum: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrSpectrum").click(function(e) {
                t.setOption("color", "spectrum"), t.setLogCmd("color spectrum", !0)
            })
        },
        clkMn4_clrChain: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrChain").click(function(e) {
                t.setOption("color", "chain"), t.setLogCmd("color chain", !0)
            })
        },
        clkMn4_clrDomain: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrdomain").click(function(e) {
                t.setOption("color", "domain"), t.setLogCmd("color domain", !0)
            })
        },
        clkMn4_clrSSGreen: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrSSGreen").click(function(e) {
                t.icn3d.sheetcolor = "green", t.setOption("color", "secondary structure green"), t.setLogCmd("color secondary structure green", !0)
            })
        },
        clkMn4_clrSSYellow: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrSSYellow").click(function(e) {
                t.icn3d.sheetcolor = "yellow", t.setOption("color", "secondary structure yellow"), t.setLogCmd("color secondary structure yellow", !0)
            })
        },
        clkMn4_clrSSSpectrum: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrSSSpectrum").click(function(e) {
                t.setOption("color", "secondary structure spectrum"), t.setLogCmd("color secondary structure spectrum", !0)
            })
        },
        clkMn4_clrResidue: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrResidue").click(function(e) {
                t.setOption("color", "residue"), t.setLogCmd("color residue", !0)
            })
        },
        clkMn4_clrResidueCustom: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrResidueCustom").click(function(e) {
                t.openDialog(t.pre + "dl_rescolorfile", "Please input the file on residue colors")
            })
        },
        clkMn4_reloadRescolorfile: function() {
            var n = this;
            $("#" + n.pre + "reload_rescolorfile").click(function(e) {
                e.preventDefault(), n.cfg.notebook || dialog.dialog("close");
                var t = $("#" + n.pre + "rescolorfile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result.replace(/#/g, "");
                        for (var i in n.icn3d.customResidueColors = JSON.parse(t), n.icn3d.customResidueColors) n.icn3d.customResidueColors[i.toUpperCase()] = new THREE.Color("#" + n.icn3d.customResidueColors[i]);
                        n.setOption("color", "residue custom"), n.setLogCmd("color residue custom | " + t, !0)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        setCustomFile: function(l) {
            var h = this,
                p = $("#" + h.pre + "customcolor_chainid").val(),
                e = $("#" + h.pre + "cstcolorfile")[0].files[0];
            if (e) {
                window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                var t = new FileReader;
                t.onload = function(e) {
                    var t = e.target.result.split("\n");
                    void 0 === h.icn3d.queryresi2score && (h.icn3d.queryresi2score = {}), h.icn3d.queryresi2score[p] = {};
                    for (var i = 0, n = t.length; i < n; ++i)
                        if ("" !== t[i].trim()) {
                            var o = t[i].split(/\s+/);
                            h.icn3d.queryresi2score[p][o[0]] = o[1]
                        } for (var r = Object.keys(h.icn3d.queryresi2score[p]), s = Math.min.apply(null, r), a = Math.max.apply(null, r), c = "", d = s; d <= a; ++d) h.icn3d.queryresi2score[p].hasOwnProperty(d) ? c += Math.round(h.icn3d.queryresi2score[p][d] / 11) : c += "_";
                    "color" == l ? (h.icn3d.opts.color = "align custom", h.icn3d.setColorByOptions(h.icn3d.opts, h.icn3d.hAtoms), h.updateHlAll(), h.setLogCmd("custom tube | " + p + " | range " + s + "_" + a + " | " + c, !0)) : "tube" == l && (h.setStyle("proteins", "custom tube"), h.setLogCmd("color align custom | " + p + " | range " + s + "_" + a + " | " + c, !0)), h.icn3d.draw()
                }, t.readAsText(e)
            } else alert("Please select a file before clicking 'Load'")
        },
        clkMn4_reloadCustomcolorfile: function() {
            var t = this;
            $("#" + t.pre + "reload_customcolorfile").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setCustomFile("color")
            }), $("#" + t.pre + "reload_customtubefile").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setCustomFile("tube")
            })
        },
        clkMn4_clrCharge: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrCharge").click(function(e) {
                t.setOption("color", "charge"), t.setLogCmd("color charge", !0)
            })
        },
        clkMn4_clrHydrophobic: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrHydrophobic").click(function(e) {
                t.setOption("color", "hydrophobic"), t.setLogCmd("color hydrophobic", !0)
            })
        },
        clkMn4_clrAtom: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrAtom").click(function(e) {
                t.setOption("color", "atom"), t.setLogCmd("color atom", !0)
            })
        },
        clkMn4_clrBfactor: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrBfactor").click(function(e) {
                t.setOption("color", "b factor"), t.setLogCmd("color b factor", !0)
            })
        },
        clkMn4_clrArea: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrArea").click(function(e) {
                t.openDialog(t.pre + "dl_colorbyarea", "Color based on residue's solvent accessibility")
            }), $("#" + t.pre + "applycolorbyarea").click(function(e) {
                t.icn3d.midpercent = $("#" + t.pre + "midpercent").val(), t.setOption("color", "area"), t.setLogCmd("color area | " + t.icn3d.midpercent, !0)
            })
        },
        clkMn4_clrBfactorNorm: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrBfactorNorm").click(function(e) {
                t.setOption("color", "b factor percentile"), t.setLogCmd("color b factor percentile", !0)
            })
        },
        clkMn4_clrIdentity: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrIdentity").click(function(e) {
                t.setOption("color", "identity"), t.setLogCmd("color identity", !0)
            })
        },
        clkMn4_clrConserved: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrConserved").click(function(e) {
                t.setOption("color", "conservation"), t.setLogCmd("color conservation", !0)
            })
        },
        clkMn4_clrRed: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrRed").click(function(e) {
                t.setOption("color", "red"), t.setLogCmd("color red", !0)
            })
        },
        clkMn4_clrGreen: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrGreen").click(function(e) {
                t.setOption("color", "green"), t.setLogCmd("color green", !0)
            })
        },
        clkMn4_clrBlue: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrBlue").click(function(e) {
                t.setOption("color", "blue"), t.setLogCmd("color blue", !0)
            })
        },
        clkMn4_clrMagenta: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrMagenta").click(function(e) {
                t.setOption("color", "magenta"), t.setLogCmd("color magenta", !0)
            })
        },
        clkMn4_clrYellow: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrYellow").click(function(e) {
                t.setOption("color", "yellow"), t.setLogCmd("color yellow", !0)
            })
        },
        clkMn4_clrCyan: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrCyan").click(function(e) {
                t.setOption("color", "cyan"), t.setLogCmd("color cyan", !0)
            })
        },
        clkMn4_clrWhite: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrWhite").click(function(e) {
                t.setOption("color", "white"), t.setLogCmd("color white", !0)
            })
        },
        clkMn4_clrGrey: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrGrey").click(function(e) {
                t.setOption("color", "grey"), t.setLogCmd("color grey", !0)
            })
        },
        clkMn4_clrCustom: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrCustom").click(function(e) {
                t.openDialog(t.pre + "dl_clr", "Color picker")
            })
        },
        clkMn4_clrOther: function() {
            var i = this;
            $(document).on("click", ".icn3d-color-rad-text", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("color");
                i.setOption("color", t), i.setLogCmd("color " + t, !0)
            })
        },
        clkMn4_clrSave: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrSave").click(function(e) {
                t.saveColor(), t.setLogCmd("save color", !0)
            })
        },
        clkMn4_clrApplySave: function() {
            var t = this;
            $("#" + t.pre + "mn4_clrApplySave").click(function(e) {
                t.applySavedColor(), t.setLogCmd("apply saved color", !0)
            })
        },
        clkMn3_styleSave: function() {
            var t = this;
            $("#" + t.pre + "mn3_styleSave").click(function(e) {
                t.saveStyle(), t.setLogCmd("save style", !0)
            })
        },
        clkMn3_styleApplySave: function() {
            var t = this;
            $("#" + t.pre + "mn3_styleApplySave").click(function(e) {
                t.applySavedStyle(), t.setLogCmd("apply saved style", !0)
            })
        },
        clkMn5_neighborsYes: function() {
            var t = this;
            $("#" + t.pre + "mn5_neighborsYes").click(function(e) {
                t.icn3d.bConsiderNeighbors = !0, t.icn3d.removeLastSurface(), t.icn3d.applySurfaceOptions(), t.icn3d.bRender && t.icn3d.render(), t.setLogCmd("set surface neighbors on", !0)
            })
        },
        clkMn5_neighborsNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_neighborsNo").click(function(e) {
                t.icn3d.bConsiderNeighbors = !1, t.icn3d.removeLastSurface(), t.icn3d.applySurfaceOptions(), t.icn3d.bRender && t.icn3d.render(), t.setLogCmd("set surface neighbors off", !0)
            })
        },
        clkMn5_surfaceVDW: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceVDW").click(function(e) {
                t.icn3d.bConsiderNeighbors = !1, t.setOption("surface", "Van der Waals surface"), t.setLogCmd("set surface Van der Waals surface", !0)
            })
        },
        clkMn5_surfaceSAS: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceSAS").click(function(e) {
                t.icn3d.bConsiderNeighbors = !1, t.setOption("surface", "solvent accessible surface"), t.setLogCmd("set surface solvent accessible surface", !0)
            })
        },
        clkMn5_surfaceMolecular: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceMolecular").click(function(e) {
                t.icn3d.bConsiderNeighbors = !1, t.setOption("surface", "molecular surface"), t.setLogCmd("set surface molecular surface", !0)
            })
        },
        clkMn5_surfaceVDWContext: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceVDWContext").click(function(e) {
                t.icn3d.bConsiderNeighbors = !0, t.setOption("surface", "Van der Waals surface with context"), t.setLogCmd("set surface Van der Waals surface with context", !0)
            })
        },
        clkMn5_surfaceSASContext: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceSASContext").click(function(e) {
                t.icn3d.bConsiderNeighbors = !0, t.setOption("surface", "solvent accessible surface with context"), t.setLogCmd("set surface solvent accessible surface with context", !0)
            })
        },
        clkMn5_surfaceMolecularContext: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceMolecularContext").click(function(e) {
                t.icn3d.bConsiderNeighbors = !0, t.setOption("surface", "molecular surface with context"), t.setLogCmd("set surface molecular surface with context", !0)
            })
        },
        clkMn5_surfaceNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_surfaceNo").click(function(e) {
                t.setOption("surface", "nothing"), t.setLogCmd("set surface nothing", !0)
            })
        },
        clkMn5_opacity10: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity10").click(function(e) {
                t.setOption("opacity", "1.0"), t.setLogCmd("set surface opacity 1.0", !0)
            })
        },
        clkMn5_opacity09: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity09").click(function(e) {
                t.setOption("opacity", "0.9"), t.setLogCmd("set surface opacity 0.9", !0)
            })
        },
        clkMn5_opacity08: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity08").click(function(e) {
                t.setOption("opacity", "0.8"), t.setLogCmd("set surface opacity 0.8", !0)
            })
        },
        clkMn5_opacity07: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity07").click(function(e) {
                t.setOption("opacity", "0.7"), t.setLogCmd("set surface opacity 0.7", !0)
            })
        },
        clkMn5_opacity06: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity06").click(function(e) {
                t.setOption("opacity", "0.6"), t.setLogCmd("set surface opacity 0.6", !0)
            })
        },
        clkMn5_opacity05: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity05").click(function(e) {
                t.setOption("opacity", "0.5"), t.setLogCmd("set surface opacity 0.5", !0)
            })
        },
        clkMn5_opacity04: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity04").click(function(e) {
                t.setOption("opacity", "0.4"), t.setLogCmd("set surface opacity 0.4", !0)
            })
        },
        clkMn5_opacity03: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity03").click(function(e) {
                t.setOption("opacity", "0.3"), t.setLogCmd("set surface opacity 0.3", !0)
            })
        },
        clkMn5_opacity02: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity02").click(function(e) {
                t.setOption("opacity", "0.2"), t.setLogCmd("set surface opacity 0.2", !0)
            })
        },
        clkMn5_opacity01: function() {
            var t = this;
            $("#" + t.pre + "mn5_opacity01").click(function(e) {
                t.setOption("opacity", "0.1"), t.setLogCmd("set surface opacity 0.1", !0)
            })
        },
        clkMn5_wireframeYes: function() {
            var t = this;
            $("#" + t.pre + "mn5_wireframeYes").click(function(e) {
                t.setOption("wireframe", "yes"), t.setLogCmd("set surface wireframe on", !0)
            })
        },
        clkMn5_wireframeNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_wireframeNo").click(function(e) {
                t.setOption("wireframe", "no"), t.setLogCmd("set surface wireframe off", !0)
            })
        },
        clkMn5_elecmap2fofc: function() {
            var t = this;
            $("#" + t.pre + "mn5_elecmap2fofc").click(function(e) {
                t.openDialog(t.pre + "dl_elecmap2fofc", "2Fo-Fc Electron Density Map")
            })
        },
        clkMn5_elecmapfofc: function() {
            var t = this;
            $("#" + t.pre + "mn5_elecmapfofc").click(function(e) {
                t.openDialog(t.pre + "dl_elecmapfofc", "Fo-Fc Electron Density Map")
            })
        },
        clkMn5_elecmapNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_elecmapNo").add("#" + t.pre + "elecmapNo2").add("#" + t.pre + "elecmapNo3").add("#" + t.pre + "elecmapNo4").add("#" + t.pre + "elecmapNo5").click(function(e) {
                t.setOption("map", "nothing"), t.setLogCmd("set map nothing", !0)
            })
        },
        clickApplymap2fofc: function() {
            var i = this;
            $("#" + i.pre + "applymap2fofc").click(function(e) {
                e.preventDefault();
                var t = parseFloat($("#" + i.pre + "sigma2fofc").val());
                i.Dsn6Parser(i.inputid, "2fofc", t), i.setLogCmd("set map 2fofc sigma " + t, !0)
            })
        },
        clickApplymapfofc: function() {
            var i = this;
            $("#" + i.pre + "applymapfofc").click(function(e) {
                e.preventDefault();
                var t = parseFloat($("#" + i.pre + "sigmafofc").val());
                i.Dsn6Parser(i.inputid, "fofc", t), i.setLogCmd("set map fofc sigma " + t, !0)
            })
        },
        clkMn5_mapwireframeYes: function() {
            var t = this;
            $("#" + t.pre + "mn5_mapwireframeYes").click(function(e) {
                t.setOption("mapwireframe", "yes"), t.setLogCmd("set map wireframe on", !0)
            })
        },
        clkMn5_mapwireframeNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_mapwireframeNo").click(function(e) {
                t.setOption("mapwireframe", "no"), t.setLogCmd("set map wireframe off", !0)
            })
        },
        clkMn5_emmap: function() {
            var t = this;
            $("#" + t.pre + "mn5_emmap").click(function(e) {
                t.openDialog(t.pre + "dl_emmap", "EM Density Map")
            })
        },
        clkMn5_emmapNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_emmapNo").add("#" + t.pre + "emmapNo2").click(function(e) {
                t.setOption("emmap", "nothing"), t.setLogCmd("set emmap nothing", !0)
            })
        },
        clickApplyemmap: function() {
            var n = this;
            $("#" + n.pre + "applyemmap").click(function(e) {
                e.preventDefault();
                var t = parseFloat($("#" + n.pre + "empercentage").val());
                if (void 0 === iCn3DUI.prototype.DensityCifParser) {
                    var i = n.baseUrl + "icn3d/density_cif_parser.min.js";
                    $.ajax({
                        url: i,
                        dataType: "script",
                        cache: !0,
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            n.DensityCifParser(n.inputid, "em", t, n.icn3d.emd), n.setLogCmd("set emmap percentage " + t, !0)
                        },
                        error: function(e, t, i) {
                            this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                        }
                    })
                } else n.DensityCifParser(n.inputid, "em", t, n.icn3d.emd), n.setLogCmd("set emmap percentage " + t, !0)
            })
        },
        clkMn5_emmapwireframeYes: function() {
            var t = this;
            $("#" + t.pre + "mn5_emmapwireframeYes").click(function(e) {
                t.setOption("emmapwireframe", "yes"), t.setLogCmd("set emmap wireframe on", !0)
            })
        },
        clkMn5_emmapwireframeNo: function() {
            var t = this;
            $("#" + t.pre + "mn5_emmapwireframeNo").click(function(e) {
                t.setOption("emmapwireframe", "no"), t.setLogCmd("set emmap wireframe off", !0)
            })
        },
        clkMn6_assemblyYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_assemblyYes").click(function(e) {
                t.icn3d.bAssembly = !0, t.setLogCmd("set assembly on", !0), t.icn3d.draw()
            })
        },
        clkMn6_assemblyNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_assemblyNo").click(function(e) {
                t.icn3d.bAssembly = !1, t.setLogCmd("set assembly off", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelAtoms: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelAtoms").click(function(e) {
                t.icn3d.addAtomLabels(t.icn3d.hAtoms), t.saveSelectionIfSelected(), t.setLogCmd("add atom labels", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelResidues: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelResidues").click(function(e) {
                t.icn3d.addResiudeLabels(t.icn3d.hAtoms), t.saveSelectionIfSelected(), t.setLogCmd("add residue labels", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelResnum: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelResnum").click(function(e) {
                t.icn3d.addResiudeLabels(t.icn3d.hAtoms, void 0, void 0, !0), t.saveSelectionIfSelected(), t.setLogCmd("add residue number labels", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelChains: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelChains").click(function(e) {
                t.addChainLabels(t.icn3d.hAtoms), t.saveSelectionIfSelected(), t.setLogCmd("add chain labels", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelTermini: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelTermini").click(function(e) {
                t.addTerminiLabels(t.icn3d.hAtoms), t.saveSelectionIfSelected(), t.setLogCmd("add terminal labels", !0), t.icn3d.draw()
            })
        },
        clkMn6_addlabelYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelYes").click(function(e) {
                t.openDialog(t.pre + "dl_addlabel", "Add custom labels by selection"), t.icn3d.pk = 1, t.icn3d.opts.pk = "atom", t.icn3d.pickpair = !0, t.icn3d.pAtomNum = 0
            })
        },
        clkMn6_addlabelSelection: function() {
            var t = this;
            $("#" + t.pre + "mn6_addlabelSelection").click(function(e) {
                t.openDialog(t.pre + "dl_addlabelselection", "Add custom labels by the selected")
            })
        },
        clkMn2_saveselection: function() {
            var t = this;
            $("#" + t.pre + "mn2_saveselection").click(function(e) {
                t.openDialog(t.pre + "dl_saveselection", "Save the selected")
            })
        },
        clkMn6_addlabelNo: function() {
            var i = this;
            $("#" + i.pre + "mn6_addlabelNo").add("#" + i.pre + "removeLabels").click(function(e) {
                i.icn3d.pickpair = !1;
                for (var t in i.setLogCmd("set labels off", !0), i.icn3d.labels) i.icn3d.labels[t] = [];
                i.icn3d.draw()
            })
        },
        clkMn6_labelscale01: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale01").click(function(e) {
                t.icn3d.labelScale = .1, t.icn3d.draw(), t.setLogCmd("set label scale 0.1", !0)
            })
        },
        clkMn6_labelscale02: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale02").click(function(e) {
                t.icn3d.labelScale = .2, t.icn3d.draw(), t.setLogCmd("set label scale 0.2", !0)
            })
        },
        clkMn6_labelscale03: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale03").click(function(e) {
                t.icn3d.labelScale = .3, t.icn3d.draw(), t.setLogCmd("set label scale 0.3", !0)
            })
        },
        clkMn6_labelscale04: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale04").click(function(e) {
                t.icn3d.labelScale = .4, t.icn3d.draw(), t.setLogCmd("set label scale 0.4", !0)
            })
        },
        clkMn6_labelscale05: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale05").click(function(e) {
                t.icn3d.labelScale = .5, t.icn3d.draw(), t.setLogCmd("set label scale 0.5", !0)
            })
        },
        clkMn6_labelscale06: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale06").click(function(e) {
                t.icn3d.labelScale = .6, t.icn3d.draw(), t.setLogCmd("set label scale 0.6", !0)
            })
        },
        clkMn6_labelscale07: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale07").click(function(e) {
                t.icn3d.labelScale = .7, t.icn3d.draw(), t.setLogCmd("set label scale 0.7", !0)
            })
        },
        clkMn6_labelscale08: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale08").click(function(e) {
                t.icn3d.labelScale = .8, t.icn3d.draw(), t.setLogCmd("set label scale 0.8", !0)
            })
        },
        clkMn6_labelscale09: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale09").click(function(e) {
                t.icn3d.labelScale = .9, t.icn3d.draw(), t.setLogCmd("set label scale 0.9", !0)
            })
        },
        clkMn6_labelscale10: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale10").click(function(e) {
                t.icn3d.labelScale = 1, t.icn3d.draw(), t.setLogCmd("set label scale 1.0", !0)
            })
        },
        clkMn6_labelscale20: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale20").click(function(e) {
                t.icn3d.labelScale = 2, t.icn3d.draw(), t.setLogCmd("set label scale 2.0", !0)
            })
        },
        clkMn6_labelscale40: function() {
            var t = this;
            $("#" + t.pre + "mn6_labelscale40").click(function(e) {
                t.icn3d.labelScale = 4, t.icn3d.draw(), t.setLogCmd("set label scale 4.0", !0)
            })
        },
        clkMn6_distanceYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_distanceYes").click(function(e) {
                t.openDialog(t.pre + "dl_distance", "Measure the distance of atoms"), t.icn3d.pk = 1, t.icn3d.opts.pk = "atom", t.icn3d.pickpair = !0, t.icn3d.pAtomNum = 0, t.bMeasureDistance = !0
            })
        },
        clkMn6_distanceNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_distanceNo").click(function(e) {
                t.icn3d.pickpair = !1;
                t.setLogCmd("set lines off", !0), t.icn3d.labels.distance = [], t.icn3d.lines.distance = [], t.icn3d.pk = 2, t.icn3d.draw()
            })
        },
        clkMn2_selectedcenter: function() {
            var t = this;
            $("#" + t.pre + "mn2_selectedcenter").add("#" + t.pre + "zoomin_selection").click(function(e) {
                t.icn3d.zoominSelection(), t.icn3d.draw(), t.setLogCmd("zoom selection", !0)
            })
        },
        clkMn6_center: function() {
            var t = this;
            $("#" + t.pre + "mn6_center").click(function(e) {
                t.icn3d.centerSelection(), t.icn3d.draw(), t.setLogCmd("center selection", !0)
            })
        },
        clkMn6_resetOrientation: function() {
            var t = this;
            $("#" + t.pre + "mn6_resetOrientation").add("#" + t.pre + "resetOrientation").click(function(e) {
                t.icn3d.resetOrientation(), t.icn3d.draw(), t.setLogCmd("reset orientation", !0)
            })
        },
        clkMn6_chemicalbindingshow: function() {
            var t = this;
            $("#" + t.pre + "mn6_chemicalbindingshow").add("#" + t.pre + "chemicalbindingshow").click(function(e) {
                t.setOption("chemicalbinding", "show"), t.setLogCmd("set chemicalbinding show", !0)
            })
        },
        clkMn6_chemicalbindinghide: function() {
            var t = this;
            $("#" + t.pre + "mn6_chemicalbindinghide").add("#" + t.pre + "chemicalbindinghide").click(function(e) {
                t.setOption("chemicalbinding", "hide"), t.setLogCmd("set chemicalbinding hide", !0)
            })
        },
        clkMn6_rotateleft: function() {
            var t = this;
            $("#" + t.pre + "mn6_rotateleft").click(function(e) {
                t.setLogCmd("rotate left", !0), t.icn3d.bStopRotate = !1, t.icn3d.rotateCount = 0, t.icn3d.rotateCountMax = 6e3, t.ROT_DIR = "left", t.rotStruc("left")
            })
        },
        clkMn6_sidebyside: function() {
            var i = this;
            $("#" + i.pre + "mn6_sidebyside").click(function(e) {
                var t = i.shareLinkUrl(void 0);
                0 !== t.indexOf("http") ? alert("The url is more than 4000 characters and may not work.") : (t = t.replace("full.html", "full2.html"), window.open(t, "_blank"), i.setLogCmd("side by side | " + t, !0))
            })
        },
        clkMn6_rotateright: function() {
            var t = this;
            $("#" + t.pre + "mn6_rotateright").click(function(e) {
                t.setLogCmd("rotate right", !0), t.icn3d.bStopRotate = !1, t.icn3d.rotateCount = 0, t.icn3d.rotateCountMax = 6e3, t.ROT_DIR = "right", t.rotStruc("right")
            })
        },
        clkMn6_rotateup: function() {
            var t = this;
            $("#" + t.pre + "mn6_rotateup").click(function(e) {
                t.setLogCmd("rotate up", !0), t.icn3d.bStopRotate = !1, t.icn3d.rotateCount = 0, t.icn3d.rotateCountMax = 6e3, t.ROT_DIR = "up", t.rotStruc("up")
            })
        },
        clkMn6_rotatedown: function() {
            var t = this;
            $("#" + t.pre + "mn6_rotatedown").click(function(e) {
                t.setLogCmd("rotate down", !0), t.icn3d.bStopRotate = !1, t.icn3d.rotateCount = 0, t.icn3d.rotateCountMax = 6e3, t.ROT_DIR = "down", t.rotStruc("down")
            })
        },
        clkMn6_rotatex: function() {
            var n = this;
            $("#" + n.pre + "mn6_rotatex").click(function(e) {
                n.setLogCmd("rotate x", !0);
                var t = new THREE.Vector3(1, 0, 0),
                    i = .5 * Math.PI;
                n.icn3d.setRotation(t, i)
            })
        },
        clkMn6_rotatey: function() {
            var n = this;
            $("#" + n.pre + "mn6_rotatey").click(function(e) {
                n.setLogCmd("rotate y", !0);
                var t = new THREE.Vector3(0, 1, 0),
                    i = .5 * Math.PI;
                n.icn3d.setRotation(t, i)
            })
        },
        clkMn6_rotatez: function() {
            var n = this;
            $("#" + n.pre + "mn6_rotatez").click(function(e) {
                n.setLogCmd("rotate z", !0);
                var t = new THREE.Vector3(0, 0, 1),
                    i = .5 * Math.PI;
                n.icn3d.setRotation(t, i)
            })
        },
        clkMn6_cameraPers: function() {
            var t = this;
            $("#" + t.pre + "mn6_cameraPers").click(function(e) {
                t.setOption("camera", "perspective"), t.setLogCmd("set camera perspective", !0)
            })
        },
        clkMn6_cameraOrth: function() {
            var t = this;
            $("#" + t.pre + "mn6_cameraOrth").click(function(e) {
                t.setOption("camera", "orthographic"), t.setLogCmd("set camera orthographic", !0)
            })
        },
        clkMn6_bkgdBlack: function() {
            var t = this;
            $("#" + t.pre + "mn6_bkgdBlack").click(function(e) {
                t.setOption("background", "black"), t.setLogCmd("set background black", !0), $("#" + t.pre + "title").css("color", t.GREYD), $("#" + t.pre + "titlelink").css("color", t.GREYD)
            })
        },
        clkMn6_bkgdGrey: function() {
            var t = this;
            $("#" + t.pre + "mn6_bkgdGrey").click(function(e) {
                t.setOption("background", "grey"), t.setLogCmd("set background grey", !0), $("#" + t.pre + "title").css("color", "black"), $("#" + t.pre + "titlelink").css("color", "black")
            })
        },
        clkMn6_bkgdWhite: function() {
            var t = this;
            $("#" + t.pre + "mn6_bkgdWhite").click(function(e) {
                t.setOption("background", "white"), t.setLogCmd("set background white", !0), $("#" + t.pre + "title").css("color", "black"), $("#" + t.pre + "titlelink").css("color", "black")
            })
        },
        clkMn6_bkgdTransparent: function() {
            var t = this;
            $("#" + t.pre + "mn6_bkgdTransparent").click(function(e) {
                t.setOption("background", "transparent"), t.setLogCmd("set background transparent", !0), $("#" + t.pre + "title").css("color", t.GREYD), $("#" + t.pre + "titlelink").css("color", t.GREYD)
            })
        },
        clkMn6_showfogYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_showfogYes").click(function(e) {
                t.icn3d.opts.fog = "yes", t.icn3d.setFog(!0), t.icn3d.draw(), t.setLogCmd("set fog on", !0)
            })
        },
        clkMn6_showfogNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_showfogNo").click(function(e) {
                t.icn3d.opts.fog = "no", t.icn3d.setFog(!0), t.icn3d.draw(), t.setLogCmd("set fog off", !0)
            })
        },
        clkMn6_showslabYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_showslabYes").click(function(e) {
                t.setOption("slab", "yes"), t.setLogCmd("set slab on", !0)
            })
        },
        clkMn6_showslabNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_showslabNo").click(function(e) {
                t.setOption("slab", "no"), t.setLogCmd("set slab off", !0)
            })
        },
        clkMn6_showaxisYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_showaxisYes").click(function(e) {
                t.setOption("axis", "yes"), t.setLogCmd("set axis on", !0)
            })
        },
        clkMn6_showaxisNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_showaxisNo").click(function(e) {
                t.setOption("axis", "no"), t.setLogCmd("set axis off", !0)
            })
        },
        clkMn6_symmetry: function() {
            var t = this;
            $("#" + t.pre + "mn6_symmetry").click(function(e) {
                t.retrieveSymmetry(Object.keys(t.icn3d.structures)[0])
            })
        },
        clkMn6_area: function() {
            var t = this;
            $("#" + t.pre + "mn6_area").click(function(e) {
                t.calculateArea(), t.setLogCmd("area", !0)
            })
        },
        calculateArea: function() {
            var e = this;
            e.icn3d.bCalcArea = !0, e.icn3d.opts.surface = "solvent accessible surface", e.icn3d.applySurfaceOptions(), $("#" + e.pre + "areavalue").val(e.icn3d.areavalue), $("#" + e.pre + "areatable").html(e.icn3d.areahtml), e.openDialog(e.pre + "dl_area", "Surface area calculation"), e.icn3d.bCalcArea = !1
        },
        clkMn6_applysymmetry: function() {
            var i = this;
            $("#" + i.pre + "applysymmetry").click(function(e) {
                var t = $("#" + i.pre + "selectSymmetry").val();
                i.icn3d.symmetrytitle = "none" === t ? void 0 : t, i.icn3d.draw(), i.setLogCmd("symmetry " + t, !0)
            }), $("#" + i.pre + "clearsymmetry").click(function(e) {
                i.icn3d.symmetrytitle = void 0, i.icn3d.draw(), i.setLogCmd("symmetry none", !0)
            })
        },
        clkMn6_hbondsYes: function() {
            var n = this;
            $("#" + n.pre + "mn6_hbondsYes").add("#" + n.pre + "hbondsYes").click(function(e) {
                if (void 0 === n.bSetChainsAdvancedMenu || !n.bSetChainsAdvancedMenu) {
                    var t = n.icn3d.cloneHash(n.icn3d.hAtoms);
                    n.setPredefinedInMenu(), n.bSetChainsAdvancedMenu = !0, n.icn3d.hAtoms = n.icn3d.cloneHash(t)
                }
                var i = n.setAtomMenu(["protein"]);
                $("#" + n.pre + "atomsCustomHbond").length && $("#" + n.pre + "atomsCustomHbond").html("  <option value='non-selected' selected>non-selected</option><option value='selected'>selected</option>" + i), $("#" + n.pre + "atomsCustomHbond2").length && $("#" + n.pre + "atomsCustomHbond2").html("  <option value='selected' selected>selected</option>" + i), n.openDialog(n.pre + "dl_hbonds", "Hydrogen bonds/interactions between two sets of atoms"), n.bHbondCalc = !1, $("#" + n.pre + "atomsCustomHbond").resizable(), $("#" + n.pre + "atomsCustomHbond2").resizable()
            })
        },
        clkMn6_hbondsNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_hbondsNo").click(function(e) {
                t.hideHbondsContacts(), t.icn3d.draw()
            })
        },
        hideHbondsContacts: function() {
            var e = "set hbonds off";
            this.setLogCmd(e, !0), this.icn3d.hideHbonds(), e = "set salt bridge off", this.setLogCmd(e, !0), this.icn3d.hideSaltbridge(), e = "set contact off", this.setLogCmd(e, !0), this.icn3d.hideContact(), e = "set halogen pi off", this.setLogCmd(e, !0), this.icn3d.hideHalogenPi()
        },
        clkmn1_stabilizerYes: function() {
            var t = this;
            $("#" + t.pre + "mn1_stabilizerYes").click(function(e) {
                t.addStabilizer(), t.prepareFor3Dprint(), t.setLogCmd("stabilizer", !0)
            })
        },
        clkmn1_stabilizerNo: function() {
            var t = this;
            $("#" + t.pre + "mn1_stabilizerNo").click(function(e) {
                t.setLogCmd("set stabilizer off", !0), t.hideStabilizer(), t.icn3d.draw()
            })
        },
        clkmn1_stabilizerOne: function() {
            var t = this;
            $("#" + t.pre + "mn1_stabilizerOne").click(function(e) {
                t.openDialog(t.pre + "dl_stabilizer", "Add One Stabilizer"), t.icn3d.pk = 1, t.icn3d.opts.pk = "atom", t.icn3d.pickpair = !0, t.icn3d.pAtomNum = 0
            })
        },
        clkmn1_stabilizerRmOne: function() {
            var t = this;
            $("#" + t.pre + "mn1_stabilizerRmOne").click(function(e) {
                t.openDialog(t.pre + "dl_stabilizer_rm", "Remove One Stabilizer"), t.icn3d.pk = 1, t.icn3d.opts.pk = "atom", t.icn3d.pickpair = !0, t.icn3d.pAtomNum = 0
            })
        },
        clkmn1_thicknessSet: function() {
            var t = this;
            $("#" + t.pre + "mn1_thicknessSet").click(function(e) {
                t.openDialog(t.pre + "dl_thickness", "Set Thickness for 3D Printing")
            })
        },
        clkmn5_setThickness: function() {
            var t = this;
            $("#" + t.pre + "mn3_setThickness").click(function(e) {
                t.openDialog(t.pre + "dl_thickness2", "Set Thickness")
            })
        },
        clkmn1_thicknessReset: function() {
            var t = this;
            $("#" + t.pre + "mn1_thicknessReset").click(function(e) {
                t.setLogCmd("reset thickness", !0), t.bSetThickness = !1, t.resetAfter3Dprint(), t.icn3d.draw()
            })
        },
        clkMn6_ssbondsYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_ssbondsYes").click(function(e) {
                t.setLogCmd("disulfide bonds", !0), t.showSsbonds()
            })
        },
        clkMn6_ssbondsExport: function() {
            var t = this;
            $("#" + t.pre + "mn6_ssbondsExport").click(function(e) {
                t.exportSsbondPairs(), t.setLogCmd("export disulfide bond pairs", !1)
            })
        },
        clkMn6_ssbondsNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_ssbondsNo").click(function(e) {
                t.icn3d.opts.ssbonds = "no";
                t.setLogCmd("set disulfide bonds off", !0), t.icn3d.lines.ssbond = [], t.setStyle("sidec", "nothing")
            })
        },
        clkMn6_clbondsYes: function() {
            var t = this;
            $("#" + t.pre + "mn6_clbondsYes").click(function(e) {
                t.setLogCmd("cross linkage", !0), t.showClbonds()
            })
        },
        clkMn6_clbondsExport: function() {
            var t = this;
            $("#" + t.pre + "mn6_clbondsExport").click(function(e) {
                t.exportClbondPairs(), t.setLogCmd("export cross linkage pairs", !1)
            })
        },
        clkMn6_clbondsNo: function() {
            var t = this;
            $("#" + t.pre + "mn6_clbondsNo").click(function(e) {
                t.icn3d.opts.clbonds = "no";
                t.setLogCmd("set cross linkage off", !0), t.icn3d.lines.clbond = [], t.setStyle("sidec", "nothing")
            })
        },
        clickViewswitch: function() {
            var t = this;
            $("#" + t.pre + "anno_summary").click(function(e) {
                e.preventDefault(), t.setAnnoViewAndDisplay("overview"), t.setLogCmd("set view overview", !0)
            }), $("#" + t.pre + "anno_details").click(function(e) {
                e.preventDefault(), t.setAnnoViewAndDisplay("detailed view"), t.setLogCmd("set view detailed view", !0)
            })
        },
        clickShow_annotations: function() {
            var t = this;
            $("#" + t.pre + "show_annotations").click(function(e) {
                t.showAnnotations(), t.setLogCmd("view annotations", !0)
            })
        },
        clickShowallchains: function() {
            var t = this;
            $("#" + t.pre + "showallchains").click(function(e) {
                t.showAnnoAllChains(), t.setLogCmd("show annotations all chains", !0)
            })
        },
        clickShow_alignsequences: function() {
            var t = this;
            $("#" + t.pre + "show_alignsequences").click(function(e) {
                t.openDialog(t.pre + "dl_alignment", "Select residues in aligned sequences")
            })
        },
        clickShow_2ddgm: function() {
            var t = this;
            $("#" + t.pre + "show_2ddgm").add("#" + t.pre + "mn2_2ddgm").click(function(e) {
                t.openDialog(t.pre + "dl_2ddgm", "Interactions"), t.retrieveInteractionData(), t.setLogCmd("view interactions", !0)
            })
        },
        retrieveInteractionData: function() {
            var e = this;
            if (!e.b2DShown)
                if (void 0 !== e.cfg.align) {
                    var t = Object.keys(e.icn3d.structures);
                    e.set2DDiagramsForAlign(t[0].toUpperCase(), t[1].toUpperCase())
                } else if (void 0 !== e.cfg.chainalign) {
                2 == (t = Object.keys(e.icn3d.structures)).length ? e.set2DDiagramsForAlign(t[1].toUpperCase(), t[0].toUpperCase()) : 1 == t.length && e.set2DDiagramsForAlign(t[0].toUpperCase(), t[0].toUpperCase())
            } else e.download2Ddgm(e.inputid.toUpperCase())
        },
        clickSearchSeq: function() {
            var o = this;
            $(document).on("click", "#" + o.pre + "search_seq_button", function(e) {
                e.stopImmediatePropagation();
                var t = $("#" + o.pre + "search_seq").val();
                isNaN(t) && -1 == t.indexOf("$") && -1 == t.indexOf(".") && -1 == t.indexOf(":") && -1 == t.indexOf("@") && (t = ":" + t);
                var i = t.replace(/\s+/g, "_"),
                    n = i;
                o.selectByCommand(t, i, n), o.setLogCmd("select " + t + " | name " + i, !0)
            })
        },
        clickReload_mmtf: function() {
            var t = this;
            $("#" + t.pre + "reload_mmtf").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load mmtf " + $("#" + t.pre + "mmtfid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?mmtfid=" + $("#" + t.pre + "mmtfid").val(), "_blank")
            })
        },
        clickReload_pdb: function() {
            var t = this;
            $("#" + t.pre + "reload_pdb").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load pdb " + $("#" + t.pre + "pdbid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?pdbid=" + $("#" + t.pre + "pdbid").val(), "_blank")
            })
        },
        clickReload_opm: function() {
            var t = this;
            $("#" + t.pre + "reload_opm").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load opm " + $("#" + t.pre + "opmid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?opmid=" + $("#" + t.pre + "opmid").val(), "_blank")
            })
        },
        clickReload_align_refined: function() {
            var i = this;
            $("#" + i.pre + "reload_align_refined").click(function(e) {
                e.preventDefault(), i.cfg.notebook || dialog.dialog("close");
                var t = $("#" + i.pre + "alignid1").val() + "," + $("#" + i.pre + "alignid2").val();
                i.setLogCmd("load alignment " + t + " | parameters &atype=1", !1), window.open(i.baseUrl + "icn3d/full.html?align=" + t + "&showalignseq=1&atype=1", "_blank")
            })
        },
        clickReload_align_ori: function() {
            var i = this;
            $("#" + i.pre + "reload_align_ori").click(function(e) {
                e.preventDefault(), i.cfg.notebook || dialog.dialog("close");
                var t = $("#" + i.pre + "alignid1").val() + "," + $("#" + i.pre + "alignid2").val();
                i.setLogCmd("load alignment " + t + " | parameters &atype=0", !1), window.open(i.baseUrl + "icn3d/full.html?align=" + t + "&showalignseq=1&atype=0", "_blank")
            })
        },
        clickReload_chainalign: function() {
            var i = this;
            $("#" + i.pre + "reload_chainalign").click(function(e) {
                e.preventDefault(), i.cfg.notebook || dialog.dialog("close");
                var t = $("#" + i.pre + "chainalignid1").val() + "," + $("#" + i.pre + "chainalignid2").val();
                i.setLogCmd("load chain alignment " + t, !1), window.open(i.baseUrl + "icn3d/full.html?chainalign=" + t + "&showalignseq=1", "_blank")
            })
        },
        clickReload_mmcif: function() {
            var t = this;
            $("#" + t.pre + "reload_mmcif").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load mmcif " + $("#" + t.pre + "mmcifid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?mmcifid=" + $("#" + t.pre + "mmcifid").val(), "_blank")
            })
        },
        clickReload_mmdb: function() {
            var t = this;
            $("#" + t.pre + "reload_mmdb").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load mmdb " + $("#" + t.pre + "mmdbid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?mmdbid=" + $("#" + t.pre + "mmdbid").val(), "_blank")
            })
        },
        clickReload_blast_rep_id: function() {
            var o = this;
            $("#" + o.pre + "reload_blast_rep_id").click(function(e) {
                e.preventDefault(), o.cfg.notebook || dialog.dialog("close");
                var t = $("#" + o.pre + "query_id").val(),
                    i = encodeURIComponent($("#" + o.pre + "query_fasta").val()),
                    n = $("#" + o.pre + "blast_rep_id").val();
                o.setLogCmd("load seq_struc_ids " + t + "," + n, !1), t = "" !== t && void 0 !== t ? t : i, window.open(o.baseUrl + "icn3d/full.html?from=icn3d&blast_rep_id=" + n + "&command=view annotations; set annotation cdd; set annotation site; set view detailed view; select chain " + n + "; show selection&query_id=" + t, "_blank")
            })
        },
        clickReload_gi: function() {
            var t = this;
            $("#" + t.pre + "reload_gi").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load gi " + $("#" + t.pre + "gi").val(), !1), window.open(t.baseUrl + "icn3d/full.html?gi=" + $("#" + t.pre + "gi").val(), "_blank")
            })
        },
        clickReload_cid: function() {
            var t = this;
            $("#" + t.pre + "reload_cid").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setLogCmd("load cid " + $("#" + t.pre + "cid").val(), !1), window.open(t.baseUrl + "icn3d/full.html?cid=" + $("#" + t.pre + "cid").val(), "_blank")
            })
        },
        clickReload_pngimage: function() {
            var v = this;
            $("#" + v.pre + "reload_pngimage").click(function(e) {
                e.preventDefault(), v.cfg.notebook || dialog.dialog("close"), v.cfg.notebook ? v.closeDialogs() : $(".ui-dialog-content").dialog("close"), v.init(), v.icn3d.init();
                var t = $("#" + v.pre + "pngimage")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result,
                            i = "Share Link: ",
                            n = t.indexOf(i),
                            o = "Start of state file======\n",
                            r = t.indexOf(o);
                        if (-1 == n && -1 == r) alert('Please load a PNG image saved by clicking "Save Datas > PNG Image" in the Data menu...');
                        else if (-1 != n) {
                            var s = t.substr(n + i.length);
                            v.setLogCmd("load iCn3D PNG image " + $("#" + v.pre + "pngimage").val(), !1), window.open(s)
                        } else if (-1 != r) {
                            var a = "Start of data file======\n",
                                c = t.indexOf(a);
                            if (v.bInputfile = -1 != c, v.bInputfile) {
                                var d = t.indexOf("End of data file======\n"),
                                    l = t.substr(c + a.length, d - c - a.length),
                                    h = "Start of type file======\n",
                                    p = t.indexOf(h),
                                    m = t.indexOf("End of type file======\n"),
                                    u = t.substr(p + h.length, m - p - h.length - 1),
                                    f = t.indexOf("End of state file======\n"),
                                    g = t.substr(r + o.length, f - r - o.length);
                                g = decodeURIComponent(g), "pdb" === u ? $.when(v.loadPdbData(l)).then(function() {
                                    v.icn3d.commands = [], v.icn3d.optsHistory = [], v.loadScript(g, !0)
                                }) : ("mol2" === u ? v.loadMol2Data(l) : "sdf" === u ? v.loadSdfData(l) : "xyz" === u ? v.loadXyzData(l) : "mmcif" === u && v.loadMmcifData(l), v.icn3d.commands = [], v.icn3d.optsHistory = [], v.loadScript(g, !0))
                            } else {
                                f = t.indexOf("End of state file======\n"), g = t.substr(r + o.length, f - r - o.length);
                                g = decodeURIComponent(g), v.icn3d.commands = [], v.icn3d.optsHistory = [], v.loadScript(g, !0)
                            }
                            v.setLogCmd("load iCn3D PNG image " + $("#" + v.pre + "pngimage").val(), !1)
                        }
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_state: function() {
            var n = this;
            $("#" + n.pre + "reload_state").click(function(e) {
                e.preventDefault(), n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close"), n.bInputfile || (n.init(), n.icn3d.init());
                var t = $("#" + n.pre + "state")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load state file " + $("#" + n.pre + "state").val(), !1), n.icn3d.commands = [], n.icn3d.optsHistory = [], n.loadScript(t, !0)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_selectionfile: function() {
            var n = this;
            $("#" + n.pre + "reload_selectionfile").click(function(e) {
                e.preventDefault(), n.cfg.notebook || dialog.dialog("close");
                var t = $("#" + n.pre + "selectionfile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.loadSelection(t), n.setLogCmd("load selection file " + $("#" + n.pre + "selectionfile").val(), !1)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        loadDsn6File: function(i) {
            var n = this,
                e = $("#" + n.pre + "dsn6file" + i)[0].files[0],
                o = $("#" + n.pre + "dsn6sigma" + i).val();
            if (e) {
                window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                var t = new FileReader;
                t.onload = function(e) {
                    var t = e.target.result;
                    n.loadDsn6Data(t, i, o), "2fofc" == i ? n.bAjax2fofc = !0 : "fofc" == i && (n.bAjaxfofc = !0), n.setOption("map", i), n.setLogCmd("load dsn6 file " + $("#" + n.pre + "dsn6file" + i).val(), !1)
                }, t.readAsArrayBuffer(e)
            } else alert("Please select a file before clicking 'Load'")
        },
        loadDsn6FileUrl: function(e) {
            var t = $("#" + this.pre + "dsn6fileurl" + e).val(),
                i = $("#" + this.pre + "dsn6sigmaurl" + e).val();
            this.Dsn6ParserBase(t, e, i), this.setLogCmd("set map " + e + " sigma " + i + " | " + encodeURIComponent(t), !0)
        },
        clickReload_dsn6file: function() {
            var t = this;
            $("#" + t.pre + "reload_dsn6file2fofc").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.loadDsn6File("2fofc")
            }), $("#" + t.pre + "reload_dsn6filefofc").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.loadDsn6File("fofc")
            }), $("#" + t.pre + "reload_dsn6fileurl2fofc").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.loadDsn6FileUrl("2fofc")
            }), $("#" + t.pre + "reload_dsn6fileurlfofc").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.loadDsn6FileUrl("fofc")
            })
        },
        clickReload_pdbfile: function() {
            var n = this;
            $("#" + n.pre + "reload_pdbfile").click(function(e) {
                e.preventDefault(), (n = n.setIcn3dui(this.id)).icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "pdbfile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load pdb file " + $("#" + n.pre + "pdbfile").val(), !1), n.icn3d.molTitle = "", n.init(), n.icn3d.init(), n.bInputfile = !0, n.InputfileData = t, n.InputfileType = "pdb", n.loadPdbData(t)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_mol2file: function() {
            var n = this;
            $("#" + n.pre + "reload_mol2file").click(function(e) {
                e.preventDefault(), n.icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "mol2file")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load mol2 file " + $("#" + n.pre + "mol2file").val(), !1), n.icn3d.molTitle = "", n.inputid = void 0, n.init(), n.icn3d.init(), n.bInputfile = !0, n.InputfileData = t, n.InputfileType = "mol2", n.loadMol2Data(t)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_sdffile: function() {
            var n = this;
            $("#" + n.pre + "reload_sdffile").click(function(e) {
                e.preventDefault(), n.icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "sdffile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load sdf file " + $("#" + n.pre + "sdffile").val(), !1), n.icn3d.molTitle = "", n.inputid = void 0, n.init(), n.icn3d.init(), n.bInputfile = !0, n.InputfileData = t, n.InputfileType = "sdf", n.loadSdfData(t)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_xyzfile: function() {
            var n = this;
            $("#" + n.pre + "reload_xyzfile").click(function(e) {
                e.preventDefault(), n.icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "xyzfile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load xyz file " + $("#" + n.pre + "xyzfile").val(), !1), n.icn3d.molTitle = "", n.inputid = void 0, n.init(), n.icn3d.init(), n.bInputfile = !0, n.InputfileData = t, n.InputfileType = "xyz", n.loadXyzData(t)
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickReload_urlfile: function() {
            var n = this;
            $("#" + n.pre + "reload_urlfile").click(function(e) {
                e.preventDefault(), n.icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "filetype").val(),
                    i = $("#" + n.pre + "urlfile").val();
                n.init(), n.icn3d.init(), n.bInputfile = !0, n.downloadUrl(i, t)
            })
        },
        clickReload_mmciffile: function() {
            var n = this;
            $("#" + n.pre + "reload_mmciffile").click(function(e) {
                e.preventDefault(), n.icn3d.bInitial = !0, n.cfg.notebook || dialog.dialog("close"), n.cfg.notebook ? n.closeDialogs() : $(".ui-dialog-content").dialog("close");
                var t = $("#" + n.pre + "mmciffile")[0].files[0];
                if (t) {
                    window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                    var i = new FileReader;
                    i.onload = function(e) {
                        var t = e.target.result;
                        n.setLogCmd("load mmcif file " + $("#" + n.pre + "mmciffile").val(), !1), n.icn3d.molTitle = "";
                        var i = n.baseUrl + "mmcifparser/mmcifparser.cgi";
                        n.icn3d.bCid = void 0, $.ajax({
                            url: i,
                            type: "POST",
                            data: {
                                mmciffile: t
                            },
                            dataType: "jsonp",
                            cache: !0,
                            tryCount: 0,
                            retryLimit: 1,
                            beforeSend: function() {
                                n.showLoading()
                            },
                            complete: function() {},
                            success: function(e) {
                                n.init(), n.icn3d.init(), n.bInputfile = !0, n.InputfileData = e, n.InputfileType = "mmcif", n.loadMmcifData(e)
                            },
                            error: function(e, t, i) {
                                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                            }
                        })
                    }, i.readAsText(t)
                } else alert("Please select a file before clicking 'Load'")
            })
        },
        clickApplycustomcolor: function() {
            var t = this;
            $("#" + t.pre + "applycustomcolor").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), t.setOption("color", $("#" + t.pre + "colorcustom").val()), t.setLogCmd("color " + $("#" + t.pre + "colorcustom").val(), !0)
            })
        },
        clickApplypick_aroundsphere: function() {
            var s = this;
            $("#" + s.pre + "atomsCustomSphere2").add("#" + s.pre + "atomsCustomSphere").add("#" + s.pre + "radius_aroundsphere").change(function(e) {
                s.bSphereCalc = !1
            }), $("#" + s.pre + "applypick_aroundsphere").click(function(e) {
                var t = parseFloat($("#" + s.pre + "radius_aroundsphere").val()),
                    i = $("#" + s.pre + "atomsCustomSphere").val(),
                    n = $("#" + s.pre + "atomsCustomSphere2").val();
                if (0 == n.length) alert("Please select the first set at step #1");
                else {
                    var o = "select zone cutoff " + t + " | sets " + n + " " + i + " | " + s.bSphereCalc;
                    s.bSphereCalc || s.pickCustomSphere(t, n, i, s.bSphereCalc), s.bSphereCalc = !0, s.updateHlAll(), s.setLogCmd(o, !0)
                }
            }), $("#" + s.pre + "sphereExport").click(function(e) {
                e.preventDefault();
                var t = parseFloat($("#" + s.pre + "radius_aroundsphere").val()),
                    i = $("#" + s.pre + "atomsCustomSphere").val(),
                    n = $("#" + s.pre + "atomsCustomSphere2").val();
                if (0 == n.length) alert("Please select the first set at step #1");
                else {
                    s.pickCustomSphere(t, n, i, s.bSphereCalc), s.bSphereCalc = !0, s.setLogCmd("export pairs in the sphere", !1);
                    var o = s.exportSpherePairs(),
                        r = s.inputid ? s.inputid : "custom";
                    s.saveFile(r + "_sphere_pairs.html", "html", o)
                }
            })
        },
        clickApply_adjustmem: function() {
            var o = this;
            $("#" + o.pre + "apply_adjustmem").click(function(e) {
                o.cfg.notebook || dialog.dialog("close");
                var t = parseFloat($("#" + o.pre + "extra_mem_z").val()),
                    i = parseFloat($("#" + o.pre + "intra_mem_z").val());
                o.adjustMembrane(t, i);
                var n = "adjust membrane z-axis " + t + " " + i;
                o.setLogCmd(n, !0)
            })
        },
        adjustMembrane: function(e, t) {
            for (var i in this.icn3d.chains[this.inputid.toUpperCase() + "_MEM"]) {
                var n = this.icn3d.atoms[i];
                "O" == n.name ? n.coord.z = e : "N" == n.name && (n.coord.z = t)
            }
            this.setTransmemInMenu(e, t, !0), this.updateHlMenus(), this.icn3d.draw()
        },
        clickApply_selectplane: function() {
            var o = this;
            $("#" + o.pre + "apply_selectplane").click(function(e) {
                o.cfg.notebook || dialog.dialog("close");
                var t = parseFloat($("#" + o.pre + "selectplane_z1").val()),
                    i = parseFloat($("#" + o.pre + "selectplane_z2").val());
                o.selectBtwPlanes(t, i);
                var n = "select planes z-axis " + t + " " + i;
                o.setLogCmd(n, !0)
            })
        },
        selectBtwPlanes: function(e, t) {
            if (e < t) {
                var i = t;
                t = e, e = i
            }
            var n = {};
            for (var o in this.icn3d.atoms) {
                var r = this.icn3d.atoms[o];
                if ("DUM" != r.resn)
                    if (r.coord.z >= t && r.coord.z <= e) n[r.structure + "_" + r.chain + "_" + r.resi] = 1
            }
            var s = "z_planes_" + e + "_" + t,
                a = s;
            this.selectResidueList(n, s, a, !1)
        },
        calcBuriedSurface: function(e, t) {
            var i = this;
            if (0 == e.length) alert("Please select the first set");
            else {
                var n = i.icn3d.cloneHash(i.icn3d.hAtoms),
                    o = i.getAtomsFromNameArray(e),
                    r = i.getAtomsFromNameArray(t);
                i.icn3d.bCalcArea = !0, i.icn3d.opts.surface = "solvent accessible surface", i.icn3d.hAtoms = i.icn3d.cloneHash(o), i.icn3d.applySurfaceOptions();
                var s = i.icn3d.areavalue;
                i.icn3d.hAtoms = i.icn3d.cloneHash(r), i.icn3d.applySurfaceOptions();
                var a = i.icn3d.areavalue;
                i.icn3d.hAtoms = i.icn3d.unionHash(i.icn3d.hAtoms, o), i.icn3d.applySurfaceOptions();
                var c = i.icn3d.areavalue;
                i.icn3d.bCalcArea = !1, i.icn3d.hAtoms = i.icn3d.cloneHash(n);
                var d = (parseFloat(a) + parseFloat(s) - parseFloat(c)).toFixed(2),
                    l = "<br>Calculate solvent accessible surface area in the interface:<br><br>";
                l += "Set 1: " + e + ", Surface: " + s + " &#8491;<sup>2</sup><br>", l += "Set 2: " + t + ", Surface: " + a + " &#8491;<sup>2</sup><br>", l += "Total Surface: " + c + " &#8491;<sup>2</sup><br>", l += "<b>Buried Surface</b>: " + d + " &#8491;<sup>2</sup><br><br>", $("#" + i.pre + "dl_buriedarea").html(l), i.openDialog(i.pre + "dl_buriedarea", "Buried solvent accessible surface area in the interface"), i.setLogCmd("buried surface " + d, !1)
            }
        },
        showInteractions: function(e) {
            var t = this,
                i = $("#" + t.pre + "atomsCustomHbond").val(),
                n = $("#" + t.pre + "atomsCustomHbond2").val();
            if (0 == n.length) alert("Please select the first set");
            else {
                t.setMode("selection");
                var o = $("#" + t.pre + "analysis_hbond")[0].checked,
                    r = $("#" + t.pre + "analysis_saltbridge")[0].checked,
                    s = $("#" + t.pre + "analysis_contact")[0].checked,
                    a = $("#" + t.pre + "analysis_halogen")[0].checked,
                    c = $("#" + t.pre + "analysis_pication")[0].checked,
                    d = $("#" + t.pre + "analysis_pistacking")[0].checked,
                    l = "threshold " + $("#" + t.pre + "hbondthreshold").val() + " " + $("#" + t.pre + "saltbridgethreshold").val() + " " + $("#" + t.pre + "contactthreshold").val() + " " + $("#" + t.pre + "halogenthreshold").val() + " " + $("#" + t.pre + "picationthreshold").val() + " " + $("#" + t.pre + "pistackingthreshold").val(),
                    h = t.viewInteractionPairs(n, i, t.bHbondCalc, e, o, r, s, a, c, d),
                    p = t.bHbondCalc ? "true" : "false";
                if ("3d" == e) t.setLogCmd("display interaction 3d | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("view" == e) t.setLogCmd("view interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("save1" == e) t.setLogCmd("save1 interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("save2" == e) t.setLogCmd("save2 interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("linegraph" == e) t.setLogCmd("line graph interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("scatterplot" == e) t.setLogCmd("scatterplot interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l, !0);
                else if ("graph" == e) {
                    var m = parseInt($("#" + t.pre + "dist_ss").val()),
                        u = parseInt($("#" + t.pre + "dist_coil").val()),
                        f = parseInt($("#" + t.pre + "dist_hbond").val()),
                        g = parseInt($("#" + t.pre + "dist_inter").val()),
                        v = parseInt($("#" + t.pre + "dist_ssbond").val()),
                        b = parseInt($("#" + t.pre + "dist_ionic").val()),
                        y = parseInt($("#" + t.pre + "dist_halogen").val()),
                        _ = parseInt($("#" + t.pre + "dist_pication").val()),
                        C = parseInt($("#" + t.pre + "dist_pistacking").val());
                    t.setLogCmd("graph interaction pairs | " + n + " " + i + " | " + h + " | " + p + " | " + l + " | " + m + " " + u + " " + f + " " + g + " " + v + " " + b + " " + y + " " + _ + " " + C, !0)
                }
                t.bHbondCalc = !0
            }
        },
        clickApplyhbonds: function() {
            var n = this;
            $("#" + n.pre + "atomsCustomHbond2").add("#" + n.pre + "atomsCustomHbond").add("#" + n.pre + "analysis_hbond").add("#" + n.pre + "analysis_saltbridge").add("#" + n.pre + "analysis_contact").add("#" + n.pre + "hbondthreshold").add("#" + n.pre + "saltbridgethreshold").add("#" + n.pre + "contactthreshold").change(function(e) {
                n.bHbondCalc = !1
            }), $("#" + n.pre + "crossstrucinter").change(function(e) {
                e.preventDefault(), n.icn3d.crossstrucinter = parseInt($("#" + n.pre + "crossstrucinter").val()), n.setLogCmd("cross structure interaction " + n.icn3d.crossstrucinter, !0)
            }), $("#" + n.pre + "applyhbonds").click(function(e) {
                e.preventDefault(), n.showInteractions("3d")
            }), $("#" + n.pre + "hbondWindow").click(function(e) {
                e.preventDefault(), n.showInteractions("view")
            }), $("#" + n.pre + "areaWindow").click(function(e) {
                e.preventDefault();
                var t = $("#" + n.pre + "atomsCustomHbond").val(),
                    i = $("#" + n.pre + "atomsCustomHbond2").val();
                n.calcBuriedSurface(i, t), n.setLogCmd("calc buried surface | " + i + " " + t, !0)
            }), $("#" + n.pre + "sortSet1").click(function(e) {
                e.preventDefault(), n.showInteractions("save1")
            }), $(document).on("click", "." + n.pre + "showintercntonly", function(e) {
                e.stopImmediatePropagation(), $(".icn3d-border").hide(), n.setLogCmd("table inter count only", !0)
            }), $(document).on("click", "." + n.pre + "showinterdetails", function(e) {
                e.stopImmediatePropagation(), $(".icn3d-border").show(), n.setLogCmd("table inter details", !0)
            }), $("#" + n.pre + "sortSet2").click(function(e) {
                e.preventDefault(), n.showInteractions("save2")
            }), $("#" + n.pre + "hbondGraph").click(function(e) {
                e.preventDefault(), n.showInteractions("graph")
            }), $("#" + n.pre + "hbondLineGraph").click(function(e) {
                e.preventDefault(), n.showInteractions("linegraph")
            }), $("#" + n.pre + "hbondScatterplot").click(function(e) {
                e.preventDefault(), n.showInteractions("scatterplot")
            }), $(document).on("click", "#" + n.svgid + " circle.selected", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("res");
                !1 !== n.bSelectResidue || n.icn3d.bShift || n.icn3d.bCtrl || n.removeSelection(), void 0 !== t && (n.selectResidues(t, this), n.icn3d.addHlObjects())
            }), $("#" + n.svgid + "_svg").click(function(e) {
                e.preventDefault(), n.saveSvg(n.svgid, n.inputid + "_force_directed_graph.svg")
            }), $("#" + n.svgid + "_png").click(function(e) {
                e.preventDefault();
                var t = $("#" + n.pre + "dl_graph").width(),
                    i = $("#" + n.pre + "dl_graph").height();
                n.savePng(n.svgid, n.inputid + "_force_directed_graph.png", t, i)
            }), $("#" + n.svgid + "_json").click(function(e) {
                e.preventDefault();
                var t = n.graphStr.substr(0, n.graphStr.lastIndexOf("}"));
                t += ", linkmap: {\n", t += '3: {"type": "peptidebond", "c":""},\n', t += '4: {"type": "ssbond", "c":"FFA500"},\n', t += '5: {"type": "ionic", "c":"0FF"},\n', t += '6: {"type": "ionicInside", "c":"FFF"},\n', t += '11: {"type": "contact", "c":"888"},\n', t += '12: {"type": "contactInside", "c":"FFF"},\n', t += '13: {"type": "hbond", "c":"0F0"},\n', t += '14: {"type": "hbondInside", "c":"FFF"},\n', t += '15: {"type": "clbond", "c":"006400"},\n', t += '17: {"type": "halogen", "c":"F0F"},\n', t += '18: {"type": "halogenInside", "c":"FFF"},\n', t += '19: {"type": "pication", "c":"F00"},\n', t += '20: {"type": "picationInside", "c":"FFF"},\n', t += '21: {"type": "pistacking", "c":"00F"},\n', t += '22: {"type": "pistackingInside", "c":"FFF"}\n', t += "}}\n", n.saveFile(n.inputid + "_force_directed_graph.json", "text", [t])
            }), $("#" + n.linegraphid + "_svg").click(function(e) {
                e.preventDefault(), n.saveSvg(n.linegraphid, n.inputid + "_line_graph.svg")
            }), $("#" + n.linegraphid + "_png").click(function(e) {
                e.preventDefault();
                var t = $("#" + n.pre + "dl_linegraph").width(),
                    i = $("#" + n.pre + "dl_linegraph").height();
                n.savePng(n.linegraphid, n.inputid + "_line_graph.png", t, i)
            }), $("#" + n.linegraphid + "_json").click(function(e) {
                e.preventDefault();
                var t = n.lineGraphStr.substr(0, n.lineGraphStr.lastIndexOf("}"));
                t += ", linkmap: {\n", t += '3: {"type": "peptidebond", "c":""},\n', t += '4: {"type": "ssbond", "c":"FFA500"},\n', t += '5: {"type": "ionic", "c":"0FF"},\n', t += '6: {"type": "ionicInside", "c":"FFF"},\n', t += '11: {"type": "contact", "c":"888"},\n', t += '12: {"type": "contactInside", "c":"FFF"},\n', t += '13: {"type": "hbond", "c":"0F0"},\n', t += '14: {"type": "hbondInside", "c":"FFF"},\n', t += '15: {"type": "clbond", "c":"006400"},\n', t += '17: {"type": "halogen", "c":"F0F"},\n', t += '18: {"type": "halogenInside", "c":"FFF"},\n', t += '19: {"type": "pication", "c":"F00"},\n', t += '20: {"type": "picationInside", "c":"FFF"},\n', t += '21: {"type": "pistacking", "c":"00F"},\n', t += '22: {"type": "pistackingInside", "c":"FFF"}\n', t += "}}\n", n.saveFile(n.inputid + "_line_graph.json", "text", [t])
            }), $("#" + n.linegraphid + "_scale").change(function(e) {
                e.preventDefault();
                var t = $("#" + n.linegraphid + "_scale").val();
                $("#" + n.linegraphid).attr("width", (n.linegraphWidth * parseFloat(t)).toString() + "px"), n.setLogCmd("line graph scale " + t, !0)
            }), $("#" + n.scatterplotid + "_svg").click(function(e) {
                e.preventDefault(), n.saveSvg(n.scatterplotid, n.inputid + "_scatterplot.svg")
            }), $("#" + n.scatterplotid + "_png").click(function(e) {
                e.preventDefault();
                var t = $("#" + n.pre + "dl_scatterplot").width(),
                    i = $("#" + n.pre + "dl_scatterplot").height();
                n.savePng(n.scatterplotid, n.inputid + "_scatterplot.png", t, i)
            }), $("#" + n.scatterplotid + "_json").click(function(e) {
                e.preventDefault();
                var t = n.scatterplotStr.substr(0, n.scatterplotStr.lastIndexOf("}"));
                t += ", linkmap: {\n", t += '3: {"type": "peptidebond", "c":""},\n', t += '4: {"type": "ssbond", "c":"FFA500"},\n', t += '5: {"type": "ionic", "c":"0FF"},\n', t += '6: {"type": "ionicInside", "c":"FFF"},\n', t += '11: {"type": "contact", "c":"888"},\n', t += '12: {"type": "contactInside", "c":"FFF"},\n', t += '13: {"type": "hbond", "c":"0F0"},\n', t += '14: {"type": "hbondInside", "c":"FFF"},\n', t += '15: {"type": "clbond", "c":"006400"},\n', t += '17: {"type": "halogen", "c":"F0F"},\n', t += '18: {"type": "halogenInside", "c":"FFF"},\n', t += '19: {"type": "pication", "c":"F00"},\n', t += '20: {"type": "picationInside", "c":"FFF"},\n', t += '21: {"type": "pistacking", "c":"00F"},\n', t += '22: {"type": "pistackingInside", "c":"FFF"}\n', t += "}}\n", n.saveFile(n.inputid + "_scatterplot.json", "text", [t])
            }), $("#" + n.scatterplotid + "_scale").change(function(e) {
                e.preventDefault();
                var t = $("#" + n.scatterplotid + "_scale").val();
                $("#" + n.scatterplotid).attr("width", (n.scatterplotWidth * parseFloat(t)).toString() + "px"), n.setLogCmd("scatterplot scale " + t, !0)
            }), $("#" + n.svgid + "_label").change(function(e) {
                e.preventDefault();
                var t = $("#" + n.svgid + "_label").val();
                $("#" + n.svgid + " text").removeClass(), $("#" + n.svgid + " text").addClass(t), n.setLogCmd("graph label " + t, !0)
            }), $("#" + n.svgid + "_hideedges").change(function(e) {
                e.preventDefault(), n.hideedges = parseInt($("#" + n.svgid + "_hideedges").val()), n.hideedges ? (n.contactInsideColor = "FFF", n.hbondInsideColor = "FFF", n.ionicInsideColor = "FFF") : (n.contactInsideColor = "DDD", n.hbondInsideColor = "AFA", n.ionicInsideColor = "8FF"), void 0 !== n.graphStr && (n.icn3d.bRender && n.force && n.drawGraph(n.graphStr, n.pre + "dl_graph"), n.setLogCmd("hide edges " + n.hideedges, !0))
            }), $("#" + n.svgid + "_force").change(function(e) {
                e.preventDefault(), n.force = parseInt($("#" + n.svgid + "_force").val()), void 0 !== n.graphStr && (n.setLogCmd("graph force " + n.force, !0), n.handleForce())
            }), $("#" + n.pre + "hbondReset").click(function(e) {
                e.preventDefault(), n.resetInteractionPairs(), n.setLogCmd("reset interaction pairs", !0)
            })
        },
        handleForce: function() {
            var e = this;
            0 == e.force && void 0 !== e.simulation ? (e.simulation.stop(), e.simulation.force("charge", null), e.simulation.force("x", null), e.simulation.force("y", null), e.simulation.force("r", null), e.simulation.force("link", null)) : e.drawGraph(e.graphStr, e.pre + "dl_graph")
        },
        resetInteractionPairs: function() {
            this.bHbondCalc = !1, this.hideHbondsContacts(), this.clearHighlight(), this.icn3d.resids2inter = {}, this.icn3d.resids2interAll = {}
        },
        viewInteractionPairs: function(e, t, i, n, o, r, s, a, c, d) {
            var l = this;
            l.icn3d.bRender = !1;
            var h, p = {},
                m = l.icn3d.cloneHash(l.icn3d.hAtoms),
                u = l.getAtomsFromNameArray(e),
                f = l.getAtomsFromNameArray(t),
                g = 0,
                v = 0;
            for (var b in l.icn3d.structures) {
                for (var y = 0, _ = l.icn3d.structures[b].length; y < _; ++y) {
                    var C = l.icn3d.structures[b][y];
                    for (var w in l.icn3d.chains[C])
                        if (u.hasOwnProperty(w) || f.hasOwnProperty(w)) {
                            ++g, 0;
                            break
                        }
                }++v
            }
            h = 1 < v ? "structure" : 1 < g ? "chain" : "residue";
            var S = [];
            if (o && S.push("hbonds"), r && S.push("salt bridge"), s && S.push("interactions"), a && S.push("halogen"), c && S.push("pi-cation"), d && S.push("pi-stacking"), i || (l.icn3d.resids2inter = {}, l.icn3d.resids2interAll = {}), r) {
                var k = parseFloat($("#" + l.pre + "saltbridgethreshold").val());
                i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.showIonicInteractions(k, e, t, i, !0, n)), p = l.icn3d.unionHash(p, l.icn3d.hAtoms)
            }
            if (o) {
                k = parseFloat($("#" + l.pre + "hbondthreshold").val());
                i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.showHbonds(k, e, t, i, void 0, n)), p = l.icn3d.unionHash(p, l.icn3d.hAtoms)
            }
            var A, x, R = "";
            if (o && (R += l.exportHbondPairs(n, h)), r && (R += l.exportSaltbridgePairs(n, h)), a) {
                k = parseFloat($("#" + l.pre + "halogenthreshold").val());
                i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.showHalogenPi(k, e, t, i, n, "halogen")), p = l.icn3d.unionHash(p, l.icn3d.hAtoms), R += l.exportHalogenPiPairs(n, h, "halogen")
            }
            if (c) {
                k = parseFloat($("#" + l.pre + "picationthreshold").val());
                i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.showHalogenPi(k, e, t, i, n, "pi-cation")), p = l.icn3d.unionHash(p, l.icn3d.hAtoms), R += l.exportHalogenPiPairs(n, h, "pi-cation")
            }
            if (d) {
                k = parseFloat($("#" + l.pre + "pistackingthreshold").val());
                i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.showHalogenPi(k, e, t, i, n, "pi-stacking")), p = l.icn3d.unionHash(p, l.icn3d.hAtoms), R += l.exportHalogenPiPairs(n, h, "pi-stacking")
            }
            if (s) {
                k = parseFloat($("#" + l.pre + "contactthreshold").val());
                if (1 != e.length || 1 != t.length || e[0] != t[0]) i || (l.icn3d.hAtoms = l.icn3d.cloneHash(m), l.pickCustomSphere(k, e, t, i, !0, n)), p = l.icn3d.unionHash(p, l.icn3d.hAtoms), R += l.exportSpherePairs(!0, n, h);
                else {
                    if (!i) {
                        var E = [],
                            D = "",
                            O = "",
                            T = {};
                        for (var y in u) {
                            var H = l.icn3d.atoms[y];
                            H.ss == D && H.chain == O || (0 < Object.keys(T).length && E.push(T), T = {}), T[H.serial] = 1, D = H.ss, O = H.chain
                        }
                        0 < Object.keys(T).length && E.push(T);
                        var M = E.length;
                        x = "interactions " + k + " | sets " + e + " " + t + " | true", l.icn3d.opts.contact = "yes";
                        var I = {},
                            L = {};
                        for (y = 0; y < M; ++y)
                            for (var F = y + 1; F < M; ++F) {
                                l.icn3d.hAtoms = l.icn3d.cloneHash(m);
                                var P = l.pickCustomSphere_base(k, E[y], E[F], i, !0, n, x);
                                for (var N in I = l.icn3d.unionHash(I, P.residues), P.resid2Residhash) L[N] = l.icn3d.unionHash(L[N], P.resid2Residhash[N])
                            }
                        l.resid2ResidhashInteractions = L;
                        var z, q, j = Object.keys(I);
                        l.icn3d.hAtoms = {};
                        for (var U = 0, B = j.length; U < B; ++U) {
                            var G = j[U];
                            for (var y in l.icn3d.residues[G]) l.icn3d.hAtoms[y] = 1
                        }
                        var V = l.icn3d.getFirstAtomObj(I);
                        void 0 !== V && (z = "sphere." + V.chain + ":" + l.icn3d.residueName2Abbr(V.resn.substr(0, 3)).trim() + V.resi + "-" + radius + "A", s && (z = "interactions." + V.chain + ":" + l.icn3d.residueName2Abbr(V.resn.substr(0, 3)).trim() + V.resi + "-" + $("#" + l.pre + "contactthreshold").val() + "A"), q = z, l.addCustomSelection(j, z, q, x, !0)), l.saveSelectionIfSelected(), l.icn3d.draw()
                    }
                    p = l.icn3d.unionHash(p, l.icn3d.hAtoms), R += l.exportSpherePairs(!0, n, h)
                }
            }
            l.icn3d.hAtoms = l.icn3d.cloneHash(p), l.icn3d.bRender = !0, l.icn3d.draw(), A = l.icn3d.getResiduesFromAtoms(p), x = "select " + l.residueids2spec(Object.keys(A)), q = z = "interface_all", l.addCustomSelection(Object.keys(A), z, q, x, !0);
            var W = l.icn3d.intHash(p, u);
            A = l.icn3d.getResiduesFromAtoms(W), x = "select " + l.residueids2spec(Object.keys(A)), q = z = "interface_1", l.addCustomSelection(Object.keys(A), z, q, x, !0);
            var Y = l.icn3d.intHash(p, f);
            A = l.icn3d.getResiduesFromAtoms(Y), x = "select " + l.residueids2spec(Object.keys(A)), q = z = "interface_2", l.addCustomSelection(Object.keys(A), z, q, x, !0);
            var X = '<div style="text-align:center"><b>' + S.join(", ") + " between Two Sets:</b><br>",
                K = l.atoms2residues(Object.keys(u)),
                Z = l.atoms2residues(Object.keys(f)),
                Q = "select " + l.residueids2spec(K),
                J = "select " + l.residueids2spec(Z);
            X += "Set 1: " + e + ' <button class="' + l.pre + 'selset" cmd="' + Q + '">Highlight in 3D</button><br>', X += "Set 2: " + t + ' <button class="' + l.pre + 'selset" cmd="' + J + '">Highlight in 3D</button><br><br></div>', X += '<div style="text-align:center"><b>The interfaces are:</b><br>';
            var ee = l.atoms2residues(Object.keys(W)),
                te = l.atoms2residues(Object.keys(Y)),
                ie = "select " + l.residueids2spec(ee),
                ne = "select " + l.residueids2spec(te);
            X += 'interface_1 <button class="' + l.pre + 'selset" cmd="' + ie + '">Highlight in 3D</button><br>', X += 'interface_2 <button class="' + l.pre + 'selset" cmd="' + ne + '">Highlight in 3D</button><br><br></div>';
            var oe = X += '<div><b>Note</b>: Each checkbox below selects the corresponding residue. You can click "Save Selection" in the "Select" menu to save the selection and click on "Highlight" button to clear the checkboxes.</div><br>';
            if ("graph" != n && "linegraph" != n && "scatterplot" != n || (X = ""), X += R, "save1" == n || "save2" == n) {
                X = oe;
                var re = "";
                "save1" == n ? re = "Set 1" : "save2" == n && (re = "Set 2"), X += '<div style="text-align:center"><br><b>Interactions Sorted on ' + re + '</b>: <button class="' + l.pre + 'showintercntonly" style="margin-left:20px">Show Count Only</button><button class="' + l.pre + 'showinterdetails" style="margin-left:20px">Show Details</button></div>', X += l.getAllInteractionTable(n), $("#" + l.pre + "dl_interactionsorted").html(X), l.openDialog(l.pre + "dl_interactionsorted", "Show sorted interactions")
            } else if ("view" == n) $("#" + l.pre + "dl_allinteraction").html(X), l.openDialog(l.pre + "dl_allinteraction", "Show interactions");
            else if ("linegraph" == n) {
                l.openDialog(l.pre + "dl_linegraph", "Show interactions between two lines of residue nodes");
                l.graphStr = l.getGraphData(u, f, e, t, X, h), l.bLinegraph = !0;
                var se = l.drawLineGraph(l.graphStr);
                $("#" + l.pre + "linegraphDiv").html(se)
            } else if ("scatterplot" == n) {
                l.openDialog(l.pre + "dl_scatterplot", "Show interactions as scatterplot");
                l.graphStr = l.getGraphData(u, f, e, t, X, h), l.bScatterplot = !0;
                se = l.drawLineGraph(l.graphStr, !0);
                $("#" + l.pre + "scatterplotDiv").html(se)
            } else if ("graph" == n)
                if (l.graphStr = l.getGraphData(u, f, e, t, X, h), l.bGraph = !0, Object.keys(f).length + Object.keys(u).length > Object.keys(l.icn3d.dAtoms).length && (l.graphStr = l.getGraphDataForDisplayed()), void 0 === l.bD3) {
                    $.ajax({
                        url: "https://d3js.org/d3.v4.min.js",
                        dataType: "script",
                        cache: !0,
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            l.bD3 = !0, $("#" + l.svgid).empty(), l.openDialog(l.pre + "dl_graph", "Force-directed graph"), l.drawGraph(l.graphStr, l.pre + "dl_graph"), void 0 !== l.deferredGraphinteraction && l.deferredGraphinteraction.resolve()
                        },
                        error: function(e, t, i) {
                            this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== l.deferredGraphinteraction && l.deferredGraphinteraction.resolve()
                        }
                    })
                } else $("#" + l.svgid).empty(), l.openDialog(l.pre + "dl_graph", "Force-directed graph"), l.drawGraph(l.graphStr, l.pre + "dl_graph");
            return S.toString()
        },
        compResid: function(e, t, i) {
            var n, o, r = e.split(","),
                s = t.split(",");
            "save1" == i ? (n = r[0].split("_"), o = s[0].split("_")) : "save2" == i && (n = r[1].split("_"), o = s[1].split("_"));
            var a = n[0] + "_" + n[1],
                c = o[0] + "_" + o[1],
                d = parseInt(n[2]),
                l = parseInt(o[2]);
            return c < a ? 1 : a < c ? -1 : a == c ? l < d ? 1 : d < l ? -1 : 0 : void 0
        },
        getAllInteractionTable: function(i) {
            var n = this,
                e = Object.keys(n.icn3d.resids2inter);
            "save1" == i ? e.sort(function(e, t) {
                return n.compResid(e, t, i)
            }) : "save2" == i && e.sort(function(e, t) {
                return n.compResid(e, t, i)
            });
            for (var t = tmpText = "", o = "", r = "", s = "", a = "", c = "", d = "", l = "", h = 0, p = 0, m = 0, u = 0, f = 0, g = 0, v = 0, b = e.length; v < b; ++v) {
                var y, _, C = e[v],
                    w = C.split(","),
                    S = "save1" == i ? w[0] : w[1],
                    k = ("save1" == i ? w[1] : w[0], S.split("_"));
                0 < v && S != t && (tmpText += n.getInteractionPerResidue(o, r, s, a, c, d, l, h, p, m, u, f, g), l = d = c = a = s = r = "", g = f = u = m = p = h = 0), y = n.icn3d.resids2inter[C].hbond, r += (_ = n.getInteractionPairDetails(y, i, "hbond")).html, h += _.cnt, y = n.icn3d.resids2inter[C].ionic, s += (_ = n.getInteractionPairDetails(y, i, "ionic")).html, p += _.cnt, y = n.icn3d.resids2inter[C].contact, a += (_ = n.getContactPairDetails(y, i, "contact")).html, m += _.cnt, y = n.icn3d.resids2inter[C].halogen, c += (_ = n.getInteractionPairDetails(y, i, "halogen")).html, u += _.cnt, y = n.icn3d.resids2inter[C]["pi-cation"], d += (_ = n.getInteractionPairDetails(y, i, "pi-cation")).html, f += _.cnt, y = n.icn3d.resids2inter[C]["pi-stacking"], l += (_ = n.getInteractionPairDetails(y, i, "pi-stacking")).html, g += _.cnt, t = S, o = k
            }
            tmpText += n.getInteractionPerResidue(o, r, s, a, c, d, l, h, p, m, u, f, g);
            var A = "";
            return 0 < e.length && (A += '<br><table class="icn3d-sticky" align=center border=1 cellpadding=10 cellspacing=0><thead>', A += "<tr><th rowspan=2>Residue</th><th rowspan=2># Hydrogen<br>Bond</th><th rowspan=2># Salt Bridge<br>/Ionic Interaction</th><th rowspan=2># Contact</th>", A += "<th rowspan=2># Halogen<br>Bond</th><th rowspan=2># &pi;-Cation</th><th rowspan=2># &pi;-Stacking</th>", A += "<th>Hydrogen Bond</th><th>Salt Bridge/Ionic Interaction</th><th>Contact</th>", A += "<th>Halogen Bond</th><th>&pi;-Cation</th><th>&pi;-Stacking</th></tr>", A += "<tr>", A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td># Contacts</td><td>Min Distance (&#8491;)</td><td>C-alpha Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += '<td><table width="100%" class="icn3d-border"><tr><td>Atom1</td><td>Atom2</td><td>Distance (&#8491;)</td><td>Highlight in 3D</td></tr></table></td>', A += "</tr>", A += "</thead><tbody>", A += tmpText, A += "</tbody></table><br/>"), A
        },
        getInteractionPerResidue: function(e, t, i, n, o, r, s, a, c, d, l, h, p) {
            var m = "";
            return m += '<tr align="center"><th>' + e[3] + e[2] + "</th><td>" + a + "</td><td>" + c + "</td><td>" + d + "</td><td>" + l + "</td><td>" + h + "</td><td>" + p + "</td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + t + "</table></td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + i + "</table></td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + n + "</table></td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + o + "</table></td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + r + "</table></td>", m += '<td valign="top"><table width="100%" class="icn3d-border">' + s + "</table></td>", m += "</tr>"
        },
        getInteractionPairDetails: function(e, t, i) {
            var n = this,
                o = "",
                r = 0,
                s = ' <span style="background-color:#',
                a = '">&nbsp;&nbsp;&nbsp;</span>';
            if (void 0 !== e)
                for (var c in e) {
                    var d = c.split(","),
                        l = "save1" == t ? d[0] : d[1],
                        h = "save1" == t ? d[1] : d[0],
                        p = n.convertLabel2Resid(l),
                        m = n.icn3d.getFirstAtomObj(n.icn3d.residues[p]).color.getHexString(),
                        u = n.convertLabel2Resid(h),
                        f = n.icn3d.getFirstAtomObj(n.icn3d.residues[u]).color.getHexString(),
                        g = Math.sqrt(e[c]).toFixed(1);
                    o += '<tr><td><span style="white-space:nowrap"><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + i + "2_" + r + 'a" resid="' + l + '"/> ' + l + s + m + a + '</span></td><td><span style="white-space:nowrap"><input type="checkbox" class="' + n.pre + 'seloneres" id="' + n.pre + i + "2_" + r + 'b" resid="' + h + '"/> ' + h + s + f + a + '</span></td><td align="center">' + g + "</td>", o += '<td align="center"><button class="' + n.pre + 'selres" resid="' + l + "|" + h + '">Highlight</button></td>', o += "</tr>", ++r
                }
            return {
                html: o,
                cnt: r
            }
        },
        getContactPairDetails: function(e, t) {
            var i = this,
                n = "",
                o = 0,
                r = ' <span style="background-color:#',
                s = '">&nbsp;&nbsp;&nbsp;</span>';
            if (void 0 !== e)
                for (var a in e) {
                    var c = a.split(","),
                        d = "save1" == t ? c[0] : c[1],
                        l = "save1" == t ? c[1] : c[0],
                        h = i.convertLabel2Resid(d),
                        p = (b = i.icn3d.getFirstAtomObj(i.icn3d.residues[h])).color.getHexString(),
                        m = i.convertLabel2Resid(l),
                        u = (y = i.icn3d.getFirstAtomObj(i.icn3d.residues[m])).color.getHexString(),
                        f = e[a].split("_"),
                        g = f[0],
                        v = f[1],
                        b = f[2],
                        y = f[3],
                        _ = f[4];
                    n += '<tr><td><span style="white-space:nowrap"><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "inter2_" + o + 'a" resid="' + d + '"/> ' + d + "@" + b + r + p + s + '</span></td><td><span style="white-space:nowrap"><input type="checkbox" class="' + i.pre + 'seloneres" id="' + i.pre + "inter2_" + o + 'b" resid="' + l + '"/> ' + l + "@" + y + r + u + s + '</span></td><td align="center">' + _ + '</td><td align="center">' + g + '</td><td align="center">' + v + "</td>", n += '<td align="center"><button class="' + i.pre + 'selres" resid="' + d + "|" + l + '">Highlight</button></td>', n += "</tr>", o += parseInt(_)
                }
            return {
                html: n,
                cnt: o
            }
        },
        getGraphData: function(e, t, i, n, o, r) {
            for (var s, a, c, d = this, l = d.getNodesLinksForSet(e, r, "a"), h = d.getNodesLinksForSet(t, r, "b"), p = [], m = {}, u = 0, f = 0, g = (c = l.node.concat(h.node)).length; f < g; ++f) {
                var v = c[f],
                    b = JSON.parse(v);
                if (m.hasOwnProperty(b.id)) p[m[b.id]].s = "ab";
                else p.push(b), m[b.id] = u, ++u
            }
            var y = [];
            for (f = 0, g = p.length; f < g; ++f) {
                b = p[f];
                y.push(JSON.stringify(b))
            }
            s = y.join(", "), a = l.link.concat(h.link).join(", ");
            var _ = d.icn3d.unionHash(d.icn3d.cloneHash(t), e),
                C = "",
                w = "",
                S = "",
                k = "",
                A = "",
                x = "";
            for (var R in 1 == i.length && 1 == n.length && i[0] == n[0] || (C += d.getHbondLinksForSet(e, r), C += d.getHbondLinksForSet(t, r)), 1 == i.length && 1 == n.length && i[0] == n[0] || (w += d.getIonicLinksForSet(e, r), w += d.getIonicLinksForSet(t, r)), 1 == i.length && 1 == n.length && i[0] == n[0] || (S += d.getHalogenPiLinksForSet(e, r), S += d.getHalogenPiLinksForSet(t, r)), 1 == i.length && 1 == n.length && i[0] == n[0] || (k += d.getContactLinksForSet(e, r), k += d.getContactLinksForSet(t, r)), d.icn3d.ssbondpnts)
                for (f = 0, g = d.icn3d.ssbondpnts[R].length; f < g; f += 2) {
                    var E = d.icn3d.ssbondpnts[R][f],
                        D = d.icn3d.ssbondpnts[R][f + 1],
                        O = d.icn3d.getFirstAtomObj(d.icn3d.residues[E]),
                        T = d.icn3d.getFirstAtomObj(d.icn3d.residues[D]);
                    if (_.hasOwnProperty(O.serial) && _.hasOwnProperty(T.serial)) {
                        var H = d.icn3d.residueName2Abbr(O.resn) + O.resi;
                        "chain" != r && "structure" != r || (H += "." + O.chain), "structure" == r && (H += "." + O.structure);
                        var M = d.icn3d.residueName2Abbr(T.resn) + T.resi;
                        "chain" != r && "structure" != r || (M += "." + T.chain), "structure" == r && (M += "." + T.structure), A += ', {"source": "' + H + '", "target": "' + M + '", "v": ' + d.ssbondValue + ', "c": "' + d.ssbondColor + '"}'
                    }
                }
            for (var R in d.icn3d.clbondpnts)
                for (f = 0, g = d.icn3d.clbondpnts[R].length; f < g; f += 2) {
                    E = d.icn3d.clbondpnts[R][f], D = d.icn3d.clbondpnts[R][f + 1], O = d.icn3d.getFirstAtomObj(d.icn3d.residues[E]), T = d.icn3d.getFirstAtomObj(d.icn3d.residues[D]);
                    if (_.hasOwnProperty(O.serial) && _.hasOwnProperty(T.serial)) {
                        H = d.icn3d.residueName2Abbr(O.resn) + O.resi;
                        "chain" != r && "structure" != r || (H += "." + O.chain), "structure" == r && (H += "." + O.structure);
                        M = d.icn3d.residueName2Abbr(T.resn) + T.resi;
                        "chain" != r && "structure" != r || (M += "." + T.chain), "structure" == r && (M += "." + T.structure), x += ', {"source": "' + H + '", "target": "' + M + '", "v": ' + d.clbondValue + ', "c": "' + d.clbondColor + '"}'
                    }
                }
            var I = '{"nodes": [' + s + '], "links": [';
            return I += a + o + A + x + k + C + w + S, I += "]}"
        },
        drawResNode: function(e, t, i, n, o, r, s, a) {
            var c = e.r.substr(4);
            if (a) var d = o - t * (i + n);
            else d = o + t * (i + n);
            this.icn3d.getFirstAtomObj(this.icn3d.residues[c]);
            var l = "#" + e.c.toUpperCase(),
                h = (this.icn3d.hColor.getHexString().toUpperCase(), e.id.indexOf(".")),
                p = -1 == h ? e.id : e.id.substr(0, h),
                m = "a" == s ? -7 : 10;
            t % 2 == 1 && (m = "a" == s ? m - 7 : m + 7);
            var u = "<g class='icn3d-node' resid='" + c + "' >";
            return u += "<title>" + e.id + "</title>", a ? (u += "<circle cx='" + r + "' cy='" + d + "' r='" + i + "' fill='" + l + "' stroke-width='1' stroke='#000' resid='" + c + "' />", u += "<text x='" + (r - 20).toString() + "' y='" + (d + 2).toString() + "' fill='#000' stroke='none' style='font-size:6; text-anchor:middle' >" + p + "</text>") : (u += "<circle cx='" + d + "' cy='" + r + "' r='" + i + "' fill='" + l + "' stroke-width='1' stroke='#000' resid='" + c + "' />", u += "<text x='" + (d + 0).toString() + "' y='" + (r + m).toString() + "' fill='#000' stroke='none' style='font-size:6; text-anchor:middle' >" + p + "</text>"), u += "</g>"
        },
        getNodeTopBottom: function(e, t, i) {
            var n = this,
                o = [],
                r = [];
            for (var s in e) {
                var a = t[s];
                "a" == a.s ? o.push(a) : "b" == a.s ? r.push(a) : "ab" == a.s && (o.push(a), r.push(a))
            }
            return o.sort(function(e, t) {
                return n.compNode(e, t)
            }), r.sort(function(e, t) {
                return n.compNode(e, t, i)
            }), {
                nodeArray1: o,
                nodeArray2: r
            }
        },
        drawLineGraph: function(e, t) {
            for (var i, n, o = this, r = JSON.parse(e), s = [], a = {}, c = 0, d = r.nodes.length; c < d; ++c) {
                var l = r.nodes[c];
                a[l.id] = l
            }
            var h = {};
            for (c = 0, d = r.links.length; c < d; ++c) {
                (R = r.links[c]).v != o.hbondValue && R.v != o.ionicValue && R.v != o.halogenValue && R.v != o.picationValue && R.v != o.pistackingValue && R.v != o.contactValue || (s.push(R), h[R.source] = 1, h[R.target] = 1)
            }
            var p = o.getNodeTopBottom(h, a);
            if (i = p.nodeArray1, n = p.nodeArray2, o.lineGraphStr = "{\n", 1 < Object.keys(o.icn3d.structures).length) {
                var m, u, f, g, v, b, y = Object.keys(o.icn3d.structures)[0],
                    _ = Object.keys(o.icn3d.structures)[1],
                    C = [],
                    w = [],
                    S = [],
                    k = {},
                    A = {},
                    x = {};
                for (c = 0, d = s.length; c < d; ++c) {
                    var R, E = a[(R = s[c]).source],
                        D = a[R.target],
                        O = E.r.split("_"),
                        T = D.r.split("_");
                    O[2] == y && T[2] == y ? (C.push(R), k[R.source] = 1, k[R.target] = 1) : O[2] == _ && T[2] == _ ? (w.push(R), A[R.source] = 1, A[R.target] = 1) : (S.push(R), x[R.source] = 1, x[R.target] = 1)
                }
                var H = o.getNodeTopBottom(k, a);
                m = H.nodeArray1, u = H.nodeArray2;
                var M = o.getNodeTopBottom(A, a);
                f = M.nodeArray1, g = M.nodeArray2;
                var I = o.getNodeTopBottom(x, a, !0);
                v = I.nodeArray1, b = I.nodeArray2;
                var L = m.length,
                    F = u.length,
                    P = f.length,
                    N = g.length,
                    z = v.length,
                    q = b.length,
                    j = Math.max(L, F, P, N, z, q),
                    U = [];
                0 < C.length && U.push(y), 0 < w.length && U.push(_), 0 < S.length && U.push(y + "_" + _);
                var B, G, V, W = 3 * (Z = 1),
                    Y = 7 * Z;
                te = t ? (B = (F + 2 + N + 2) * (W + Y) + 40 + 60, (Math.max(L, P) + 2) * (W + Y) + 20 + 30) : (B = (ee = 110) * U.length, j * (W + Y) + 20), G = t ? (o.scatterplotWidth = 2 * te, V = o.scatterplotWidth, o.scatterplotid) : (o.linegraphWidth = 2 * te, V = o.linegraphWidth, o.linegraphid);
                var X = 0 == U.length ? "No interactions found for each structure<br><br>" : "2D integration graph for structure(s) <b>" + U + "</b><br><br>";
                X += "<svg id='" + G + "' viewBox='0,0," + te + "," + B + "' width='" + V + "px'>";
                var K = 0;
                0 < C.length && (t ? (K -= 15, X += o.drawScatterplot_base(m, u, C, a, K), K = 15, ee = (F + 1) * (W + Y) + 20) : X += o.drawLineGraph_base(m, u, C, a, K), K += ee, o.lineGraphStr += '"structure1": {"id": "' + y + '", "nodes1":[', o.lineGraphStr += o.getJSONFromArray(m), o.lineGraphStr += '], \n"nodes2":[', o.lineGraphStr += o.getJSONFromArray(u), o.lineGraphStr += '], \n"links":[', o.lineGraphStr += o.getJSONFromArray(C), o.lineGraphStr += "]}"), 0 < w.length && (t ? (X += o.drawScatterplot_base(f, g, w, a, K), ee = (N + 1) * (W + Y) + 20) : X += o.drawLineGraph_base(f, g, w, a, K), K += ee, 0 < C.length && (o.lineGraphStr += ", \n"), o.lineGraphStr += '"structure2": {"id": "' + _ + '", "nodes1":[', o.lineGraphStr += o.getJSONFromArray(f), o.lineGraphStr += '], \n"nodes2":[', o.lineGraphStr += o.getJSONFromArray(g), o.lineGraphStr += '], \n"links":[', o.lineGraphStr += o.getJSONFromArray(w), o.lineGraphStr += "]}"), 0 < S.length && !t && (X += o.drawLineGraph_base(v, b, S, a, K), (0 < C.length || 0 < w.length) && (o.lineGraphStr += ", \n"), o.lineGraphStr += '"structure1_2": {"id1": "' + y + '", "id2": "' + _ + '", "nodes1":[', o.lineGraphStr += o.getJSONFromArray(v), o.lineGraphStr += '], \n"nodes2":[', o.lineGraphStr += o.getJSONFromArray(b), o.lineGraphStr += '], \n"links":[', o.lineGraphStr += o.getJSONFromArray(S), o.lineGraphStr += "]}"), X += "</svg>"
            } else if (!t) {
                var Z, Q = i.length,
                    J = n.length,
                    ee = (W = 3 * (Z = 1), Y = 7 * Z, 110),
                    te = J < Q ? Q * (W + Y) + 20 : J * (W + Y) + 20;
                o.linegraphWidth = 2 * te;
                X = 0 < s.length ? "" : "No interactions found for these two sets<br><br>";
                X += "<svg id='" + o.linegraphid + "' viewBox='0,0," + te + "," + ee + "' width='" + o.linegraphWidth + "px'>", X += o.drawLineGraph_base(i, n, s, a, 0), o.lineGraphStr += '"structure1": {"id": "' + y + '", "nodes1":[', o.lineGraphStr += o.getJSONFromArray(i), o.lineGraphStr += '], \n"nodes2":[', o.lineGraphStr += o.getJSONFromArray(i), o.lineGraphStr += '], \n"links":[', o.lineGraphStr += o.getJSONFromArray(s), o.lineGraphStr += "]}", X += "</svg>"
            }
            return o.lineGraphStr += "}\n", o.scatterplotStr = o.lineGraphStr, t ? $("#" + o.pre + "scatterplotDiv").html(X) : $("#" + o.pre + "linegraphDiv").html(X), X
        },
        getJSONFromArray: function(e) {
            for (var t = "", i = 0, n = e.length; i < n; ++i) t += JSON.stringify(e[i]), i != n - 1 && (t += ", ");
            return t
        },
        drawLineGraph_base: function(e, t, i, n, o) {
            var r, s, a = this,
                c = "",
                d = e.length,
                l = t.length;
            l < d ? s = (r = 10) * Math.abs(d - l) * .5 + 10 : r = (s = 10) * Math.abs(d - l) * .5 + 10;
            for (var h = 30 + o, p = 80 + o, m = "", u = {}, f = {}, g = 0; g < d; ++g) m += a.drawResNode(e[g], g, 3, 7, r, h, "a"), u[e[g].id] = {
                x: r + 10 * g,
                y: h
            };
            for (g = 0; g < l; ++g) m += a.drawResNode(t[g], g, 3, 7, s, p, "b"), f[t[g].id] = {
                x: s + 10 * g,
                y: p
            };
            g = 0;
            for (var v = i.length; g < v; ++g) {
                var b, y, _ = i[g],
                    C = n[_.source],
                    w = n[_.target],
                    S = C.r.substr(4),
                    k = w.r.substr(4),
                    A = u[C.id],
                    x = f[w.id];
                if (void 0 !== A && void 0 !== x) b = _.v == a.contactValue ? 1 : 2, _.v == a.hbondValue ? y = "#" + a.hbondColor : _.v == a.ionicValue ? y = "#" + a.ionicColor : _.v == a.halogenValue ? y = "#" + a.halogenColor : _.v == a.picationValue ? y = "#" + a.picationColor : _.v == a.pistackingValue ? y = "#" + a.pistackingColor : _.v == a.contactValue && (y = "#" + a.contactColor), c += "<g class='icn3d-interaction' resid1='" + S + "' resid2='" + k + "' >", c += "<title>Interaction of residue " + C.id + " with residue " + w.id + "</title>", c += "<line x1='" + A.x + "' y1='" + A.y + "' x2='" + x.x + "' y2='" + x.y + "' stroke='" + y + "' stroke-width='" + b + "' /></g>"
            }
            return c += m
        },
        drawScatterplot_base: function(e, t, i, n, o) {
            for (var r = this, s = "", a = e.length, c = t.length, d = 10 * (a + 1) + 30 + 40, l = o + d - 60, h = "", p = {}, m = {}, u = 0; u < a; ++u) h += r.drawResNode(e[u], u, 3, 7, l, 40, "a", !0), p[e[u].id] = {
                x: 40,
                y: l - 10 * u
            };
            var f = o + d - 50;
            for (u = 0; u < c; ++u) h += r.drawResNode(t[u], u, 3, 7, 50, f, "b"), m[t[u].id] = {
                x: 50 + 10 * u,
                y: f
            };
            u = 0;
            for (var g = i.length; u < g; ++u) {
                var v, b, y = i[u],
                    _ = n[y.source],
                    C = n[y.target],
                    w = _.r.substr(4),
                    S = C.r.substr(4),
                    k = p[_.id],
                    A = m[C.id];
                if (void 0 !== k && void 0 !== A) y.v == r.hbondValue ? v = "#" + r.hbondColor : y.v == r.ionicValue ? v = "#" + r.ionicColor : y.v == r.halogenValue ? v = "#" + r.halogenColor : y.v == r.picationValue ? v = "#" + r.picationColor : y.v == r.pistackingValue ? v = "#" + r.pistackingColor : y.v == r.contactValue && (v = "#" + r.contactColor), b = y.v == r.contactValue ? 1 : 2, s += "<g class='icn3d-interaction' resid1='" + w + "' resid2='" + S + "' >", s += "<title>Interaction of residue " + _.id + " with residue " + C.id + "</title>", s += "<rect x='" + (A.x - 2.25).toString() + "' y='" + (k.y - 2.25).toString() + "' width='4.5' height='4.5' fill='" + v + "' fill-opacity='0.6' stroke-width='" + b + "' stroke='" + v + "' />"
            }
            return s += h
        },
        compNode: function(e, t, i) {
            var n = e.r.substr(4),
                o = t.r.substr(4),
                r = n.split("_"),
                s = o.split("_"),
                a = r[0] + "_" + r[1],
                c = s[0] + "_" + s[1],
                d = parseInt(r[2]),
                l = parseInt(s[2]);
            return c < a ? i ? -1 : 1 : a < c ? i ? 1 : -1 : a == c ? l < d ? 1 : d < l ? -1 : 0 : void 0
        },
        getNodesLinksForSet: function(e, t, i) {
            var n = [],
                o = [],
                r = 0,
                s = this.coilValue,
                a = "",
                c = "",
                d = 0,
                l = {};
            for (var h in e) {
                var p = this.icn3d.atoms[h];
                if ("DUM" != p.chain && (p.het || "CA" == p.name && "C" == p.elem || "O3'" == p.name || "O3*" == p.name || "P" == p.name)) {
                    var m = p.structure + "_" + p.chain + "_" + p.resi;
                    if (l.hasOwnProperty(m)) continue;
                    l[m] = 1;
                    var u = this.icn3d.residueName2Abbr(p.resn) + p.resi;
                    "chain" != t && "structure" != t || (u += "." + p.chain), "structure" == t && (u += "." + p.structure);
                    var f = "1_1_" + m;
                    n.push('{"id": "' + u + '", "r": "' + f + '", "s": "' + i + '", "x": ' + p.coord.x.toFixed(0) + ', "y": ' + p.coord.y.toFixed(0) + ', "c": "' + p.color.getHexString().toUpperCase() + '"}'), 0 < r && a == p.chain && (p.resi == d + 1 || p.resi == d) && (o.push('{"source": "' + c + '", "target": "' + u + '", "v": ' + s + ', "c": "' + p.color.getHexString().toUpperCase() + '"}'), p.ssbegin && (s = this.ssValue), p.ssend && (s = this.coilValue), 0), a = p.chain, c = u, d = p.resi, ++r
                }
            }
            return {
                node: n,
                link: o
            }
        },
        getHbondLinksForSet: function(e, t) {
            var i = this,
                n = {},
                o = parseFloat($("#" + i.pre + "hbondthreshold").val()),
                r = e,
                s = r;
            if (0 < Object.keys(s).length && 0 < Object.keys(r).length) {
                i.icn3d.calculateChemicalHbonds(i.icn3d.intHash2Atoms(i.icn3d.dAtoms, s), i.icn3d.intHash2Atoms(i.icn3d.dAtoms, r), parseFloat(o), !1, "graph", !0);
                n = i.icn3d.cloneHash(i.icn3d.resid2Residhash)
            }
            return i.getGraphLinks(n, n, i.hbondInsideColor, t, i.hbondInsideValue)
        },
        getIonicLinksForSet: function(e, t) {
            var i = this,
                n = {},
                o = parseFloat($("#" + i.pre + "saltbridgethreshold").val()),
                r = e,
                s = r;
            if (0 < Object.keys(s).length && 0 < Object.keys(r).length) {
                i.icn3d.calculateIonicInteractions(i.icn3d.intHash2Atoms(i.icn3d.dAtoms, s), i.icn3d.intHash2Atoms(i.icn3d.dAtoms, r), parseFloat(o), !1, "graph", !0);
                n = i.icn3d.cloneHash(i.icn3d.resid2Residhash)
            }
            return i.getGraphLinks(n, n, i.ionicInsideColor, t, i.ionicInsideValue)
        },
        getHalogenPiLinksForSet: function(e, t) {
            var i, n = this,
                o = {},
                r = e,
                s = r,
                a = "";
            if (i = parseFloat($("#" + n.pre + "halogenthreshold").val()), 0 < Object.keys(s).length && 0 < Object.keys(r).length) {
                n.icn3d.calculateHalogenPiInteractions(n.icn3d.intHash2Atoms(n.icn3d.dAtoms, r), n.icn3d.intHash2Atoms(n.icn3d.dAtoms, s), parseFloat(i), "graph", "halogen", !0);
                o = n.icn3d.cloneHash(n.icn3d.resid2Residhash)
            }
            if (a += n.getGraphLinks(o, o, n.halogenInsideColor, t, n.halogenInsideValue), i = parseFloat($("#" + n.pre + "picationthreshold").val()), 0 < Object.keys(s).length && 0 < Object.keys(r).length) {
                n.icn3d.calculateHalogenPiInteractions(n.icn3d.intHash2Atoms(n.icn3d.dAtoms, r), n.icn3d.intHash2Atoms(n.icn3d.dAtoms, s), parseFloat(i), "graph", "pi-cation", !0);
                o = n.icn3d.cloneHash(n.icn3d.resid2Residhash)
            }
            if (a += n.getGraphLinks(o, o, n.picationInsideColor, t, n.picationInsideValue), i = parseFloat($("#" + n.pre + "pistackingthreshold").val()), 0 < Object.keys(s).length && 0 < Object.keys(r).length) {
                n.icn3d.calculateHalogenPiInteractions(n.icn3d.intHash2Atoms(n.icn3d.dAtoms, r), n.icn3d.intHash2Atoms(n.icn3d.dAtoms, s), parseFloat(i), "graph", "pi-stacking", !0);
                o = n.icn3d.cloneHash(n.icn3d.resid2Residhash)
            }
            return a += n.getGraphLinks(o, o, n.pistackingInsideColor, t, n.pistackingInsideValue)
        },
        getContactLinksForSet: function(e, t) {
            var i = [],
                n = "",
                o = "",
                r = {};
            for (var s in e) {
                var a = this.icn3d.atoms[s];
                a.ss == n && a.chain == o || (0 < Object.keys(r).length && i.push(r), r = {}), r[a.serial] = 1, n = a.ss, o = a.chain
            }
            0 < Object.keys(r).length && i.push(r);
            var c = i.length,
                d = "";
            for (s = 0; s < c; ++s)
                for (var l = s + 1; l < c; ++l) d += this.getContactLinks(i[s], i[l], t, !0);
            return d
        },
        getContactLinks: function(e, t, i, n) {
            var o = parseFloat($("#" + this.pre + "contactthreshold").val()),
                r = (this.icn3d.getAtomsWithinAtom(t, e, parseFloat(o), !0, !1, n), this.icn3d.cloneHash(this.icn3d.resid2Residhash));
            return this.getGraphLinks(r, r, this.contactInsideColor, i, this.contactInsideValue)
        },
        clickApplypick_labels: function() {
            var h = this;
            $("#" + h.pre + "applypick_labels").click(function(e) {
                e.preventDefault(), h.cfg.notebook || dialog.dialog("close");
                var t = $("#" + h.pre + "labeltext").val(),
                    i = $("#" + h.pre + "labelsize").val(),
                    n = $("#" + h.pre + "labelcolor").val(),
                    o = $("#" + h.pre + "labelbkgd").val();
                if ("0" !== i && "" !== i && "undefined" !== i || (i = 0), "0" !== n && "" !== n && "undefined" !== n || (n = 0), "0" !== o && "" !== o && "undefined" !== o || (o = 0), void 0 === h.icn3d.pAtom || void 0 === h.icn3d.pAtom2) alert("Please pick another atom");
                else {
                    var r = (h.icn3d.pAtom.coord.x + h.icn3d.pAtom2.coord.x) / 2,
                        s = (h.icn3d.pAtom.coord.y + h.icn3d.pAtom2.coord.y) / 2,
                        a = (h.icn3d.pAtom.coord.z + h.icn3d.pAtom2.coord.z) / 2;
                    h.addLabel(t, r, s, a, i, n, o, "custom"), h.icn3d.pickpair = !1;
                    var c = "",
                        d = "",
                        l = "";
                    0 != i && (c = " | size " + i), 0 != n && (d = " | color " + n), 0 != o && (l = " | background " + o), h.setLogCmd("add label " + t + " | x " + r.toPrecision(4) + " y " + s.toPrecision(4) + " z " + a.toPrecision(4) + c + d + l + " | type custom", !0), h.icn3d.draw()
                }
            })
        },
        clickApplyselection_labels: function() {
            var p = this;
            $("#" + p.pre + "applyselection_labels").click(function(e) {
                e.preventDefault(), p.cfg.notebook || dialog.dialog("close");
                var t = $("#" + p.pre + "labeltext2").val(),
                    i = $("#" + p.pre + "labelsize2").val(),
                    n = $("#" + p.pre + "labelcolor2").val(),
                    o = $("#" + p.pre + "labelbkgd2").val();
                "0" !== i && "" !== i && "undefined" !== i || (i = 0), "0" !== n && "" !== n && "undefined" !== n || (n = 0), "0" !== o && "" !== o && "undefined" !== o || (o = 0);
                var r = p.icn3d.centerAtoms(p.icn3d.hash2Atoms(p.icn3d.hAtoms)),
                    s = r.center.x,
                    a = r.center.y,
                    c = r.center.z;
                p.addLabel(t, s, a, c, i, n, o, "custom");
                var d = "",
                    l = "",
                    h = "";
                0 != i && (d = " | size " + i), 0 != n && (l = " | color " + n), 0 != o && (h = " | background " + o), p.setLogCmd("add label " + t + " | x " + s.toPrecision(4) + " y " + a.toPrecision(4) + " z " + c.toPrecision(4) + d + l + h + " | type custom", !0), p.icn3d.draw()
            })
        },
        clickApplypick_stabilizer: function() {
            var t = this;
            $("#" + t.pre + "applypick_stabilizer").click(function(e) {
                e.preventDefault(), t.cfg.notebook || dialog.dialog("close"), void 0 === t.icn3d.pAtom || void 0 === t.icn3d.pAtom2 ? alert("Please pick another atom") : (t.icn3d.pickpair = !1, t.setLogCmd("add one stabilizer | " + t.icn3d.pAtom.serial + " " + t.icn3d.pAtom2.serial, !0), void 0 === t.icn3d.pairArray && (t.icn3d.pairArray = []), t.icn3d.pairArray.push(t.icn3d.pAtom.serial), t.icn3d.pairArray.push(t.icn3d.pAtom2.serial), t.setThichknessFor3Dprint(), t.icn3d.draw())
            })
        },
        pickColor: function() {
            var t = this,
                i = new CP(document.querySelector("#" + t.pre + "colorcustom"));
            i.on("change", function(e) {
                this.target.value = e
            }), $("#" + t.pre + "colorcustom").on("input keyup paste cut", function() {
                var e = $("#" + t.pre + "colorcustom").val();
                i.set("#" + e).enter()
            })
        },
        clickApplypick_stabilizer_rm: function() {
            var i = this;
            $("#" + i.pre + "applypick_stabilizer_rm").click(function(e) {
                if (e.preventDefault(), i.cfg.notebook || dialog.dialog("close"), void 0 === i.icn3d.pAtom || void 0 === i.icn3d.pAtom2) alert("Please pick another atom");
                else {
                    i.icn3d.pickpair = !1, i.setLogCmd("remove one stabilizer | " + i.icn3d.pAtom.serial + " " + i.icn3d.pAtom2.serial, !0);
                    var t = [];
                    t.push(i.icn3d.pAtom.serial), t.push(i.icn3d.pAtom2.serial), i.removeOneStabilizer(t), i.icn3d.draw()
                }
            })
        },
        clickApplypick_measuredistance: function() {
            var d = this;
            $("#" + d.pre + "applypick_measuredistance").click(function(e) {
                if (e.preventDefault(), d.cfg.notebook || dialog.dialog("close"), d.bMeasureDistance = !1, void 0 === d.icn3d.pAtom || void 0 === d.icn3d.pAtom2) alert("Please pick another atom");
                else {
                    var t = $("#" + d.pre + "linecolor").val(),
                        i = (d.icn3d.pAtom.coord.x + d.icn3d.pAtom2.coord.x) / 2,
                        n = (d.icn3d.pAtom.coord.y + d.icn3d.pAtom2.coord.y) / 2,
                        o = (d.icn3d.pAtom.coord.z + d.icn3d.pAtom2.coord.z) / 2;
                    d.addLineFromPicking("distance");
                    var r = (parseInt(10 * d.icn3d.pAtom.coord.distanceTo(d.icn3d.pAtom2.coord)) / 10).toString() + " A";
                    d.addLabel(r, i, n, o, 0, t, 0, "distance");
                    var s = "",
                        a = "",
                        c = "";
                    0, 0 != t && (a = " | color " + t), d.setLogCmd("add label " + r + " | x " + i.toPrecision(4) + " y " + n.toPrecision(4) + " z " + o.toPrecision(4) + s + a + c + " | type distance", !0), d.icn3d.draw(), d.icn3d.pk = 2
                }
            })
        },
        clickApply_thickness: function() {
            var t = this;
            $("#" + t.pre + "apply_thickness_3dprint").click(function(e) {
                e.preventDefault(), t.bSetThickness = !0, t.icn3d.lineRadius = parseFloat($("#" + t.pre + "linerad_3dprint").val()), t.icn3d.coilWidth = parseFloat($("#" + t.pre + "coilrad_3dprint").val()), t.icn3d.cylinderRadius = parseFloat($("#" + t.pre + "stickrad_3dprint").val()), t.icn3d.traceRadius = parseFloat($("#" + t.pre + "stickrad_3dprint").val()), t.icn3d.dotSphereScale = parseFloat($("#" + t.pre + "ballscale_3dprint").val()), t.icn3d.ribbonthickness = parseFloat($("#" + t.pre + "ribbonthick_3dprint").val()), t.icn3d.helixSheetWidth = parseFloat($("#" + t.pre + "prtribbonwidth_3dprint").val()), t.icn3d.nucleicAcidWidth = parseFloat($("#" + t.pre + "nucleotideribbonwidth_3dprint").val()), t.setLogCmd("set thickness | linerad " + t.icn3d.lineRadius + " | coilrad " + t.icn3d.coilWidth + " | stickrad " + t.icn3d.cylinderRadius + " | tracerad " + t.icn3d.traceRadius + " | ribbonthick " + t.icn3d.ribbonthickness + " | proteinwidth " + t.icn3d.helixSheetWidth + " | nucleotidewidth " + t.icn3d.nucleicAcidWidth + " | ballscale " + t.icn3d.dotSphereScale, !0), t.icn3d.draw()
            }), $("#" + t.pre + "apply_thickness_style").click(function(e) {
                e.preventDefault(), t.bSetThickness = !0, t.icn3d.lineRadius = parseFloat($("#" + t.pre + "linerad_style").val()), t.icn3d.coilWidth = parseFloat($("#" + t.pre + "coilrad_style").val()), t.icn3d.cylinderRadius = parseFloat($("#" + t.pre + "stickrad_style").val()), t.icn3d.traceRadius = parseFloat($("#" + t.pre + "stickrad_style").val()), t.icn3d.dotSphereScale = parseFloat($("#" + t.pre + "ballscale_style").val()), t.icn3d.ribbonthickness = parseFloat($("#" + t.pre + "ribbonthick_style").val()), t.icn3d.helixSheetWidth = parseFloat($("#" + t.pre + "prtribbonwidth_style").val()), t.icn3d.nucleicAcidWidth = parseFloat($("#" + t.pre + "nucleotideribbonwidth_style").val()), t.setLogCmd("set thickness | linerad " + t.icn3d.lineRadius + " | coilrad " + t.icn3d.coilWidth + " | stickrad " + t.icn3d.cylinderRadius + " | tracerad " + t.icn3d.traceRadius + " | ribbonthick " + t.icn3d.ribbonthickness + " | proteinwidth " + t.icn3d.helixSheetWidth + " | nucleotidewidth " + t.icn3d.nucleicAcidWidth + " | ballscale " + t.icn3d.dotSphereScale, !0), t.icn3d.draw()
            })
        },
        clickReset: function() {
            var t = this;
            $("#" + t.pre + "reset").click(function(e) {
                t.icn3d.maxD = t.icn3d.oriMaxD, t.icn3d.center = t.icn3d.oriCenter.clone(), t.icn3d.reinitAfterLoad(), t.renderFinalStep(1), t.setMode("all"), t.setLogCmd("reset", !0), t.removeSeqChainBkgd(), t.removeSeqResidueBkgd(), t.removeHl2D(), t.removeHlMenus()
            })
        },
        clickToggleHighlight: function() {
            var t = this;
            $("#" + t.pre + "toggleHighlight").add("#" + t.pre + "toggleHighlight2").click(function(e) {
                e.stopImmediatePropagation(), t.toggleHighlight(), t.setLogCmd("toggle highlight", !0)
            }), $(document).on("click", "#" + t.pre + "seq_clearselection", function(e) {
                e.stopImmediatePropagation(), t.cfg.notebook || dialog.dialog("close"), t.clearHighlight(), t.setLogCmd("clear selection", !0)
            }), $(document).on("click", "#" + t.pre + "seq_clearselection2", function(e) {
                e.stopImmediatePropagation(), e.preventDefault(), t.clearHighlight(), t.setLogCmd("clear selection", !0)
            }), $(document).on("click", "#" + t.pre + "alignseq_clearselection", function(e) {
                e.stopImmediatePropagation(), t.clearHighlight(), t.setLogCmd("clear selection", !0)
            })
        },
        clickReplay: function() {
            var s = this;
            $("#" + s.pre + "replay").click(function(e) {
                e.stopImmediatePropagation(), s.CURRENTNUMBER++;
                var t = s.cfg.replay ? s.STATENUMBER : s.STATENUMBER - 1;
                if (s.CURRENTNUMBER == t) s.bReplay = 0, $("#" + s.pre + "replay").hide();
                else {
                    s.execCommandsBase(s.CURRENTNUMBER, s.CURRENTNUMBER, s.STATENUMBER);
                    var i = s.icn3d.commands[s.CURRENTNUMBER].indexOf("|||"),
                        n = -1 != i ? s.icn3d.commands[s.CURRENTNUMBER].substr(0, i) : s.icn3d.commands[s.CURRENTNUMBER],
                        o = 30 < n.length ? n.substr(0, 30) + "..." : n,
                        r = s.getMenuFromCmd(o);
                    $("#" + s.pre + "replay_cmd").html("Cmd: " + o), $("#" + s.pre + "replay_menu").html("Menu: " + r), s.icn3d.draw()
                }
            })
        },
        pressCommandtext: function() {
            var c = this;
            $("#" + c.pre + "logtext").keypress(function(e) {
                if (c.bAddLogs = !1, 13 == (e.keyCode ? e.keyCode : e.which)) {
                    e.preventDefault();
                    var t = $(this).val();
                    c.icn3d.bRender = !0;
                    var i = t.split("\n"),
                        n = i[i.length - 1].substr(2).trim();
                    if (c.icn3d.logs.push(n), $("#" + c.pre + "logtext").val("> " + c.icn3d.logs.join("\n> ") + "\n> ").scrollTop($("#" + c.pre + "logtext")[0].scrollHeight), "" !== n) {
                        var o = {};
                        if (o.factor = c.icn3d._zoomFactor, o.mouseChange = c.icn3d.mouseChange, o.quaternion = c.icn3d.quaternion, c.icn3d.commands.push(n + "|||" + c.getTransformationStr(o)), c.icn3d.optsHistory.push(c.icn3d.cloneHash(c.icn3d.opts)), c.icn3d.optsHistory[c.icn3d.optsHistory.length - 1].hlatomcount = Object.keys(c.icn3d.hAtoms).length, c.isSessionStorageSupported() && c.saveCommandsToSession(), c.STATENUMBER = c.icn3d.commands.length, -1 !== n.indexOf("load")) c.applyCommandLoad(n);
                        else if (-1 !== n.indexOf("set map") && -1 === n.indexOf("set map wireframe")) c.applyCommandMap(n);
                        else if (0 == n.indexOf("view annotations")) c.applyCommandAnnotationsAndCddSite(n);
                        else if (0 == n.indexOf("set annotation clinvar")) c.applyCommandClinvar(n);
                        else if (0 == n.indexOf("set annotation snp")) c.applyCommandSnp(n);
                        else if (0 == n.indexOf("set annotation 3ddomain")) c.applyCommand3ddomain(n);
                        else if (0 == n.indexOf("set annotation all")) $.when(c.applyCommandClinvar(n)).then(c.applyCommandSnp(n)).then(c.applyCommand3ddomain(n)), c.setAnnoTabAll();
                        else if (0 == n.indexOf("view interactions") && void 0 !== c.cfg.align) c.applyCommandViewinteraction(n);
                        else if (0 == n.indexOf("symmetry")) {
                            var r = n.substr(n.indexOf(" ") + 1);
                            c.icn3d.symmetrytitle = "none" === r ? void 0 : r, "none" !== r && void 0 === c.icn3d.symmetryHash && c.applyCommandSymmetry(n)
                        } else if (0 == n.indexOf("realign on seq align")) {
                            var s = n.split(" | ");
                            if (2 == s.length) {
                                var a = s[1].split(",");
                                c.icn3d.hAtoms = c.getAtomsFromNameArray(a)
                            }
                            c.applyCommandRealign(n)
                        } else 0 == n.indexOf("graph interaction pairs") ? c.applyCommandGraphinteraction(n) : c.applyCommand(n + "|||" + c.getTransformationStr(o));
                        c.saveSelectionIfSelected(), c.icn3d.draw()
                    }
                }
                c.bAddLogs = !0
            })
        },
        saveSelectionPrep: function() {
            var e = this;
            e.cfg.notebook ? ($("#" + e.pre + "dl_definedsets").show(), $("#" + e.pre + "atomsCustom").resizable()) : $("#" + e.pre + "dl_definedsets").hasClass("ui-dialog-content") && $("#" + e.pre + "dl_definedsets").dialog("isOpen") || (e.openDialog(e.pre + "dl_definedsets", "Select sets"), $("#" + e.pre + "atomsCustom").resizable()), e.bSelectResidue = !1, e.bSelectAlignResidue = !1
        },
        clickSeqSaveSelection: function() {
            var i = this;
            $(document).on("click", "#" + i.pre + "seq_saveselection", function(e) {
                e.stopImmediatePropagation(), i.cfg.notebook || dialog.dialog("close"), i.saveSelectionPrep();
                var t = $("#" + i.pre + "seq_command_name").val().replace(/\s+/g, "_");
                i.saveSelection(t, t)
            }), $(document).on("click", "#" + i.pre + "seq_saveselection2", function(e) {
                e.stopImmediatePropagation(), i.saveSelectionPrep();
                var t = $("#" + i.pre + "seq_command_name2").val().replace(/\s+/g, "_");
                i.saveSelection(t, t)
            })
        },
        clickAlignSeqSaveSelection: function() {
            var i = this;
            $(document).on("click", "#" + i.pre + "alignseq_saveselection", function(e) {
                e.stopImmediatePropagation(), i.saveSelectionPrep();
                var t = $("#" + i.pre + "alignseq_command_name").val().replace(/\s+/g, "_");
                i.saveSelection(t, t)
            })
        },
        clickOutputSelection: function() {
            var t = this;
            $(document).on("click", "." + t.pre + "outputselection", function(e) {
                e.stopImmediatePropagation(), t.bSelectResidue = !1, t.bSelectAlignResidue = !1, t.setLogCmd("output selection", !0), t.outputSelection()
            })
        },
        clickSaveDialog: function() {
            var s = this;
            $(document).on("click", ".icn3d-saveicon", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("pid"),
                    i = "";
                i += '<link rel="stylesheet" href="https:///structure.ncbi.nlm.nih.gov/icn3d/lib/jquery-ui-1.12.1.min.css">\n', i += '<link rel="stylesheet" href="https:///structure.ncbi.nlm.nih.gov/icn3d/icn3d_full_ui_2.16.1.css">\n', i += $("#" + t).html();
                var n = t.split("_"),
                    o = 2 < n.length ? n[2] : t,
                    r = Object.keys(s.icn3d.structures)[0];
                1 < Object.keys(s.icn3d.structures).length && (r += "-" + Object.keys(s.icn3d.structures)[1]), s.saveFile(r + "-" + o + ".html", "html", encodeURIComponent(i))
            })
        },
        clickHideDialog: function() {
            var r = this;
            $(document).on("click", ".icn3d-hideicon", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("pid");
                if (!r.cfg.notebook)
                    if (void 0 === r.dialogHashHideDone && (r.dialogHashHideDone = {}), r.dialogHashHideDone.hasOwnProperty(t)) {
                        var i = r.dialogHashHideDone[t].width,
                            n = r.dialogHashHideDone[t].height;
                        o = r.dialogHashHideDone[t].position;
                        $("#" + t).dialog("option", "width", i), $("#" + t).dialog("option", "height", n), $("#" + t).dialog("option", "position", o), delete r.dialogHashHideDone[t]
                    } else {
                        r.dialogHashHideDone[t] = {
                            width: $("#" + t).dialog("option", "width"),
                            height: $("#" + t).dialog("option", "height"),
                            position: $("#" + t).dialog("option", "position")
                        };
                        $("#" + t).dialog("option", "width", 80), $("#" + t).dialog("option", "height", 80);
                        var o = {
                            my: "right bottom",
                            at: "right bottom-" + 80 * (Object.keys(r.dialogHashHideDone).length - 1),
                            of: "#" + r.divid,
                            collision: "none"
                        };
                        $("#" + t).dialog("option", "position", o)
                    }
            })
        },
        selectOneResid: function(e, t) {
            var i = e.indexOf("$"),
                n = e.indexOf("."),
                o = e.indexOf(":"),
                r = e.indexOf("@"); - 1 == r && (r = e.length);
            var s = e.substr(i + 1, n - i - 1),
                a = e.substr(n + 1, o - n - 1),
                c = e.substr(o + 1, r - o - 1),
                d = s + "_" + a + "_" + c;
            for (var l in this.icn3d.residues[d]) t ? delete this.icn3d.hAtoms[l] : this.icn3d.hAtoms[l] = 1;
            return t ? delete this.selectedResidues[d] : this.selectedResidues[d] = 1, "$" + s + "." + a + ":" + c
        },
        clickResidueOnInteraction: function() {
            var a = this;
            $(document).on("click", "." + a.pre + "selres", function(e) {
                e.stopImmediatePropagation(), a.bSelOneRes = !1;
                for (var t = $("." + a.pre + "seloneres"), i = 0, n = t.length; i < n; ++i) t[i].checked = !1;
                var o = $(this).attr("resid").split("|");
                a.icn3d.hAtoms = {}, a.selectedResidues = {};
                var r = "select ";
                for (i = 0, n = o.length; i < n; ++i) {
                    var s = o[i];
                    0 < i && (r += " or "), r += a.selectOneResid(s)
                }
                a.updateHlAll(), a.setLogCmd(r, !0)
            }), $(document).on("click", "." + a.pre + "seloneres", function(e) {
                e.stopImmediatePropagation(), a.bSelOneRes || (a.icn3d.hAtoms = {}, a.selectedResidues = {}, a.bSelOneRes = !0);
                var t = $(this).attr("resid"),
                    i = $(this).attr("id");
                $("#" + i).length && $("#" + i)[0].checked ? a.selectOneResid(t) : $("#" + i).length && !$("#" + i)[0].checked && a.selectOneResid(t, !0), a.updateHlAll()
            }), $(document).on("click", "." + a.pre + "selset", function(e) {
                e.stopImmediatePropagation(), a.bSelOneRes = !1;
                for (var t = $("." + a.pre + "seloneres"), i = 0, n = t.length; i < n; ++i) t[i].checked = !1;
                var o = $(this).attr("cmd");
                a.selectByCommand(o, "", ""), a.icn3d.removeHlObjects(), a.icn3d.addHlObjects(), a.setLogCmd(o, !0)
            })
        },
        bindMouseup: function() {
            var t = this;
            $("accordion").bind("mouseup touchend", function(e) {
                t.icn3d.bControlGl ? window.controls && (window.controls.noRotate = !1, window.controls.noZoom = !1, window.controls.noPan = !1) : t.icn3d.controls && (t.icn3d.controls.noRotate = !1, t.icn3d.controls.noZoom = !1, t.icn3d.controls.noPan = !1)
            })
        },
        bindMousedown: function() {
            var t = this;
            $("accordion").bind("mousedown touchstart", function(e) {
                t.icn3d.bControlGl ? window.controls && (window.controls.noRotate = !0, window.controls.noZoom = !0, window.controls.noPan = !0) : t.icn3d.controls && (t.icn3d.controls.noRotate = !0, t.icn3d.controls.noZoom = !0, t.icn3d.controls.noPan = !0)
            })
        },
        expandShrink: function() {
            $(document).on("click", ".icn3d-expand", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("id"),
                    i = t.lastIndexOf("_"),
                    n = t.substr(0, i);
                $("#" + n).show(), $("#" + n + "_expand").hide(), $("#" + n + "_shrink").show()
            }), $(document).on("click", ".icn3d-shrink", function(e) {
                e.stopImmediatePropagation();
                var t = $(this).attr("id"),
                    i = t.lastIndexOf("_"),
                    n = t.substr(0, i);
                $("#" + n).hide(), $("#" + n + "_expand").show(), $("#" + n + "_shrink").hide()
            })
        },
        scrollAnno: function() {
            var t = this;
            window.onscroll = function(e) {
                "detailed view" == t.view && 0 == $(window).scrollTop() && 0 == $(window).scrollTop() && 0 == $("#" + t.pre + "dl_selectannotations").scrollTop() ? t.showFixedTitle() : t.hideFixedTitle()
            }, $("#" + t.pre + "dl_selectannotations").scroll(function() {
                "detailed view" == t.view && 0 == $(window).scrollTop() && 0 == $(window).scrollTop() && 0 == $("#" + t.pre + "dl_selectannotations").scrollTop() ? t.showFixedTitle() : t.hideFixedTitle()
            })
        },
        allEventFunctions: function() {
            var e = this;
            e.clickModeswitch(), e.clickViewswitch(), e.isMobile() ? (e.selectSequenceMobile(), e.selectChainMobile()) : e.selectSequenceNonMobile(), e.clickBack(), e.clickForward(), e.clickFullscreen(), e.clickToggle(), e.clickHlColorYellow(), e.clickHlColorGreen(), e.clickHlColorRed(), e.clickHlStyleOutline(), e.clickHlStyleObject(), e.clickHlStyleNone(), e.clickAlternate(), e.clickRealign(), e.clickRealignonseqalign(), e.clickApplyRealign(), e.clkMn1_mmtfid(), e.clkMn1_pdbid(), e.clkMn1_opmid(), e.clkMn1_align(), e.clkMn1_chainalign(), e.clkMn1_pdbfile(), e.clkMn1_mol2file(), e.clkMn1_sdffile(), e.clkMn1_xyzfile(), e.clkMn1_urlfile(), e.clkMn1_fixedversion(), e.clkMn1_mmciffile(), e.clkMn1_mmcifid(), e.clkMn1_mmdbid(), e.clkMn1_blast_rep_id(), e.clkMn1_gi(), e.clkMn1_cid(), e.clkMn1_pngimage(), e.clkMn1_state(), e.clkMn1_selection(), e.clkMn1_dsn6(), e.clkMn1_dsn6url(), e.clkMn1_exportState(), e.clkMn1_exportStl(), e.clkMn1_exportVrml(), e.clkMn1_exportStlStab(), e.clkMn1_exportVrmlStab(), e.clkMn6_exportInteraction(), e.clkMn1_exportCanvas(), e.clkMn1_exportCounts(), e.clkMn1_exportSelections(), e.clkMn1_sharelink(), e.clkMn1_replay(), e.clkMn1_link_structure(), e.clkMn1_link_bind(), e.clkMn1_link_vast(), e.clkMn1_link_pubmed(), e.clkMn1_link_protein(), e.clkMn2_selectannotations(), e.clkMn2_selectcomplement(), e.clkMn2_selectmainchains(), e.clkMn2_selectsidechains(), e.clkMn2_selectmainsidechains(), e.clkMn2_propperty(), e.clkMn2_selectall(), e.clkMn2_selectdisplayed(), e.clkMn2_fullstru(), e.clkMn2_alignment(), e.clkMn2_windows(), e.clkMn6_yournote(), e.clkApplyYournote(), e.clkMn2_command(), e.clkMn2_definedsets(), e.clkMn2_pkYes(), e.clkMn2_pkNo(), e.clkMn2_pkResidue(), e.clkMn2_pkStrand(), e.clkMn2_pkDomain(), e.clkMn2_pkChain(), e.clkMn2_aroundsphere(), e.clk_adjustmem(), e.clk_togglemem(), e.clk_selectplane(), e.clkMn2_select_chain(), e.clkMn3_proteinsRibbon(), e.clkMn3_proteinsStrand(), e.clkMn3_proteinsCylinder(), e.clkMn3_proteinsSchematic(), e.clkMn3_proteinsCalpha(), e.clkMn3_proteinsBackbone(), e.clkMn3_proteinsBfactor(), e.clkMn3_proteinsLines(), e.clkMn3_proteinsStick(), e.clkMn3_proteinsBallstick(), e.clkMn3_proteinsSphere(), e.clkMn3_proteinsNo(), e.clkMn3_sidecLines(), e.clkMn3_sidecStick(), e.clkMn3_sidecBallstick(), e.clkMn3_sidecSphere(), e.clkMn3_sidecNo(), e.clkMn3_nuclCartoon(), e.clkMn3_nuclBackbone(), e.clkMn3_nuclSchematic(), e.clkMn3_nuclPhos(), e.clkMn3_nuclLines(), e.clkMn3_nuclStick(), e.clkMn3_nuclBallstick(), e.clkMn3_nuclSphere(), e.clkMn3_nuclNo(), e.clkMn3_ligLines(), e.clkMn3_ligStick(), e.clkMn3_ligBallstick(), e.clkMn3_ligSchematic(), e.clkMn3_ligSphere(), e.clkMn3_ligNo(), e.clkMn3_hydrogensYes(), e.clkMn3_hydrogensNo(), e.clkMn3_ionsSphere(), e.clkMn3_ionsDot(), e.clkMn3_ionsNo(), e.clkMn3_waterSphere(), e.clkMn3_waterDot(), e.clkMn3_waterNo(), e.clkMn4_clrSpectrum(), e.clkMn4_clrChain(), e.clkMn4_clrDomain(), e.clkMn4_clrSSGreen(), e.clkMn4_clrSSYellow(), e.clkMn4_clrSSSpectrum(), e.clkMn4_clrResidue(), e.clkMn4_clrResidueCustom(), e.clkMn4_reloadRescolorfile(), e.clkMn4_reloadCustomcolorfile(), e.clkMn4_clrCharge(), e.clkMn4_clrHydrophobic(), e.clkMn4_clrAtom(), e.clkMn4_clrBfactor(), e.clkMn4_clrBfactorNorm(), e.clkMn4_clrArea(), e.clkMn4_clrConserved(), e.clkMn4_clrIdentity(), e.clkMn4_clrRed(), e.clkMn4_clrGreen(), e.clkMn4_clrBlue(), e.clkMn4_clrMagenta(), e.clkMn4_clrYellow(), e.clkMn4_clrCyan(), e.clkMn4_clrWhite(), e.clkMn4_clrGrey(), e.clkMn4_clrCustom(), e.clkMn4_clrOther(), e.clkMn4_clrSave(), e.clkMn4_clrApplySave(), e.clkMn3_styleSave(), e.clkMn3_styleApplySave(), e.clkMn5_neighborsYes(), e.clkMn5_neighborsNo(), e.clkMn5_surfaceVDW(), e.clkMn5_surfaceSAS(), e.clkMn5_surfaceMolecular(), e.clkMn5_surfaceVDWContext(), e.clkMn5_surfaceSASContext(), e.clkMn5_surfaceMolecularContext(), e.clkMn5_surfaceNo(), e.clkMn5_opacity10(), e.clkMn5_opacity09(), e.clkMn5_opacity08(), e.clkMn5_opacity07(), e.clkMn5_opacity06(), e.clkMn5_opacity05(), e.clkMn5_opacity04(), e.clkMn5_opacity03(), e.clkMn5_opacity02(), e.clkMn5_opacity01(), e.clkMn5_wireframeYes(), e.clkMn5_wireframeNo(), e.clkMn5_elecmap2fofc(), e.clkMn5_elecmapfofc(), e.clkMn5_elecmapNo(), e.clkMn5_mapwireframeYes(), e.clkMn5_mapwireframeNo(), e.clkMn5_emmap(), e.clkMn5_emmapNo(), e.clickApplyemmap(), e.clkMn5_emmapwireframeYes(), e.clkMn5_emmapwireframeNo(), e.clkMn6_assemblyYes(), e.clkMn6_assemblyNo(), e.clkMn6_addlabelResidues(), e.clkMn6_addlabelResnum(), e.clkMn6_addlabelAtoms(), e.clkMn6_addlabelChains(), e.clkMn6_addlabelTermini(), e.clkMn6_addlabelYes(), e.clkMn6_addlabelSelection(), e.clkMn6_labelscale01(), e.clkMn6_labelscale02(), e.clkMn6_labelscale03(), e.clkMn6_labelscale04(), e.clkMn6_labelscale05(), e.clkMn6_labelscale06(), e.clkMn6_labelscale07(), e.clkMn6_labelscale08(), e.clkMn6_labelscale09(), e.clkMn6_labelscale10(), e.clkMn6_labelscale20(), e.clkMn6_labelscale40(), e.clkMn2_saveselection(), e.clkMn6_addlabelNo(), e.clkMn6_distanceYes(), e.clkmn1_stabilizerOne(), e.clkmn1_stabilizerRmOne(), e.clkmn1_thicknessSet(), e.clkmn5_setThickness(), e.clkmn1_thicknessReset(), e.clkMn6_distanceNo(), e.clkMn2_selectedcenter(), e.clkMn6_center(), e.clkMn6_resetOrientation(), e.clkMn6_chemicalbindingshow(), e.clkMn6_chemicalbindinghide(), e.clkMn6_rotateleft(), e.clkMn6_sidebyside(), e.clkMn6_rotateright(), e.clkMn6_rotateup(), e.clkMn6_rotatedown(), e.clkMn6_rotatex(), e.clkMn6_rotatey(), e.clkMn6_rotatez(), e.clkMn6_cameraPers(), e.clkMn6_cameraOrth(), e.clkMn6_bkgdBlack(), e.clkMn6_bkgdGrey(), e.clkMn6_bkgdWhite(), e.clkMn6_bkgdTransparent(), e.clkMn6_showfogYes(), e.clkMn6_showfogNo(), e.clkMn6_showslabYes(), e.clkMn6_showslabNo(), e.clkMn6_showaxisYes(), e.clkMn6_showaxisNo(), e.clkMn6_symmetry(), e.clkMn6_area(), e.clkMn6_applysymmetry(), e.clkMn6_hbondsYes(), e.clkMn6_hbondsNo(), e.clkmn1_stabilizerYes(), e.clkmn1_stabilizerNo(), e.clkMn6_ssbondsYes(), e.clkMn6_ssbondsExport(), e.clkMn6_ssbondsNo(), e.clkMn6_clbondsYes(), e.clkMn6_clbondsExport(), e.clkMn6_clbondsNo(), e.clickCustomAtoms(), e.clickShow_selected(), e.clickHide_selected(), e.clickShow_annotations(), e.clickShowallchains(), e.clickShow_alignsequences(), e.clickShow_2ddgm(), e.clickCommand_apply(), e.clickSearchSeq(), e.clickReload_pdb(), e.clickReload_opm(), e.clickReload_align_refined(), e.clickReload_align_ori(), e.clickReload_chainalign(), e.clickReload_mmtf(), e.clickReload_pdbfile(), e.clickReload_mol2file(), e.clickReload_sdffile(), e.clickReload_xyzfile(), e.clickReload_urlfile(), e.clickReload_mmciffile(), e.clickReload_mmcif(), e.clickReload_mmdb(), e.clickReload_blast_rep_id(), e.clickReload_gi(), e.clickReload_cid(), e.clickReload_pngimage(), e.clickReload_state(), e.clickReload_selectionfile(), e.clickReload_dsn6file(), e.clickApplycustomcolor(), e.clickApplypick_aroundsphere(), e.clickApply_adjustmem(), e.clickApply_selectplane(), e.clickApplyhbonds(), e.clickApplymap2fofc(), e.clickApplymapfofc(), e.clickApplypick_labels(), e.clickApplyselection_labels(), e.clickApplypick_measuredistance(), e.clickApplypick_stabilizer(), e.clickApplypick_stabilizer_rm(), e.pickColor(), e.clickApply_thickness(), e.clickReset(), e.clickToggleHighlight(), e.clickReplay(), e.pressCommandtext(), e.clickSeqSaveSelection(), e.clickAlignSeqSaveSelection(), e.clickOutputSelection(), e.clickSaveDialog(), e.clickHideDialog(), e.clickResidueOnInteraction(), e.click2Ddgm(), e.bindMouseup(), e.bindMousedown(), e.windowResize(), e.setTabs(), e.clickAddTrack(), e.clickCustomColor(), e.clickDefineHelix(), e.clickDefineSheet(), e.clickDefineCoil(), e.clickDeleteSets(), e.clickAddTrackButton(), e.expandShrink(), e.scrollAnno(), e.switchHighlightLevel()
        }
    }, "undefined" == typeof jQuery) throw new Error("iCn3DUI requires jQuery");
if (void 0 === iCn3D) throw new Error("iCn3DUI requires iCn3D");
iCn3DUI.prototype.rotStruc = function(e, t) {
        var i = this;
        if (i.icn3d.bStopRotate) return !1;
        if (i.icn3d.rotateCount > i.icn3d.rotateCountMax) return i.icn3d.resetOrientation(), !1;
        if (++i.icn3d.rotateCount, t)
            if ("left" === e) i.ROT_DIR = "left";
            else if ("right" === e) i.ROT_DIR = "right";
        else if ("up" === e) i.ROT_DIR = "up";
        else {
            if ("down" !== e) return !1;
            i.ROT_DIR = "down"
        }
        if ("left" === e && "left" === i.ROT_DIR) i.icn3d.rotateLeft(1);
        else if ("right" === e && "right" === i.ROT_DIR) i.icn3d.rotateRight(1);
        else if ("up" === e && "up" === i.ROT_DIR) i.icn3d.rotateUp(1);
        else {
            if ("down" !== e || "down" !== i.ROT_DIR) return !1;
            i.icn3d.rotateDown(1)
        }
        setTimeout(function() {
            i.rotStruc(e)
        }, 100)
    }, iCn3DUI.prototype.showTitle = function() {
        var e = this;
        if (void 0 !== e.icn3d.molTitle && "" !== e.icn3d.molTitle) {
            var t = e.icn3d.molTitle,
                i = "white" == e.opts.background || "grey" == e.opts.background ? "black" : e.GREYD;
            if (void 0 === e.inputid) 40 < e.icn3d.molTitle.length && (t = e.icn3d.molTitle.substr(0, 40) + "..."), $("#" + e.pre + "title").html(t);
            else if (void 0 !== e.cfg.cid) {
                var n = e.getLinkToStructureSummary();
                $("#" + e.pre + "title").html("PubChem CID <a id='" + e.pre + "titlelink' href='" + n + "' style='color:" + i + "' target='_blank'>" + e.inputid.toUpperCase() + "</a>: " + t)
            } else if (void 0 !== e.cfg.align) $("#" + e.pre + "title").html(t);
            else if (void 0 !== e.cfg.chainalign) {
                var o = e.cfg.chainalign.split(",");
                t = "Dynamic Structure Alignment of Chain " + o[0] + " to Chain " + o[1], $("#" + e.pre + "title").html(t)
            } else {
                n = e.getLinkToStructureSummary();
                40 < e.icn3d.molTitle.length && (t = e.icn3d.molTitle.substr(0, 40) + "...");
                $("#" + e.pre + "title").html("PDB ID <a id='" + e.pre + "titlelink' href='" + n + "' style='color:" + i + "' target='_blank'>" + e.inputid.toUpperCase() + "</a>: " + t)
            }
        } else $("#" + e.pre + "title").html("")
    }, iCn3DUI.prototype.getLinkToStructureSummary = function(e) {
        var t = this,
            i = "https://www.ncbi.nlm.nih.gov/structure/?term=";
        if (i = void 0 !== t.cfg.cid ? "https://www.ncbi.nlm.nih.gov/pccompound/?term=" : 1 < Object.keys(t.icn3d.structures).length ? "https://www.ncbi.nlm.nih.gov/structure/?term=" : t.baseUrl + "pdb/", void 0 === t.inputid) i = "https://www.ncbi.nlm.nih.gov/pccompound/?term=" + t.molTitle;
        else {
            var n = t.inputid.split("_");
            1 === n.length ? (i += t.inputid, e && t.setLogCmd("link to Structure Summary " + t.inputid + ": " + i, !1)) : 2 === n.length && (i += n[0] + " OR " + n[1], e && t.setLogCmd("link to structures " + n[0] + " and " + n[1] + ": " + i, !1))
        }
        return i
    }, iCn3DUI.prototype.isIE = function() {
        return !!(0 < window.navigator.userAgent.indexOf("MSIE ") || navigator.userAgent.match(/Trident.*rv\:11\./))
    }, iCn3DUI.prototype.passFloat32 = function(e, t) {
        var i = e.length;
        t = t || new Uint8Array(4 * i);
        for (var n = this.getDataView(t), o = 0; o < i; ++o) n.setFloat32(4 * o, e[o], !0);
        return this.getUint8View(t)
    }, iCn3DUI.prototype.passInt8 = function(e, t) {
        var i = e.length;
        t = t || new Uint8Array(+i);
        for (var n = this.getDataView(t), o = 0; o < i; ++o) n.setInt8(+o, e[o], !0);
        return this.getUint8View(t)
    }, iCn3DUI.prototype.passInt16 = function(e, t) {
        var i = e.length;
        t = t || new Uint8Array(2 * i);
        for (var n = this.getDataView(t), o = 0; o < i; ++o) n.setInt16(2 * o, e[o], !0);
        return this.getUint8View(t)
    }, iCn3DUI.prototype.passInt32 = function(e, t) {
        var i = e.length;
        t = t || new Uint8Array(4 * i);
        for (var n = this.getDataView(t), o = 0; o < i; ++o) n.setInt32(4 * o, e[o], !0);
        return this.getUint8View(t)
    }, iCn3DUI.prototype.getUint8View = function(e) {
        return this.getView(Uint8Array, e)
    }, iCn3DUI.prototype.getDataView = function(e) {
        return this.getView(DataView, e)
    }, iCn3DUI.prototype.getView = function(e, t, i) {
        return t ? new e(t.buffer, t.byteOffset, t.byteLength / (i || 1)) : void 0
    }, iCn3DUI.prototype.getBlobFromBufferAndText = function(e, t) {
        for (var i = new Uint8Array(e), n = new Uint8Array(t.length), o = 0; o < t.length; ++o) n[o] = this.passInt8([t.charCodeAt(o)])[0];
        var r = [];
        return r.push(new Blob([i], {
            type: "application/octet-stream"
        })), r.push(new Blob([n], {
            type: "application/octet-stream"
        })), new Blob(r, {
            type: "image/png"
        })
    }, iCn3DUI.prototype.getTransformationStr = function(e) {
        var t = {
            factor: 1,
            mouseChange: {
                x: 0,
                y: 0
            },
            quaternion: {
                _x: 0,
                _y: 0,
                _z: 0,
                _w: 1
            }
        };
        return t.factor = parseFloat(e.factor).toPrecision(4), t.mouseChange.x = parseFloat(e.mouseChange.x).toPrecision(4), t.mouseChange.y = parseFloat(e.mouseChange.y).toPrecision(4), t.quaternion._x = parseFloat(e.quaternion._x).toPrecision(4), t.quaternion._y = parseFloat(e.quaternion._y).toPrecision(4), t.quaternion._z = parseFloat(e.quaternion._z).toPrecision(4), t.quaternion._w = parseFloat(e.quaternion._w).toPrecision(4), "1.0000" == t.factor && (t.factor = 1), "0.0000" == t.mouseChange.x && (t.mouseChange.x = 0), "0.0000" == t.mouseChange.y && (t.mouseChange.y = 0), "0.0000" == t.quaternion._x && (t.quaternion._x = 0), "0.0000" == t.quaternion._y && (t.quaternion._y = 0), "0.0000" == t.quaternion._z && (t.quaternion._z = 0), "1.0000" == t.quaternion._w && (t.quaternion._w = 1), JSON.stringify(t)
    }, iCn3DUI.prototype.getPngText = function() {
        var e, t = "";
        this.bInputfile ? (e = this.shareLinkUrl(!0), t += "\nStart of type file======\n", t += this.InputfileType + "\n", t += "End of type file======\n", t += "Start of data file======\n", t += this.InputfileData, t += "End of data file======\n", t += "Start of state file======\n", t += e, t += "End of state file======\n") : 4e3 < (e = this.shareLinkUrl()).length || 0 !== e.indexOf("http") ? (t += "\nStart of state file======\n", t += e = this.shareLinkUrl(!0), t += "End of state file======\n") : t += "\nShare Link: " + e;
        return t
    }, iCn3DUI.prototype.saveFile = function(n, e, t) {
        var o, r = this;
        if ("command" === e) {
            for (var i = "", s = 0, a = r.icn3d.commands.length; s < a; ++s) {
                var c = r.icn3d.commands[s].trim();
                if (s == a - 1) {
                    var d = c.split("|||"),
                        l = {};
                    l.factor = r.icn3d._zoomFactor, l.mouseChange = r.icn3d.mouseChange, l.quaternion = r.icn3d.quaternion, c = d[0] + "|||" + r.getTransformationStr(l)
                }
                i += c + "\n"
            }
            var h = decodeURIComponent(i);
            o = new Blob([h], {
                type: "text;charset=utf-8;"
            })
        } else if ("png" === e) {
            var p = $("#" + r.pre + "canvas").width(),
                m = $("#" + r.pre + "canvas").height();
            r.icn3d.setWidthHeight(p, m), r.icn3d.bRender && r.icn3d.render();
            var u = !0;
            if (window.File && window.FileReader && window.FileList && window.Blob || (u = !1), r.isIE()) {
                if (o = r.icn3d.renderer.domElement.msToBlob(), !u) return void saveAs(o, n);
                var f = new FileReader;
                f.onload = function(e) {
                    var t = e.target.result,
                        i = r.getPngText();
                    o = r.getBlobFromBufferAndText(t, i), saveAs(o, n)
                }, f.readAsArrayBuffer(o)
            } else r.icn3d.renderer.domElement.toBlob(function(e) {
                if (u) {
                    var t = new FileReader;
                    t.onload = function(e) {
                        var t = e.target.result,
                            i = r.getPngText();
                        o = r.getBlobFromBufferAndText(t, i), saveAs(o, n)
                    }, t.readAsArrayBuffer(e)
                } else saveAs(o = e, n)
            });
            r.icn3d.scaleFactor = 1, r.icn3d.setWidthHeight(p, m), r.icn3d.bRender && r.icn3d.render()
        } else if ("html" === e) {
            i = t, h = decodeURIComponent(i);
            o = new Blob([h], {
                type: "text/html;charset=utf-8;"
            })
        } else if ("text" === e) {
            h = t;
            o = new Blob(h, {
                type: "text;charset=utf-8;"
            })
        } else if ("binary" === e) {
            h = t;
            o = new Blob(h, {
                type: "application/octet-stream"
            })
        }
        "png" !== e && saveAs(o, n)
    }, iCn3DUI.prototype.isMobile = function() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    }, iCn3DUI.prototype.isMac = function() {
        return /Mac/i.test(navigator.userAgent)
    }, iCn3DUI.prototype.isSessionStorageSupported = function() {
        return window.sessionStorage
    }, iCn3DUI.prototype.resizeCanvas = function(e, t, i, n) {
        if (i || this.cfg.resize) {
            var o = t;
            $("#" + this.pre + "canvas").width(e).height(o), $("#" + this.pre + "viewer").width(e).height(t), $("#" + this.divid + " div:has(#" + this.pre + "canvas)").width(e).height(o), this.icn3d.setWidthHeight(e, o), void 0 !== n && !n || this.icn3d.draw()
        }
    }, iCn3DUI.prototype.handleContextLost = function() {
        var t = this,
            e = $("#" + t.pre + "canvas")[0];
        e.addEventListener("webglcontextlost", function(e) {
            e.preventDefault()
        }, !1), e.addEventListener("webglcontextrestored", function(e) {
            console.log("WebGL context was lost. Reset WebGLRenderer and launch iCn3D again."), t.icn3d.renderer = new THREE.WebGLRenderer({
                canvas: t.icn3d.container.get(0),
                antialias: !0,
                preserveDrawingBuffer: !0,
                alpha: !0
            }), t.icn3d.draw()
        }, !1)
    }, iCn3DUI.prototype.windowResize = function() {
        var i = this;
        i.cfg.resize && !i.isMobile() && $(window).resize(function() {
            i.setViewerWidthHeight();
            var e = i.WIDTH,
                t = i.HEIGHT;
            void 0 === i.icn3d || i.icn3d.bFullscreen || i.resizeCanvas(e, t)
        })
    }, iCn3DUI.prototype.setViewerWidthHeight = function() {
        var e, t, i = this;
        i.WIDTH = $(window).width() - i.LESSWIDTH, i.HEIGHT = $(window).height() - i.EXTRAHEIGHT - i.LESSHEIGHT, t = void 0 !== i.oriWidth && -1 === i.cfg.width.toString().indexOf("%") ? (e = i.oriWidth, i.oriHeight) : (e = $("#" + i.pre + "viewer").css("width"), t = $("#" + i.pre + "viewer").css("height"), void 0 === e && (e = i.WIDTH), void 0 === t && (t = i.HEIGHT), e = -1 !== i.cfg.width.toString().indexOf("%") ? $(window).width() * i.cfg.width.substr(0, i.cfg.width.toString().indexOf("%")) / 100 - i.LESSWIDTH : parseInt(i.cfg.width), -1 !== i.cfg.height.toString().indexOf("%") ? $(window).height() * i.cfg.height.substr(0, i.cfg.height.toString().indexOf("%")) / 100 - i.EXTRAHEIGHT - i.LESSHEIGHT : parseInt(i.cfg.height)), e && i.WIDTH > e && (i.WIDTH = e), t && i.HEIGHT > t && (i.HEIGHT = t)
    }, iCn3DUI.prototype.shareLinkUrl = function(e) {
        var t = this,
            i = t.baseUrl + "icn3d/full.html?";
        t.cfg.bSidebyside && (i = t.baseUrl + "icn3d/full2.html?");
        var n = {};
        for (var o in t.cfg) {
            var r = t.cfg[o];
            "inpara" !== o && "command" !== t.key && void 0 !== r && ("width" === o && "100%" === r || "height" === o && "100%" === r || "resize" === o && !0 === r || "showmenu" === o && !0 === r || "showtitle" === o && !0 === r || "showcommand" === o && !0 === r || "simplemenu" === o && !1 === r || "mobilemenu" === o && !1 === r || "closepopup" === o && !1 === r || "showanno" === o && !1 === r || "showseq" === o && !1 === r || "showalignseq" === o && !1 === r || "show2d" === o && !1 === r || "showsets" === o && !1 === r || "rotate" === o && "right" === r || "command" !== o && ("options" === o ? 0 < Object.keys(r).length && (n[o] = JSON.stringify(r)) : !0 === r ? n[o] = 1 : !1 === r ? n[o] = 0 : "" !== r && (n[o] = r)))
        }
        var s = -1;
        void 0 !== t.cfg.inpara && (s = t.cfg.inpara.indexOf("&command="));
        var a = -1 !== s ? t.cfg.inpara.substr(0, s) : t.cfg.inpara;
        inparaArray = a.substr(1).split("&");
        for (var c = 0, d = inparaArray.length; c < d; ++c) {
            var l = inparaArray[c].split("=");
            2 == l.length && (n[l[0]] = l[1])
        }
        for (var o in n) i += o + "=" + n[o] + "&";
        var h = new Date;
        i += "date=" + (h.getFullYear().toString() + (h.getMonth() + 1).toString() + h.getDate().toString()) + "&", i += "command=";
        var p = void 0 !== a ? 1 : 0;
        e && (p = 0);
        var m = {};
        m.factor = t.icn3d._zoomFactor, m.mouseChange = t.icn3d.mouseChange, m.quaternion = t.icn3d.quaternion;
        var u = !1,
            f = "",
            g = void 0,
            v = "toggle highlight",
            b = 0;
        t.icn3d.commands.length > p && -1 !== (g = t.icn3d.commands[p].split("|||")[0].trim()).indexOf(v) && ++b;
        var y;
        for (c = p + 1, d = t.icn3d.commands.length; c < d; ++c) {
            u = !0;
            var _ = t.icn3d.commands[c].split("|||")[0].trim();
            (-1 !== g.indexOf("select saved atoms") || -1 !== g.indexOf("select sets")) && (0 === _.indexOf("select") || 0 === _.indexOf("select")) && -1 === g.indexOf(" name ") || -1 !== g.indexOf("pickatom") && -1 !== _.indexOf("pickatom") || "show selection" == g && -1 != t.icn3d.commands.slice(c).toString().indexOf("show selection") || (-1 !== g.indexOf(v) ? ++b : i += c === p + 1 ? g : "; " + g), f += g + "\n", g = _
        }
        return void 0 !== g && (u && (i += "; "), 0 < b && b % 2 == 0 && g !== v && (i += v + "; "), i += g + "|||" + t.getTransformationStr(m), f += g + "|||" + t.getTransformationStr(m) + "\n"), (t.bInputfile || 4e3 < i.length) && (i = f), void 0 !== t.icn3d.structures && 1 == Object.keys(t.icn3d.structures).length && void 0 !== t.inputid && (y = Object.keys(t.icn3d.structures)[0], i = i.replace(new RegExp(y + "_", "g"), "!")), void 0 !== t.cfg.blast_rep_id && (i = i.replace(new RegExp("blast_rep_id=!", "g"), "blast_rep_id=" + y + "_")), i
    }, iCn3DUI.prototype.addLabel = function(e, t, i, n, o, r, s, a) {
        var c = {};
        "0" !== o && "" !== o && "undefined" !== o || (o = void 0), "0" !== r && "" !== r && "undefined" !== r || (r = void 0), "0" !== s && "" !== s && "undefined" !== s || (s = void 0);
        var d = new THREE.Vector3;
        d.x = t, d.y = i, d.z = n, c.position = d, c.text = e, c.size = o, c.color = r, c.background = s, void 0 === this.icn3d.labels[a] && (this.icn3d.labels[a] = []), void 0 !== a ? this.icn3d.labels[a].push(c) : this.icn3d.labels.custom.push(c), this.icn3d.removeHlObjects()
    }, iCn3DUI.prototype.rmsd_supr = function(e, t, i) {
        var n, o, r, s, a, c, d, l, h, p, m, u, f, g, v, b, y, _, C, w, S, k, A = 1e-10,
            x = new Array(9),
            R = new THREE.Vector3,
            E = new THREE.Vector3,
            D = [],
            O = [],
            T = new Array(9),
            H = new Array(3),
            M = new Array(3);
        for (o = 0; o < 3; ++o) H[o] = new THREE.Vector3, M[o] = new THREE.Vector3;
        var I = new Array(3),
            $ = new Array(3),
            L = new Array(3),
            F = new Array(3),
            P = new Array(3),
            N = new Array(3);
        if (n = 0, i <= 1) return {
            rot: void 0,
            trans1: void 0,
            trans2: void 0,
            rmsd: 999
        };
        R = new THREE.Vector3, E = new THREE.Vector3;
        for (o = 0; o < i; o++) D.push(e[o]), O.push(t[o]), R.add(e[o]), E.add(t[o]);
        R.multiplyScalar(1 / i), E.multiplyScalar(1 / i);
        var z = R,
            q = E;
        for (o = 0; o < i; o++) D[o].sub(R), O[o].sub(E);
        for (c = d = o = 0; o < i; o++) c += D[o].x * D[o].x + D[o].y * D[o].y + D[o].z * D[o].z, d += O[o].x * O[o].x + O[o].y * O[o].y + O[o].z * O[o].z;
        for (c /= i, d /= i, g = v = b = y = _ = C = w = S = k = 0, o = 0; o < i; o++) g += D[o].x * O[o].x, v += D[o].x * O[o].y, b += D[o].x * O[o].z, y += D[o].y * O[o].x, _ += D[o].y * O[o].y, C += D[o].y * O[o].z, w += D[o].z * O[o].x, S += D[o].z * O[o].y, k += D[o].z * O[o].z;
        l = (g /= i) * ((_ /= i) * (k /= i) - (C /= i) * (S /= i)), l -= (v /= i) * ((y /= i) * k - C * (w /= i)), f = (l += (b /= i) * (y * S - _ * w)) < 0 ? -1 : 1, H[0].x = g * g + v * v + b * b, H[0].y = g * y + v * _ + b * C, H[0].z = g * w + v * S + b * k, H[1].x = H[0].y, H[1].y = y * y + _ * _ + C * C, H[1].z = y * w + _ * S + C * k, H[2].x = H[0].z, H[2].y = H[1].z, H[2].z = w * w + S * S + k * k, M[0].x = g * g + y * y + w * w, M[0].y = g * v + y * _ + w * S, M[0].z = g * b + y * C + w * k, M[1].x = M[0].y, M[1].y = v * v + _ * _ + S * S, M[1].z = v * b + _ * C + S * k, M[2].x = M[0].z, M[2].y = M[1].z, M[2].z = b * b + C * C + k * k, T[0] = H[0].x, T[1] = H[0].y, T[2] = H[0].z, T[3] = H[1].x, T[4] = H[1].y, T[5] = H[1].z, T[6] = H[2].x, T[7] = H[2].y, T[8] = H[2].z;
        var j = this.eigen_values(T);
        h = j.d1, p = j.d2, m = j.d3, s = 1, T[0] -= h, T[4] -= h, T[8] -= h;
        var U = this.null_basis(T, I, $, L, A);
        return r = U.k, I = U.v1, $ = U.v2, L = U.v3, 1 == r && (T[0] += h - p, T[4] += h - p, T[8] += h - p, r = (U = this.null_basis(T, $, L, I, A)).k, $ = U.v1, L = U.v2, I = U.v3, 1 == r && (T[0] += p - m, T[4] += p - m, T[8] += p - m, r = (U = this.null_basis(T, L, I, $, A)).k, L = U.v1, I = U.v2, $ = U.v3)), 1 != r && (T[0] = M[0].x, T[1] = M[0].y, T[2] = M[0].z, T[3] = M[1].x, T[4] = M[1].y, T[5] = M[1].z, T[6] = M[2].x, T[7] = M[2].y, T[8] = M[2].z, s = 2, T[0] -= h, T[4] -= h, T[8] -= h, r = (U = this.null_basis(T, F, P, N, A)).k, F = U.v1, P = U.v2, N = U.v3, 1 == r && (T[0] += h - p, T[4] += h - p, T[8] += h - p, r = (U = this.null_basis(T, P, N, F, A)).k, P = U.v1, N = U.v2, F = U.v3, 1 == r && (T[0] += p - m, T[4] += p - m, T[8] += p - m, r = (U = this.null_basis(T, N, F, P, A)).k, N = U.v1, F = U.v2, P = U.v3))), 1 != r ? (n = 100, x[0] = 1, x[1] = 0, x[2] = 0, x[3] = 0, x[4] = 1, x[5] = 0, x[6] = 0, x[7] = 0, x[8] = 1, {
            rot: x,
            trans1: z,
            trans2: q,
            rmsd: n
        }) : (1 == s ? (F[0] = g * I[0] + y * I[1] + w * I[2], F[1] = v * I[0] + _ * I[1] + S * I[2], F[2] = b * I[0] + C * I[1] + k * I[2], a = Math.sqrt(h), F[0] /= a, F[1] /= a, F[2] /= a, P[0] = g * $[0] + y * $[1] + w * $[2], P[1] = v * $[0] + _ * $[1] + S * $[2], P[2] = b * $[0] + C * $[1] + k * $[2], a = Math.sqrt(p), P[0] /= a, P[1] /= a, P[2] /= a, N[0] = g * L[0] + y * L[1] + w * L[2], N[1] = v * L[0] + _ * L[1] + S * L[2], N[2] = b * L[0] + C * L[1] + k * L[2], a = Math.sqrt(m), N[0] /= a, N[1] /= a, N[2] /= a) : 2 == s && (I[0] = g * F[0] + v * F[1] + b * F[2], I[1] = y * F[0] + _ * F[1] + C * F[2], I[2] = w * F[0] + S * F[1] + k * F[2], a = Math.sqrt(h), I[0] /= a, I[1] /= a, I[2] /= a, $[0] = g * P[0] + v * P[1] + b * P[2], $[1] = y * P[0] + _ * P[1] + C * P[2], $[2] = w * P[0] + S * P[1] + k * P[2], a = Math.sqrt(p), $[0] /= a, $[1] /= a, $[2] /= a, L[0] = g * N[0] + v * N[1] + b * N[2], L[1] = y * N[0] + _ * N[1] + C * N[2], L[2] = w * N[0] + S * N[1] + k * N[2], a = Math.sqrt(m), L[0] /= a, L[1] /= a, L[2] /= a), 0 < f ? (x[0] = F[0] * I[0] + P[0] * $[0] + N[0] * L[0], x[1] = F[0] * I[1] + P[0] * $[1] + N[0] * L[1], x[2] = F[0] * I[2] + P[0] * $[2] + N[0] * L[2], x[3] = F[1] * I[0] + P[1] * $[0] + N[1] * L[0], x[4] = F[1] * I[1] + P[1] * $[1] + N[1] * L[1], x[5] = F[1] * I[2] + P[1] * $[2] + N[1] * L[2], x[6] = F[2] * I[0] + P[2] * $[0] + N[2] * L[0], x[7] = F[2] * I[1] + P[2] * $[1] + N[2] * L[1], x[8] = F[2] * I[2] + P[2] * $[2] + N[2] * L[2]) : (x[0] = F[0] * I[0] + P[0] * $[0] - N[0] * L[0], x[1] = F[0] * I[1] + P[0] * $[1] - N[0] * L[1], x[2] = F[0] * I[2] + P[0] * $[2] - N[0] * L[2], x[3] = F[1] * I[0] + P[1] * $[0] - N[1] * L[0], x[4] = F[1] * I[1] + P[1] * $[1] - N[1] * L[1], x[5] = F[1] * I[2] + P[1] * $[2] - N[1] * L[2], x[6] = F[2] * I[0] + P[2] * $[0] - N[2] * L[0], x[7] = F[2] * I[1] + P[2] * $[1] - N[2] * L[1], x[8] = F[2] * I[2] + P[2] * $[2] - N[2] * L[2]), {
            rot: x,
            trans1: z,
            trans2: q,
            rmsd: n = 0 < (u = c + d - 2 * ((h = Math.sqrt(h)) + (p = Math.sqrt(p)) + f * (m = Math.sqrt(m)))) ? Math.sqrt(u) : void 0
        })
    }, iCn3DUI.prototype.eigen_values = function(e) {
        var t, i, n, o, r, s, a, c, d, l, h, p, m, u, f, g, v, b, y, _;
        (t = e[0], i = e[1], n = e[2], o = e[3], r = e[4], s = e[5], a = e[6], c = e[7], (f = .25 * (u = (l = -(t + r + (d = e[8]))) * l * l / 13.5 - l * (h = t * r + (t + r) * d - s * c - i * o - n * a) / 3 + (p = -t * r * d + t * s * c + i * o * d - i * s * a - n * o * c + n * r * a)) * u + (m = -l * l / 3 + h) * m * m / 27) < 0) ? (y = Math.sqrt(.25 * u * u - f), _ = Math.acos(-.5 * u / y), g = 2 * Math.cbrt(y) * Math.cos(_ / 3)) : g = Math.cbrt(-.5 * u + Math.sqrt(f)) + Math.cbrt(-.5 * u - Math.sqrt(f));
        return p /= -(g -= l / 3), (v = .5 * (-(l += g) + Math.sqrt(l * l - 4 * p))) < (b = .5 * (-l - Math.sqrt(l * l - 4 * p))) && (f = b, v = b = v), g < v && (f = v, v = g, g = f), v < b && (f = b, v = b = v), {
            d1: g,
            d2: v,
            d3: b
        }
    }, iCn3DUI.prototype.null_basis = function(e, t, i, n, o) {
        var r, s, a, c, d, l, h, p, m, u, f, g, v, b, y, _, C;
        if (a = e[0], c = e[1], d = e[2], l = e[3], h = e[4], p = e[5], m = e[6], u = e[7], f = e[8], C = Math.abs(a), Math.abs(c) > C && (C = Math.abs(c)), Math.abs(d) > C && (C = Math.abs(d)), Math.abs(l) > C && (C = Math.abs(l)), Math.abs(h) > C && (C = Math.abs(h)), Math.abs(p) > C && (C = Math.abs(p)), Math.abs(m) > C && (C = Math.abs(m)), Math.abs(u) > C && (C = Math.abs(u)), Math.abs(f) > C && (C = Math.abs(f)), C < 1e-10) return k0 = 3, {
            k: k0,
            v1: t,
            v2: i,
            v3: n
        };
        if (s = 0, a /= C, c /= C, d /= C, l /= C, h /= C, p /= C, m /= C, u /= C, f /= C, Math.abs(a) < o && Math.abs(l) < o && Math.abs(m) < o) r = 1, t[0] = 1, t[1] = 0, t[2] = 0, Math.abs(c) < o && Math.abs(h) < o && Math.abs(u) < o ? (r = 2, i[0] = 0, i[1] = 1, i[2] = 0, Math.abs(d) < o && Math.abs(p) < o && Math.abs(f) < o && (r = 3, n[0] = 0, n[1] = 0, n[2] = 1)) : (C = Math.abs(c), Math.abs(h) > C && (_ = a, a = l, l = _, _ = c, c = h, h = _, _ = d, d = p, p = _, C = Math.abs(c)), Math.abs(u) > C && (_ = a, a = m, m = _, _ = c, c = u, u = _, _ = d, d = f, f = _), b = p - h * d / c, y = f - u * d / c, Math.abs(b) < o && Math.abs(y) < o && (r = 2, i[0] = 0, i[1] = -d / c, s = i[2] = 1));
        else if (C = Math.abs(a), Math.abs(c) > C && (_ = a, a = l, l = _, _ = c, c = h, h = _, _ = d, d = p, p = _, C = Math.abs(a)), Math.abs(d) > C && (_ = a, a = m, m = _, _ = c, c = u, u = _, _ = d, d = f, f = _), g = h - l * c / a, v = p - l * d / a, b = u - m * c / a, y = f - m * d / a, Math.abs(g) < o && Math.abs(b) < o) r = 1, t[0] = -c / a, t[1] = 1, t[2] = 0, Math.abs(v) < o && Math.abs(y) < o && (r = 2, i[0] = -d / a, i[1] = 0, i[2] = 1, s = 2);
        else {
            if (Math.abs(g) < Math.abs(b) && (_ = g, g = b, b = _, _ = v, v = y, y = _), !(Math.abs(y - v * b / g) < o)) return t[k0 = 0] = 0, t[1] = 0, t[2] = 0, {
                k: k0,
                v1: t,
                v2: i,
                v3: n
            };
            r = 1, t[0] = c / a * (v / g) - d / a, t[1] = -v / g, t[2] = 1, s = 3
        }
        return k0 = r, 0 < s && (1 == s ? (a = i[0], c = i[1], d = i[2], _ = Math.sqrt(a * a + c * c + d * d), i[0] = a / _, i[1] = c / _, i[2] = d / _) : 2 == s ? (a = t[0], c = t[1], d = t[2], _ = a * (l = i[0]) + c * (h = i[1]) + d * (p = i[2]), Math.abs(_) >= o && (i[0] = a + _ * l, i[1] = c + _ * h, i[2] = d + _ * p, l = i[0], h = i[1], p = i[2]), _ = Math.sqrt(a * a + c * c + d * d), t[0] = a / _, t[1] = c / _, t[2] = d / _, _ = Math.sqrt(l * l + h * h + p * p), i[0] = l / _, i[1] = h / _, i[2] = p / _) : (a = t[0], c = t[1], d = t[2], _ = Math.sqrt(a * a + c * c + d * d), t[0] = a / _, t[1] = c / _, t[2] = d / _)), {
            k: k0,
            v1: t,
            v2: i,
            v3: n
        }
    }, iCn3DUI.prototype.showLoading = function() {
        $("#" + this.pre + "wait") && $("#" + this.pre + "wait").show(), $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").hide(), $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").hide()
    }, iCn3DUI.prototype.hideLoading = function() {
        $("#" + this.pre + "wait") && $("#" + this.pre + "wait").hide(), $("#" + this.pre + "canvas") && $("#" + this.pre + "canvas").show(), $("#" + this.pre + "cmdlog") && $("#" + this.pre + "cmdlog").show()
    }, iCn3DUI.prototype.downloadMmcif = function(t) {
        var i, n = this;
        i = "https://files.rcsb.org/view/" + t + ".cif", n.icn3d.bCid = void 0, document.title = t.toUpperCase() + " (MMCIF) in iCn3D", $.ajax({
            url: i,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                n.showLoading()
            },
            complete: function() {},
            success: function(e) {
                i = n.baseUrl + "mmcifparser/mmcifparser.cgi", $.ajax({
                    url: i,
                    type: "POST",
                    data: {
                        mmciffile: e
                    },
                    dataType: "jsonp",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    beforeSend: function() {
                        n.showLoading()
                    },
                    complete: function() {},
                    success: function(e) {
                        n.loadMmcifData(e, t)
                    },
                    error: function(e, t, i) {
                        this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                    }
                })
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }, iCn3DUI.prototype.downloadMmcifSymmetry = function(e, t) {
        var i = this;
        return i.deferredSymmetry = $.Deferred(function() {
            i.downloadMmcifSymmetryBase(e, t)
        }), i.deferredSymmetry.promise()
    }, iCn3DUI.prototype.downloadMmcifSymmetryBase = function(h, p) {
        var t, m = this;
        t = m.isMac() ? "https://files.rcsb.org/view/" + h + ".cif" : "https://files.rcsb.org/header/" + h + ".cif", m.icn3d.bCid = void 0, $.ajax({
            url: t,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                t = m.baseUrl + "mmcifparser/mmcifparser.cgi", $.ajax({
                    url: t,
                    type: "POST",
                    data: {
                        mmcifheader: e
                    },
                    dataType: "jsonp",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        if (void 0 !== e.emd && (m.icn3d.emd = e.emd), void 0 !== e.organism && (m.icn3d.organism = e.organism), m.bAssemblyUseAsu && m.loadMmcifSymmetry(e), "mmtfid" === p && void 0 !== e.missingseq) {
                            for (var t = 0, i = "", n = {}, o = 0, r = e.missingseq.length; o < r; ++o) {
                                var s = e.missingseq[o].resn,
                                    a = e.missingseq[o].chain,
                                    c = e.missingseq[o].resi,
                                    d = h + "_" + a;
                                void 0 === n[d] && (n[d] = []);
                                var l = {};
                                l.resi = c, l.name = m.icn3d.residueName2Abbr(s).toLowerCase(), a != i && (t = 0), !isNaN(c) && ("" == i || a != i || a == i && t < c) && (n[d].push(l), t = c, i = a)
                            }
                            m.icn3d.adjustSeq(n)
                        }
                        void 0 !== m.deferredSymmetry && m.deferredSymmetry.resolve()
                    },
                    error: function(e, t, i) {
                        this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : void 0 !== m.deferredSymmetry && m.deferredSymmetry.resolve()
                    }
                })
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }, iCn3DUI.prototype.loadMmcifData = function(e, t) {
        var i = this;
        return void 0 !== e.atoms ? (i.icn3d.init(), void 0 !== e.emd && (i.icn3d.emd = e.emd), void 0 !== e.organism && (i.icn3d.organism = e.organism), void 0 !== i.icn3d.emd ? ($("#" + i.pre + "mapWrapper1").hide(), $("#" + i.pre + "mapWrapper2").hide(), $("#" + i.pre + "mapWrapper3").hide()) : ($("#" + i.pre + "emmapWrapper1").hide(), $("#" + i.pre + "emmapWrapper2").hide(), $("#" + i.pre + "emmapWrapper3").hide()), i.deferredOpm = $.Deferred(function() {
            i.loadOpmData(e, t, void 0, "mmcif")
        }), i.deferredOpm.promise()) : (alert("invalid atoms data."), !1)
    }, iCn3DUI.prototype.loadMmcifSymmetry = function(e) {
        for (var t = e.assembly, i = (e.pmatrix, 0), n = t.length; i < n; ++i) {
            var o = new THREE.Matrix4;
            o.fromArray(t[i]), this.icn3d.biomtMatrices[i] = o
        }
        this.icn3d.asuCnt = this.icn3d.biomtMatrices.length
    }, iCn3DUI.prototype.parseMmdbDataPart1 = function(e, t) {
        var i = this;
        if (void 0 === e.atoms && void 0 === e.molid2rescount) return alert("invalid MMDB data."), !1;
        void 0 !== t && "target" !== t || (i.icn3d.init(), i.icn3d.chainsColor = {}, i.icn3d.chainsGene = {}), "query" === t ? i.interactionData_q = {
            moleculeInfor: e.moleculeInfor,
            intrac: e.intrac,
            intracResidues: e.intracResidues
        } : i.interactionData = {
            moleculeInfor: e.moleculeInfor,
            intrac: e.intrac,
            intracResidues: e.intracResidues
        }, "query" === t ? i.mmdb_data_q = e : i.mmdb_data = e;
        var n = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
        "query" === t ? i.inputid2 = n : i.inputid = n;
        var o = e.moleculeInfor,
            r = {},
            s = {},
            a = {},
            c = {};
        for (var d in o)
            if (0 !== Object.keys(o[d]).length) {
                var l = void 0 === o[d].color ? "#CCCCCC" : "#" + ("000000" + o[d].color.toString(16)).slice(-6),
                    h = void 0 === o[d].chain ? "" : o[d].chain.trim();
                void 0 === c[h] ? c[h] = 1 : ++c[h];
                var p = n + "_" + (1 === c[h] ? h : h + c[h].toString());
                r[d] = l, a[s[p] = d] = p, i.icn3d.chainsColor[p] = void 0 !== t ? new THREE.Color(i.GREY8) : new THREE.Color(l);
                var m = void 0 === o[d].geneId ? "" : o[d].geneId,
                    u = void 0 === o[d].geneSymbol ? "" : o[d].geneSymbol,
                    f = void 0 === o[d].geneDesc ? "" : o[d].geneDesc;
                i.icn3d.chainsGene[p] = {
                    geneId: m,
                    geneSymbol: u,
                    geneDesc: f
                }, 0
            } i.icn3d.molid2color = r, i.icn3d.chain2molid = s, i.icn3d.molid2chain = a, $("#" + i.pre + "accordion5").show()
    }, iCn3DUI.prototype.parseMmdbData = function(e, t) {
        if (void 0 === t) {
            var i = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
            this.loadMmdbOpmData(e, i, t)
        } else {
            this.parseMmdbDataPart1(e, t);
            i = void 0 !== e.pdbId ? e.pdbId : e.mmdbId;
            this.loadAtomDataIn(e, i, "mmdbid", void 0, t), this.loadMmdbOpmDataPart2(e, i, t)
        }
    }, iCn3DUI.prototype.downloadMmdb = function(n, o) {
        var t, r = this;
        t = o ? r.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&gi=" + n : r.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + n, void 0 !== r.cfg.blast_rep_id && (t += "&buidx=0"), (r.icn3d.bCid = void 0) !== r.cfg.inpara && (t += r.cfg.inpara), void 0 === r.chainids2resids && (r.chainids2resids = {}), $.ajax({
            url: t,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                r.showLoading()
            },
            complete: function() {},
            success: function(e) {
                r.icn3d.isCalphaPhosOnly(e.atoms) || e.atomCount <= r.icn3d.maxatomcnt ? r.parseMmdbData(e) : (e = null, $.ajax({
                    url: t + "&complexity=2",
                    dataType: "jsonp",
                    cache: !0,
                    tryCount: 0,
                    retryLimit: 1,
                    beforeSend: function() {
                        r.showLoading()
                    },
                    complete: function() {},
                    success: function(e) {
                        r.parseMmdbData(e)
                    },
                    error: function(e, t, i) {
                        this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : o ? alert("This gi " + n + " has no corresponding 3D structure...") : alert("This mmdbid " + n + " with the parameters " + r.cfg.inpara + " may not have 3D structure data. Please visit the summary page for details: " + r.baseUrl + "pdb/" + n)
                    }
                }))
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : o ? alert("This gi " + n + " has no corresponding 3D structure...") : alert("This mmdbid " + n + " with the parameters " + r.cfg.inpara + " may not have 3D structure data. Please visit the summary page for details: " + r.baseUrl + "pdb/" + n)
            }
        })
    }, iCn3DUI.prototype.downloadMmdbPart2 = function(e) {
        var t = this;
        t.bAssemblyUseAsu ? ($("#" + t.pre + "assemblyWrapper").show(), t.icn3d.bAssembly = !0) : ($("#" + t.pre + "assemblyWrapper").hide(), t.icn3d.bAssembly = !1), void 0 !== t.icn3d.emd ? ($("#" + t.pre + "mapWrapper1").hide(), $("#" + t.pre + "mapWrapper2").hide(), $("#" + t.pre + "mapWrapper3").hide()) : ($("#" + t.pre + "emmapWrapper1").hide(), $("#" + t.pre + "emmapWrapper2").hide(), $("#" + t.pre + "emmapWrapper3").hide()), t.icn3d.setAtomStyleByOptions(t.opts), void 0 !== t.cfg.blast_rep_id ? t.icn3d.setColorByOptions(t.opts, t.icn3d.atoms) : t.icn3d.setColorByOptions(t.opts, t.icn3d.atoms, !0), void 0 === e && (t.renderStructure(), void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0), t.html2ddgm = "", t.cfg.show2d && (t.openDialog(t.pre + "dl_2ddgm", "Interactions"), t.bFullUi && (void 0 === e ? t.download2Ddgm(t.inputid.toUpperCase()) : t.set2DDiagramsForAlign(t.inputid2.toUpperCase(), t.inputid.toUpperCase())))), void 0 !== t.cfg.align && void 0 !== t.cfg.chainalign || 1 != Object.keys(t.icn3d.structures).length || null !== $("#" + t.pre + "alternateWrapper") && $("#" + t.pre + "alternateWrapper").hide(), void 0 !== t.deferred && t.deferred.resolve(), void 0 !== t.deferred2 && t.deferred2.resolve()
    }, iCn3DUI.prototype.downloadGi = function(e) {
        this.icn3d.bCid = void 0;
        this.downloadMmdb(e, !0)
    }, iCn3DUI.prototype.downloadBlast_rep_id = function(e) {
        this.icn3d.bCid = void 0;
        var t = e.split(",");
        this.cfg.query_id = t[0], this.cfg.blast_rep_id = t[1];
        var i = this.cfg.blast_rep_id.split("_")[0];
        this.downloadMmdb(i)
    }, iCn3DUI.prototype.getMissingResidues = function(e, t, i) {
        for (var n = -9999, o = 0, r = !0, s = 0, a = e.length; s < a; ++s) {
            var c, d;
            "mmdbid" === t ? (c = e[s][1], d = 0) : "mmcifid" === t ? (c = e[s][1], c = this.icn3d.residueName2Abbr(c), d = 0) : "align" === t && (c = e[s][2], d = 1), "" === c && (c = "x");
            var l = {};
            l.resi = s + 1;
            var h = parseInt(e[s][d]),
                p = s == a - 1 ? 9999 : parseInt(e[s + 1][d]);
            if (0 !== h || 0 === h && (-1 === n || 1 == p)) {
                if (l.name = c.toLowerCase(), r && 0 < o) {
                    void 0 === this.countNextresiArray[i] && (this.countNextresiArray[i] = []);
                    var m = [o, parseInt(e[s][0])];
                    this.countNextresiArray[i].push(m), o = 0
                }
                r = !1
            } else l.name = c.toLowerCase(), ++o, r = !0;
            void 0 === this.icn3d.chainsSeq[i] && (this.icn3d.chainsSeq[i] = []);
            l.resi % 10 == 0 && l.resi.toString(), this.icn3d.chainsSeq[i].push(l), n = h
        }
    }, iCn3DUI.prototype.loadAtomDataIn = function(e, t, i, n, o) {
        var r = this;
        r.icn3d.pmin = new THREE.Vector3(9999, 9999, 9999), r.icn3d.pmax = new THREE.Vector3(-9999, -9999, -9999), r.icn3d.psum = new THREE.Vector3;
        var s = e.atoms,
            a = void 0 === o || "target" === o ? 0 : r.lastTargetSerial,
            c = 0,
            d = {},
            l = {};
        void 0 === o || "target" === o ? (r.pmid = e.pubmedId, r.chainid2title = {}, r.chainid2sid = {}) : r.pmid2 = e.pubmedId;
        var h = {},
            p = {},
            m = {};
        if ("align" === i) {
            r.pmid = "";
            var u = -1 !== r.cfg.inpara.indexOf("atype=1") ? "Invariant Core " : "";
            r.icn3d.molTitle = u + "Structure Alignment of ";
            for (var f = 0, g = e.alignedStructures[0].length; f < g; ++f) {
                var v = e.alignedStructures[0][f];
                1 === f && (r.icn3d.secondId = v.pdbId);
                for (var b = v.pdbId, y = v.mmdbId, _ = v.serialInterval[0], C = v.serialInterval[1]; _ <= C; ++_) d[_] = b.toString(), l[y] = b;
                for (_ = 0, C = v.molecules.length; _ < C; ++_) {
                    var w = v.molecules[_].chain,
                        S = v.molecules[_].kind,
                        k = v.molecules[_].name,
                        A = v.molecules[_].sequence,
                        x = v.molecules[_].sid,
                        R = b + "_" + w;
                    r.bFullUi && (h[R] = A), p[R] = S, r.chainid2title[R] = k, void 0 !== x && (r.chainid2sid[R] = x)
                }
                r.icn3d.molTitle += '<a href="' + r.baseUrl + "mmdb/mmdbsrv.cgi?uid=" + v.pdbId.toUpperCase() + '" target="_blank">' + v.pdbId.toUpperCase() + "</a>", void 0 !== v.descr && (r.pmid += v.descr.pubmedid), 0 === f && (r.icn3d.molTitle += " and ", void 0 !== v.descr && (r.pmid += "_"))
            }
            r.icn3d.molTitle += " from VAST+"
        } else if (void 0 !== e.descr && (r.icn3d.molTitle += e.descr.name), "mmdbid" === i) {
            b = e.pdbId;
            var E = {};
            "target" == o && (r.alignmolid2color = [], r.alignmolid2color[0] = {}, r.alignmolid2color[1] = {});
            var D = 1;
            for (var O in e.moleculeInfor)
                if (0 !== Object.keys(e.moleculeInfor[O]).length) {
                    R = b + "_" + (w = e.moleculeInfor[O].chain.trim());
                    E.hasOwnProperty(w) ? (++E[w], R += E[w]) : E[w] = 1, void 0 !== r.mmdbid_q && r.mmdbid_q === r.mmdbid_t && "query" === o && (R = b + r.postfix + "_" + w);
                    S = e.moleculeInfor[O].kind;
                    var T = e.moleculeInfor[O].color;
                    x = e.moleculeInfor[O].sid;
                    p[R] = S, m[R] = T, "protein" == S && (r.icn3d.organism = e.moleculeInfor[O].taxonomyName.toLowerCase()), void 0 !== x && (r.chainid2sid[R] = x), void 0 === r.icn3d.pdbid_chain2title && (r.icn3d.pdbid_chain2title = {}), r.icn3d.pdbid_chain2title[R] = e.moleculeInfor[O].name, "query" == o && w == r.chain_q ? r.alignmolid2color[0][O] = D.toString() : "target" == o && w == r.chain_t && (r.alignmolid2color[1][O] = D.toString()), ++D
                }
        }
        if (r.countNextresiArray = {}, r.bFullUi)
            if ("mmdbid" === i || "mmcifid" === i)
                for (var w in e.sequences) {
                    var H = e.sequences[w];
                    R = t + "_" + w;
                    void 0 !== r.mmdbid_q && r.mmdbid_q === r.mmdbid_t && "query" === o && (R = t + r.postfix + "_" + w), r.getMissingResidues(H, i, R)
                } else if ("align" === i)
                    for (var R in h) {
                        H = h[R];
                        r.getMissingResidues(H, i, R)
                    }
        var M, I, $, L, F = {},
            P = "",
            N = "",
            z = "",
            q = "",
            j = "",
            U = "",
            B = (c = 0, !0),
            G = !1,
            V = "",
            W = r.icn3d.isCalphaPhosOnly(s),
            Y = 0,
            X = {};
        for (var f in s) {
            var K;
            ++a, F[f] = a, (ue = s[f]).serial = a, "mmdbid" === i || "mmcifid" === i ? K = t : "align" === i && (K = d[a]);
            if ("mmdbid" === i || "align" === i) ue.resi_ori = parseInt(ue.resi), ue.resi = ue.ids.r, ue.resi, ue.resi_ori, -1 !== (Z = ue.resn.indexOf(" ")) && 0 != Z && (ue.resn = ue.resn.substr(0, Z));
            else ue.resi = parseInt(ue.resi);
            if (void 0 !== ue.chain || "mmdbid" !== i && "align" !== i) ue.chain = "" === ue.chain ? "Misc" : ue.chain;
            else if ("mmdbid" === i)
                if (O = ue.ids.m, void 0 !== r.icn3d.molid2chain[O]) {
                    var Z = r.icn3d.molid2chain[O].indexOf("_");
                    ue.chain = r.icn3d.molid2chain[O].substr(Z + 1)
                } else {
                    var Q = "Misc";
                    ++Y, "solvent" !== p[j] && "HOH" !== ue.resn || (ue.resi = Y), ue.chain = Q
                }
            else if ("align" === i)
                if (O = ue.ids.m, void 0 !== r.icn3d.pdbid_molid2chain[K + "_" + O]) ue.chain = r.icn3d.pdbid_molid2chain[K + "_" + O];
                else {
                    Q = "Misc";
                    ++Y, "solvent" !== p[j] && "HOH" !== ue.resn || (ue.resi = Y), ue.chain = Q
                } if (ue.chain = ue.chain.trim(), "mmdbid" !== i && "align" !== i || (ue.structure = K, "mmdbid" === i && void 0 !== r.mmdbid_q && r.mmdbid_q === r.mmdbid_t && "query" === o && (ue.structure += r.postfix)), (j = (q = ue.structure) + "_" + ue.chain) !== N && (c = 0), ue.resi !== c && (L = j !== N ? I = void 0 : (I = M, $)), "mmdbid" === i) {
                if (ue.coord = new THREE.Vector3(ue.coord[0], ue.coord[1], ue.coord[2]), void 0 !== r.q_rotation)
                    if ("target" === o) ue.coord.x += r.t_trans_add.x, ue.coord.y += r.t_trans_add.y, ue.coord.z += r.t_trans_add.z;
                    else if ("query" === o) {
                    ue.coord.x -= r.q_trans_sub.x, ue.coord.y -= r.q_trans_sub.y, ue.coord.z -= r.q_trans_sub.z;
                    var J = ue.coord.x * r.q_rotation.x1 + ue.coord.y * r.q_rotation.y1 + ue.coord.z * r.q_rotation.z1,
                        ee = ue.coord.x * r.q_rotation.x2 + ue.coord.y * r.q_rotation.y2 + ue.coord.z * r.q_rotation.z2,
                        te = ue.coord.x * r.q_rotation.x3 + ue.coord.y * r.q_rotation.y3 + ue.coord.z * r.q_rotation.z3;
                    ue.coord.x = J, ue.coord.y = ee, ue.coord.z = te
                }
            } else ue.coord = new THREE.Vector3(ue.coord.x, ue.coord.y, ue.coord.z);
            var ie = r.icn3d.residueName2Abbr(ue.resn.substr(0, 3));
            "mmdbid" !== i && "align" !== i || !r.bFullUi || (void 0 === r.mmdbMolidResid2mmdbChainResi && (r.mmdbMolidResid2mmdbChainResi = {}), r.mmdbMolidResid2mmdbChainResi[K + "_" + ue.ids.m + "_" + ue.ids.r] = K + "_" + ue.chain + "_" + ue.resi), r.icn3d.pmin.min(ue.coord), r.icn3d.pmax.max(ue.coord), r.icn3d.psum.add(ue.coord);
            var ne = void 0 === r.cfg.mmcifid ? "protein" === p[j] : "p" === ue.mt,
                oe = void 0 === r.cfg.mmcifid ? "nucleotide" === p[j] : "n" === ue.mt,
                re = void 0 === r.cfg.mmcifid ? "solvent" === p[j] : "s" === ue.mt,
                se = void 0 === r.cfg.mmcifid ? "ligand" === p[j] || void 0 !== p[j] && -1 !== p[j].indexOf("other") || void 0 === p[j] : "l" === ue.mt;
            if ("Misc" !== ue.chain && "other" !== p[j] || "protein" === X[j] || "nucleotide" === X[j] || ("CA" === ue.name ? X[j] = "protein" : "P" === ue.name ? X[j] = "nucleotide" : X[j] = "chemical"), ne || oe ? (ne ? (r.icn3d.proteins[a] = 1, "CA" === ue.name && (r.icn3d.calphas[a] = 1), "N" !== ue.name && "CA" !== ue.name && "C" !== ue.name && "O" !== ue.name && (r.icn3d.sidec[a] = 1)) : oe && (r.icn3d.nucleotides[a] = 1, ("O3'" == ue.name || "O3*" == ue.name || W && "P" == ue.name) && (r.icn3d.nucleotidesO3[a] = 1)), ue.het = !1) : re ? (r.icn3d.water[a] = 1, ue.het = !0) : se && ("HOH" === ue.resn || "O" === ue.resn ? r.icn3d.water[a] = 1 : ue.elem === ue.resn ? r.icn3d.ions[a] = 1 : r.icn3d.chemicals[a] = 1, ue.het = !0), "mmdbid" === i ? ue.het ? ue.color = r.icn3d.atomColors[ue.elem] || r.icn3d.defaultAtomColor : ue.color = void 0 !== m[j] ? new THREE.Color(m[j]) : r.icn3d.chargeColors[ue.resn] : void 0 !== ue.color && (ue.color = new THREE.Color(ue.color)), " " !== ue.resn.charAt(0) && " " === ue.resn.charAt(1) && (ue.resn = ue.resn.charAt(0)), ue.het || "C" !== ue.name || (M = a), ue.het || "O" !== ue.name || ($ = a), !ue.het && "N" === ue.name && void 0 !== I && void 0 !== L) {
                var ae = r.icn3d.atoms[I].coord.distanceTo(r.icn3d.atoms[L].coord),
                    ce = ue.coord.x + (r.icn3d.atoms[I].coord.x - r.icn3d.atoms[L].coord.x) / ae,
                    de = ue.coord.y + (r.icn3d.atoms[I].coord.y - r.icn3d.atoms[L].coord.y) / ae,
                    le = ue.coord.z + (r.icn3d.atoms[I].coord.z - r.icn3d.atoms[L].coord.z) / ae;
                ue.hcoord = new THREE.Vector3(ce, de, le)
            }
            "HOH" == ue.resn && (r.icn3d.water[a] = 1), r.icn3d.atoms[a] = ue, r.icn3d.dAtoms[a] = 1, r.icn3d.hAtoms[a] = 1;
            R = ue.structure + "_" + ue.chain;
            void 0 === r.icn3d.chains[R] && (r.icn3d.chains[R] = {}), r.icn3d.chains[R][a] = 1;
            var he = R + "_" + ue.resi;
            void 0 === r.icn3d.residues[he] && (r.icn3d.residues[he] = {}), r.icn3d.residues[he][a] = 1, (U = j + "_" + ue.resi) !== z && j !== N && (B = !0, "" !== P && (void 0 === r.icn3d.structures[P] && (r.icn3d.structures[P] = []), r.icn3d.structures[P].push(N))), r.icn3d.residueId2Name[he] = ie;
            var pe = "-";
            if ("helix" === ue.ss ? pe = "H" : "sheet" === ue.ss ? pe = "E" : ue.het || oe ? pe = "o" : !ue.het && r.icn3d.residueColors.hasOwnProperty(ue.resn.toUpperCase()) ? pe = "c" : "coil" === ue.ss && (pe = "c"), r.icn3d.secondaries[ue.structure + "_" + ue.chain + "_" + ue.resi] = pe, (ue.resi != c || O != V) && r.bFullUi)
                if (void 0 === r.icn3d.chainsSeq[R] && (B = !(r.icn3d.chainsSeq[R] = [])), B && !G && void 0 !== r.icn3d.chainsSeq[R][ue.resi - 1]) r.icn3d.chainsSeq[R][ue.resi - 1].name = ie;
                else if (!B || !r.icn3d.chainsSeq[R].hasOwnProperty(ue.resi - 1)) {
                var me = {};
                me.resi = ue.resi, me.name = ie;
                ue.resi % 10 == 0 && ue.resi.toString(), r.icn3d.chainsSeq[R].push(me), G = !0
            }
            c = ue.resi, P = q, N = j, z = U, V = O, 0
        }
        for (var R in "target" === o && (r.lastTargetSerial = a), X)
            if (!(Object.keys(r.icn3d.chains[R]).length < 10) && "chemical" !== X[R])
                for (var a in r.icn3d.chains[R]) {
                    var ue = r.icn3d.atoms[a];
                    delete r.icn3d.chemicals[a], ue.het = !1, "protein" === X[R] ? (r.icn3d.proteins[a] = 1, "CA" === ue.name && (r.icn3d.calphas[a] = 1), "N" !== ue.name && "CA" !== ue.name && "C" !== ue.name && "O" !== ue.name && (r.icn3d.sidec[a] = 1)) : "nucleotide" === X[R] && (r.icn3d.nucleotides[a] = 1, ("O3'" == ue.name || "O3*" == ue.name || W && "P" == ue.name) && (r.icn3d.nucleotidesO3[a] = 1))
                }
        if (void 0 === r.icn3d.structures[q] && (r.icn3d.structures[q] = []), r.icn3d.structures[q].push(j), "mmcifid" !== i)
            for (var f in s) {
                var fe = F[f],
                    ge = void 0 === r.icn3d.atoms[fe].bonds ? 0 : r.icn3d.atoms[fe].bonds.length;
                for (_ = 0; _ < ge; ++_) r.icn3d.atoms[fe].bonds[_] = F[r.icn3d.atoms[fe].bonds[_]]
            }
        if (e.atoms = {}, r.icn3d.cnt = a, (r.icn3d.cnt > r.icn3d.maxatomcnt || void 0 !== r.icn3d.biomtMatrices && r.icn3d.biomtMatrices.length * r.icn3d.cnt > 10 * r.icn3d.maxatomcnt) && (r.opts.proteins = "c alpha trace", r.opts.nucleotides = "o3 trace"), r.icn3d.maxD = r.icn3d.pmax.distanceTo(r.icn3d.pmin), r.icn3d.center = r.icn3d.psum.multiplyScalar(1 / r.icn3d.cnt), r.icn3d.maxD < 5 && (r.icn3d.maxD = 5), "mmdbid" === i) {
            if (void 0 !== (Ae = e.disulfides))
                for (f = 0, g = Ae.length; f < g; ++f) {
                    var ve = Ae[f][0].ca,
                        be = Ae[f][1].ca,
                        ye = r.icn3d.atoms[ve],
                        _e = r.icn3d.atoms[be],
                        Ce = ye.chain,
                        we = _e.chain,
                        Se = ye.structure + "_" + Ce + "_" + ye.resi,
                        ke = _e.structure + "_" + we + "_" + _e.resi;
                    void 0 === r.icn3d.ssbondpnts[ye.structure] && (r.icn3d.ssbondpnts[ye.structure] = []), r.icn3d.ssbondpnts[ye.structure].push(Se), r.icn3d.ssbondpnts[ye.structure].push(ke)
                }
        } else if ("mmcifid" === i) {
            var Ae;
            if (void 0 !== (Ae = e.disulfides)) {
                void 0 === r.icn3d.ssbondpnts[t] && (r.icn3d.ssbondpnts[t] = []);
                for (f = 0, g = Ae.length; f < g; ++f) {
                    Se = Ae[f][0], ke = Ae[f][1];
                    r.icn3d.ssbondpnts[t].push(Se), r.icn3d.ssbondpnts[t].push(ke)
                }
                for (var xe = Object.keys(r.icn3d.structures), Re = 0, Ee = xe.length; Re < Ee; ++Re) {
                    if ((v = xe[Re]) != t) {
                        void 0 === r.icn3d.ssbondpnts[v] && (r.icn3d.ssbondpnts[v] = []);
                        for (_ = 0, C = r.icn3d.ssbondpnts[t].length; _ < C; ++_) {
                            var De = r.icn3d.ssbondpnts[t][_],
                                Oe = (Z = De.indexOf("_"), v + De.substr(Z));
                            r.icn3d.ssbondpnts[v].push(Oe)
                        }
                    }
                }
            }
        } else if ("align" === i) {
            var Te = {};
            for (var R in h)
                if ("protein" == p[R])
                    for (A = h[R], v = R.substr(0, R.indexOf("_")), f = 0, g = A.length; f < g; ++f) "C" == A[f][2] && (null == Te[v] && (Te[v] = []), Te[v].push(R + "_" + A[f][0]));
            r.icn3d.setSsbond(Te)
        }
        if ("mmcifid" === i ? r.transformToOpmOri(t) : "mmdbid" === i && r.transformToOpmOri(t), "align" === i && void 0 !== n && r.bFullUi ? r.setSeqAlign(n, e.alignedStructures) : "mmdbid" === i && "query" === o && r.bFullUi && void 0 !== r.q_rotation && r.setSeqAlignChain(), "mmdbid" === i && ("target" === o || "query" === o) && void 0 === r.q_rotation) {
            if ("target" === o || "query" === o)
                for (var f in s) {
                    var He = s[f];
                    He.coord.x -= r.icn3d.center.x, He.coord.y -= r.icn3d.center.y, He.coord.z -= r.icn3d.center.z
                }
            "target" === o ? (r.icn3d.maxD1 = r.icn3d.maxD, r.icn3d.center1 = r.icn3d.center) : "query" === o && (r.icn3d.maxD2 = r.icn3d.maxD, r.icn3d.center2 = r.icn3d.center, r.icn3d.maxD2 < r.icn3d.maxD1 && (r.icn3d.maxD = r.icn3d.maxD1), r.icn3d.center = new THREE.Vector3(0, 0, 0))
        }
        r.icn3d.oriMaxD = r.icn3d.maxD, r.icn3d.oriCenter = r.icn3d.center.clone(), r.showTitle(), e = {}
    }, iCn3DUI.prototype.downloadMmtf = function(r) {
        var e, s, a = this;
        document.title = r.toUpperCase() + " (MMTF) in iCn3D", a.icn3d.bCid = void 0, e = "https://mmtf.rcsb.org/v1.0/reduced/" + r.toUpperCase(), s = "https://mmtf.rcsb.org/v1.0/full/" + r.toUpperCase();
        var c = new XMLHttpRequest;
        c.open("GET", e, !0), c.responseType = "arraybuffer", c.onload = function(e) {
            var t = c.response;
            if (t) {
                var i = new Uint8Array(t),
                    n = MMTF.decode(i);
                if (10 * n.numAtoms > a.icn3d.maxatomcnt) {
                    return a.deferredOpm = $.Deferred(function() {
                        if (0 == Object.keys(n).length) return alert("This PDB structure is not found at RCSB..."), a.deferredOpm.promise();
                        a.loadOpmData(n, r, !1, "mmtf")
                    }), a.deferredOpm.promise()
                }
                n = null;
                var o = new XMLHttpRequest;
                o.open("GET", s, !0), o.responseType = "arraybuffer", o.onload = function(e) {
                    var t = o.response;
                    if (t) {
                        var i = new Uint8Array(t),
                            n = MMTF.decode(i);
                        return a.deferredOpm = $.Deferred(function() {
                            if (0 == Object.keys(n).length) return alert("This PDB structure is not found at RCSB..."), a.deferredOpm.promise();
                            a.loadOpmData(n, r, !0, "mmtf")
                        }), a.deferredOpm.promise()
                    }
                }, o.send(null)
            }
        }, c.send(null)
    }, iCn3DUI.prototype.parseMmtfData = function(e, t, c) {
        var d = this;
        e.numAtoms;
        d.icn3d.init();
        var l = new THREE.Vector3(9999, 9999, 9999),
            h = new THREE.Vector3(-9999, -9999, -9999),
            p = new THREE.Vector3,
            i = e.structureId;
        if (d.icn3d.molTitle = e.title, void 0 !== e.bioAssemblyList && void 0 !== e.bioAssemblyList[0] && 1 < e.bioAssemblyList[0].transformList.length) {
            d.icn3d.biomtMatrices = [];
            for (var n = 0, o = e.bioAssemblyList[0].transformList.length; n < o; ++n) {
                var r = (new THREE.Matrix4).fromArray(e.bioAssemblyList[0].transformList[n].matrix).transpose();
                d.icn3d.biomtMatrices.push(r)
            }
        }
        void 0 !== d.icn3d.biomtMatrices && 1 < d.icn3d.biomtMatrices.length ? ($("#" + d.pre + "assemblyWrapper").show(), d.icn3d.asuCnt = d.icn3d.biomtMatrices.length) : $("#" + d.pre + "assemblyWrapper").hide();
        var m, u, f, g, v, b, y, _, C, w, S, k, A, x, R, E, D, O, T, H = {},
            M = [],
            I = "coil",
            L = "",
            F = 0,
            P = 0,
            s = {
                onModel: function(e) {
                    m = 0 === e.modelIndex ? i : i + (e.modelIndex + 1).toString()
                },
                onChain: function(e) {
                    u = e.chainName;
                    var t = m + "_" + u;
                    void 0 === d.icn3d.structures[m] && (d.icn3d.structures[m] = []), d.icn3d.structures[m].push(t)
                },
                onGroup: function(e) {
                    f = e.groupName, g = e.groupId;
                    var t = m + "_" + u + "_" + g;
                    v = 0 === e.secStruct || 2 === e.secStruct || 4 === e.secStruct ? "helix" : 3 === e.secStruct ? "sheet" : -1 === e.secStruct ? "other" : "coil";
                    var i = !1;
                    if (u !== L) {
                        if (T = D = void 0, y = "coil" !== v && "other" !== v ? !(b = !0) : b = !1, "coil" !== I && "other" !== I) {
                            var n = m + "_" + L + "_" + F.toString();
                            for (var o in d.icn3d.residues[n]) d.icn3d.atoms[o].ssbegin = !1, d.icn3d.atoms[o].ssend = !0
                        }
                    } else D = E, T = O, v !== I ? "coil" === I || "other" === I ? y = !(b = !0) : "coil" === v || "other" === v ? y = b = !(i = !0) : ("sheet" === I && "helix" === v || "helix" === I && "sheet" === v) && (y = !(b = i = !0)) : y = b = !1;
                    if (i) {
                        n = m + "_" + u + "_" + (g - 1).toString();
                        for (var o in d.icn3d.residues[n]) d.icn3d.atoms[o].ssbegin = !1, d.icn3d.atoms[o].ssend = !0
                    }
                    I = v, L = u, F = g, w = C = _ = !1, "non-polymer" === e.chemCompType.toLowerCase() || "other" === e.chemCompType.toLowerCase() || -1 !== e.chemCompType.toLowerCase().indexOf("saccharide") ? _ = !0 : -1 !== e.chemCompType.toLowerCase().indexOf("peptide") ? C = !0 : -1 !== e.chemCompType.toLowerCase().indexOf("dna") || -1 !== e.chemCompType.toLowerCase().indexOf("rna") ? w = !0 : C = !0;
                    var r = m + "_" + u,
                        s = {};
                    s.resi = g, s.name = d.icn3d.residueName2Abbr(f), d.icn3d.residueId2Name[t] = s.name;
                    s.resi % 10 == 0 && s.resi.toString();
                    var a = "-";
                    "helix" === v ? a = "H" : "sheet" === v ? a = "E" : "coil" === v ? a = "c" : "other" === v && (a = "o"), void 0 === d.icn3d.chainsSeq[r] && (d.icn3d.chainsSeq[r] = []), d.bFullUi && d.icn3d.chainsSeq[r].push(s), d.icn3d.secondaries[t] = a
                },
                onAtom: function(e) {
                    if (S = e.element, k = e.atomName, A = new THREE.Vector3(e.xCoord, e.yCoord, e.zCoord), x = e.bFactor, R = e.altLoc, "\0" === e.altLoc && (R = ""), "" === R || "A" === R) {
                        ++P, "SG" === k && M.push(P), H[e.atomIndex] = P;
                        var t = {
                            het: _,
                            serial: P,
                            name: k,
                            alt: R,
                            resn: f,
                            structure: m,
                            chain: u,
                            resi: g,
                            coord: A,
                            b: x,
                            elem: S,
                            bonds: [],
                            bondOrder: [],
                            ss: v,
                            ssbegin: b,
                            ssend: y
                        };
                        if (t.het || "C" !== t.name || (E = P), t.het || "O" !== t.name || (O = P), !t.het && "N" === t.name && void 0 !== D && void 0 !== T) {
                            var i = d.icn3d.atoms[D].coord.distanceTo(d.icn3d.atoms[T].coord),
                                n = t.coord.x + (d.icn3d.atoms[D].coord.x - d.icn3d.atoms[T].coord.x) / i,
                                o = t.coord.y + (d.icn3d.atoms[D].coord.y - d.icn3d.atoms[T].coord.y) / i,
                                r = t.coord.z + (d.icn3d.atoms[D].coord.z - d.icn3d.atoms[T].coord.z) / i;
                            t.hcoord = new THREE.Vector3(n, o, r)
                        }
                        d.icn3d.atoms[P] = t, l.min(A), h.max(A), p.add(A);
                        var s = m + "_" + u,
                            a = s + "_" + g;
                        void 0 === d.icn3d.chains[s] && (d.icn3d.chains[s] = {}), d.icn3d.chains[s][P] = 1, void 0 === d.icn3d.residues[a] && (d.icn3d.residues[a] = {}), d.icn3d.residues[a][P] = 1, C ? (d.icn3d.proteins[P] = 1, "CA" === k && (d.icn3d.calphas[P] = 1), "N" !== k && "CA" !== k && "C" !== k && "O" !== k && (d.icn3d.sidec[P] = 1)) : w ? (d.icn3d.nucleotides[P] = 1, (!c || "O3'" != k && "O3*" != k) && (c || "P" != k) || (d.icn3d.nucleotidesO3[P] = 1)) : S.toLowerCase() === f.toLowerCase() ? d.icn3d.ions[P] = 1 : "HOH" === f || "WAT" === f || "SQL" === f || "H2O" === f || "W" === f || "DOD" === f || "D3O" === f ? d.icn3d.water[P] = 1 : d.icn3d.chemicals[P] = 1, d.icn3d.dAtoms[P] = 1, d.icn3d.hAtoms[P] = 1
                    }
                },
                onBond: function(e) {
                    var t = H[e.atomIndex1],
                        i = H[e.atomIndex2];
                    if (H.hasOwnProperty(e.atomIndex1) && H.hasOwnProperty(e.atomIndex2) && (d.icn3d.atoms[t].bonds.push(i), d.icn3d.atoms[i].bonds.push(t), _)) {
                        var n = e.bondOrder;
                        d.icn3d.atoms[t].bondOrder.push(n), d.icn3d.atoms[i].bondOrder.push(n), 2 === n ? (d.icn3d.doublebonds[t + "_" + i] = 1, d.icn3d.doublebonds[i + "_" + t] = 1) : 3 === n && (d.icn3d.triplebonds[t + "_" + i] = 1, d.icn3d.triplebonds[i + "_" + t] = 1)
                    }
                }
            };
        MMTF.traverse(e, s);
        var a = M.length;
        for (n = 0, o = a; n < o; ++n)
            for (var N = n + 1; N < o; ++N) {
                var z = M[n],
                    q = M[N],
                    j = d.icn3d.atoms[z],
                    U = d.icn3d.atoms[q];
                if (-1 !== $.inArray(q, j.bonds)) {
                    var B = j.structure + "_" + j.chain + "_" + j.resi,
                        G = U.structure + "_" + U.chain + "_" + U.resi;
                    void 0 === d.icn3d.ssbondpnts[j.structure] && (d.icn3d.ssbondpnts[j.structure] = []), d.icn3d.ssbondpnts[j.structure].push(B), d.icn3d.ssbondpnts[j.structure].push(G)
                }
            }
        d.icn3d.cnt = P, (d.icn3d.cnt > d.icn3d.maxatomcnt || void 0 !== d.icn3d.biomtMatrices && d.icn3d.biomtMatrices.length * d.icn3d.cnt > 10 * d.icn3d.maxatomcnt) && (d.opts.proteins = "c alpha trace", d.opts.nucleotides = "o3 trace"), d.icn3d.pmin = l, d.icn3d.pmax = h, d.icn3d.maxD = h.distanceTo(l), d.icn3d.center = p.multiplyScalar(1 / d.icn3d.cnt), d.icn3d.maxD < 5 && (d.icn3d.maxD = 5), d.icn3d.oriMaxD = d.icn3d.maxD, d.icn3d.oriCenter = d.icn3d.center.clone(), d.transformToOpmOri(t), void 0 === d.cfg.align && 1 == Object.keys(d.icn3d.structures).length && $("#" + d.pre + "alternateWrapper").hide(), d.icn3d.setAtomStyleByOptions(d.opts), d.icn3d.setColorByOptions(d.opts, d.icn3d.atoms), d.renderStructure(), d.showTitle(), void 0 !== d.cfg.rotate && d.rotStruc(d.cfg.rotate, !0), void 0 !== d.deferred && d.deferred.resolve(), void 0 !== d.deferred2 && d.deferred2.resolve()
    }, iCn3DUI.prototype.downloadPdb = function(t) {
        var e, i = this;
        e = "https://files.rcsb.org/view/" + t + ".pdb", i.icn3d.bCid = void 0, document.title = t.toUpperCase() + " (PDB) in iCn3D", $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                i.showLoading()
            },
            complete: function() {},
            success: function(e) {
                return i.deferredOpm = $.Deferred(function() {
                    i.loadOpmData(e, t, void 0, "pdb")
                }), i.deferredOpm.promise()
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }, iCn3DUI.prototype.downloadOpm = function(t) {
        var e, i = this;
        e = "https://opm-assets.storage.googleapis.com/pdb/" + t.toLowerCase() + ".pdb", document.title = t.toUpperCase() + " (OPM) in iCn3D", i.icn3d.bCid = void 0, i.icn3d.bStopRotate = !0, $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                i.showLoading()
            },
            complete: function() {},
            success: function(e) {
                i.icn3d.bOpm = !0, i.loadPdbData(e, t, i.icn3d.bOpm), $("#" + i.pre + "selectplane_z1").val(i.icn3d.halfBilayerSize), $("#" + i.pre + "selectplane_z2").val(-i.icn3d.halfBilayerSize), $("#" + i.pre + "extra_mem_z").val(i.icn3d.halfBilayerSize), $("#" + i.pre + "intra_mem_z").val(-i.icn3d.halfBilayerSize)
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : alert("This is probably not a transmembrane protein. It has no data in Orientations of Proteins in Membranes (OPM) database.")
            }
        })
    }, iCn3DUI.prototype.downloadUrl = function(e, t) {
        var i = this;
        i.icn3d.bCid = void 0, $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                i.showLoading()
            },
            complete: function() {},
            success: function(e) {
                i.InputfileData = e, "pdb" === (i.InputfileType = t) ? i.loadPdbData(e) : "mol2" === t ? i.loadMol2Data(e) : "sdf" === t ? i.loadSdfData(e) : "xyz" === t ? i.loadXyzData(e) : "mmcif" === t && i.loadMmcifData(e)
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
            }
        })
    }, iCn3DUI.prototype.addOneDumAtom = function(e, t, i, n, o, r) {
        var s = {
            het: !0,
            serial: ++r,
            name: t,
            alt: void 0,
            resn: "DUM",
            structure: e,
            chain: "MEM",
            resi: 1,
            coord: new THREE.Vector3(i, n, o),
            b: void 0,
            elem: t,
            bonds: [],
            ss: "",
            ssbegin: !1,
            ssend: !1,
            color: this.icn3d.atomColors[t]
        };
        return this.icn3d.atoms[r] = s, this.icn3d.chains[e + "_MEM"][r] = 1, this.icn3d.residues[e + "_MEM_1"][r] = 1, this.icn3d.chemicals[r] = 1, this.icn3d.dAtoms[r] = 1, this.icn3d.hAtoms[r] = 1, r
    }, iCn3DUI.prototype.addMemAtoms = function(e, t, i) {
        t = t.toUpperCase(), this.icn3d.structures[t].push(t + "_MEM"), this.icn3d.chains[t + "_MEM"] = {}, this.icn3d.residues[t + "_MEM_1"] = {}, this.icn3d.chainsSeq[t + "_MEM"] = [{
            name: "DUM",
            resi: 1
        }];
        for (var n = Object.keys(this.icn3d.atoms).length, o = 0; o < 1e3; ++o)
            if (!this.icn3d.atoms.hasOwnProperty(n + o)) {
                n = n + o - 1;
                break
            } for (o = 0; o < 81; ++o)
            for (var r = 0; r < 81; ++r) {
                0;
                var s = 2 * o - 80,
                    a = 2 * r - 80;
                if (Math.sqrt(s * s + a * a) < i) {
                    var c = -e - .4;
                    n = this.addOneDumAtom(t, "N", s, a, c, n), c = e + .4, n = this.addOneDumAtom(t, "O", s, a, c, n)
                }
            }
    }, iCn3DUI.prototype.transformToOpmOri = function(e) {
        var t = this;
        if (void 0 !== t.icn3d.rmsd_supr && void 0 !== t.icn3d.rmsd_supr.rot) {
            var i = t.icn3d.rmsd_supr.rot,
                n = t.icn3d.rmsd_supr.trans1,
                o = t.icn3d.rmsd_supr.trans2,
                r = (t.icn3d.rmsd_supr.rmsd, 0);
            for (var s in t.icn3d.atoms) {
                var a = t.icn3d.atoms[s];
                a.coord = t.icn3d.transformMemPro(a.coord, i, n, o);
                var c = a.coord.x * a.coord.x + a.coord.y * a.coord.y;
                Math.abs(a.coord.z) <= 25 && r < c && (r = c)
            }
            t.addMemAtoms(t.icn3d.halfBilayerSize, e, Math.sqrt(r)), t.icn3d.bStopRotate = !0, t.icn3d.bOpm = !0, $("#" + t.pre + "togglememli").show(), $("#" + t.pre + "adjustmemli").show(), $("#" + t.pre + "selectplaneli").show(), $("#" + t.pre + "anno_transmemli").show()
        } else t.icn3d.bOpm = !1
    }, iCn3DUI.prototype.transformToOpmOriForAlign = function(e, t, i) {
        var n = this;
        if (void 0 !== t) {
            var o = n.icn3d.getChainCalpha(n.icn3d.chains, n.icn3d.atoms, i, e),
                r = 1 == Object.keys(o.chainresiCalphaHash).length || 1 == Object.keys(t.chainresiCalphaHash).length,
                s = [],
                a = [];
            for (var c in o.chainresiCalphaHash)
                if (t.chainresiCalphaHash.hasOwnProperty(c)) {
                    var d = o.chainresiCalphaHash[c],
                        l = t.chainresiCalphaHash[c];
                    if (d.length != l.length && !r || (s = s.concat(d), a = a.concat(l)), 500 < s.length) break
                } var h = s.length < a.length ? s.length : a.length;
            if (4 <= h)
                if (n.icn3d.rmsd_supr = n.rmsd_supr(s, a, h), void 0 !== n.icn3d.rmsd_supr.rot && n.icn3d.rmsd_supr.rmsd < .1) {
                    var p = n.icn3d.rmsd_supr.rot,
                        m = n.icn3d.rmsd_supr.trans1,
                        u = n.icn3d.rmsd_supr.trans2,
                        f = n.icn3d.rmsd_supr.rmsd;
                    n.setLogCmd("RMSD of alignment to OPM: " + f.toPrecision(4), !1), $("#" + n.pre + "realignrmsd").val(f.toPrecision(4)), n.cfg.bSidebyside || n.openDialog(n.pre + "dl_rmsd", "RMSD of alignment to OPM");
                    var g = 0;
                    for (var v in n.icn3d.atoms) {
                        var b = n.icn3d.atoms[v];
                        b.coord = n.icn3d.transformMemPro(b.coord, p, m, u);
                        var y = b.coord.x * b.coord.x + b.coord.y * b.coord.y;
                        Math.abs(b.coord.z) <= 25 && g < y && (g = y)
                    }
                    n.icn3d.center = t.center, n.icn3d.oriCenter = n.icn3d.center.clone(), n.addMemAtoms(n.icn3d.halfBilayerSize, e, Math.sqrt(g)), n.icn3d.bStopRotate = !0, n.icn3d.bOpm = !0, $("#" + n.pre + "togglememli").show(), $("#" + n.pre + "adjustmemli").show(), $("#" + n.pre + "selectplaneli").show(), $("#" + n.pre + "anno_transmemli").show()
                } else n.icn3d.bOpm = !1;
            else n.icn3d.bOpm = !1
        }
    }, iCn3DUI.prototype.alignCoords = function(e, t, i, n) {
        var o = this,
            r = e.length < t.length ? e.length : t.length;
        if (r < 4 && alert("Please select at least four residues in each structure..."), 4 <= r && (o.icn3d.rmsd_supr = o.rmsd_supr(e, t, r), void 0 !== o.icn3d.rmsd_supr.rot)) {
            var s = o.icn3d.rmsd_supr.rot;
            null === s[0] && alert("Please select more residues in each structure...");
            var a = o.icn3d.rmsd_supr.trans1,
                c = o.icn3d.rmsd_supr.trans2,
                d = o.icn3d.rmsd_supr.rmsd;
            o.setLogCmd("realignment RMSD: " + d.toPrecision(4), !1), $("#" + o.pre + "realignrmsd").val(d.toPrecision(4)), o.cfg.bSidebyside || o.openDialog(o.pre + "dl_rmsd", "Realignment RMSD");
            for (var l = 0, h = o.icn3d.structures[i].length; l < h; ++l) {
                var p = o.icn3d.structures[i][l];
                for (var m in o.icn3d.chains[p]) {
                    var u = o.icn3d.atoms[m];
                    u.coord = o.icn3d.transformMemPro(u.coord, s, a, c)
                }
            }
            o.bRealign = !0, n || o.setSeqAlignForRealign();
            var f = o.getAlignSequencesAnnotations(Object.keys(o.icn3d.alnChains), void 0, void 0, !1);
            $("#" + o.pre + "dl_sequence2").html(f.sequencesHtml), $("#" + o.pre + "dl_sequence2").width(o.RESIDUE_WIDTH * f.maxSeqCnt + 200), o.openDialog(o.pre + "dl_alignment", "Select residues in aligned sequences"), o.opts.color = "grey", o.icn3d.setColorByOptions(o.opts, o.icn3d.dAtoms), o.opts.color = "identity", o.icn3d.setColorByOptions(o.opts, o.icn3d.hAtoms), o.icn3d.draw()
        }
    }, iCn3DUI.prototype.loadPdbData = function(t, e, i) {
        var n = this;
        if (n.icn3d.loadPDB(t, e, i), void 0 === n.cfg.opmid && n.transformToOpmOri(e), void 0 !== n.icn3d.biomtMatrices && 1 < n.icn3d.biomtMatrices.length ? ($("#" + n.pre + "assemblyWrapper").show(), n.icn3d.asuCnt = n.icn3d.biomtMatrices.length) : $("#" + n.pre + "assemblyWrapper").hide(), void 0 !== n.icn3d.emd ? ($("#" + n.pre + "mapWrapper1").hide(), $("#" + n.pre + "mapWrapper2").hide(), $("#" + n.pre + "mapWrapper3").hide()) : ($("#" + n.pre + "emmapWrapper1").hide(), $("#" + n.pre + "emmapWrapper2").hide(), $("#" + n.pre + "emmapWrapper3").hide()), !n.icn3d.bSecondaryStructure) return n.deferredSecondary = $.Deferred(function() {
            var e = n.icn3d.isCalphaPhosOnly(n.icn3d.hash2Atoms(n.icn3d.proteins)) ? "1" : "0";
            n.loadPdbDataBase(t, e, i)
        }), n.deferredSecondary.promise();
        n.loadPdbDataRender()
    }, iCn3DUI.prototype.loadPdbDataBase = function(e, t, i) {
        var y = this,
            n = y.baseUrl + "mmcifparser/mmcifparser.cgi",
            o = "";
        if (i) {
            var r = e.split("\n");
            for (var s in r) {
                var a = r[s];
                if ("DUM" === a.substr(17, 3)) break;
                o += a + "\n"
            }
        } else o = e;
        $.ajax({
            url: n,
            type: "POST",
            data: {
                dssp: "t",
                calphaonly: t,
                pdbfile: o
            },
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                var t = e;
                if (-1 === JSON.stringify(e).indexOf("Oops there was a problem"))
                    for (var i in y.icn3d.chainsSeq)
                        for (var n = i.indexOf("_"), o = i.substr(n + 1), r = y.icn3d.chainsSeq[i], s = "coil", a = 0, c = r.length; a < c; ++a) {
                            var d, l = r[a].resi,
                                h = o + "_" + l,
                                p = "c";
                            t.hasOwnProperty(h) ? p = t[h] : t.hasOwnProperty(" _" + l) ? p = t[" _" + l] : t.hasOwnProperty("_" + l) && (p = t["_" + l]), d = "H" === p ? "helix" : "E" === p ? "sheet" : "coil";
                            var m = i + "_" + l;
                            y.icn3d.secondaries[m] = p;
                            var u, f, g = 0;
                            if (d !== s ? "coil" === s ? f = !(u = !0) : "coil" === d ? f = u = !(g = 2) : ("sheet" === s && "helix" === d || "helix" === s && "sheet" === d) && (g = 1, f = !(u = !0)) : f = u = !1, 1 == g) {
                                var v = i + "_" + (l - 1).toString();
                                for (var b in y.icn3d.residues[v]) y.icn3d.atoms[b].ssbegin = !0, y.icn3d.atoms[b].ssend = !1
                            } else if (2 == g) {
                                v = i + "_" + (l - 1).toString();
                                for (var b in y.icn3d.residues[v]) y.icn3d.atoms[b].ssbegin = !1, y.icn3d.atoms[b].ssend = !0
                            }
                            for (var b in y.icn3d.residues[m]) y.icn3d.atoms[b].ss = d, y.icn3d.atoms[b].ssbegin = u, y.icn3d.atoms[b].ssend = f;
                            s = d
                        } else console.log("DSSP calculation had a problem with this structure...");
                y.loadPdbDataRender(), void 0 !== y.deferredSecondary && y.deferredSecondary.resolve()
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : (y.loadPdbDataRender(), void 0 !== y.deferredSecondary && y.deferredSecondary.resolve())
            }
        })
    }, iCn3DUI.prototype.loadOpmData = function(n, o, r, s, a) {
        var e, c = this;
        e = "https://www.ncbi.nlm.nih.gov/Structure/mmdb/mmdb_strview.cgi?v=2&program=icn3d&opm&uid=" + o.toLowerCase(), $.ajax({
            url: e,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                c.setOpmData(e), $("#" + c.pre + "selectplane_z1").val(c.icn3d.halfBilayerSize), $("#" + c.pre + "selectplane_z2").val(-c.icn3d.halfBilayerSize), $("#" + c.pre + "extra_mem_z").val(c.icn3d.halfBilayerSize), $("#" + c.pre + "intra_mem_z").val(-c.icn3d.halfBilayerSize), c.parseAtomData(n, o, r, s, a)
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : c.parseAtomData(n, o, r, s, a)
            }
        })
    }, iCn3DUI.prototype.parseAtomData = function(e, t, i, n, o) {
        var r = this;
        "mmtf" === n ? (r.parseMmtfData(e, t, i), void 0 !== r.deferredOpm && r.deferredOpm.resolve()) : "mmcif" === n ? (r.loadAtomDataIn(e, e.mmcif, "mmcifid", void 0, void 0), r.loadMmcifOpmDataPart2(e, t), void 0 !== r.deferredOpm && r.deferredOpm.resolve()) : "pdb" === n ? (r.loadPdbData(e, t), void 0 !== r.deferredOpm && r.deferredOpm.resolve()) : "align" === n && (r.icn3d.bOpm ? (r.downloadAlignmentPart2(t), void 0 !== r.deferredOpm && r.deferredOpm.resolve()) : void 0 !== o ? r.loadOpmData(e, o, i, n) : (r.downloadAlignmentPart2(t), void 0 !== r.deferredOpm && r.deferredOpm.resolve()))
    }, iCn3DUI.prototype.loadOpmDataForAlign = function(o, r, s) {
        var e, a = this;
        e = "https://opm-assets.storage.googleapis.com/pdb/" + s[0].toLowerCase() + ".pdb", $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            success: function(e) {
                a.selectedPdbid = s[0], a.icn3d.bOpm = !0;
                var t = a.icn3d.loadPDB(e, s[0], a.icn3d.bOpm, !0);
                $("#" + a.pre + "selectplane_z1").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "selectplane_z2").val(-a.icn3d.halfBilayerSize), $("#" + a.pre + "extra_mem_z").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "intra_mem_z").val(-a.icn3d.halfBilayerSize), a.icn3d.init(), a.downloadAlignmentPart2(o, r, t), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
            },
            error: function(e, t, i) {
                var n = "https://opm-assets.storage.googleapis.com/pdb/" + s[1].toLowerCase() + ".pdb";
                $.ajax({
                    url: n,
                    dataType: "text",
                    cache: !0,
                    success: function(e) {
                        a.selectedPdbid = s[1], a.icn3d.bOpm = !0;
                        var t = a.icn3d.loadPDB(e, s[1], a.icn3d.bOpm, !0);
                        $("#" + a.pre + "selectplane_z1").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "selectplane_z2").val(-a.icn3d.halfBilayerSize), $("#" + a.pre + "extra_mem_z").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "intra_mem_z").val(-a.icn3d.halfBilayerSize), a.icn3d.init(), a.downloadAlignmentPart2(o, r, t), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                    },
                    error: function(e, t, i) {
                        a.icn3d.init(), a.downloadAlignmentPart2(o, r), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                    }
                })
            }
        })
    }, iCn3DUI.prototype.loadOpmDataForChainalign = function(o, r, s) {
        var e, a = this;
        e = "https://opm-assets.storage.googleapis.com/pdb/" + s[0].toLowerCase() + ".pdb", $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            success: function(e) {
                a.selectedPdbid = s[0], a.icn3d.bOpm = !0;
                var t = a.icn3d.loadPDB(e, s[0], a.icn3d.bOpm, !0);
                $("#" + a.pre + "selectplane_z1").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "selectplane_z2").val(-a.icn3d.halfBilayerSize), $("#" + a.pre + "extra_mem_z").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "intra_mem_z").val(-a.icn3d.halfBilayerSize), a.icn3d.init(), a.downloadChainalignmentPart2(o, r, t), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
            },
            error: function(e, t, i) {
                var n = "https://opm-assets.storage.googleapis.com/pdb/" + s[1].toLowerCase() + ".pdb";
                $.ajax({
                    url: n,
                    dataType: "text",
                    cache: !0,
                    success: function(e) {
                        a.selectedPdbid = s[1], a.icn3d.bOpm = !0;
                        var t = a.icn3d.loadPDB(e, s[1], a.icn3d.bOpm, !0);
                        $("#" + a.pre + "selectplane_z1").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "selectplane_z2").val(-a.icn3d.halfBilayerSize), $("#" + a.pre + "extra_mem_z").val(a.icn3d.halfBilayerSize), $("#" + a.pre + "intra_mem_z").val(-a.icn3d.halfBilayerSize), a.icn3d.init(), a.downloadChainalignmentPart2(o, r, t), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                    },
                    error: function(e, t, i) {
                        a.icn3d.init(), a.downloadChainalignmentPart2(o, r), void 0 !== a.deferredOpm && a.deferredOpm.resolve()
                    }
                })
            }
        })
    }, iCn3DUI.prototype.loadMmcifOpmDataPart2 = function(e, t) {
        var i = this;
        1 == Object.keys(i.icn3d.structures).length && $("#" + i.pre + "alternateWrapper").hide();
        for (var n = void 0 !== e.assembly ? e.assembly : [], o = 0, r = n.length; o < r; ++o) {
            null == i.icn3d.biomtMatrices[o] && (i.icn3d.biomtMatrices[o] = (new THREE.Matrix4).identity());
            for (var s = 0, a = n[o].length; s < a; ++s) i.icn3d.biomtMatrices[o].elements[s] = n[o][s]
        }
        void 0 !== i.icn3d.biomtMatrices && 1 < i.icn3d.biomtMatrices.length ? ($("#" + i.pre + "assemblyWrapper").show(), i.icn3d.asuCnt = i.icn3d.biomtMatrices.length) : $("#" + i.pre + "assemblyWrapper").hide(), i.icn3d.setAtomStyleByOptions(i.opts), i.icn3d.setColorByOptions(i.opts, i.icn3d.atoms), i.renderStructure(), void 0 !== i.cfg.rotate && i.rotStruc(i.cfg.rotate, !0), void 0 !== i.deferred && i.deferred.resolve(), void 0 !== i.deferred2 && i.deferred2.resolve()
    }, iCn3DUI.prototype.loadMmdbOpmDataPart2 = function(e, t, i) {
        var n = this,
            o = e.pdbId;
        for (var r in void 0 === i && (document.title = o.toUpperCase() + " (MMDB) in iCn3D"), e.domains)
            for (var s = e.domains[r].chain, a = e.domains[r].domains, c = 0, d = a.length; c < d; ++c) {
                var l = o + "_" + s + "_3d_domain_" + (c + 1).toString();
                n.icn3d.tddomains[l] = {};
                for (var h = a[c].intervals, p = {}, m = {}, u = 0, f = h.length; u < f; ++u) {
                    var g = Math.round(h[u][0]) - 1,
                        v = Math.round(h[u][1]) - 1;
                    if (!p.hasOwnProperty(g) && !m.hasOwnProperty(v)) {
                        p[g] = 1, m[v] = 1;
                        for (var b = g; b <= v; ++b) {
                            var y = o + "_" + s + "_" + (b + 1).toString();
                            n.icn3d.tddomains[l][y] = 1
                        }
                    }
                }
            }
        n.bAssemblyUseAsu = void 0 !== e.asuAtomCount, void 0 !== i && (n.bAssemblyUseAsu = !1), $.when(n.downloadMmcifSymmetry(t)).then(function() {
            n.downloadMmdbPart2(i)
        })
    }, iCn3DUI.prototype.loadMmdbOpmData = function(e, t, i) {
        void 0 !== e.opm && void 0 !== e.opm.rot && (this.icn3d.bOpm = !0, this.setOpmData(e)), this.parseMmdbDataPart1(e, i), this.loadAtomDataIn(e, t, "mmdbid", void 0, i), this.loadMmdbOpmDataPart2(e, t, i)
    }, iCn3DUI.prototype.setOpmData = function(e) {
        void 0 !== e.opm && void 0 !== e.opm.rot ? (this.icn3d.bOpm = !0, this.icn3d.halfBilayerSize = e.opm.thickness, this.icn3d.rmsd_supr = {}, this.icn3d.rmsd_supr.rot = e.opm.rot, this.icn3d.rmsd_supr.trans1 = new THREE.Vector3(e.opm.trans1[0], e.opm.trans1[1], e.opm.trans1[2]), this.icn3d.rmsd_supr.trans2 = new THREE.Vector3(e.opm.trans2[0], e.opm.trans2[1], e.opm.trans2[2]), this.icn3d.rmsd_supr.rmsd = e.opm.rmsd) : this.icn3d.bOpm = !1
    }, iCn3DUI.prototype.loadPdbDataRender = function() {
        var e = this;
        e.pmid = e.icn3d.pmid, void 0 === e.cfg.align && 1 == Object.keys(e.icn3d.structures).length && $("#" + e.pre + "alternateWrapper").hide(), e.icn3d.setAtomStyleByOptions(e.opts), e.icn3d.setColorByOptions(e.opts, e.icn3d.atoms), e.renderStructure(), e.showTitle(), void 0 !== e.cfg.rotate && e.rotStruc(e.cfg.rotate, !0), void 0 !== e.deferred && e.deferred.resolve(), void 0 !== e.deferred2 && e.deferred2.resolve()
    }, iCn3DUI.prototype.downloadCid = function(i) {
        var n = this,
            e = "https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/" + i + "/record/SDF/?record_type=3d&response_type=display";
        document.title = "PubChem CID " + i + " in iCn3D", n.opts.pk = "atom", n.opts.chemicals = "ball and stick", n.icn3d.opts.pk = "atom", n.icn3d.opts.chemicals = "ball and stick", n.icn3d.bCid = !0, $.ajax({
            url: e,
            dataType: "text",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            beforeSend: function() {
                n.showLoading()
            },
            complete: function() {},
            success: function(e) {
                var t = n.loadSdfAtomData(e, i);
                void 0 === n.cfg.align && 1 == Object.keys(n.icn3d.structures).length && $("#" + n.pre + "alternateWrapper").hide(), t ? (n.icn3d.setAtomStyleByOptions(n.opts), n.icn3d.setColorByOptions(n.opts, n.icn3d.atoms), n.renderStructure(), void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0), void 0 !== n.deferred && n.deferred.resolve(), void 0 !== n.deferred2 && n.deferred2.resolve()) : alert("The SDF of CID " + i + " has the wrong format...")
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
            }
        }).fail(function() {
            alert("This CID may not have 3D structure...")
        })
    }, iCn3DUI.prototype.loadSdfData = function(e) {
        var t = this,
            i = t.loadSdfAtomData(e);
        void 0 === t.cfg.align && 1 == Object.keys(t.icn3d.structures).length && $("#" + t.pre + "alternateWrapper").hide(), i ? (t.icn3d.setAtomStyleByOptions(t.opts), t.icn3d.setColorByOptions(t.opts, t.icn3d.atoms), t.renderStructure(), void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0), void 0 !== t.deferred && t.deferred.resolve(), void 0 !== t.deferred2 && t.deferred2.resolve()) : alert("The SDF file has the wrong format...")
    }, iCn3DUI.prototype.loadSdfAtomData = function(e, t) {
        var i = this,
            n = e.split(/\r?\n|\r/);
        if (n.length < 4) return !1;
        i.icn3d.init();
        var o = t || 1,
            r = o,
            s = o + "_A",
            a = s + "_1",
            c = parseInt(n[3].substr(0, 3));
        if (isNaN(c) || c <= 0) return !1;
        var d = parseInt(n[3].substr(3, 3)),
            l = 4;
        if (n.length < l + c + d) return !1;
        var h, p, m = c,
            u = {},
            f = {},
            g = {},
            v = 1;
        for (h = 0; h < m; h++) {
            p = n[l], l++;
            var b = p.substr(31, 3).replace(/ /g, ""),
                y = parseFloat(p.substr(0, 10)),
                _ = parseFloat(p.substr(10, 10)),
                C = parseFloat(p.substr(20, 10)),
                w = {
                    het: !0,
                    serial: v,
                    name: b,
                    resn: "LIG",
                    structure: o,
                    chain: "A",
                    resi: 1,
                    coord: new THREE.Vector3(y, _, C),
                    b: 0,
                    elem: b,
                    bonds: [],
                    ss: "coil",
                    ssbegin: !1,
                    ssend: !1,
                    bondOrder: []
                };
            i.icn3d.atoms[v] = w, g[v] = 1, u[h] = v, ++v, "H" == b && (f[h] = 1)
        }
        i.icn3d.dAtoms = g, i.icn3d.hAtoms = g, i.icn3d.structures[r] = [s], i.icn3d.chains[s] = g, i.icn3d.residues[a] = g, i.icn3d.residueId2Name[a] = "LIG", void 0 === i.icn3d.chainsSeq[s] && (i.icn3d.chainsSeq[s] = []);
        var S = {
            resi: 1,
            name: "LIG"
        };
        for (i.icn3d.chainsSeq[s].push(S), h = 0; h < d; h++) {
            p = n[l], l++;
            var k = parseInt(p.substr(0, 3)) - 1 + 0,
                A = parseInt(p.substr(3, 3)) - 1 + 0,
                x = p.substr(6, 3).trim(),
                R = u[k],
                E = u[A];
            i.icn3d.atoms[R].bonds.push(E), i.icn3d.atoms[R].bondOrder.push(x), i.icn3d.atoms[E].bonds.push(R), i.icn3d.atoms[E].bondOrder.push(x), f.hasOwnProperty(k) || f.hasOwnProperty(A) || ("2" == x ? (i.icn3d.doublebonds[R + "_" + E] = 1, i.icn3d.doublebonds[E + "_" + R] = 1) : "3" == x && (i.icn3d.triplebonds[R + "_" + E] = 1, i.icn3d.triplebonds[E + "_" + R] = 1))
        }
        for (h in i.icn3d.atoms) "H" !== i.icn3d.atoms[h].name && (i.icn3d.atoms[h].bonds2 = i.icn3d.atoms[h].bonds.concat(), i.icn3d.atoms[h].bondOrder2 = i.icn3d.atoms[h].bondOrder.concat());
        return i.setMaxD(), i.showTitle(), !0
    }, iCn3DUI.prototype.setMaxD = function() {
        var e = this,
            t = new THREE.Vector3(9999, 9999, 9999),
            i = new THREE.Vector3(-9999, -9999, -9999),
            n = new THREE.Vector3,
            o = 0;
        for (var r in e.icn3d.atoms) {
            var s = e.icn3d.atoms[r],
                a = s.coord;
            n.add(a), t.min(a), i.max(a), ++o, s.het && (-1 !== $.inArray(s.elem, e.icn3d.ionsArray) ? e.icn3d.ions[s.serial] = 1 : e.icn3d.chemicals[s.serial] = 1)
        }
        e.icn3d.pmin = t, e.icn3d.pmax = i, e.icn3d.cnt = o, e.icn3d.maxD = e.icn3d.pmax.distanceTo(e.icn3d.pmin), e.icn3d.center = n.multiplyScalar(1 / e.icn3d.cnt), e.icn3d.maxD < 5 && (e.icn3d.maxD = 5), e.icn3d.oriMaxD = e.icn3d.maxD, e.icn3d.oriCenter = e.icn3d.center.clone()
    }, iCn3DUI.prototype.getFaceCnt = function(e) {
        for (var t = 0, i = 0, n = e.children.length; i < n; ++i) {
            var o = e.children[i];
            if ("Sprite" !== o.type) {
                var r = o.geometry.faces;
                if (void 0 !== r)
                    for (var s = 0, a = r.length; s < a; ++s) ++t
            }
        }
        return t
    }, iCn3DUI.prototype.saveStlFile = function(e) {
        var t = this;
        if (7e4 < Object.keys(t.icn3d.dAtoms).length) return alert("Please display a subset of the structure to export 3D files. Then merge the files for 3D printing..."), [""];
        t.prepareFor3Dprint();
        var i = 0;
        i += t.getFaceCnt(t.icn3d.mdl), i += t.getFaceCnt(t.icn3d.mdl_ghost);
        for (var n = [], o = new Uint8Array(84), r = "STL file for the structure(s) ", s = Object.keys(t.icn3d.structures), a = 0, c = s.length; a < c; ++a) r += s[a], a < c - 1 && (r += ", ");
        80 < r.length && (r = r.substr(0, 80));
        for (a = 0; a < 80; ++a) a < r.length ? o[a] = t.passInt8([r.charCodeAt(a)])[0] : o[a] = t.passInt8([" ".charCodeAt(0)])[0];
        if (o = void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile ? t.updateArray(o, t.passInt32([i * t.icn3d.biomtMatrices.length]), 80) : t.updateArray(o, t.passInt32([i]), 80), n.push(new Blob([o], {
                type: "application/octet-stream"
            })), n = t.processStlMeshGroup(t.icn3d.mdl, n, e), n = t.processStlMeshGroup(t.icn3d.mdl_ghost, n, e), void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile) {
            var d = new THREE.Matrix4;
            d.identity();
            for (a = 0; a < t.icn3d.biomtMatrices.length; a++) {
                var l = t.icn3d.biomtMatrices[a];
                void 0 !== l && (l.equals(d) || (n = t.processStlMeshGroup(t.icn3d.mdl, n, l), n = t.processStlMeshGroup(t.icn3d.mdl_ghost, n, l)))
            }
        }
        return n
    }, iCn3DUI.prototype.updateArray = function(e, t, i) {
        for (var n = 0, o = t.length; n < o; ++n) e[i + n] = t[n];
        return e
    }, iCn3DUI.prototype.processStlMeshGroup = function(e, t, i) {
        for (var n = this, o = 0, r = e.children.length; o < r; ++o) {
            var s = e.children[o];
            if ("Sprite" !== s.type) {
                var a = s.geometry,
                    c = a.vertices,
                    d = a.faces;
                if (void 0 !== d) {
                    for (var l = s.position, h = s.scale, p = s.matrix, m = new Uint8Array(50 * d.length), u = 0, f = 0, g = d.length; f < g; ++f) {
                        var v, b, y, _ = d[f].a,
                            C = d[f].b,
                            w = d[f].c,
                            S = d[f].normal;
                        y = "SphereGeometry" == a.type || "BoxGeometry" == a.type ? (v = c[_].clone().multiply(h).add(l), b = c[C].clone().multiply(h).add(l), c[w].clone().multiply(h).add(l)) : "CylinderGeometry" == a.type ? (v = c[_].clone().applyMatrix4(p), b = c[C].clone().applyMatrix4(p), c[w].clone().applyMatrix4(p)) : (v = c[_].clone(), b = c[C].clone(), c[w].clone()), m = void 0 !== S ? (void 0 !== i && S.applyMatrix4(i), n.updateArray(m, n.passFloat32([S.x, S.y, S.z]), u)) : n.updateArray(m, n.passFloat32([0, 0, 0]), u), u += 12, void 0 !== i && (v.applyMatrix4(i), b.applyMatrix4(i), y.applyMatrix4(i)), m = n.updateArray(m, n.passFloat32([v.x, v.y, v.z]), u), u += 12, m = n.updateArray(m, n.passFloat32([b.x, b.y, b.z]), u), u += 12, m = n.updateArray(m, n.passFloat32([y.x, y.y, y.z]), u), u += 12, v = b = y = void 0, m = n.updateArray(m, n.passInt16([0]), u), u += 2
                    }
                    t.push(new Blob([m], {
                        type: "application/octet-stream"
                    })), m = null
                }
            }
        }
        return t
    }, iCn3DUI.prototype.saveVrmlFile = function(e) {
        var t = this;
        if (5e4 < Object.keys(t.icn3d.dAtoms).length) return alert("Please display a subset of the structure to export 3D files. Then merge the files for 3D printing..."), [""];
        t.prepareFor3Dprint();
        var i = [];
        i.push("#VRML V2.0 utf8\n");
        var n = 0,
            o = t.processVrmlMeshGroup(t.icn3d.mdl, i, n, e);
        if (i = o.vrmlStrArray, n = o.vertexCnt, i = (o = t.processVrmlMeshGroup(t.icn3d.mdl_ghost, i, n, e)).vrmlStrArray, n = o.vertexCnt, void 0 !== t.icn3d.biomtMatrices && 1 < t.icn3d.biomtMatrices.length && t.icn3d.bAssembly && Object.keys(t.icn3d.dAtoms).length * t.icn3d.biomtMatrices.length <= t.icn3d.maxAtoms3DMultiFile) {
            var r = new THREE.Matrix4;
            r.identity();
            for (var s = 0; s < t.icn3d.biomtMatrices.length; s++) {
                var a = t.icn3d.biomtMatrices[s];
                void 0 !== a && (a.equals(r) || (i = (o = t.processVrmlMeshGroup(t.icn3d.mdl, i, n, a)).vrmlStrArray, n = o.vertexCnt, i = (o = t.processVrmlMeshGroup(t.icn3d.mdl_ghost, i, n, a)).vrmlStrArray, n = o.vertexCnt))
            }
        }
        return i
    }, iCn3DUI.prototype.processVrmlMeshGroup = function(e, t, i, n) {
        for (var o = 0, r = e.children.length; o < r; ++o) {
            var s = e.children[o];
            if ("Sprite" !== s.type) {
                var a = s.geometry,
                    c = (s.material.type, "Surface" == a.type),
                    d = a.vertices;
                if (void 0 !== d) {
                    i += d.length;
                    var l = a.faces,
                        h = s.position,
                        p = s.scale,
                        m = s.matrix,
                        u = new THREE.Color(1, 1, 1);
                    "SphereGeometry" != a.type && "BoxGeometry" != a.type && "CylinderGeometry" != a.type || void 0 !== s.material && (u = s.material.color), t.push("Shape {\n"), t.push("geometry IndexedFaceSet {\n"), t.push("coord Coordinate { point [ ");
                    for (var f = [], g = 0, v = d.length; g < v; ++g) {
                        var b;
                        b = "SphereGeometry" == a.type || "BoxGeometry" == a.type ? d[g].clone().multiply(p).add(h) : "CylinderGeometry" == a.type ? d[g].clone().applyMatrix4(m) : d[g].clone(), void 0 !== n && b.applyMatrix4(n), t.push(b.x.toPrecision(5) + " " + b.y.toPrecision(5) + " " + b.z.toPrecision(5)), b = void 0, g < v - 1 && t.push(", "), f.push(new THREE.Color(1, 1, 1))
                    }
                    t.push(" ] }\n");
                    var y = "",
                        _ = "";
                    if (c) {
                        for (g = 0, v = l.length; g < v; ++g) {
                            y += (C = l[g].a) + " " + (w = l[g].b) + " " + (S = l[g].c), g < v - 1 && (y += ", -1, "), f[C] = l[g].vertexColors[0], f[w] = l[g].vertexColors[1], f[S] = l[g].vertexColors[2]
                        }
                        for (g = 0, v = f.length; g < v; ++g) {
                            _ += (k = f[g]).r.toPrecision(3) + " " + k.g.toPrecision(3) + " " + k.b.toPrecision(3), g < v - 1 && (_ += ", ")
                        }
                        t.push("coordIndex [ " + y + " ]\n"), t.push("color Color { color [ " + _ + " ] } colorPerVertex TRUE\n")
                    } else {
                        for (g = 0, v = l.length; g < v; ++g) {
                            var C = l[g].a,
                                w = l[g].b,
                                S = l[g].c;
                            k = "SphereGeometry" == a.type || "BoxGeometry" == a.type || "CylinderGeometry" == a.type ? u : l[g].color, y += C + " " + w + " " + S, g < v - 1 && (y += ", -1, "), f[C] = k, f[w] = k, f[S] = k
                        }
                        for (g = 0, v = f.length; g < v; ++g) {
                            var k;
                            _ += (k = f[g]).r.toPrecision(3) + " " + k.g.toPrecision(3) + " " + k.b.toPrecision(3), g < v - 1 && (_ += ", ")
                        }
                        t.push("coordIndex [ " + y + " ]\n"), t.push("color Color { color [ " + _ + " ] } colorPerVertex TRUE\n")
                    }
                    t.push("  }\n"), t.push("}\n")
                }
            }
        }
        return {
            vrmlStrArray: t,
            vertexCnt: i
        }
    }, iCn3DUI.prototype.setThichknessFor3Dprint = function() {
        this.icn3d.lineRadius = 1, this.icn3d.coilWidth = 1.2, this.icn3d.cylinderRadius = .8, this.icn3d.traceRadius = 1, this.icn3d.dotSphereScale = .6, this.icn3d.sphereRadius = 1.5, this.icn3d.ribbonthickness = 1, this.icn3d.helixSheetWidth = 2, this.icn3d.nucleicAcidWidth = 1.4
    }, iCn3DUI.prototype.prepareFor3Dprint = function() {
        var e = this;
        if (e.icn3d.bShowHighlight = !1, e.icn3d.removeHlObjects(), e.bDashedLines = !1, e.bSetThickness || void 0 !== e.cfg.cid || e.setThichknessFor3Dprint(), void 0 !== e.icn3d.lines.hbond)
            for (var t = 0, i = e.icn3d.lines.hbond.length; t < i; ++t) {
                e.icn3d.lines.hbond[t].dashed = !1, e.bDashedLines = !0
            }
        if (void 0 !== e.icn3d.lines.distance)
            for (t = 0, i = e.icn3d.lines.distance.length; t < i; ++t) {
                e.icn3d.lines.distance[t].dashed = !1, e.bDashedLines = !0
            }
        e.icn3d.draw()
    }, iCn3DUI.prototype.resetAfter3Dprint = function() {
        var e = this;
        if (void 0 !== e.icn3d.lines.hbond)
            for (var t = 0, i = e.icn3d.lines.hbond.length; t < i; ++t) {
                e.icn3d.lines.hbond[t].dashed = !0
            }
        if (void 0 !== e.icn3d.lines.distance)
            for (t = 0, i = e.icn3d.lines.distance.length; t < i; ++t) {
                e.icn3d.lines.distance[t].dashed = !0
            }
        e.icn3d.lineRadius = .1, e.icn3d.coilWidth = .3, e.icn3d.cylinderRadius = .4, e.icn3d.traceRadius = .4, e.icn3d.dotSphereScale = .3, e.icn3d.sphereRadius = 1.5, e.icn3d.cylinderHelixRadius = 1.6, e.icn3d.ribbonthickness = .2, e.icn3d.helixSheetWidth = 1.3, e.icn3d.nucleicAcidWidth = .8
    }, iCn3DUI.prototype.removeOneStabilizer = function(e) {
        for (var t, i = 0, n = this.icn3d.pairArray.length; i < n; i += 2) {
            var o = this.getResidueRepAtom(this.icn3d.pairArray[i]),
                r = this.getResidueRepAtom(this.icn3d.pairArray[i + 1]);
            if (null != e)
                for (var s = 0, a = e.length; s < a; s += 2) {
                    var c = this.getResidueRepAtom(e[s]),
                        d = this.getResidueRepAtom(e[s + 1]);
                    if (o.serial == c.serial && r.serial == d.serial || o.serial == d.serial && r.serial == c.serial) {
                        t = i;
                        break
                    }
                }
            if (void 0 !== t) break
        }
        void 0 !== t && this.icn3d.pairArray.splice(t, 2)
    }, iCn3DUI.prototype.outputSelection = function() {
        var e = {};
        for (var t in this.icn3d.hAtoms) {
            e[this.icn3d.atoms[t].structure + "_" + this.icn3d.atoms[t].chain + "_" + this.icn3d.atoms[t].resi] = 1
        }
        for (var i = Object.keys(e).sort(function(e, t) {
                if ("" !== e && !isNaN(e)) return parseInt(e) - parseInt(t);
                var i = e.lastIndexOf("_"),
                    n = t.lastIndexOf("_");
                if (e.substr(0, i) < t.substr(0, i)) return -1;
                if (e.substr(0, i) > t.substr(0, i)) return 1;
                if (e.substr(0, i) == t.substr(0, i)) {
                    if (parseInt(e.substr(i + 1)) < parseInt(t.substr(n + 1))) return -1;
                    if (parseInt(e.substr(i + 1)) > parseInt(t.substr(n + 1))) return 1;
                    if (parseInt(e.substr(i + 1)) == parseInt(t.substr(n + 1))) return 0
                }
            }), n = "<table><tr><th>Structure</th><th>Chain</th><th>Residue Number</th></tr>", o = (t = 0, i.length); t < o; ++t) {
            var r = i[t].indexOf("_"),
                s = i[t].lastIndexOf("_");
            n += "<tr><td>" + i[t].substr(0, r) + "</td><td>" + i[t].substr(r + 1, s - r - 1) + "</td><td>" + i[t].substr(s + 1) + "</td></tr>"
        }
        var a = this.inputid ? this.inputid : "custom";
        this.saveFile(a + "_residues.txt", "html", n)
    }, iCn3DUI.prototype.addStabilizer = function() {
        var e = this;
        if (0 < Object.keys(e.icn3d.dAtoms).length) {
            var t = {};
            for (var i in e.icn3d.dAtoms) {
                var n = e.icn3d.atoms[i];
                !e.icn3d.nucleotides.hasOwnProperty(n.serial) || "N1" !== n.name && "N2" !== n.name && "N3" !== n.name && "N4" !== n.name && "N6" !== n.name && "O2" !== n.name && "O6" !== n.name || (t[n.structure + "_" + n.chain + "_" + n.resi + "_" + n.name] = n)
            }
            var o = (x = Object.keys(t)).length;
            void 0 === e.icn3d.pairArray && (e.icn3d.pairArray = []);
            for (i = 0; i < o; ++i)
                for (var r = i + 1; r < o; ++r) {
                    var s = x[i],
                        a = x[r],
                        c = Math.abs(t[s].coord.x - t[a].coord.x);
                    if (!(3.5 < c)) {
                        var d = Math.abs(t[s].coord.y - t[a].coord.y);
                        if (!(3.5 < d)) {
                            var l = Math.abs(t[s].coord.z - t[a].coord.z);
                            if (!(3.5 < l)) {
                                var h = c * c + d * d + l * l;
                                12.25 < h || h < 3.2 * 3.2 || (e.icn3d.pairArray.push(t[s].serial), e.icn3d.pairArray.push(t[a].serial))
                            }
                        }
                    }
                }
            var p = {};
            for (var i in e.icn3d.dAtoms) {
                p[u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi] = 1
            }
            var m = {};
            for (var i in e.icn3d.chemicals) {
                var u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi;
                p.hasOwnProperty(u) && (m[u] = 1)
            }
            for (var i in e.icn3d.ions) {
                u = (n = e.icn3d.atoms[i]).structure + "_" + n.chain + "_" + n.resi;
                p.hasOwnProperty(u) && (m[u] = 1)
            }
            for (var f = Object.keys(e.icn3d.chains), g = (i = 0, f.length); i < g; ++i) {
                for (var v = f[i], b = 0, y = 0, _ = (r = 0, e.icn3d.chainsSeq[v].length); r < _; ++r) u = v + "_" + e.icn3d.chainsSeq[v][r].resi, "c" != e.icn3d.secondaries[u] && "E" != e.icn3d.secondaries[u] && "H" != e.icn3d.secondaries[u] || (b % 3 != 0 && e.icn3d.chainsSeq[v][r].resi == y + 1 || p.hasOwnProperty(u) && (m[u] = 1), ++b, y = e.icn3d.chainsSeq[v][r].resi);
                "c" != e.icn3d.secondaries[u] && "E" != e.icn3d.secondaries[u] && "H" != e.icn3d.secondaries[u] || p.hasOwnProperty(u) && (m[u] = 1)
            }
            var C = Object.keys(m);
            void 0 === e.icn3d.pairArray && (e.icn3d.pairArray = []);
            var w = e.icn3d.exclHash(e.icn3d.dAtoms, e.icn3d.water);
            for (i = 0, g = C.length; i < g; ++i) {
                u = C[i];
                var S = e.icn3d.secondaries[u],
                    k = e.icn3d.getNeighboringAtoms(w, e.icn3d.hash2Atoms(e.icn3d.residues[u]), 6),
                    A = Object.keys(k).sort(),
                    x = Object.keys(e.icn3d.residues[u]).sort(),
                    R = !1;
                if (e.icn3d.proteins.hasOwnProperty(x[0])) {
                    x = [x[0]], R = !0;
                    var E = parseInt(u.substr(u.lastIndexOf("_") + 1)),
                        D = {};
                    for (var O in k)
                        if (!e.icn3d.chemicals.hasOwnProperty(O) && !e.icn3d.ions.hasOwnProperty(O)) {
                            n = e.icn3d.atoms[O];
                            ("c" == S && (n.resi > E + 1 || n.resi < E - 1) || "E" == S && (n.resi > E + 2 || n.resi < E - 2) || "H" == S && (n.resi > E + 4 || n.resi < E - 4)) && (D[O] = 1)
                        } A = Object.keys(D).sort()
                }
                if (0 < A.length && 0 < x.length)
                    if (R) {
                        var T = parseInt((A.length + .5) / 2);
                        e.icn3d.pairArray.push(x[0]), e.icn3d.pairArray.push(A[T])
                    } else {
                        var H = parseInt(A.length / 11);
                        for (r = 0, _ = x.length; r < _; ++r)
                            if (r % 10 == 0) {
                                var M = parseInt(r / 10) * H;
                                T = M < A.length ? M : A.length - 1;
                                e.icn3d.pairArray.push(x[r]), e.icn3d.pairArray.push(A[T]), x.length < 11 && (e.icn3d.pairArray.push(x[r]), e.icn3d.pairArray.push(A[A.length - 1]))
                            }
                    }
            }
        }
    }, iCn3DUI.prototype.hideStabilizer = function() {
        for (var e in this.icn3d.pairArray = [], this.icn3d.lines.stabilizer = [], this.icn3d.stabilizerpnts = [], this.icn3d.water) this.icn3d.atoms[e].style = this.icn3d.opts.water
    }, iCn3DUI.prototype.getResidueRepPos = function(e) {
        var t, i = this,
            n = i.icn3d.atoms[e],
            o = n.structure + "_" + n.chain + "_" + n.resi;
        if (i.icn3d.proteins.hasOwnProperty(e) || i.icn3d.nucleotides.hasOwnProperty(e))
            for (var r in i.icn3d.residues[o]) {
                var s = i.icn3d.atoms[r];
                if ("N3" === s.name) {
                    t = i.icn3d.atoms[r].coord;
                    break
                }
                if ("CA" === s.name && "coil" == s.ss) {
                    t = i.icn3d.atoms[r].coord;
                    break
                }
                if ("CA" === s.name && ("helix" == s.ss || "sheet" == s.ss)) {
                    t = void 0 !== i.icn3d.atoms[r].coord2 ? i.icn3d.atoms[r].coord2 : i.icn3d.atoms[r].coord;
                    break
                }
            } else t = n.coord;
        return void 0 === t && (t = n.coord), t
    }, iCn3DUI.prototype.getResidueRepAtom = function(e) {
        var t, i = this.icn3d.atoms[e],
            n = i.structure + "_" + i.chain + "_" + i.resi;
        if (this.icn3d.proteins.hasOwnProperty(e) || this.icn3d.nucleotides.hasOwnProperty(e))
            for (var o in this.icn3d.residues[n]) {
                var r = this.icn3d.atoms[o];
                if ("CA" === r.name || "N3" === r.name) {
                    t = this.icn3d.atoms[o];
                    break
                }
            } else t = i;
        return void 0 === t && (t = i), t
    }, iCn3DUI.prototype.downloadAlignment = function(e) {
        var u = this;
        u.opts.proteins = "c alpha trace", u.icn3d.opts.proteins = "c alpha trace";
        var f = e.split(","),
            t = "ids=" + e,
            g = u.baseUrl + "vastplus/vastplus.cgi?v=2&cmd=c&b=1&s=1&w3d&" + t,
            i = u.baseUrl + "vastplus/vastplus.cgi?v=2&cmd=c1&b=1&s=1&d=1&" + t;
        void 0 !== u.cfg.inpara && (g += u.cfg.inpara, i += u.cfg.inpara), u.icn3d.bCid = void 0, u.icn3d.pdbid_chain2title = {}, void 0 === u.chainids2resids && (u.chainids2resids = {});
        var n = $.ajax({
                url: i,
                dataType: "jsonp",
                cache: !0
            }),
            v = {};
        n.then(function(e) {
            if (void 0 === (v = e.seqalign)) return alert("These two MMDB IDs " + f + " do not have 3D alignment data."), !1;
            u.icn3d.pdbid_molid2chain = {}, u.icn3d.chainsColor = {};
            for (var t = 0, i = 2; t < i; ++t) {
                var n = void 0 !== (c = e.alignedStructures[0][t]).pdbId ? c.pdbId : c.mmdbId,
                    o = {};
                for (var r in c.molecules) {
                    var s = c.molecules[r].chain.trim();
                    void 0 === o[s] ? o[s] = 1 : ++o[s];
                    var a = 1 === o[s] ? s : s + o[s].toString();
                    u.icn3d.pdbid_molid2chain[n + "_" + r] = a, "p" !== c.molecules[r].kind && "n" !== c.molecules[r].kind || (u.icn3d.chainsColor[n + "_" + a] = new THREE.Color(u.GREY8))
                }
            }
            for (t = 0, i = 2; t < i; ++t) {
                n = (c = e.alignedStructures[0][t]).pdbId;
                var c, d = c.molecules;
                for (var l in d) {
                    var h = d[l].chain;
                    u.icn3d.pdbid_chain2title[n + "_" + h] = d[l].name
                }
            }
            u.alignmolid2color = [], u.alignmolid2color[0] = {}, u.alignmolid2color[1] = {};
            for (u.icn3d.stdChainColors.length, t = 0, i = v.length; t < i; ++t) {
                var p = v[t][0].moleculeId,
                    m = v[t][1].moleculeId;
                u.alignmolid2color[0][p] = (t + 1).toString(), u.alignmolid2color[1][m] = (t + 1).toString()
            }
            return $.ajax({
                url: g,
                dataType: "jsonp",
                cache: !0,
                beforeSend: function() {
                    u.showLoading()
                },
                complete: function() {}
            })
        }).done(function(i) {
            return void 0 !== i.atoms ? (u.deferredOpm = $.Deferred(function() {
                u.mmdbidArray = [];
                for (var e = 0, t = i.alignedStructures[0].length; e < t; ++e) u.mmdbidArray.push(i.alignedStructures[0][e].pdbId);
                document.title = (u.mmdbidArray[0] + "," + u.mmdbidArray[1]).toUpperCase() + " (VAST+) in iCn3D", u.loadOpmDataForAlign(i, v, u.mmdbidArray)
            }), u.deferredOpm.promise()) : (alert("invalid atoms data."), !1)
        })
    }, iCn3DUI.prototype.downloadAlignmentPart2 = function(e, t, i) {
        var n = this;
        n.loadAtomDataIn(e, void 0, "align", t), void 0 === n.cfg.align && 1 == Object.keys(n.icn3d.structures).length && $("#" + n.pre + "alternateWrapper").hide();
        var o = {};
        for (var r in n.icn3d.atoms) o[r] = 1;
        n.icn3d.dAtoms = o, n.icn3d.hAtoms = o, n.icn3d.setAtomStyleByOptions(n.opts), n.icn3d.setColorByOptions(n.opts, n.icn3d.atoms), void 0 !== i && n.transformToOpmOriForAlign(n.selectedPdbid, i, !0), n.renderStructure(), void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0), n.html2ddgm = "", n.cfg.showalignseq && n.openDialog(n.pre + "dl_alignment", "Select residues in aligned sequences"), n.cfg.show2d && n.bFullUi && n.set2DDiagramsForAlign(n.mmdbidArray[0].toUpperCase(), n.mmdbidArray[1].toUpperCase()), void 0 !== n.deferred && n.deferred.resolve(), void 0 !== n.deferred2 && n.deferred2.resolve()
    }, iCn3DUI.prototype.downloadChainalignmentPart2 = function(e, t, i) {
        var n = this;
        n.parseMmdbData(e, "target"), n.parseMmdbData(t, "query");
        var o = {};
        for (var r in n.icn3d.atoms) o[r] = 1;
        n.icn3d.dAtoms = o, n.icn3d.hAtoms = o, n.icn3d.setAtomStyleByOptions(n.opts), n.icn3d.setColorByOptions(n.opts, n.icn3d.atoms), void 0 !== i && n.transformToOpmOriForAlign(n.selectedPdbid, i, !0), n.renderStructure(), void 0 !== n.cfg.rotate && n.rotStruc(n.cfg.rotate, !0), n.html2ddgm = "", n.cfg.showalignseq && n.openDialog(n.pre + "dl_alignment", "Select residues in aligned sequences"), n.cfg.show2d && n.bFullUi && (n.openDialog(n.pre + "dl_2ddgm", "Interactions"), n.bFullUi && (n.icn3d.bChainAlign ? n.set2DDiagramsForAlign(n.inputid2.toUpperCase(), n.inputid.toUpperCase()) : n.download2Ddgm(n.inputid.toUpperCase()))), void 0 !== n.deferred && n.deferred.resolve(), void 0 !== n.deferred2 && n.deferred2.resolve()
    }, iCn3DUI.prototype.downloadChainAlignment = function(t) {
        var i = this;
        i.opts.proteins = "c alpha trace", i.icn3d.opts.proteins = "c alpha trace";
        var e = t.split(","),
            n = e[0].indexOf("_"),
            o = e[1].indexOf("_");
        i.mmdbid_q = e[0].substr(0, n).toUpperCase(), i.mmdbid_t = e[1].substr(0, o).toUpperCase(), i.chain_q = e[0].substr(n + 1), i.chain_t = e[1].substr(o + 1);
        var r = i.mmdbid_q + "_" + i.chain_q + "," + i.mmdbid_t + "_" + i.chain_t;
        document.title = t.toUpperCase() + " in iCn3D";
        var s = i.baseUrl + "vastdyn/vastdyn.cgi?chainpairs=" + r,
            a = i.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + i.mmdbid_t,
            c = i.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&b=1&s=1&ft=1&uid=" + i.mmdbid_q;
        void 0 !== i.cfg.inpara && (a += i.cfg.inpara, c += i.cfg.inpara), i.icn3d.bCid = void 0, i.icn3d.pdbid_chain2title = {}, void 0 === i.chainids2resids && (i.chainids2resids = {}), $.ajax({
            url: s,
            dataType: "jsonp",
            cache: !0,
            beforeSend: function() {
                i.showLoading()
            },
            complete: function() {},
            success: function(e) {
                void 0 !== e && 0 != e.length || i.mmdbid_q != i.mmdbid_t || i.chain_q != i.chain_t ? void 0 === e || 0 == e.length ? (i.cfg.command || alert("These two chains " + t + ' can not align to each other. Please select sequences from these two chains in the "Sequences & Annotations" window, and click "Realign Selection" in the "File" menu to align your selection.'), i.cfg.showanno = 1, i.cfg.showalignseq = 0) : (i.t_trans_add = e[0].t_trans_add, i.q_trans_sub = e[0].q_trans_sub, i.q_rotation = e[0].q_rotation, i.qt_start_end = e[0].segs) : (i.t_trans_add = {
                    x: 0,
                    y: 0,
                    z: 0
                }, i.q_trans_sub = {
                    x: 0,
                    y: 0,
                    z: 0
                }, i.q_rotation = {
                    x1: 1,
                    y1: 0,
                    z1: 0,
                    x2: 0,
                    y2: 1,
                    z2: 0,
                    x3: 0,
                    y3: 0,
                    z3: 1
                }), $.ajax({
                    url: a,
                    dataType: "jsonp",
                    cache: !0,
                    beforeSend: function() {
                        i.showLoading()
                    },
                    complete: function() {},
                    success: function(t) {
                        $.ajax({
                            url: c,
                            dataType: "jsonp",
                            cache: !0,
                            beforeSend: function() {
                                i.showLoading()
                            },
                            complete: function() {},
                            success: function(e) {
                                i.mmdbidArray = [], i.mmdbidArray.push(i.mmdbid_q), i.mmdbidArray.push(i.mmdbid_t), i.loadOpmDataForChainalign(t, e, i.mmdbidArray)
                            }
                        })
                    }
                })
            },
            error: function(e, t, i) {
                alert("One of the chains is unavailable in the NCBI MMDB database.")
            }
        })
    }, iCn3DUI.prototype.set2DDiagramsForAlign = function(t, i) {
        var n = this;
        n.openDialog(n.pre + "dl_2ddgm", "Interactions"), t = t.substr(0, 4), i = i.substr(0, 4);
        var e = n.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&uid=" + t + "&intrac=1",
            o = n.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&uid=" + i + "&intrac=1";
        void 0 !== n.cfg.inpara && (e += n.cfg.inpara, o += n.cfg.inpara), $.ajax({
            url: e,
            dataType: "jsonp",
            cache: !0
        }).then(function(e) {
            return n.interactionData1 = e, n.html2ddgm = "", n.draw2Ddgm(e, t, 0), n.cfg.show2d && n.openDialog(n.pre + "dl_2ddgm", "Interactions"), $.ajax({
                url: o,
                dataType: "jsonp",
                cache: !0
            })
        }).done(function(e) {
            n.interactionData2 = e, n.draw2Ddgm(e, i, 1), n.html2ddgm += "<br>" + n.set2DdgmNote(!0), $("#" + n.pre + "dl_2ddgm").html(n.html2ddgm), n.b2DShown = !0, void 0 !== n.deferredViewinteraction && n.deferredViewinteraction.resolve()
        })
    }, iCn3DUI.prototype.download2Ddgm = function(e, t) {
        this.set2DDiagrams(e)
    }, iCn3DUI.prototype.set2DDiagrams = function(e) {
        var t = this;
        t.openDialog(t.pre + "dl_2ddgm", "Interactions"), void 0 !== t.b2DShown && t.b2DShown || (t.html2ddgm = "", t.draw2Ddgm(t.interactionData, e), t.html2ddgm += "<br>" + t.set2DdgmNote(), $("#" + t.pre + "dl_2ddgm").html(t.html2ddgm)), t.b2DShown = !0
    }, iCn3DUI.prototype.setSeqAlign = function(e, t) {
        var i = this,
            n = t[0][0].pdbId,
            o = t[0][1].pdbId;
        i.conservedName1 = n + "_cons", i.nonConservedName1 = n + "_ncons", i.notAlignedName1 = n + "_nalign", i.conservedName2 = o + "_cons", i.nonConservedName2 = o + "_ncons", i.notAlignedName2 = o + "_nalign", i.consHash1 = {}, i.nconsHash1 = {}, i.nalignHash1 = {}, i.consHash2 = {}, i.nconsHash2 = {}, i.nalignHash2 = {};
        for (var r = 0, s = e.length; r < s; ++r) {
            for (var a = e[r][0], c = a.moleculeId, d = i.icn3d.pdbid_molid2chain[n + "_" + c], l = n + "_" + d, h = {}, p = a.sequence.length, m = -1, u = !1, f = 0, g = a.sequence.length; f < g; ++f) {
                var v = a.sequence[f][0],
                    b = "~" === a.sequence[f][2] ? "-" : a.sequence[f][2];
                1 == (S = a.sequence[f][3] ? 1 : 0) && (f < p && !u && (p = f, u = !0), m < f && (m = f)), h[f] = {
                    resi: v,
                    resn: b,
                    aligned: S
                }
            }
            var y = (a = e[r][1]).moleculeId,
                _ = i.icn3d.pdbid_molid2chain[o + "_" + y],
                C = o + "_" + _;
            void 0 === i.icn3d.alnChainsAnTtl[l] && (i.icn3d.alnChainsAnTtl[l] = []), void 0 === i.icn3d.alnChainsAnTtl[l][0] && (i.icn3d.alnChainsAnTtl[l][0] = []), void 0 === i.icn3d.alnChainsAnTtl[l][1] && (i.icn3d.alnChainsAnTtl[l][1] = []), void 0 === i.icn3d.alnChainsAnTtl[l][2] && (i.icn3d.alnChainsAnTtl[l][2] = []), void 0 === i.icn3d.alnChainsAnTtl[l][3] && (i.icn3d.alnChainsAnTtl[l][3] = []), void 0 === i.icn3d.alnChainsAnTtl[l][4] && (i.icn3d.alnChainsAnTtl[l][4] = []), void 0 === i.icn3d.alnChainsAnTtl[l][5] && (i.icn3d.alnChainsAnTtl[l][5] = []), void 0 === i.icn3d.alnChainsAnTtl[l][6] && (i.icn3d.alnChainsAnTtl[l][6] = []), i.icn3d.alnChainsAnTtl[l][0].push(C), i.icn3d.alnChainsAnTtl[l][1].push(l), i.icn3d.alnChainsAnTtl[l][2].push(""), i.icn3d.alnChainsAnTtl[l][3].push(""), i.icn3d.alnChainsAnTtl[l][4].push(C), i.icn3d.alnChainsAnTtl[l][5].push(l), i.icn3d.alnChainsAnTtl[l][6].push("");
            var w = 1;
            for (f = p; f <= m; ++f) {
                v = a.sequence[f][0], b = "~" === a.sequence[f][2] ? "-" : a.sequence[f][2];
                var S, k, A, x, R = a.sequence[f][3] ? 1 : 0;
                2 === (S = h[f].aligned + R) ? (h[f].resn === b ? (k = "#FF0000", x = "icn3d-cons", i.consHash1[l + "_" + h[f].resi] = 1, i.consHash2[C + "_" + v] = 1) : (k = "#0000FF", x = "icn3d-ncons", i.nconsHash1[l + "_" + h[f].resi] = 1, i.nconsHash2[C + "_" + v] = 1), A = "#" + i.getColorhexFromBlosum62(h[f].resn, b)) : (k = i.GREY8, x = "icn3d-nalign", i.nalignHash1[l + "_" + h[f].resi] = 1, i.nalignHash2[C + "_" + v] = 1), void 0 === i.icn3d.alnChainsSeq[l] && (i.icn3d.alnChainsSeq[l] = []);
                var E = {};
                E.mmdbid = n, E.chain = d, E.resi = h[f].resi, E.resn = "" === E.resi || "icn3d-nalign" === x ? h[f].resn.toLowerCase() : h[f].resn, E.aligned = S, E.color = "" === E.resi ? i.GREYC : k, E.color2 = "" === E.resi ? i.GREYC : A, E.class = x, i.icn3d.alnChainsSeq[l].push(E), "" !== h[f].resi && (void 0 === i.icn3d.alnChains[l] && (i.icn3d.alnChains[l] = {}), $.extend(i.icn3d.alnChains[l], i.icn3d.residues[l + "_" + h[f].resi])), void 0 === i.icn3d.alnChainsSeq[C] && (i.icn3d.alnChainsSeq[C] = []), (E = {}).mmdbid = o, E.chain = _, E.resi = v, E.resn = "" === E.resi || "icn3d-nalign" === x ? b.toLowerCase() : b, E.aligned = S, E.color = "" === E.resi ? i.GREYC : k, E.color2 = "" === E.resi ? i.GREYC : A, E.class = x, i.icn3d.alnChainsSeq[C].push(E), "" !== E.resi && (void 0 === i.icn3d.alnChains[C] && (i.icn3d.alnChains[C] = {}), $.extend(i.icn3d.alnChains[C], i.icn3d.residues[C + "_" + v])), void 0 === i.icn3d.alnChainsAnno[l] && (i.icn3d.alnChainsAnno[l] = []), void 0 === i.icn3d.alnChainsAnno[l][0] && (i.icn3d.alnChainsAnno[l][0] = []), void 0 === i.icn3d.alnChainsAnno[l][1] && (i.icn3d.alnChainsAnno[l][1] = []), void 0 === i.icn3d.alnChainsAnno[l][2] && (i.icn3d.alnChainsAnno[l][2] = []), void 0 === i.icn3d.alnChainsAnno[l][3] && (i.icn3d.alnChainsAnno[l][3] = []), f === p && (void 0 === i.icn3d.alnChainsAnno[l][4] && (i.icn3d.alnChainsAnno[l][4] = []), void 0 === i.icn3d.alnChainsAnno[l][5] && (i.icn3d.alnChainsAnno[l][5] = []), void 0 === i.icn3d.alnChainsAnno[l][6] && (i.icn3d.alnChainsAnno[l][6] = []), i.icn3d.alnChainsAnno[l][4].push(i.icn3d.pdbid_chain2title[C]), i.icn3d.alnChainsAnno[l][5].push(i.icn3d.pdbid_chain2title[l]), i.icn3d.alnChainsAnno[l][6].push(""));
                var D = l + "_" + h[f].resi,
                    O = C + "_" + v,
                    T = i.icn3d.secondaries[D],
                    H = i.icn3d.secondaries[O];
                void 0 !== H ? i.icn3d.alnChainsAnno[l][0].push(H) : i.icn3d.alnChainsAnno[l][0].push("-"), void 0 !== T ? i.icn3d.alnChainsAnno[l][1].push(T) : i.icn3d.alnChainsAnno[l][1].push("-");
                var M = ".";
                w % 5 == 0 && (M = "*"), w % 10 == 0 && (M = "|"), i.icn3d.alnChainsAnno[l][2].push(M);
                var I = "";
                w % 10 == 0 && (I = w.toString()), i.icn3d.alnChainsAnno[l][3].push(I), ++w
            }
        }
        e = {}
    }, iCn3DUI.prototype.setSeqPerResi = function(e, t, i, n, o, r, s, a, c, d, l, h) {
        var p = this;
        void 0 === p.icn3d.alnChainsSeq[e] && (p.icn3d.alnChainsSeq[e] = []);
        var m = {},
            u = e.indexOf("_");
        if (m.mmdbid = e.substr(0, u), m.chain = e.substr(u + 1), m.resi = n, m.resn = "" === m.resi || "icn3d-nalign" === c ? o.toLowerCase() : o, m.aligned = r, m.color = "" === m.resi ? p.GREYC : s, m.color2 = "" === m.resi ? p.GREYC : a, m.class = c, p.icn3d.alnChainsSeq[e].push(m), "" !== m.resi && (void 0 === p.icn3d.alnChains[e] && (p.icn3d.alnChains[e] = {}), $.extend(p.icn3d.alnChains[e], p.icn3d.residues[e + "_" + m.resi])), d) {
            if (void 0 === p.icn3d.alnChainsAnno[e] && (p.icn3d.alnChainsAnno[e] = []), void 0 === p.icn3d.alnChainsAnno[e][0] && (p.icn3d.alnChainsAnno[e][0] = []), void 0 === p.icn3d.alnChainsAnno[e][1] && (p.icn3d.alnChainsAnno[e][1] = []), void 0 === p.icn3d.alnChainsAnno[e][2] && (p.icn3d.alnChainsAnno[e][2] = []), void 0 === p.icn3d.alnChainsAnno[e][3] && (p.icn3d.alnChainsAnno[e][3] = []), l) {
                void 0 === p.icn3d.alnChainsAnno[e][4] && (p.icn3d.alnChainsAnno[e][4] = []), void 0 === p.icn3d.alnChainsAnno[e][5] && (p.icn3d.alnChainsAnno[e][5] = []), void 0 === p.icn3d.alnChainsAnno[e][6] && (p.icn3d.alnChainsAnno[e][6] = []);
                var f = p.icn3d.pdbid_chain2title && p.icn3d.pdbid_chain2title.hasOwnProperty(i) ? p.icn3d.pdbid_chain2title[i] : "",
                    g = p.icn3d.pdbid_chain2title && p.icn3d.pdbid_chain2title.hasOwnProperty(e) ? p.icn3d.pdbid_chain2title[e] : "";
                p.icn3d.alnChainsAnno[e][4].push(f), p.icn3d.alnChainsAnno[e][5].push(g), p.icn3d.alnChainsAnno[e][6].push("")
            }
            var v = ".";
            h % 5 == 0 && (v = "*"), h % 10 == 0 && (v = "|"), p.icn3d.alnChainsAnno[e][2].push(v);
            var b = "";
            h % 10 == 0 && (b = h.toString()), p.icn3d.alnChainsAnno[e][3].push(b);
            var y = e + "_" + n;
            void 0 !== (_ = p.icn3d.secondaries[y]) ? p.icn3d.alnChainsAnno[e][1].push(_) : p.icn3d.alnChainsAnno[e][1].push("-")
        } else {
            y = e + "_" + n;
            var _ = p.icn3d.secondaries[y];
            p.icn3d.alnChainsAnno.hasOwnProperty(t) && 0 < p.icn3d.alnChainsAnno[t].length ? void 0 !== _ ? p.icn3d.alnChainsAnno[t][0].push(_) : p.icn3d.alnChainsAnno[t][0].push("-") : console.log("Error: me.icn3d.alnChainsAnno[chainid1] is undefined")
        }
    }, iCn3DUI.prototype.setSeqAlignChain = function() {
        var e = this,
            t = e.inputid2,
            i = e.inputid,
            n = e.cfg.chainalign.split(","),
            o = n[0].indexOf("_"),
            r = n[1].indexOf("_"),
            s = n[0].substr(o + 1),
            a = n[1].substr(r + 1);
        if (t == i && s == a) {
            var c = e.icn3d.chainsSeq[e.mmdbid_q + "_" + e.chain_q].length;
            e.qt_start_end = [{
                q_start: 1,
                q_end: c,
                t_start: 1,
                t_end: c
            }]
        }
        var d, l, h, p = n[0].substr(0, o).toUpperCase() + "_" + s,
            m = n[1].substr(0, r).toUpperCase() + "_" + a;
        void 0 !== e.mmdbid_q && e.mmdbid_q === e.mmdbid_t && (p = n[0].substr(0, o).toUpperCase() + e.postfix + "_" + s), e.conservedName1 = p + "_cons", e.nonConservedName1 = p + "_ncons", e.notAlignedName1 = p + "_nalign", e.conservedName2 = m + "_cons", e.nonConservedName2 = m + "_ncons", e.notAlignedName2 = m + "_nalign", e.consHash1 = {}, e.nconsHash1 = {}, e.nalignHash1 = {}, e.consHash2 = {}, e.nconsHash2 = {}, e.nalignHash2 = {}, void 0 === e.icn3d.alnChainsAnTtl[p] && (e.icn3d.alnChainsAnTtl[p] = []), void 0 === e.icn3d.alnChainsAnTtl[p][0] && (e.icn3d.alnChainsAnTtl[p][0] = []), void 0 === e.icn3d.alnChainsAnTtl[p][1] && (e.icn3d.alnChainsAnTtl[p][1] = []), void 0 === e.icn3d.alnChainsAnTtl[p][2] && (e.icn3d.alnChainsAnTtl[p][2] = []), void 0 === e.icn3d.alnChainsAnTtl[p][3] && (e.icn3d.alnChainsAnTtl[p][3] = []), void 0 === e.icn3d.alnChainsAnTtl[p][4] && (e.icn3d.alnChainsAnTtl[p][4] = []), void 0 === e.icn3d.alnChainsAnTtl[p][5] && (e.icn3d.alnChainsAnTtl[p][5] = []), void 0 === e.icn3d.alnChainsAnTtl[p][6] && (e.icn3d.alnChainsAnTtl[p][6] = []), e.icn3d.alnChainsAnTtl[p][0].push(m), e.icn3d.alnChainsAnTtl[p][1].push(p), e.icn3d.alnChainsAnTtl[p][2].push(""), e.icn3d.alnChainsAnTtl[p][3].push(""), e.icn3d.alnChainsAnTtl[p][4].push(m), e.icn3d.alnChainsAnTtl[p][5].push(p), e.icn3d.alnChainsAnTtl[p][6].push("");
        for (var u, f, g = 1, v = 0, b = e.qt_start_end.length; v < b; ++v) {
            var y = e.qt_start_end[v].q_start - 1,
                _ = e.qt_start_end[v].t_start - 1,
                C = e.qt_start_end[v].q_end - 1,
                w = e.qt_start_end[v].t_end - 1;
            if (0 < v) {
                for (var S = g, k = u + 1, A = y; k < A && void 0 !== e.icn3d.chainsSeq[p]; ++k) {
                    var x = e.icn3d.chainsSeq[p][k].resi,
                        R = e.icn3d.chainsSeq[p][k].name.toLowerCase();
                    d = e.GREY8, h = "icn3d-nalign", e.nalignHash1[p + "_" + x] = 1, e.setSeqPerResi(p, p, m, x, R, !1, d, void 0, h, !0, !1, S), ++S
                }
                var E = g;
                for (k = f + 1, A = _; k < A && void 0 !== e.icn3d.chainsSeq[m]; ++k) {
                    x = e.icn3d.chainsSeq[m][k].resi, R = e.icn3d.chainsSeq[m][k].name.toLowerCase();
                    d = e.GREY8, h = "icn3d-nalign", e.nalignHash2[m + "_" + x] = 1, e.setSeqPerResi(m, p, m, x, R, !1, d, void 0, h, !1, !1, E), ++E
                }
                if (S < E) {
                    g = E;
                    for (k = 0; k < E - S; ++k) {
                        x = "", R = "-";
                        d = e.GREY8, h = "icn3d-nalign", e.setSeqPerResi(p, p, m, x, R, !1, d, void 0, h, !0, !1, S + k)
                    }
                } else {
                    g = S;
                    for (k = 0; k < S - E; ++k) {
                        x = "", R = "-";
                        d = e.GREY8, h = "icn3d-nalign", e.setSeqPerResi(m, p, m, x, R, !1, d, void 0, h, !1, !1, E + k)
                    }
                }
            }
            for (k = 0; k <= C - y && (void 0 !== e.icn3d.chainsSeq[p] && void 0 !== e.icn3d.chainsSeq[m]); ++k) {
                var D = e.icn3d.chainsSeq[p][k + y].resi,
                    O = e.icn3d.chainsSeq[m][k + _].resi,
                    T = e.icn3d.chainsSeq[p][k + y].name.toUpperCase(),
                    H = e.icn3d.chainsSeq[m][k + _].name.toUpperCase();
                T === H ? (d = "#FF0000", h = "icn3d-cons", e.consHash1[p + "_" + D] = 1, e.consHash2[m + "_" + O] = 1) : (d = "#0000FF", h = "icn3d-ncons", e.nconsHash1[p + "_" + D] = 1, e.nconsHash2[m + "_" + O] = 1), l = "#" + e.getColorhexFromBlosum62(T, H);
                var M = 0 === v && 0 === k;
                e.setSeqPerResi(p, p, m, D, T, !0, d, l, h, !0, M, g), e.setSeqPerResi(m, p, m, O, H, !0, d, l, h, !1, M, g), ++g
            }
            u = C, f = w
        }
    }, iCn3DUI.prototype.setSeqAlignForRealign = function() {
        var e = this,
            t = Object.keys(e.icn3d.structures),
            i = t[0],
            n = t[1];
        e.conservedName1 = i + "_cons", e.conservedName2 = n + "_cons", e.consHash1 = {}, e.consHash2 = {}, e.icn3d.alnChainsAnTtl = {}, e.icn3d.alnChainsAnno = {}, e.icn3d.alnChainsSeq = {}, e.icn3d.alnChains = {}, e.icn3d.alnChainsSeq = {};
        for (var o = {}, r = 0, s = e.realignResid[i].length; r < s; ++r) {
            var a = e.realignResid[i][r],
                c = a.resid.lastIndexOf("_"),
                d = a.resid.substr(0, c),
                l = a.resid.substr(c + 1);
            a.resi = l, a.aligned = !0;
            var h, p = e.realignResid[n][r],
                m = p.resid.lastIndexOf("_"),
                u = p.resid.substr(0, m),
                f = p.resid.substr(m + 1);
            p.resi = f, p.aligned = !0, o[a.resid] = 1, o[p.resid] = 1, h = a.resn == p.resn ? "#FF0000" : "#0000FF";
            var g = "#" + e.getColorhexFromBlosum62(a.resn, p.resn);
            for (var v in a.color = h, p.color = h, a.color2 = g, p.color2 = g, e.icn3d.residues[a.resid]) e.icn3d.atoms[v].color = new THREE.Color(h);
            for (var v in e.icn3d.residues[p.resid]) e.icn3d.atoms[v].color = new THREE.Color(h);
            void 0 === e.icn3d.alnChainsAnTtl[d] && (e.icn3d.alnChainsAnTtl[d] = []), void 0 === e.icn3d.alnChainsAnTtl[d][0] && (e.icn3d.alnChainsAnTtl[d][0] = []), void 0 === e.icn3d.alnChainsAnTtl[d][1] && (e.icn3d.alnChainsAnTtl[d][1] = []), void 0 === e.icn3d.alnChainsAnTtl[d][2] && (e.icn3d.alnChainsAnTtl[d][2] = []), e.icn3d.alnChainsAnTtl[d][0].push(""), e.icn3d.alnChainsAnTtl[d][1].push(""), e.icn3d.alnChainsAnTtl[d][2].push(""), void 0 === e.icn3d.alnChainsSeq[d] && (e.icn3d.alnChainsSeq[d] = []), void 0 === e.icn3d.alnChainsSeq[u] && (e.icn3d.alnChainsSeq[u] = []), e.icn3d.alnChainsSeq[d].push(a), e.icn3d.alnChainsSeq[u].push(p), void 0 === e.icn3d.alnChains[d] && (e.icn3d.alnChains[d] = {}), void 0 === e.icn3d.alnChains[u] && (e.icn3d.alnChains[u] = {}), $.extend(e.icn3d.alnChains[d], e.icn3d.residues[d + "_" + a.resi]), $.extend(e.icn3d.alnChains[u], e.icn3d.residues[u + "_" + p.resi]), e.consHash1[d + "_" + a.resi] = 1, e.consHash2[u + "_" + p.resi] = 1, void 0 === e.icn3d.alnChainsAnno[d] && (e.icn3d.alnChainsAnno[d] = []), void 0 === e.icn3d.alnChainsAnno[d][0] && (e.icn3d.alnChainsAnno[d][0] = []), void 0 === e.icn3d.alnChainsAnno[d][1] && (e.icn3d.alnChainsAnno[d][1] = []), void 0 === e.icn3d.alnChainsAnno[d][2] && (e.icn3d.alnChainsAnno[d][2] = []);
            var b = ".";
            r % 5 == 0 && (b = "*"), r % 10 == 0 && (b = "|"), e.icn3d.alnChainsAnno[d][0].push(b);
            var y = "";
            r % 10 == 0 && (y = r.toString()), e.icn3d.alnChainsAnno[d][1].push(y)
        }
        var _ = "select " + e.residueids2spec(Object.keys(o));
        e.addCustomSelection(Object.keys(o), "protein_aligned", "protein aligned", _, !0)
    }, iCn3DUI.prototype.realignOnSeqAlign = function() {
        var f = this;
        f.saveSelectionPrep();
        var e = "alseq_" + Object.keys(f.icn3d.defNames2Atoms).length;
        f.saveSelection(e, e);
        var t = {},
            i = {},
            n = {},
            o = "";
        for (var r in f.icn3d.hAtoms) {
            var s = f.icn3d.atoms[r];
            if (f.icn3d.proteins.hasOwnProperty(r) && "CA" == s.name || f.icn3d.nucleotides.hasOwnProperty(r) && ("O3'" == s.name || "O3*" == s.name)) {
                var a = s.structure + "_" + s.chain + "_" + s.resi;
                if (a == o) continue;
                t.hasOwnProperty(s.structure) || (t[s.structure] = "", i[s.structure] = [], n[s.structure] = []);
                var c = f.icn3d.residueName2Abbr(s.resn.substr(0, 3)).substr(0, 1);
                t[s.structure] += c, i[s.structure].push(s.coord.clone()), n[s.structure].push(a), o = a
            }
        }
        var d = Object.keys(t),
            g = d[0],
            v = d[1],
            b = t[g],
            y = t[v],
            _ = i[g],
            C = i[v],
            w = n[g],
            S = n[v];
        $.ajax({
            url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
            type: "POST",
            data: {
                targets: b,
                queries: y
            },
            dataType: "jsonp",
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                var t, i;
                if (void 0 !== e.data) {
                    t = e.data[0].query;
                    var n = Object.keys(e.data[0].targets)[0];
                    i = (i = e.data[0].targets[n]).hsps[0]
                }
                if (void 0 !== t && void 0 !== i) {
                    var o = [],
                        r = [];
                    f.realignResid = {}, f.realignResid[g] = [], f.realignResid[v] = [];
                    for (var s = i.segs, a = 0, c = s.length; a < c; ++a)
                        for (var d = s[a], l = "", h = "", p = 0; p <= d.orito - d.orifrom; ++p) {
                            var m = w[p + d.orifrom].substr(0, w[p + d.orifrom].lastIndexOf("_")),
                                u = S[p + d.from].substr(0, S[p + d.from].lastIndexOf("_"));
                            o.push(_[p + d.orifrom]), r.push(C[p + d.from]), b[p + d.orifrom], y[p + d.from], (0 == p || l == m && h == u || l != m && h != u) && (f.realignResid[g].push({
                                resid: w[p + d.orifrom],
                                resn: b[p + d.orifrom]
                            }), f.realignResid[v].push({
                                resid: S[p + d.from],
                                resn: y[p + d.from]
                            })), l = m, h = u
                        }
                    f.alignCoords(r, o, v), f.updateHlAll()
                } else void 0 !== v || f.cfg.command ? (b.length < 6 || y.length < 6) && !f.cfg.command ? alert("These sequences are too short for alignment") : 6 <= b.length && 6 <= y.length && !f.cfg.command && alert("These sequences can not be aligned to each other") : alert("Please do not align residues in the same structure");
                void 0 !== f.deferredRealign && f.deferredRealign.resolve()
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : (void 0 !== v || f.cfg.command ? (b.length < 6 || y.length < 6) && !f.cfg.command ? alert("These sequences are too short for alignment") : 6 <= b.length && 6 <= y.length && !f.cfg.command && alert("These sequences can not be aligned to each other") : alert("Please do not align residues in the same structure"), void 0 !== f.deferredRealign && f.deferredRealign.resolve())
            }
        })
    }, iCn3DUI.prototype.realign = function() {
        var e = this;
        e.saveSelectionPrep();
        var t = "alseq_" + Object.keys(e.icn3d.defNames2Atoms).length;
        e.saveSelection(t, t);
        var i = {};
        e.realignResid = {};
        var n = "";
        for (var o in e.icn3d.hAtoms) {
            var r = e.icn3d.atoms[o];
            if (e.icn3d.proteins.hasOwnProperty(o) && "CA" == r.name || e.icn3d.nucleotides.hasOwnProperty(o) && ("O3'" == r.name || "O3*" == r.name)) {
                if (r.structure + "_" + r.resi == n) continue;
                i.hasOwnProperty(r.structure) || (i[r.structure] = []), i[r.structure].push(r.coord.clone()), e.realignResid.hasOwnProperty(r.structure) || (e.realignResid[r.structure] = []), e.realignResid[r.structure].push({
                    resid: r.structure + "_" + r.chain + "_" + r.resi,
                    resn: e.icn3d.residueName2Abbr(r.resn.substr(0, 3)).substr(0, 1)
                }), n = r.structure + "_" + r.resi
            }
        }
        var s = Object.keys(i),
            a = s[0],
            c = s[1],
            d = i[c],
            l = i[a];
        e.alignCoords(d, l, c, !0), e.updateHlAll()
    }, iCn3DUI.prototype.loadMol2Data = function(e) {
        var t = this,
            i = t.loadMol2AtomData(e);
        void 0 === t.cfg.align && 1 == Object.keys(t.icn3d.structures).length && $("#" + t.pre + "alternateWrapper").hide(), i ? (t.icn3d.setAtomStyleByOptions(t.opts), t.icn3d.setColorByOptions(t.opts, t.icn3d.atoms), t.renderStructure(), void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0), void 0 !== t.deferred && t.deferred.resolve(), void 0 !== t.deferred2 && t.deferred2.resolve()) : alert("The Mol2 file has the wrong format...")
    }, iCn3DUI.prototype.loadMol2AtomData = function(e) {
        var t = this,
            i = e.split(/\r?\n|\r/);
        if (i.length < 4) return !1;
        t.icn3d.init();
        for (var n, o, r = {}, s = 0, a = 0, c = 1, d = !1, l = !1, h = {}, p = {}, m = 0, u = i.length; m < u; ++m) {
            var f = i[m].trim();
            if ("" !== f && "#" !== f.substr(0, 1)) {
                if ("@<TRIPOS>MOLECULE" == f) {
                    t.icn3d.molTitle = i[m + 1].trim();
                    var g = i[m + 2].trim().replace(/\s+/g, " ").split(" ");
                    n = g[0], o = g[1], m += 4
                } else "@<TRIPOS>ATOM" == f ? (c = 1, d = !0, ++m) : "@<TRIPOS>BOND" == f ? (d = !(l = !0), ++m) : "@<TRIPOS>SUBSTRUCTURE" == f && (l = !1, ++m);
                if ("" !== (f = i[m].trim()) && "#" !== f.substr(0, 1)) {
                    if (d && s < n) {
                        var v = f.replace(/\s+/g, " ").split(" "),
                            b = parseInt(v[0]);
                        h[b] = c;
                        var y, _ = v[1],
                            C = parseFloat(v[2]),
                            w = parseFloat(v[3]),
                            S = parseFloat(v[4]),
                            k = new THREE.Vector3(C, w, S),
                            A = v[5],
                            x = A.indexOf(".");
                        if ("H" === (y = -1 === x ? A : A.substr(0, x)) && y === A) p[b] = 1;
                        else {
                            var R = {
                                het: !0,
                                serial: c,
                                name: _,
                                resn: "LIG",
                                structure: 1,
                                chain: "A",
                                resi: 1,
                                coord: k,
                                b: 0,
                                elem: y,
                                bonds: [],
                                ss: "coil",
                                ssbegin: !1,
                                ssend: !1,
                                bondOrder: []
                            };
                            t.icn3d.atoms[c] = R, r[c] = 1, ++c
                        }++s
                    }
                    if (l && a < o) {
                        var E = f.replace(/\s+/g, " ").split(" "),
                            D = parseInt(E[1]),
                            O = parseInt(E[2]),
                            T = E[3],
                            H = T;
                        if ("am" === T && (H = "1"), "ar" === T && (H = "1.5"), !(p.hasOwnProperty(D) || p.hasOwnProperty(O) || "1" !== H && "2" !== H && "3" !== H && "1.5" !== H)) {
                            var M = H,
                                I = h[D],
                                $ = h[O];
                            t.icn3d.atoms[I].bonds.push($), t.icn3d.atoms[I].bondOrder.push(M), t.icn3d.atoms[$].bonds.push(I), t.icn3d.atoms[$].bondOrder.push(M), "2" == M ? (t.icn3d.doublebonds[I + "_" + $] = 1, t.icn3d.doublebonds[$ + "_" + I] = 1) : "3" == M ? (t.icn3d.triplebonds[I + "_" + $] = 1, t.icn3d.triplebonds[$ + "_" + I] = 1) : "1.5" == M && (t.icn3d.aromaticbonds[I + "_" + $] = 1, t.icn3d.aromaticbonds[$ + "_" + I] = 1)
                        }++a, 0
                    }
                }
            }
        }
        t.icn3d.dAtoms = r, t.icn3d.hAtoms = r, t.icn3d.structures[1] = ["1_A"], t.icn3d.chains["1_A"] = r, t.icn3d.residues["1_A_1"] = r, t.icn3d.residueId2Name["1_A_1"] = "LIG", void 0 === t.icn3d.chainsSeq["1_A"] && (t.icn3d.chainsSeq["1_A"] = []);
        var L = {
            resi: 1,
            name: "LIG"
        };
        return t.icn3d.chainsSeq["1_A"].push(L), t.setMaxD(), t.showTitle(), !0
    }, iCn3DUI.prototype.loadXyzData = function(e) {
        var t = this,
            i = t.loadXyzAtomData(e);
        void 0 === t.cfg.align && 1 == Object.keys(t.icn3d.structures).length && $("#" + t.pre + "alternateWrapper").hide(), i ? (t.icn3d.setAtomStyleByOptions(t.opts), t.icn3d.setColorByOptions(t.opts, t.icn3d.atoms), t.renderStructure(), void 0 !== t.cfg.rotate && t.rotStruc(t.cfg.rotate, !0), void 0 !== t.deferred && t.deferred.resolve(), void 0 !== t.deferred2 && t.deferred2.resolve()) : alert("The XYZ file has the wrong format...")
    }, iCn3DUI.prototype.setXyzAtomSeq = function(e, t, i, n) {
        var o = this;
        o.icn3d.dAtoms = o.icn3d.unionHash(o.icn3d.dAtoms, e), o.icn3d.hAtoms = o.icn3d.unionHash(o.icn3d.hAtoms, e), o.icn3d.structures[t] = [i], o.icn3d.chains[i] = e, o.icn3d.residues[n] = e, o.icn3d.residueId2Name[n] = "LIG", void 0 === o.icn3d.chainsSeq[i] && (o.icn3d.chainsSeq[i] = []);
        var r = {
            resi: 1,
            name: "LIG"
        };
        o.icn3d.chainsSeq[i].push(r);
        for (var s = Object.keys(e), a = 0, c = s.length; a < c; ++a)
            for (var d = o.icn3d.atoms[s[a]], l = a + 1, h = s.length; l < h; ++l) {
                var p = o.icn3d.atoms[s[l]],
                    m = 1.2 * (o.icn3d.covalentRadii[d.elem.toUpperCase()] + o.icn3d.covalentRadii[p.elem.toUpperCase()]);
                Math.abs(d.coord.x - p.coord.x) > m || Math.abs(d.coord.y - p.coord.y) > m || Math.abs(d.coord.z - p.coord.z) > m || o.icn3d.hasCovalentBond(d, p) && (o.icn3d.atoms[s[a]].bonds.push(s[l]), o.icn3d.atoms[s[l]].bonds.push(s[a]))
            }
    }, iCn3DUI.prototype.loadXyzAtomData = function(e) {
        var t = e.split(/\r?\n|\r/);
        if (t.length < 3) return !1;
        this.icn3d.init();
        var i, n, o, r = {},
            s = 0,
            a = 1;
        this.icn3d.molTitle = "";
        for (var c = 0, d = t.length; c < d; ++c) {
            var l = t[c].trim();
            if ("" !== l && ("" === l || isNaN(l) || (0 !== c && this.setXyzAtomSeq(r, s, i, n), r = {}, n = (i = (o = ++s) + "_A") + "_1", parseInt(l), 1 < s && (this.icn3d.molTitle += "; "), this.icn3d.molTitle += t[c + 1].trim(), c += 2), "" !== (l = t[c].trim()))) {
                var h = l.replace(/,/, " ").replace(/\s+/g, " ").split(" "),
                    p = h[0],
                    m = parseFloat(h[1]),
                    u = parseFloat(h[2]),
                    f = parseFloat(h[3]),
                    g = {
                        het: !0,
                        serial: a,
                        name: p,
                        resn: "LIG",
                        structure: o,
                        chain: "A",
                        resi: 1,
                        coord: new THREE.Vector3(m, u, f),
                        b: 0,
                        elem: p,
                        bonds: [],
                        ss: "coil",
                        ssbegin: !1,
                        ssend: !1,
                        bondOrder: []
                    };
                this.icn3d.atoms[a] = g, r[a] = 1, ++a
            }
        }
        return this.setXyzAtomSeq(r, s, i, n), this.setMaxD(), this.showTitle(), !0
    }, iCn3DUI.prototype.Dsn6Parser = function(e, t, i) {
        var n = "https://edmaps.rcsb.org/maps/" + e.toLowerCase() + "_" + t + ".dsn6";
        this.Dsn6ParserBase(n, t, i)
    }, iCn3DUI.prototype.Dsn6ParserBase = function(e, t, i) {
        var n = this;
        if ("2fofc" == t && n.bAjax2fofc) n.icn3d.mapData.sigma2 = i, n.setOption("map", t);
        else if ("fofc" == t && n.bAjaxfofc) n.icn3d.mapData.sigma = i, n.setOption("map", t);
        else {
            var o = new XMLHttpRequest;
            o.open("GET", e, !0), o.responseType = "arraybuffer", o.onreadystatechange = function() {
                if (4 == this.readyState) {
                    if (200 == this.status) {
                        var e = o.response;
                        n.loadDsn6Data(e, t, i), "2fofc" == t ? n.bAjax2fofc = !0 : "fofc" == t && (n.bAjaxfofc = !0), n.setOption("map", t)
                    } else alert("RCSB server has no corresponding eletron density map for this structure.");
                    void 0 !== n.deferredMap && n.deferredMap.resolve()
                } else n.showLoading()
            }, o.send()
        }
    }, iCn3DUI.prototype.loadDsn6Data = function(e, t, i) {
        var n, o, r = this,
            s = {},
            a = e.buffer && e.buffer instanceof ArrayBuffer ? e.buffer : e,
            c = new Int16Array(a),
            d = new Uint8Array(a),
            l = String.fromCharCode.apply(null, d.subarray(0, 512));
        if (0 == l.indexOf(":-)")) s.xStart = parseInt(l.substr(10, 5)), s.yStart = parseInt(l.substr(15, 5)), s.zStart = parseInt(l.substr(20, 5)), s.xExtent = parseInt(l.substr(32, 5)), s.yExtent = parseInt(l.substr(38, 5)), s.zExtent = parseInt(l.substr(42, 5)), s.xRate = parseInt(l.substr(52, 5)), s.yRate = parseInt(l.substr(58, 5)), s.zRate = parseInt(l.substr(62, 5)), s.xlen = +parseFloat(l.substr(73, 10)), s.ylen = +parseFloat(l.substr(83, 10)), s.zlen = +parseFloat(l.substr(93, 10)), s.alpha = parseFloat(l.substr(103, 10)), s.beta = parseFloat(l.substr(113, 10)), s.gamma = parseFloat(l.substr(123, 10)), n = parseFloat(l.substr(138, 12)) / 100, o = parseInt(l.substr(155, 8)), s.sigma = 100 * parseFloat(l.substr(170, 12));
        else {
            if (100 !== c[18])
                for (var h = 0, p = c.length; h < p; ++h) {
                    var m = c[h];
                    c[h] = (255 & m) << 8 | m >> 8 & 255
                }
            s.zStart = c[2], s.xStart = c[0], s.yStart = c[1], s.xExtent = c[3], s.yExtent = c[4], s.zExtent = c[5], s.xRate = c[6], s.yRate = c[7], s.zRate = c[8];
            var u = 1 / c[17],
                f = u;
            s.xlen = c[9] * f, s.ylen = c[10] * f, s.zlen = c[11] * f, s.alpha = c[12] * u, s.beta = c[13] * u, s.gamma = c[14] * u, n = c[15] / c[18], o = c[16]
        }
        for (var g = new Float32Array(s.xExtent * s.yExtent * s.zExtent), v = 512, b = Math.ceil(s.xExtent / 8), y = Math.ceil(s.yExtent / 8), _ = Math.ceil(s.zExtent / 8), C = 0; C < _; ++C)
            for (var w = 0; w < y; ++w)
                for (var S = 0; S < b; ++S)
                    for (var k = 0; k < 8; ++k)
                        for (var A = 8 * C + k, x = 0; x < 8; ++x) {
                            var R = 8 * w + x;
                            for (h = 0; h < 8; ++h) {
                                var E = 8 * S + h;
                                if (!(E < s.xExtent && R < s.yExtent && A < s.zExtent)) {
                                    v += 8 - h;
                                    break
                                }
                                g[(E * s.yExtent + R) * s.zExtent + A] = (d[v] - o) / n, ++v
                            }
                        }
        "2fofc" == t ? (r.icn3d.mapData.header2 = s, r.icn3d.mapData.data2 = g, r.icn3d.mapData.matrix2 = r.getMatrix(s), r.icn3d.mapData.type2 = t, r.icn3d.mapData.sigma2 = i) : (r.icn3d.mapData.header = s, r.icn3d.mapData.data = g, r.icn3d.mapData.matrix = r.getMatrix(s), r.icn3d.mapData.type = t, r.icn3d.mapData.sigma = i)
    }, iCn3DUI.prototype.getMatrix = function(e) {
        var t = e,
            i = [t.xlen, 0, 0],
            n = [t.ylen * Math.cos(Math.PI / 180 * t.gamma), t.ylen * Math.sin(Math.PI / 180 * t.gamma), 0],
            o = [t.zlen * Math.cos(Math.PI / 180 * t.beta), t.zlen * (Math.cos(Math.PI / 180 * t.alpha) - Math.cos(Math.PI / 180 * t.gamma) * Math.cos(Math.PI / 180 * t.beta)) / Math.sin(Math.PI / 180 * t.gamma), 0];
        o[2] = Math.sqrt(t.zlen * t.zlen * Math.sin(Math.PI / 180 * t.beta) * Math.sin(Math.PI / 180 * t.beta) - o[1] * o[1]);
        var r = [
                [], i, n, o
            ],
            s = [0, t.xRate, t.yRate, t.zRate],
            a = [0, 1, 2, 3],
            c = new THREE.Matrix4;
        return c.set(r[a[1]][0] / s[a[1]], r[a[2]][0] / s[a[2]], r[a[3]][0] / s[a[3]], 0, r[a[1]][1] / s[a[1]], r[a[2]][1] / s[a[2]], r[a[3]][1] / s[a[3]], 0, r[a[1]][2] / s[a[1]], r[a[2]][2] / s[a[2]], r[a[3]][2] / s[a[3]], 0, 0, 0, 0, 1), c.multiply((new THREE.Matrix4).makeTranslation(t.xStart, t.yStart, t.zStart)), c
    }, iCn3DUI.prototype.showAnnotations = function() {
        var t = this;
        if (t.openDialog(t.pre + "dl_selectannotations", "Sequences and Annotations"), (void 0 === t.bAssemblyNote || !t.bAssemblyNote) && void 0 !== t.icn3d.asuCnt) {
            var e = "     <br><div id='" + t.pre + "assembly_note' style='margin-left:5px;'><span class='icn3d-annoLargeTitle'>Assembly Tips:</span> Only the asymmetric unit is shown in the sequence window.<br>Click \"Assembly\" in the menu \"View\" to switch between asymmetric unit and biological assembly (<b>" + t.icn3d.asuCnt + "</b> asymmetric unit).</div>";
            $("#" + t.pre + "dl_annotations_tabs").append(e), t.bAssemblyNote = !0
        }
        if (void 0 === t.bAnnoShown || !t.bAnnoShown) {
            var i = Object.keys(t.icn3d.chains);
            void 0 === t.giSeq && (t.giSeq = {}), void 0 === t.currClin && (t.currClin = {}), void 0 === t.resi2disease_nonempty && (t.resi2disease_nonempty = {}), void 0 === t.baseResi && (t.baseResi = {}), void 0 === t.matchedPos && (t.matchedPos = {});
            var n = t.cfg.notebook ? t.WIDTH / 2 : $("#" + t.pre + "dl_selectannotations").dialog("option", "width");
            for (var o in t.seqAnnWidth = n - 120 - 60 - 50, t.maxAnnoLength = 1, t.icn3d.chainsSeq) t.icn3d.chainsSeq[o].length > t.maxAnnoLength && (t.maxAnnoLength = t.icn3d.chainsSeq[o].length);
            var r = {},
                s = {},
                a = {};
            t.protein_chainid = {};
            for (var c = 0, d = i.length; c < d; ++c) {
                Math.round(i[c].indexOf("_"));
                void 0 === (v = t.icn3d.getFirstCalphaAtomObj(t.icn3d.chains[i[c]])) && (v = t.icn3d.getFirstAtomObj(t.icn3d.chains[i[c]]));
                var l, h = i[c].substr(i[c].indexOf("_") + 1);
                if (l = -1 !== h.indexOf("_") ? (h = h.substr(0, h.indexOf("_")), i[c].substr(0, i[c].indexOf("_")) + "_" + h) : i[c], t.icn3d.proteins.hasOwnProperty(v.serial) && 1 < t.icn3d.chainsSeq[i[c]].length) t.protein_chainid[i[c]] = l;
                else if (t.icn3d.nucleotides.hasOwnProperty(v.serial) && 1 < t.icn3d.chainsSeq[i[c]].length) r[i[c]] = l;
                else if (1 < t.icn3d.chainsSeq[i[c]].length) s[i[c]] = l;
                else {
                    var p = t.icn3d.chainsSeq[i[c]][0].name,
                        m = i[c] + "_" + t.icn3d.chainsSeq[i[c]][0].resi;
                    void 0 === a[p] && (a[p] = []), a[p].push(m)
                }
                if ((void 0 !== t.cfg.pdbid || void 0 !== t.cfg.opmid || void 0 !== t.cfg.mmcifid || void 0 !== t.cfg.mmtfid) && (t.icn3d.proteins.hasOwnProperty(v.serial) || t.icn3d.nucleotides.hasOwnProperty(v.serial)))
                    for (var u = 0, f = t.icn3d.chainsSeq[i[c]].length; u < f; ++u) {
                        var g = t.icn3d.chainsSeq[i[c]][u];
                        if ("" !== g.name && "-" !== g.name && g.name == g.name.toUpperCase()) {
                            var v;
                            m = i[c] + "_" + g.resi;
                            if (void 0 === (v = t.icn3d.getFirstCalphaAtomObj(t.icn3d.residues[m])) && (v = t.icn3d.getFirstAtomObj(t.icn3d.chains[i[c]])), t.icn3d.proteins.hasOwnProperty(v.serial) || t.icn3d.nucleotides.hasOwnProperty(v.serial)) continue;
                            p = g.name.trim();
                            void 0 === a[p] && (a[p] = []), a[p].push(m)
                        }
                    }
            }
            if (void 0 === t.cfg.blast_rep_id) {
                if (t.bFullUi)
                    if (void 0 !== t.cfg.mmtfid) {
                        var b = i[0].substr(0, i[0].indexOf("_"));
                        $.when(t.downloadMmcifSymmetry(b, "mmtfid")).then(function() {
                            t.showAnnoSeqData(r, s, a)
                        })
                    } else t.showAnnoSeqData(r, s, a)
            } else if (void 0 !== t.cfg.blast_rep_id) {
                var y = t.baseUrl + "pwaln/pwaln.fcgi?from=querytarget",
                    _ = {
                        targets: t.cfg.blast_rep_id,
                        queries: t.cfg.query_id
                    };
                if (void 0 !== t.cfg.query_from_to) {
                    var C = t.cfg.query_from_to.split(":");
                    for (c = 0, d = C.length; c < d; ++c) C[c] = parseInt(C[c]) - 1;
                    _.queries = t.cfg.query_id + ":" + C.join(":")
                }
                if (void 0 !== t.cfg.target_from_to) {
                    var w = t.cfg.target_from_to.split(":");
                    for (c = 0, d = w.length; c < d; ++c) w[c] = parseInt(w[c]) - 1;
                    _.targets = t.cfg.blast_rep_id + ":" + w.join(":")
                }
                $.ajax({
                    url: y,
                    type: "POST",
                    data: _,
                    dataType: "jsonp",
                    tryCount: 0,
                    retryLimit: 1,
                    success: function(e) {
                        t.seqStructAlignData = e, t.showAnnoSeqData(r, s, a)
                    },
                    error: function(e, t, i) {
                        this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                    }
                })
            }
        }
        t.bAnnoShown = !0
    }, iCn3DUI.prototype.showAnnoSeqData = function(e, t, i) {
        var n = this;
        n.getAnnotationData();
        var o = 0;
        for (var r in e) n.getSequenceData(r, e[r], "nucleotide", o), ++o;
        for (var r in n.interactChainChainbase = n.icn3d.unionHash(n.interactChainChainbase, n.protein_chainid), n.interactChainChainbase = n.icn3d.unionHash(n.interactChainChainbase, e), o = 0, t) n.getSequenceData(r, t[r], "chemical", o), ++o;
        for (var s in n.interactChainChainbase = n.icn3d.unionHash(n.interactChainChainbase, t), n.ssbondChainChainbase = n.icn3d.unionHash(n.ssbondChainChainbase, n.protein_chainid), n.ssbondChainChainbase = n.icn3d.unionHash(n.ssbondChainChainbase, t), n.crosslinkChainChainbase = n.icn3d.unionHash(n.crosslinkChainChainbase, n.protein_chainid), n.crosslinkChainChainbase = n.icn3d.unionHash(n.crosslinkChainChainbase, e), n.crosslinkChainChainbase = n.icn3d.unionHash(n.crosslinkChainChainbase, t), i) n.getCombinedSequenceData(s, i[s], o), ++o;
        n.enableHlSeq(), setTimeout(function() {
            n.hideAllAnno(), n.clickCdd()
        }, 0)
    }, iCn3DUI.prototype.enableHlSeq = function() {
        this.isMobile() ? (this.selectSequenceMobile(), this.selectChainMobile()) : this.selectSequenceNonMobile(), Object.keys(this.icn3d.hAtoms).length < Object.keys(this.icn3d.dAtoms).length && this.updateHlSeq()
    }, iCn3DUI.prototype.updateClinvar = function() {
        if (void 0 === this.bClinvarShown || !this.bClinvarShown)
            for (var e in this.protein_chainid) {
                var t = this.protein_chainid[e];
                this.showClinvar(e, t)
            }
        this.bClinvarShown = !0
    }, iCn3DUI.prototype.updateSnp = function() {
        if (void 0 === this.bSnpShown || !this.bSnpShown)
            for (var e in this.protein_chainid) {
                var t = this.protein_chainid[e];
                this.showSnp(e, t)
            }
        this.bSnpShown = !0
    }, iCn3DUI.prototype.updateDomain = function() {
        void 0 !== this.bDomainShown && this.bDomainShown || this.showDomainAll(), this.bDomainShown = !0
    }, iCn3DUI.prototype.updateInteraction = function() {
        if (void 0 === this.bInteractionShown || !this.bInteractionShown)
            for (var e in this.interactChainChainbase) {
                var t = this.interactChainChainbase[e];
                this.showInteraction(e, t)
            }
        this.bInteractionShown = !0
    }, iCn3DUI.prototype.updateSsbond = function() {
        if (void 0 === this.bSSbondShown || !this.bSSbondShown)
            for (var e in this.ssbondChainChainbase) {
                var t = this.ssbondChainChainbase[e];
                this.showSsbond(e, t)
            }
        this.bSSbondShown = !0
    }, iCn3DUI.prototype.updateCrosslink = function() {
        if (void 0 === this.bCrosslinkShown || !this.bCrosslinkShown)
            for (var e in this.crosslinkChainChainbase) {
                var t = this.crosslinkChainChainbase[e];
                this.showCrosslink(e, t)
            }
        this.bCrosslinkShown = !0
    }, iCn3DUI.prototype.updateTransmem = function() {
        if (void 0 === this.bTranememShown || !this.bTranememShown)
            for (var e in this.protein_chainid) {
                var t = this.protein_chainid[e];
                this.showTransmem(e, t)
            }
        this.bTranememShown = !0
    }, iCn3DUI.prototype.getAnDiv = function(e, t) {
        var i = "Loading " + t + "...";
        return "custom" == t ? i = "" : "domain" == t && (i = "Loading 3D " + t + "..."), "<div id='" + this.pre + t + "_" + e + "'><div id='" + this.pre + "tt_" + t + "_" + e + "' class='icn3d-fixed-pos' style='display:none!important'></div><div id='" + this.pre + "dt_" + t + "_" + e + "' style='display:none'>" + i + "</div><div id='" + this.pre + "ov_" + t + "_" + e + "'>" + i + "</div></div>"
    }, iCn3DUI.prototype.addButton = function(e, t, i, n, o, r) {
        return "<div class='" + t + "' chainid='" + e + "' style='display:inline-block; font-size:11px; font-weight:bold; width:" + o + "px!important;'><button style='-webkit-appearance:" + r + "; height:18px; width:" + o + "px;'><span style='white-space:nowrap; margin-left:-3px;' title='" + n + "'>" + i + "</span></button></div>"
    }, iCn3DUI.prototype.conservativeReplacement = function(e, t) {
        var i = -1 !== this.b62ResArray.indexOf(e) ? this.b62ResArray.indexOf(e) : this.b62ResArray.length - 1,
            n = -1 !== this.b62ResArray.indexOf(t) ? this.b62ResArray.indexOf(t) : this.b62ResArray.length - 1;
        return 0 < this.b62Matrix[i][n]
    }, iCn3DUI.prototype.getColorhexFromBlosum62 = function(e, t) {
        var i = -1 !== this.b62ResArray.indexOf(e) ? this.b62ResArray.indexOf(e) : this.b62ResArray.length - 1,
            n = -1 !== this.b62ResArray.indexOf(t) ? this.b62ResArray.indexOf(t) : this.b62ResArray.length - 1,
            o = this.b62Matrix[i][n];
        if (void 0 === o) return "333333";
        var r, s, a = "333333";
        0 < o ? a = "DD" + (s = (r = 221 - parseInt(o / 11 * 221)) < 10 ? "0" + r.toString(16) : r.toString(16)) + s : a = (s = (r = 221 - parseInt(-1 * o / 4 * 221)) < 10 ? "0" + r.toString(16) : r.toString(16)) + s + "DD";
        return a
    }, iCn3DUI.prototype.processSeqData = function(e) {
        var t = this;
        for (var i in t.protein_chainid) {
            var n = t.protein_chainid[i];
            if (e.hasOwnProperty(i)) {
                var o = e[i];
                t.giSeq[i] = o;
                for (var r = "", s = 0; s < 10 && s < t.icn3d.chainsSeq[i].length; ++s) r += t.icn3d.chainsSeq[i][s].name.substr(0, 1);
                var a = o.toLowerCase().indexOf(r.toLowerCase()); - 1 == a ? (console.log("The gi sequence didn't match the protein sequence. The start of 3D protein sequence: " + r + ". The gi sequence: " + o.substr(0, 10) + "."), t.setAlternativeSeq(i, n)) : (t.matchedPos[i] = a, t.baseResi[i] = t.icn3d.chainsSeq[i][0].resi - t.matchedPos[i] - 1)
            } else console.log("No data were found for the protein " + i + "..."), t.setAlternativeSeq(i, n);
            if (t.cfg.blast_rep_id != i) t.showSeq(i, n);
            else if (t.cfg.blast_rep_id == i && void 0 === t.seqStructAlignData.data) {
                d = 14 < t.cfg.query_id.length ? "Query: " + t.cfg.query_id.substr(0, 6) + "..." : isNaN(t.cfg.query_id) ? "Query: " + t.cfg.query_id : "Query: gi " + t.cfg.query_id, m = x = void 0;
                var c = "cannot be aligned";
                t.queryStart = "", t.queryEnd = "", alert("The sequence can NOT be aligned to the structure"), t.showSeq(i, n, void 0, d, x, c, m)
            } else if (t.cfg.blast_rep_id == i && void 0 !== t.seqStructAlignData.data) {
                var d;
                d = 14 < t.cfg.query_id.length ? "Query: " + t.cfg.query_id.substr(0, 6) + "..." : isNaN(t.cfg.query_id) ? "Query: " + t.cfg.query_id : "Query: gi " + t.cfg.query_id;
                var l, h, p = t.seqStructAlignData;
                void 0 !== p.data && (l = p.data[0].query, h = 0 < (h = p.data[0].targets[i.replace(/_/g, "")]).hsps.length ? h.hsps[0] : void 0);
                c = "";
                var m = "";
                if (t.queryStart = "", t.queryEnd = "", void 0 !== l && void 0 !== h) {
                    var u = h.scores.e_value.toPrecision(2);
                    1e-200 < u && (u = parseFloat(u).toExponential());
                    h.scores.bit_score;
                    var f = p.targets[i.replace(/_/g, "")].seqdata,
                        g = l.seqdata,
                        v = h.segs,
                        b = {};
                    void 0 === t.targetGapHash && (t.targetGapHash = {}), t.fullpos2ConsTargetpos = {}, t.consrvResPosArray = [];
                    var y = 0,
                        _ = 0;
                    t.nTotalGap = 0, t.queryStart = v[0].from + 1, t.queryEnd = v[v.length - 1].to + 1;
                    s = 0;
                    for (var C = v.length; s < C; ++s) {
                        var w = v[s];
                        if (0 < s)
                            if (w.orifrom - y < w.from - _) t.targetGapHash[w.orifrom] = {
                                from: _ + 1,
                                to: w.from - 1
                            }, t.nTotalGap += t.targetGapHash[w.orifrom].to - t.targetGapHash[w.orifrom].from + 1;
                            else if (w.orifrom - y > w.from - _)
                            for (var S = y + 1; S < w.orifrom; ++S) b[S] = -1;
                        for (S = 0; S <= w.orito - w.orifrom; ++S) b[S + w.orifrom] = S + w.from;
                        y = w.orito, _ = w.to
                    }
                    var k = 0;
                    t.icn3d.alnChainsSeq[i] = [];
                    for (s = 0, C = f.length; s < C; ++s) {
                        if (t.targetGapHash.hasOwnProperty(s))
                            for (S = t.targetGapHash[s].from; S <= t.targetGapHash[s].to; ++S) c += g[S];
                        if (m += t.insertGap(i, s, "-", !0), t.targetGapHash.hasOwnProperty(s) && (k += t.targetGapHash[s].to - t.targetGapHash[s].from + 1), b.hasOwnProperty(s) && -1 !== b[s]) {
                            c += g[b[s]];
                            var A = t.getColorhexFromBlosum62(f[s], g[b[s]]);
                            f[s] == g[b[s]] ? (m += f[s], t.fullpos2ConsTargetpos[s + k] = {
                                same: 1,
                                pos: s + 1,
                                res: f[s],
                                color: A
                            }, t.consrvResPosArray.push(s + 1), t.icn3d.alnChainsSeq[i].push({
                                resi: s + 1,
                                color: "#FF0000",
                                color2: "#" + A
                            })) : t.conservativeReplacement(f[s], g[b[s]]) ? (m += "+", t.fullpos2ConsTargetpos[s + k] = {
                                same: 0,
                                pos: s + 1,
                                res: f[s],
                                color: A
                            }, t.consrvResPosArray.push(s + 1), t.icn3d.alnChainsSeq[i].push({
                                resi: s + 1,
                                color: "#0000FF",
                                color2: "#" + A
                            })) : (m += " ", t.fullpos2ConsTargetpos[s + k] = {
                                same: -1,
                                pos: s + 1,
                                res: f[s],
                                color: A
                            }, t.icn3d.alnChainsSeq[i].push({
                                resi: s + 1,
                                color: t.GREYC,
                                color2: "#" + A
                            }))
                        } else c += "-", m += " "
                    }
                } else c += "cannot be aligned", alert("The sequence can NOT be aligned to the structure");
                var x = "BLAST, E: " + u;
                t.showSeq(i, n, void 0, d, x, c, m);
                var R = {};
                if (void 0 !== t.consrvResPosArray)
                    for (s = 0, C = t.consrvResPosArray.length; s < C; ++s) R[n + "_" + t.consrvResPosArray[s]] = 1;
                var E = t.icn3d.cloneHash(t.icn3d.hAtoms);
                t.selectResidueList(R, "protein_aligned", x, !1), t.icn3d.hAtoms = t.icn3d.cloneHash(E)
            }
        }
        t.enableHlSeq(), t.showCddSiteAll()
    }, iCn3DUI.prototype.getAnnotationData = function() {
        var r = this,
            s = $.map(r.protein_chainid, function(e) {
                return e
            }),
            e = 0;
        for (var t in r.protein_chainid) {
            var i = r.isMobile() ? "none" : "button",
                n = r.getProteinName(t),
                o = n,
                a = 0 == e ? "<span class='icn3d-annoLargeTitle'><b>Proteins</b>: </span><br><br>" : "",
                c = r.icn3d.chainsGene[t] && r.icn3d.chainsGene[t].geneId ? " (Gene: <a href='https://www.ncbi.nlm.nih.gov/gene/" + r.icn3d.chainsGene[t].geneId + "' target='_blank' title='" + r.icn3d.chainsGene[t].geneDesc + "'>" + r.icn3d.chainsGene[t].geneSymbol + "</a>)" : "",
                d = "<div id='" + r.pre + "anno_" + t + "' class='icn3d-annotation'>" + a + "<span style='font-weight:bold;'>Annotations of " + t + "</span>: <a class='icn3d-blue' href='https://www.ncbi.nlm.nih.gov/protein?term=" + t + "' target='_blank' title='" + n + "'>" + o + "</a>" + c + "&nbsp;&nbsp;&nbsp;" + r.addButton(t, "icn3d-addtrack", "Add Track", "Add a custom track", 60, i) + "&nbsp;&nbsp;&nbsp;";
            d += r.addButton(t, "icn3d-customcolor", "Custom Color/Tube", "Use a custom file to define the colors or tubes in 3D structure", 110, i) + "&nbsp;&nbsp;&nbsp;", d += r.addButton(t, "icn3d-helixsets", "Helix Sets", 'Define sets for each helix in this chain and add them to the menu of "Defined Sets"', 60, i) + "&nbsp;" + r.addButton(t, "icn3d-sheetsets", "Sheet Sets", 'Define sets for each sheet in this chain and add them to the menu of "Defined Sets"', 60, i) + "&nbsp;" + r.addButton(t, "icn3d-coilsets", "Coil Sets", 'Define sets for each coil in this chain and add them to the menu of "Defined Sets"', 60, i), $("#" + r.pre + "dl_annotations").append(d), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "giseq")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "cdd")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "clinvar")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "snp")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "domain")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "site")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "interaction")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "custom")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "ssbond")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "crosslink")), $("#" + r.pre + "anno_" + t).append(r.getAnDiv(t, "transmem")), $("#" + r.pre + "anno_" + t).append("<br><hr><br>"), ++e
        }
        r.setToolTip();
        var l = r.baseUrl + "/vastdyn/vastdyn.cgi?chainlist=" + s;
        void 0 !== r.chainid_seq ? r.processSeqData(r.chainid_seq) : $.ajax({
            url: l,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                r.chainid_seq = e, r.processSeqData(r.chainid_seq)
            },
            error: function(e, t, i) {
                if (this.tryCount++, this.tryCount <= this.retryLimit) $.ajax(this);
                else {
                    for (var n in r.enableHlSeq(), console.log("No data were found for the protein " + s + "..."), r.protein_chainid) {
                        var o = r.protein_chainid[n];
                        r.setAlternativeSeq(n, o), r.showSeq(n, o)
                    }
                    r.showCddSiteAll()
                }
            }
        })
    }, iCn3DUI.prototype.setAlternativeSeq = function(e, t) {
        var i = this.icn3d.chainsSeq[e];
        this.giSeq[e] = [];
        for (var n = 0, o = i.length; n < o; ++n) {
            var r = i[n].name;
            this.giSeq[e][n] = r
        }
        this.matchedPos[e] = 0, this.baseResi[e] = this.icn3d.chainsSeq[e][0].resi - this.matchedPos[e] - 1
    }, iCn3DUI.prototype.getProteinName = function(e) {
        var t = this,
            i = "";
        if (void 0 === t.cfg.mmdbid && void 0 === t.cfg.gi && void 0 === t.cfg.blast_rep_id || void 0 === t.mmdb_data) void 0 === t.cfg.align && void 0 === t.cfg.chainalign && !t.bRealign || void 0 === t.chainid2title || void 0 !== t.chainid2title[e] && (i = t.chainid2title[e]);
        else {
            var n = t.mmdb_data.moleculeInfor,
                o = e.substr(e.indexOf("_") + 1);
            for (var r in n)
                if (n[r].chain == o) {
                    i = n[r].name.replace(/\'/g, "&prime;");
                    break
                }
        }
        return i
    }, iCn3DUI.prototype.getSequenceData = function(e, t, i, n) {
        var o = this,
            r = o.getProteinName(e),
            s = r;
        40 < s.length && (s = s.substr(0, 40) + "...");
        var a = "";
        0 == n && ("protein" == i ? a = "<span class='icn3d-annoLargeTitle'><b>Proteins</b>: </span><br><br>" : "nucleotide" == i ? a = "<span class='icn3d-annoLargeTitle'><b>Nucleotides</b>: </span><br><br>" : "chemical" == i && (a = "<span class='icn3d-annoLargeTitle'><b>Chemicals/Ions/Water</b>: </span><br><br>")), $("#" + o.pre + "dl_annotations").append("<div id='" + o.pre + "anno_" + e + "' class='icn3d-annotation'>" + a + "<b>" + e + "</b>: <span title='" + r + "'>" + s + "</span> </div>"), $("#" + o.pre + "anno_" + e).append(o.getAnDiv(e, "giseq")), $("#" + o.pre + "anno_" + e).append(o.getAnDiv(e, "interaction")), $("#" + o.pre + "anno_" + e).append("<br><hr><br>"), o.giSeq[e] = [];
        for (var c = 0; c < o.icn3d.chainsSeq[e].length; ++c) {
            var d = o.icn3d.chainsSeq[e][c].name;
            o.giSeq[e][c] = d
        }
        o.matchedPos[e] = 0, o.baseResi[e] = o.icn3d.chainsSeq[e][0].resi - o.matchedPos[e] - 1, o.showSeq(e, t, i)
    }, iCn3DUI.prototype.getCombinedSequenceData = function(e, t, i) {
        var n, o = this,
            r = 0 == i ? "<span class='icn3d-annoLargeTitle'><b>Chemicals/Ions/Water</b>: </span><br><br>" : "",
            s = t[0].lastIndexOf("_"),
            a = t[0].substr(0, s),
            c = void 0 !== o.cfg.mmdbid && void 0 !== o.chainid2sid ? o.chainid2sid[a] : void 0;
        n = void 0 !== c ? "<b><a class='icn3d-blue' href='https://pubchem.ncbi.nlm.nih.gov/substance/" + c + "#section=2D-Structure' target='_blank'>" + e + " <img src='https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?sid=" + c + "'></a></b>" : "<b>" + e + "</b>", $("#" + o.pre + "dl_annotations").append("<div id='" + o.pre + "anno_" + e + "' class='icn3d-annotation'>" + r + n + "</div>"), $("#" + o.pre + "anno_" + e).append("<div id='" + o.pre + "giseq_" + e + "'><div id='" + o.pre + "dt_giseq_" + e + "' style='display:none'></div><div id='" + o.pre + "ov_giseq_" + e + "'></div></div>"), $("#" + o.pre + "anno_" + e).append("<br><hr><br>");
        var d = '<div id="' + o.pre + 'giseq_sequence" class="icn3d-dl_sequence">';
        d += '<div class="icn3d-seqTitle2" anno="sequence"><span style="white-space:nowrap;" title="Chemical ' + e + '">Chem. ' + e + "</span></div>", d += '<span class="icn3d-residueNum" style="width:60px!important;" title="starting protein sequence number">Count: ' + t.length + "</span>";
        for (var l = d += '<span class="icn3d-seqLine">', h = d, p = 0, m = t.length; p < m; ++p) {
            var u = e,
                f = u;
            3 < u.length && (f = u.substr(0, 3)), p < t.length - 1 && (f += ",");
            var g = t[p],
                v = g.substr(g.lastIndexOf("_") + 1);
            l += '<span id="giseq_' + o.pre + g + '" title="' + u + v + '" class="icn3d-residue icn3d-chemical">' + f + "</span>"
        }
        var b = o.GREY8,
            y = Math.round(o.seqAnnWidth * t.length / o.maxAnnoLength);
        y < 1 && (y = 1), h += '<div class="icn3d-seqTitle" style="display:inline-block; color:white; font-weight:bold; background-color:' + b + "; width:" + y + 'px;">&nbsp;</div>', d = "</span>", d += "<br>", l += d += "</div>", h += d, $("#" + o.pre + "dt_giseq_" + e).html(l), $("#" + o.pre + "ov_giseq_" + e).html(h)
    }, iCn3DUI.prototype.insertGap = function(e, t, i, n) {
        var o = "";
        if (void 0 !== this.targetGapHash && this.targetGapHash.hasOwnProperty(t))
            for (var r = 0; r < this.targetGapHash[t].to - this.targetGapHash[t].from + 1; ++r) o += n ? i : "<span>" + i + "</span>";
        return o
    }, iCn3DUI.prototype.insertGapOverview = function(e, t) {
        var i = "";
        this.cfg.blast_rep_id == e && void 0 !== this.targetGapHash && this.targetGapHash.hasOwnProperty(t) && (i += '<div style="display:inline-block; background-color:#333; width:' + this.seqAnnWidth * (this.targetGapHash[t].to - this.targetGapHash[t].from + 1) / (this.maxAnnoLength + this.nTotalGap) + 'px; height:3px;">&nbsp;</div>');
        return i
    }, iCn3DUI.prototype.showSeq = function(e, t, i, n, o, r, s) {
        var a, c = this,
            d = !1;
        if (void 0 === c.cfg.mmdbid && void 0 === c.cfg.gi && void 0 === c.cfg.blast_rep_id && void 0 === c.cfg.align && void 0 === c.cfg.chainalign) {
            d = !0, a = [];
            for (var l = 0; l < c.giSeq[e].length; ++l) a.push(c.icn3d.chainsSeq[e][l])
        } else a = c.giSeq[e];
        for (var h = [], p = (l = 0, a.length); l < p; ++l) a[l] && h.push(a[l]);
        a = h;
        var m = c.RESIDUE_WIDTH * c.giSeq[e].length + 200,
            u = c.giSeq[e].length;
        u > c.maxAnnoLength && (c.maxAnnoLength = u), $("#" + c.pre + "giseq_" + e).width(m), $("#" + c.pre + "interaction_" + e).width(m), $("#" + c.pre + "ssbond_" + e).width(m), $("#" + c.pre + "crosslink_" + e).width(m), $("#" + c.pre + "transmem_" + e).length && $("#" + c.pre + "transmem_" + e).width(m), $("#" + c.pre + "custom_" + e).length && $("#" + c.pre + "custom_" + e).width(m), $("#" + c.pre + "clinvar_" + e).length && $("#" + c.pre + "clinvar_" + e).width(m), $("#" + c.pre + "snp_" + e).length && $("#" + c.pre + "snp_" + e).width(m), $("#" + c.pre + "cddsite_" + e).length && $("#" + c.pre + "cddsite_" + e).width(m), $("#" + c.pre + "domain_" + e).length && $("#" + c.pre + "domain_" + e).width(m);
        var f, g = "",
            v = "",
            b = "";
        if (g += '<div class="icn3d-dl_sequence">', b += '<div class="icn3d-dl_sequence">', 10 < c.giSeq[e].length) {
            f = '<div class="icn3d-residueLine" style="white-space:nowrap;">';
            var y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.chains[e]);
            void 0 === c.cfg.mmdbid && void 0 === c.cfg.gi && void 0 === c.cfg.blast_rep_id && void 0 === c.cfg.align && void 0 === c.cfg.chainalign || void 0 === y.resi_ori || y.resi_ori == y.resi || -1 != e.indexOf("Misc") ? f += '<div class="icn3d-annoTitle" anno="0"></div>' : f += '<div class="icn3d-annoTitle" anno="0" title="NCBI Residue Numbers">NCBI Residue Numbers</div>', b += (f += '<span class="icn3d-residueNum"></span>') + "<br>", g += f + '<span class="icn3d-seqLine">';
            var _ = 0,
                C = 0;
            for (l = 0, p = a.length; l < p; ++l) {
                g += c.insertGap(e, l, "-"), g += "<span>", (q = d ? a[l].resi : l >= c.matchedPos[e] && l - c.matchedPos[e] < c.icn3d.chainsSeq[e].length ? c.icn3d.chainsSeq[e][l - c.matchedPos[e]].resi : c.baseResi[e] + 1 + l) % 10 == 0 && (g += q + " ");
                var w = e + "_" + q;
                if (c.icn3d.residues.hasOwnProperty(w)) {
                    y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.residues[w]);
                    "H" == c.icn3d.secondaries[w] && y.ssbegin ? g += '<span class="icn3d-helix-color">H' + ++_ + "</span>" : "E" == c.icn3d.secondaries[w] && y.ssbegin && (++C, "green" == c.icn3d.sheetcolor ? g += '<span class="icn3d-sheet-color">S' + C + "</span>" : "yellow" == c.icn3d.sheetcolor && (g += '<span class="icn3d-sheet-colory">S' + C + "</span>"))
                }
                g += "</span>"
            }
            g += '<span class="icn3d-residueNum"></span>', g += "</span>", g += "<br>", g += "</div>", b += "</div>"
        }
        f = '<div class="icn3d-residueLine" style="white-space:nowrap;">', f += '<div class="icn3d-annoTitle" anno="0"></div>', b += (f += '<span class="icn3d-residueNum"></span>') + "<br>", g += f + '<span class="icn3d-seqLine">';
        for (l = 0, p = a.length; l < p; ++l) {
            g += c.insertGap(e, l, "-");
            w = e + "_" + (l >= c.matchedPos[e] && l - c.matchedPos[e] < c.icn3d.chainsSeq[e].length ? c.icn3d.chainsSeq[e][l - c.matchedPos[e]].resi : c.baseResi[e] + 1 + l);
            if (c.icn3d.residues.hasOwnProperty(w))
                if ("H" == c.icn3d.secondaries[w]) g += l % 2 == 0 ? '<span class="icn3d-helix">' : '<span class="icn3d-helix2">', g += "&nbsp;</span>";
                else if ("E" == c.icn3d.secondaries[w]) {
                (y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.residues[w])).ssend ? "green" == c.icn3d.sheetcolor ? g += '<span class="icn3d-sheet2">' : "yellow" == c.icn3d.sheetcolor && (g += '<span class="icn3d-sheet2y">') : "green" == c.icn3d.sheetcolor ? g += '<span class="icn3d-sheet">' : "yellow" == c.icn3d.sheetcolor && (g += '<span class="icn3d-sheety">'), g += "&nbsp;</span>"
            } else "c" == c.icn3d.secondaries[w] ? g += '<span class="icn3d-coil">&nbsp;</span>' : "o" == c.icn3d.secondaries[w] && (g += '<span class="icn3d-other">&nbsp;</span>');
            else g += "<span>-</span>"
        }
        g += '<span class="icn3d-residueNum"></span>', g += "</span>", g += "<br>", g += "</div>", g += "</div>", b += "</div></div>", f = c.cfg.blast_rep_id === e ? '<div id="' + c.pre + 'giseq_sequence" class="icn3d-dl_sequence" style="border: solid 1px #000;">' : '<div id="' + c.pre + 'giseq_sequence" class="icn3d-dl_sequence">';
        var S = "Protein",
            k = "Protein";
        void 0 !== i && ("nucleotide" == i ? (S = "Nucl.", k = "Nucleotide") : "chemical" == i && (S = "Chem.", k = "Chemical")), f += '<div class="icn3d-seqTitle icn3d-link icn3d-blue" gi="' + e + '" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + k + " " + e + '">' + S + " " + e + "</span></div>", b += (f += '<span class="icn3d-residueNum" title="starting protein sequence number">' + (c.baseResi[e] + 1).toString() + "</span>") + "<br>", g += f + (F = '<span class="icn3d-seqLine">'), v += f + F;
        var A = 0;
        for (l = 0, p = a.length; l < p; ++l) {
            g += c.insertGap(e, l, "-"), void 0 !== c.targetGapHash && c.targetGapHash.hasOwnProperty(l) && (A += c.targetGapHash[l].to - c.targetGapHash[l].from + 1);
            var x = d ? a[l].name : a[l],
                R = x;
            1 < x.length && (R = x[0] + "..");
            var E = l >= c.matchedPos[e] && l - c.matchedPos[e] < c.icn3d.chainsSeq[e].length ? c.icn3d.chainsSeq[e][l - c.matchedPos[e]].resi : c.baseResi[e] + 1 + l;
            if (c.icn3d.residues.hasOwnProperty(e + "_" + E)) {
                var D = "333333";
                if (c.cfg.blast_rep_id == e && void 0 !== c.fullpos2ConsTargetpos && void 0 !== c.fullpos2ConsTargetpos[l + A]) D = c.fullpos2ConsTargetpos[l + A].color;
                else {
                    var O = void 0 === (y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.residues[e + "_" + E])).color || "FFFFFF" === y.color.getHexString() ? "DDDDDD" : y.color.getHexString();
                    D = void 0 !== y.color ? O : "CCCCCC"
                }
                g += '<span id="giseq_' + c.pre + e + "_" + E + '" title="' + x + E + '" class="icn3d-residue" style="color:#' + D + '">' + R + "</span>"
            } else g += '<span title="' + x + E + '" class="icn3d-residue">' + (R = R.toLowerCase()) + "</span>"
        }
        c.cfg.blast_rep_id == e && (c.opts.color = "conservation", c.icn3d.setColorByOptions(c.opts, c.icn3d.atoms));
        D = (y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.chains[e])).color ? y.color.getHexString() : "CCCCCC";
        var T = Math.round(c.seqAnnWidth * a.length / c.maxAnnoLength);
        if (T < 1 && (T = 1), c.cfg.blast_rep_id != e) v += '<div id="giseq_summary_' + c.pre + e + '" class="icn3d-seqTitle icn3d-link" gi chain="' + e + '" style="display:inline-block; color:white; font-weight:bold; background-color:#' + D + "; width:" + T + 'px;">' + e + "</div>";
        else {
            var H = [];
            (P = []).push(0);
            for (l = 0, p = a.length; l < p; ++l) void 0 !== c.targetGapHash && c.targetGapHash.hasOwnProperty(l) && (H.push(l - 1), P.push(l));
            H.push(a.length - 1), v += '<div id="giseq_summary_' + c.pre + e + '" class="icn3d-seqTitle icn3d-link" gi chain="' + e + '" style="width:' + T + 'px;">';
            for (l = 0, p = P.length; l < p; ++l) v += c.insertGapOverview(e, P[l]), v += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + D + "; width:" + Math.round(c.seqAnnWidth * (H[l] - P[l] + 1) / (c.maxAnnoLength + c.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" anno="sequence" gi chain="' + e + '" title="' + e + '">' + e + "</div>";
            v += "</div>"
        }
        if (f = '<span class="icn3d-residueNum" title="ending protein sequence number">' + E + "</span>", f += "</span>", g += f += "<br>", v += f, c.cfg.blast_rep_id == e) {
            if (void 0 !== s && "" !== s) {
                f = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" blast="" posarray="' + c.consrvResPosArray.toString() + '" title="' + o + '" setname="' + e + '_blast" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + o + '">' + o + "</span></div>", b += (f += '<span class="icn3d-residueNum"></span>') + "<br>", g += f + (F = '<span class="icn3d-seqLine">'), v += f + F;
                var M = 0,
                    I = 0,
                    L = c.queryStart;
                for (l = 0, p = s.length; l < p; ++l) {
                    if ("-" == (R = s[l])) g += "<span>-</span>";
                    else if (" " == R) g += "<span> </span>";
                    else {
                        E = c.fullpos2ConsTargetpos[l].pos;
                        if (c.icn3d.residues.hasOwnProperty(e + "_" + E)) {
                            D = c.fullpos2ConsTargetpos[l].color;
                            g += '<span id="giseq_' + c.pre + e + "_" + E + '" title="' + c.fullpos2ConsTargetpos[l].res + E + '" class="icn3d-residue" style="color:#' + D + '">' + R + "</span>"
                        } else g += '<span class="icn3d-residue">' + (R = R.toLowerCase()) + "</span>";
                        v += c.insertGapOverview(e, l), 0 <= (z = Math.round(c.seqAnnWidth * l / (c.maxAnnoLength + c.nTotalGap) - M - I)) && (v += '<div style="display:inline-block; width:' + z + 'px;">&nbsp;</div>', v += '<div style="display:inline-block; background-color:#F00; width:1px;" title="' + R + E + '">&nbsp;</div>', M += z, I += 1), ++L
                    }
                }
                f = '<span class="icn3d-residueNum"></span>', f += "</span>", g += f += "<br>", v += f
            }
            var F;
            f = '<div class="icn3d-annoTitle" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;" title="' + n + '">' + n + "</span></div>", b += (f += '<span class="icn3d-residueNum" title="starting protein sequence number">' + c.queryStart + "</span>") + "<br>", g += f + (F = '<span class="icn3d-seqLine" style="font-weight: bold;">'), v += f + F;
            for (L = c.queryStart, l = 0, p = r.length; l < p; ++l) {
                " " == (R = r[l]) || "-" == R ? g += "<span>-</span>" : (void 0 === c.fullpos2ConsTargetpos || void 0 === c.fullpos2ConsTargetpos[l] || c.icn3d.residues.hasOwnProperty(e + "_" + c.fullpos2ConsTargetpos[l].pos) ? g += '<span title="' + R + L + '" class="icn3d-residue">' + R + "</span>" : g += '<span title="' + (R = R.toLowerCase()) + L + '" class="icn3d-residue">' + R + "</span>", ++L)
            }
            O = void 0 === (y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.chains[e])).color || "FFFFFF" === y.color.getHexString() ? "DDDDDD" : y.color.getHexString(), D = void 0 !== y.color ? O : "CCCCCC";
            var P = [],
                N = (H = [], "-");
            for (l = 0, p = r.length; l < p; ++l) {
                "-" != (R = r[l]) && "-" == N ? P.push(l) : "-" == R && "-" != N && H.push(l - 1), N = R
            }
            "-" != N && H.push(r.length - 1);
            for (l = 0, p = P.length; l < p; ++l) {
                var z;
                v += '<div style="display:inline-block; width:' + (z = 0 == l ? Math.round(c.seqAnnWidth * (P[l] - c.baseResi[e] - 1) / (c.maxAnnoLength + c.nTotalGap)) : Math.round(c.seqAnnWidth * (P[l] - H[l - 1] - 1) / (c.maxAnnoLength + c.nTotalGap))) + 'px;">&nbsp;</div>', v += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + D + "; width:" + Math.round(c.seqAnnWidth * (H[l] - P[l] + 1) / (c.maxAnnoLength + c.nTotalGap)) + 'px;" anno="sequence" chain="' + e + '" title="' + n + '">' + n + "</div>"
            }
            f = '<span class="icn3d-residueNum" title="ending protein sequence number">' + c.queryEnd + "</span>", f += "</span>", g += f += "<br>", v += f
        }
        if (g += "</div>", v += "</div>", b += "</div>", 10 < c.giSeq[e].length) {
            y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.chains[e]);
            if ((void 0 !== c.cfg.mmdbid || void 0 !== c.cfg.gi || void 0 !== c.cfg.blast_rep_id || void 0 !== c.cfg.align || void 0 !== c.cfg.chainalign) && void 0 !== y.resi_ori && y.resi_ori != y.resi && -1 == e.indexOf("Misc")) {
                f = '<div class="icn3d-dl_sequence">', f += '<div class="icn3d-residueLine" style="white-space:nowrap;">', f += '<div class="icn3d-annoTitle" anno="0" title="PDB Residue Numbers">PDB Residue Numbers</div>', b += (f += '<span class="icn3d-residueNum"></span>') + "<br>", g += f + '<span class="icn3d-seqLine">';
                for (l = 0, p = a.length; l < p; ++l)
                    if (g += c.insertGap(e, l, "-"), l >= c.matchedPos[e] && l - c.matchedPos[e] < c.icn3d.chainsSeq[e].length) {
                        var q;
                        w = e + "_" + (q = c.icn3d.chainsSeq[e][l - c.matchedPos[e]].resi);
                        if (c.icn3d.residues.hasOwnProperty(w)) {
                            var j = (y = c.icn3d.getFirstCalphaAtomObj(c.icn3d.residues[w])).resi_ori;
                            g += "<span>", j % 10 == 0 && (g += j + " "), g += "</span>"
                        } else g += "<span></span>"
                    } else g += "<span></span>";
                g += '<span class="icn3d-residueNum"></span>', g += "</span>", g += "<br>", g += "</div>", g += "</div>", b += "</div></div>"
            }
        }
        $("#" + c.pre + "dt_giseq_" + e).html(g), $("#" + c.pre + "ov_giseq_" + e).html(v), $("#" + c.pre + "tt_giseq_" + e).html(b)
    }, iCn3DUI.prototype.navClinVar = function(i) {
        var n = this;
        n.currClin[i] = -1, $(document).on("click", "#" + n.pre + i + "_prevclin", function(e) {
            e.stopImmediatePropagation();
            var t = void 0 !== n.resi2disease_nonempty[i] ? Object.keys(n.resi2disease_nonempty[i]).length : 0;
            --n.currClin[i], n.currClin[i] < 0 && (n.currClin[i] = t - 1), n.showClinVarLabelOn3D(i)
        }), $(document).on("click", "#" + n.pre + i + "_nextclin", function(e) {
            e.stopImmediatePropagation();
            var t = void 0 !== n.resi2disease_nonempty[i] ? Object.keys(n.resi2disease_nonempty[i]).length : 0;
            ++n.currClin[i], n.currClin[i] > t - 1 && (n.currClin[i] = 0), n.showClinVarLabelOn3D(i)
        })
    }, iCn3DUI.prototype.showClinVarLabelOn3D = function(e) {
        var t, i = this,
            n = Object.keys(i.resi2disease_nonempty[e]);
        t = e + "_" + n[i.currClin[e]];
        for (var o = "", r = i.resi2disease_nonempty[e][n[i.currClin[e]]], s = 0, a = r.length; s < a; ++s)
            if ("" != r[s] && "not specified" != r[s] && "not provided" != r[s]) {
                o = r[s];
                break
            } var c = i.icn3d.centerAtoms(i.icn3d.hash2Atoms(i.icn3d.residues[t]));
        30 < o.length && (o = o.substr(0, 30) + "..."), i.removeSelection(), null == i.icn3d.labels && (i.icn3d.labels = {}), i.icn3d.labels.clinvar = [];
        var d = i.icn3d.LABELSIZE;
        for (var l in i.addLabel(o, c.center.x + 1, c.center.y + 1, c.center.z + 1, d, "#FFFF00", void 0, "clinvar"), i.icn3d.hAtoms = {}, i.icn3d.residues[t]) i.icn3d.hAtoms[l] = 1;
        $("#clinvar_" + i.pre + t).addClass("icn3d-highlightSeq"), void 0 === $("#" + i.pre + "modeswitch")[0] || $("#" + i.pre + "modeswitch")[0].checked || i.setMode("selection"), i.icn3d.draw()
    }, iCn3DUI.prototype.getSnpLine = function(e, t, i, n, o, r, s, a, c, d, l, h, p, m, u, f) {
        var g = this,
            v = "",
            b = m ? "clinvar" : "snp";
        if (l) {
            var y = "ClinVar",
                _ = "",
                C = "";
            void 0 !== g.icn3d.organism && "human" !== g.icn3d.organism && "homo sapiens" !== g.icn3d.organism && (_ = " <span style='color:#FFA500'>(from human)</span>", C = " <span style='color:#FFA500'>(based on human sequences and mapped to this structure by sequence similarity)</span>"), v += m ? '<div class="icn3d-seqTitle icn3d-link icn3d-blue icn3d-clinvar-path" clinvar="clinvar" posarray="' + d + '" shorttitle="' + y + '" setname="' + h + "_" + y + '" anno="sequence" chain="' + h + '" title="' + y + C + '">' + y + _ + "</div>" : '<div class="icn3d-seqTitle icn3d-link icn3d-blue" clinvar="clinvar" posarray="' + c + '" shorttitle="SNP" setname="' + h + '_SNP" anno="sequence" chain="' + h + '" title="SNP' + C + '">SNP' + _ + "</div>"
        } else if (2 == e && m) {
            var w = g.isMobile() ? "none" : "button";
            v += '<div id="' + g.pre + h + '_prevclin" style="display:inline-block; font-size:11px; font-weight:bold; width:60px!important;"><button class="link" style="-webkit-appearance:' + w + '; height:18px; width:55px;"><span style="white-space:nowrap; margin-left:-40px;" title="Show the previous ClinVar on structure">&lt; ClinVar</span></button></div>', v += '<div id="' + g.pre + h + '_nextclin" style="display:inline-block; font-size:11px; font-weight:bold; width:60px!important;"><button class="link" style="-webkit-appearance:' + w + '; height:18px; width:55px;"><span style="white-space:nowrap; margin-left:-40px;" title="Show the next ClinVar on structure">ClinVar &gt;</span></button></div>'
        } else v += '<div class="icn3d-seqTitle"></div>';
        for (var S = b, k = 0, A = 0, x = {}, R = {}, E = 1, D = g.giSeq[h].length; E <= D; ++E)
            if (void 0 !== s[E]) {
                ++k;
                for (var O = "", T = 0, H = i[E].length; T < H && !f; ++T) {
                    for (var M = r[E][T].split("; "), I = a[E][T].split("; "), L = "", F = 0, P = M.length; F < P; ++F) "" != M[F] && "not specified" != M[F] && "not provided" != M[F] && (L += M[F] + " (" + I[F] + "); ");
                    "" != L && (x[E] = "icn3d-clinvar", T == e - 2 && (R[E] = "icn3d-clinvar", -1 != L.indexOf("Pathogenic") && (R[E] = "icn3d-clinvar-path"))), O += L + " | "
                } - 1 != O.indexOf("Pathogenic") && (x[E] = "icn3d-clinvar-path"), "icn3d-clinvar" != x[E] && "icn3d-clinvar-path" != x[E] || ++A
            } if (0 == k && !m) return $("#" + g.pre + "dt_clinvar_" + h).html(""), $("#" + g.pre + "ov_clinvar_" + h).html(""), $("#" + g.pre + "tt_clinvar_" + h).html(""), $("#" + g.pre + "dt_snp_" + h).html(""), $("#" + g.pre + "ov_snp_" + h).html(""), $("#" + g.pre + "tt_snp_" + h).html(""), "";
        if (0 == A && m) return $("#" + g.pre + "dt_clinvar_" + h).html(""), $("#" + g.pre + "ov_clinvar_" + h).html(""), $("#" + g.pre + "tt_clinvar_" + h).html(""), "";
        var N = m ? A : k;
        if (v += 1 == e ? '<span class="icn3d-residueNum" title="residue count">' + N + " Res</span>" : '<span class="icn3d-residueNum"></span>', u) return v + "<br>";
        v += '<span class="icn3d-seqLine">';
        var z = "",
            q = 0,
            j = 0;
        for (E = 1, D = g.giSeq[h].length; E <= D; ++E)
            if (p) {
                if (void 0 !== s[E]) {
                    var U = V = g.giSeq[h][E - 1];
                    1 < V.length && (U = V[0] + "..");
                    var B = (Y = E >= g.matchedPos[h] && E - 1 - g.matchedPos[h] < g.icn3d.chainsSeq[h].length ? g.icn3d.chainsSeq[h][E - 1 - g.matchedPos[h]].resi : g.baseResi[h] + 1 + E - 1) + U + ">";
                    for (O = "", T = 0, H = i[E].length; T < H; ++T)
                        if (B += i[E][T], !f) {
                            for (M = r[E][T].split("; "), I = a[E][T].split("; "), L = "", F = 0, P = M.length; F < P; ++F) "" != M[F] && "not specified" != M[F] && "not provided" != M[F] && (L += M[F] + " (" + I[F] + "); ");
                            O += L + " | "
                        } v += g.insertGapOverview(h, E - 1);
                    var G = g.cfg.blast_rep_id == h ? Math.round(g.seqAnnWidth * (E - 1) / (g.maxAnnoLength + g.nTotalGap) - q - j) : Math.round(g.seqAnnWidth * (E - 1) / g.maxAnnoLength - q - j);
                    m ? "icn3d-clinvar" != x[E] && "icn3d-clinvar-path" != x[E] || 0 <= G && (v += '<div style="display:inline-block; width:' + G + 'px;">&nbsp;</div>', v += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + B + '">&nbsp;</div>', q += G, j += 1) : 0 < G && (v += '<div style="display:inline-block; width:' + G + 'px;">&nbsp;</div>', v += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + B + '">&nbsp;</div>', q += G, j += 1)
                }
            } else if (v += g.insertGap(h, E - 1, "-"), void 0 !== s[E])
            if (m || 1 != e) {
                var V;
                U = V = g.giSeq[h][E - 1];
                1 < V.length && (U = V[0] + "..");
                var W, Y = E >= g.matchedPos[h] && E - 1 - g.matchedPos[h] < g.icn3d.chainsSeq[h].length ? g.icn3d.chainsSeq[h][E - 1 - g.matchedPos[h]].resi : g.baseResi[h] + 1 + E - 1,
                    X = "",
                    K = (B = "<div class='snptip'>", H = i[E].length, 0),
                    Z = 0;
                if (2 == e ? (K = 0, Z = 1) : 3 == e && (K = 1, Z = H), m) {
                    W = 1;
                    var Q = 0;
                    for (T = K; T < H && T < Z; ++T) {
                        for (M = r[E][T].split("; "), I = a[E][T].split("; "), L = "", J = 0, F = 0, P = M.length; F < P; ++F) "" != M[F] && "not specified" != M[F] && "not provided" != M[F] && (0 < J ? L += "; " : 0 !== T && 1 !== T || (z = 'disease="' + M[F] + '"'), L += M[F] + " (" + I[F] + ")", ++J);
                        "" != L && (Q < W && (X += i[E][T]), B += Y + U + ">" + i[E][T], B += ": " + L, B += "<br>Links: <a href='https://www.ncbi.nlm.nih.gov/clinvar/?term=" + o[E][T] + "[AlleleID]' target='_blank'>ClinVar</a>, <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[E][T] + "' target='_blank'>dbSNP (rs" + n[E][T] + ")</a>", T < H - 1 && (B += "<br><br>"), ++Q)
                    }
                    W < Q && 3 == e && (X += "..")
                } else {
                    W = 2;
                    for (var T = K; T < H && T < Z; ++T)
                        if (T < W && (X += i[E][T]), B += Y + U + ">" + i[E][T], f) B += "<br>Link: <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[E][T] + "' target='_blank'>dbSNP (rs" + n[E][T] + ")</a>", T < H - 1 && (B += "<br>");
                        else {
                            for (var M = r[E][T].split("; "), I = a[E][T].split("; "), L = "", J = 0, F = 0, P = M.length; F < P; ++F) "" != M[F] && "not specified" != M[F] && "not provided" != M[F] && (0 < J ? L += "; " : 0 !== T && 1 !== T || (z = 'disease="' + M[F] + '"'), L += M[F] + " (" + I[F] + ")", ++J);
                            "" != L ? (B += ": " + L, B += "<br>Links: <a href='https://www.ncbi.nlm.nih.gov/clinvar/?term=" + o[E][T] + "[AlleleID]' target='_blank'>ClinVar</a>, <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[E][T] + "' target='_blank'>dbSNP (rs" + n[E][T] + ")</a>") : B += "<br>Link: <a href='https://www.ncbi.nlm.nih.gov/snp/?term=" + n[E][T] + "' target='_blank'>dbSNP (rs" + n[E][T] + ")</a>", T < H - 1 && (B += "<br><br>")
                        } W < H && 3 == e && (X += "..")
                }
                B += "</div>", m ? "icn3d-clinvar" == x[E] || "icn3d-clinvar-path" == x[E] ? v += 1 == e ? "<span>&dArr;</span>" : "" == X || " " == X ? "<span>-</span>" : '<span id="' + S + "_" + g.pre + h + "_" + Y + '" label title="' + B + '" ' + z + ' class="icn3d-tooltip icn3d-residue ' + R[E] + '">' + X + "</span>" : v += "<span>-</span>" : v += "" == X || " " == X ? "<span>-</span>" : f ? '<span id="' + S + "_" + g.pre + h + "_" + Y + '" label title="' + B + '" class="icn3d-residue ' + R[E] + '">' + X + "</span>" : '<span id="' + S + "_" + g.pre + h + "_" + Y + '" label title="' + B + '" ' + z + ' class="icn3d-tooltip icn3d-residue ' + R[E] + '">' + X + "</span>"
            } else v += "<span>&dArr;</span>";
        else v += "<span>-</span>";
        return v += 1 == e ? '<span class="icn3d-residueNum" title="residue count">&nbsp;' + N + " Residues</span>" : '<span class="icn3d-residueNum"></span>', v += "</span>", v += "<br>"
    }, iCn3DUI.prototype.processSnpClinvar = function(e, t, i, n) {
        var o = this,
            r = '<div id="' + o.pre + t + '_snpseq_sequence" class="icn3d-dl_sequence">',
            s = r,
            a = r,
            c = '<div id="' + o.pre + t + '_clinvarseq_sequence" class="icn3d-dl_sequence">',
            d = c,
            l = c,
            h = e.data,
            p = {},
            m = {},
            u = {};
        void 0 === o.resi2disease_nonempty[t] && (o.resi2disease_nonempty[t] = {});
        for (var f = {}, g = {}, v = {}, b = {}, y = {}, _ = "", C = 0, w = h.length; C < w; ++C)
            if ("" != h[C]) {
                var S = h[C],
                    k = S[3];
                if (k == _) continue;
                var A = (_ = k).substr(0, k.length - 3),
                    x = Math.round(A),
                    R = (k.substr(k.length - 3, 1), k.substr(k.length - 1, 1)),
                    E = S[4],
                    D = n ? "" : S[5],
                    O = n ? "" : S[6],
                    T = n ? "" : S[7];
                b[x + o.baseResi[t]] = 1, "" != O && (y[x + o.baseResi[t]] = 1), m[x] = C + 1, void 0 === p[x] && (p[x] = []), p[x].push(R), void 0 === g[x] && (g[x] = []), g[x].push(E), void 0 === v[x] && (v[x] = []), v[x].push(D), void 0 === u[x] && (u[x] = []), u[x].push(O), "" != O && (void 0 === o.resi2disease_nonempty[t][x] && (o.resi2disease_nonempty[t][x] = []), o.resi2disease_nonempty[t][x].push(O)), void 0 === f[x] && (f[x] = []), f[x].push(T)
            } var H = Object.keys(b),
            M = Object.keys(y);
        if (n) {
            var I = !1;
            r += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !1, I, void 0, n), r += o.getSnpLine(2, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, void 0, n), r += o.getSnpLine(3, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, void 0, n), a += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !1, I, !0, n), a += o.getSnpLine(2, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, !0, n), a += o.getSnpLine(3, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, !0, n), s += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !0, I, void 0, n), r += "</div>", s += "</div>", a += "</div>", $("#" + o.pre + "dt_snp_" + t).html(r), $("#" + o.pre + "ov_snp_" + t).html(s), $("#" + o.pre + "tt_snp_" + t).html(a)
        } else I = !0, c += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !1, I, void 0, n), c += o.getSnpLine(2, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, void 0, n), c += o.getSnpLine(3, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, void 0, n), l += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !1, I, !0, n), l += o.getSnpLine(2, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, !0, n), l += o.getSnpLine(3, 3, p, g, v, u, m, f, H, M, 0, t, !1, I, !0, n), d += o.getSnpLine(1, 3, p, g, v, u, m, f, H, M, 1, t, !0, I, void 0, n), c += "</div>", d += "</div>", l += "</div>", $("#" + o.pre + "dt_clinvar_" + t).html(c), $("#" + o.pre + "ov_clinvar_" + t).html(d), $("#" + o.pre + "tt_clinvar_" + t).html(l), o.navClinVar(t, i);
        o.enableHlSeq(), n ? (o.bAjaxSnp = !0, void 0 !== o.deferredSnp && o.deferredSnp.resolve()) : (o.bAjaxClinvar = !0, void 0 !== o.deferredClinvar && o.deferredClinvar.resolve())
    }, iCn3DUI.prototype.showClinvarPart2 = function(n, i, e) {
        var o = this,
            t = "https://www.ncbi.nlm.nih.gov/Structure/vastdyn/vastdyn2.cgi?chainid_clinvar=" + i;
        $.ajax({
            url: t,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                if ("" != e) {
                    var t = e;
                    o.processSnpClinvar(t, n, i, !1)
                } else o.processNoClinvar(n)
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : o.processNoClinvar(n)
            }
        })
    }, iCn3DUI.prototype.showSnp = function(e, t) {
        this.showSnpClinvar(e, t, !0)
    }, iCn3DUI.prototype.showClinvar = function(e, t) {
        this.showSnpClinvar(e, t, !1)
    }, iCn3DUI.prototype.showSnpClinvar = function(o, r, s) {
        var a = this,
            e = a.baseUrl + "vastdyn/vastdyn.cgi?chainid=" + r;
        $.ajax({
            url: e,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                var t = e.snpgi,
                    i = e.gi;
                if (s) a.showSnpPart2(o, r, t);
                else {
                    var n = t;
                    [6137708, 1942289, 224510717, 2624886, 253723219, 2554905, 75765331, 3660278, 312207882, 319443632, 342350956, 1827805, 109157826, 1065265, 40889086, 6730307, 163931185, 494469, 163931091, 60594093, 55669745, 18655489, 17942684, 6980537, 166235465, 6435586, 4139398, 4389047, 364506122, 78101667, 262118402, 20664221, 2624640, 158430173, 494395, 28948777, 34810587, 13399647, 3660342, 261278854, 342350965, 384482350, 378792570, 15988303, 213424334, 4558333, 2098365, 10835631, 3318817, 374074330, 332639529, 122919696, 4389286, 319443573, 2781341, 67464020, 194709238, 210061039, 364506106, 28949044, 40889076, 161172338, 17943181, 4557976, 62738484, 365813173, 6137343, 350610552, 17942703, 576308, 223674070, 15826518, 1310997, 93279697, 4139395, 255311799, 157837067, 361132363, 357380836, 146387678, 383280379, 1127268, 299856826, 13786789, 1311054, 46015217, 3402130, 381353319, 30750059, 218766885, 340707375, 27065817, 355333104, 2624634, 62738384, 241913553, 304446010].includes(i) && (n = i), a.showClinvarPart2(o, r, n)
                }
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : s ? a.processNoSnp(o) : a.processNoClinvar(o)
            }
        })
    }, iCn3DUI.prototype.showSnpPart2 = function(n, t, e) {
        var o = this;
        if (void 0 !== e) {
            var i = "https://www.ncbi.nlm.nih.gov/projects/SNP/beVarSearch.cgi?appname=iCn3D&format=bed&report=pdb2bed&gi=" + e;
            $.ajax({
                url: i,
                dataType: "text",
                cache: !0,
                tryCount: 0,
                retryLimit: 1,
                success: function(e) {
                    if ("" != e) {
                        o.processSnpClinvar(e, n, t, !0)
                    } else o.processNoSnp(n)
                },
                error: function(e, t, i) {
                    this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : o.processNoSnp(n)
                }
            })
        } else o.processNoSnp(n), console.log("No gi was found for the chain " + t + "...")
    }, iCn3DUI.prototype.processNoClinvar = function(e) {
        console.log("No ClinVar data were found for the protein " + e + "..."), $("#" + this.pre + "dt_clinvar_" + e).html(""), $("#" + this.pre + "ov_clinvar_" + e).html(""), this.enableHlSeq(), this.bAjaxClinvar = !0, void 0 !== this.deferredClinvar && this.deferredClinvar.resolve()
    }, iCn3DUI.prototype.processNoSnp = function(e) {
        console.log("No SNP data were found for the protein " + e + "..."), $("#" + this.pre + "dt_snp_" + e).html(""), $("#" + this.pre + "ov_snp_" + e).html(""), this.enableHlSeq(), this.bAjaxSnp = !0, void 0 !== this.deferredSnp && this.deferredSnp.resolve()
    }, iCn3DUI.prototype.showCddSiteAll = function() {
        var Q = this,
            o = $.map(Q.protein_chainid, function(e) {
                return e
            }),
            J = Object.keys(Q.protein_chainid),
            e = Q.baseUrl + "cdannots/cdannots.fcgi?fmt&queries=" + o;
        $.ajax({
            url: e,
            dataType: "jsonp",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                for (var t = {}, i = 0, n = e.data.length; i < n; ++i) {
                    var o = e.data[i];
                    o._id;
                    t[Z = J[i]] = 1;
                    for (var r = '<div id="' + Q.pre + Z + '_cddseq_sequence" class="icn3d-cdd icn3d-dl_sequence">', s = r, a = r, c = o.doms, d = void 0 !== c ? c.length : 0, l = 0; l < d; ++l) {
                        var h = c[l].acc,
                            p = c[l].type;
                        p = "domain";
                        var m = c[l].title.split(":")[0],
                            u = c[l].defline;
                        14 < (z = p + ": " + m).length && (z = z.substr(0, 14) + "...");
                        for (var f = p + ": " + m, g = c[l].locs, v = 0, b = g.length; v < b; ++v) {
                            for (var y = [], _ = [], C = {}, w = 0, S = 0, k = g[v].segs.length; S < k; ++S) {
                                var A = Math.round(g[v].segs[S].from),
                                    x = Math.round(g[v].segs[S].to);
                                y.push(A + Q.baseResi[Z]), _.push(x + Q.baseResi[Z]);
                                for (var R = A; R <= x; ++R) C[R] = 1;
                                w += x - A + 1
                            }
                            a += (q = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + h + '" from="' + y + '" to="' + _ + '" shorttitle="' + z + '" setname="' + Z + "_" + p + "_" + l + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>") + (j = '<span class="icn3d-residueNum" title="residue count">' + w.toString() + " Res</span>") + "<br>", r += q + j + (U = '<span class="icn3d-seqLine">'), s += '<div style="width:20px; display:inline-block;"><span id="' + Q.pre + Z + "_" + h + "_" + v + '_cddseq_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + Q.pre + Z + "_" + h + "_" + v + '_cddseq_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div>', s += '<div style="width:100px!important;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + h + '" from="' + y + '" to="' + _ + '" shorttitle="' + z + '" index="' + l + '" setname="' + Z + "_" + p + "_" + l + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>", s += j + U;
                            for (var E = p + l.toString(), D = (R = 0, Q.giSeq[Z].length); R < D; ++R)
                                if (r += Q.insertGap(Z, R, "-"), C.hasOwnProperty(R)) {
                                    var O = X = Q.giSeq[Z][R];
                                    1 < X.length && (O = X[0] + "..");
                                    var T = R >= Q.matchedPos[Z] && R - Q.matchedPos[Z] < Q.icn3d.chainsSeq[Z].length ? Q.icn3d.chainsSeq[Z][R - Q.matchedPos[Z]].resi : Q.baseResi[Z] + 1 + R;
                                    r += '<span id="' + E + "_" + Q.pre + Z + "_" + T + '" title="' + O + T + '" class="icn3d-residue">' + X + "</span>"
                                } else r += "<span>-</span>";
                            var H = Q.icn3d.getFirstCalphaAtomObj(Q.icn3d.chains[Z]),
                                M = void 0 === H.color || "FFFFFF" === H.color.getHexString() ? "DDDDDD" : H.color.getHexString(),
                                I = void 0 !== H.color ? M : "CCCCCC";
                            if (Q.cfg.blast_rep_id != Z)
                                for (R = 0, D = y.length; R < D; ++R) {
                                    s += '<div style="display:inline-block; width:' + (K = 0 == R ? Math.round(Q.seqAnnWidth * (y[R] - Q.baseResi[Z] - 1) / Q.maxAnnoLength) : Math.round(Q.seqAnnWidth * (y[R] - _[R - 1] - 1) / Q.maxAnnoLength)) + 'px;">&nbsp;</div>', s += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + I + "; width:" + Math.round(Q.seqAnnWidth * (_[R] - y[R] + 1) / Q.maxAnnoLength) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + (l + 1).toString() + '" from="' + y + '" to="' + _ + '" shorttitle="' + z + '" index="' + l + '" setname="' + Z + "_domain_" + l + "_" + v + '" id="' + Z + "_domain_" + l + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + m + " </div>"
                                } else {
                                    var L = [],
                                        F = [];
                                    for (R = 0, D = y.length; R < D; ++R) {
                                        L.push(y[R]);
                                        for (var P = y[R]; P <= _[R]; ++P) void 0 !== Q.targetGapHash && Q.targetGapHash.hasOwnProperty(P) && (F.push(P - 1), L.push(P));
                                        F.push(_[R])
                                    }
                                    for (R = 0, D = L.length; R < D; ++R) {
                                        s += Q.insertGapOverview(Z, L[R]), s += '<div style="display:inline-block; width:' + (K = 0 == R ? Math.round(Q.seqAnnWidth * (L[R] - Q.baseResi[Z] - 1) / (Q.maxAnnoLength + Q.nTotalGap)) : Math.round(Q.seqAnnWidth * (L[R] - F[R - 1] - 1) / (Q.maxAnnoLength + Q.nTotalGap))) + 'px;">&nbsp;</div>', s += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + I + "; width:" + Math.round(Q.seqAnnWidth * (F[R] - L[R] + 1) / (Q.maxAnnoLength + Q.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" domain="' + (l + 1).toString() + '" from="' + L + '" to="' + F + '" shorttitle="' + z + '" index="' + l + '" setname="' + Z + "_domain_" + l + "_" + v + '" id="' + Z + "_domain_" + l + "_" + v + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + m + " </div>"
                                    }
                                }
                            U = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + w.toString() + " Residues</span>", U += "</span>", r += U += "<br>", s += U, s += '<div id="' + Q.pre + Z + "_" + h + "_" + v + '_cddseq" style="display:none; white-space:normal;" class="icn3d-box">' + u + ' (<a href="' + Q.baseUrl + "cdd/cddsrv.cgi?uid=" + h + '" target="_blank" class="icn3d-blue">open details view...</a>)</div>'
                        }
                    }
                    r += "</div>", s += "</div>", a += "</div>", $("#" + Q.pre + "dt_cdd_" + Z).html(r), $("#" + Q.pre + "ov_cdd_" + Z).html(s), $("#" + Q.pre + "tt_cdd_" + Z).html(a), a = s = r = '<div id="' + Q.pre + Z + '_siteseq_sequence" class="icn3d-dl_sequence">';
                    var N = e.data[i].sites;
                    for (d = void 0 !== N ? N.length : 0, l = 0; l < d; ++l) {
                        var z, q, j, U;
                        m = N[l].srcdom, p = N[l].type, w = N[l].sz;
                        17 < (z = "site: " + N[l].title).length && (z = z.substr(0, 17) + "...");
                        f = N[l].title;
                        var B = [];
                        for (R = 0, D = N[l].locs.length; R < D; ++R)
                            for (var G = N[l].locs[R].coords, V = (P = 0, G.length); P < V; ++P) B.push(Math.round(G[P]) + Q.baseResi[Z]);
                        a += (q = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" site="site" posarray="' + B.toString() + '" shorttitle="' + z + '" setname="' + Z + "_site_" + l + '" anno="sequence" chain="' + Z + '" title="' + f + '">' + z + " </div>") + (j = '<span class="icn3d-residueNum" title="residue count">' + w.toString() + " Res</span>") + "<br>", r += q + j + (U = '<span class="icn3d-seqLine">'), s += q + j + U;
                        E = "site" + l.toString(), Q.seqAnnWidth, Q.maxAnnoLength;
                        var W = 0,
                            Y = 0;
                        for (R = 0, D = Q.giSeq[Z].length; R < D; ++R)
                            if (r += Q.insertGap(Z, R, "-"), -1 != G.indexOf(R)) {
                                var X;
                                O = X = Q.giSeq[Z][R];
                                1 < X.length && (O = X[0] + "..");
                                var K;
                                T = R >= Q.matchedPos[Z] && R - Q.matchedPos[Z] < Q.icn3d.chainsSeq[Z].length ? Q.icn3d.chainsSeq[Z][R - Q.matchedPos[Z]].resi : Q.baseResi[Z] + 1 + R;
                                r += '<span id="' + E + "_" + Q.pre + Z + "_" + T + '" title="' + O + T + '" class="icn3d-residue">' + X + "</span>", s += Q.insertGapOverview(Z, R), 0 <= (K = Q.cfg.blast_rep_id == Z ? Math.round(Q.seqAnnWidth * R / (Q.maxAnnoLength + Q.nTotalGap) - W - Y) : Math.round(Q.seqAnnWidth * R / Q.maxAnnoLength - W - Y)) && (s += '<div style="display:inline-block; width:' + K + 'px;">&nbsp;</div>', s += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + O + T + '">&nbsp;</div>', W += K, Y += 1)
                            } else r += "<span>-</span>";
                        U = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + w.toString() + " Residues</span>", U += "</span>", r += U += "<br>", s += U
                    }
                    r += "</div>", s += "</div>", a += "</div>", $("#" + Q.pre + "dt_site_" + Z).html(r), $("#" + Q.pre + "ov_site_" + Z).html(s), $("#" + Q.pre + "tt_site_" + Z).html(a)
                }
                for (var Z in Q.protein_chainid) t.hasOwnProperty(Z) || ($("#" + Q.pre + "dt_cdd_" + Z).html(""), $("#" + Q.pre + "ov_cdd_" + Z).html(""), $("#" + Q.pre + "tt_cdd_" + Z).html(""), $("#" + Q.pre + "dt_site_" + Z).html(""), $("#" + Q.pre + "ov_site_" + Z).html(""), $("#" + Q.pre + "tt_site_" + Z).html(""));
                Q.enableHlSeq(), Q.bAjaxCddSite = !0, void 0 !== Q.deferredAnnoCddSite && Q.deferredAnnoCddSite.resolve()
            },
            error: function(e, t, i) {
                if (this.tryCount++, this.tryCount <= this.retryLimit) $.ajax(this);
                else {
                    for (var n in console.log("No CDD data were found for the protein " + o + "..."), Q.protein_chainid) $("#" + Q.pre + "dt_cdd_" + n).html(""), $("#" + Q.pre + "ov_cdd_" + n).html(""), $("#" + Q.pre + "tt_cdd_" + n).html(""), $("#" + Q.pre + "dt_site_" + n).html(""), $("#" + Q.pre + "ov_site_" + n).html(""), $("#" + Q.pre + "tt_site_" + n).html("");
                    Q.enableHlSeq(), Q.bAjaxCddSite = !0, void 0 !== Q.deferredAnnoCddSite && Q.deferredAnnoCddSite.resolve()
                }
            }
        })
    }, iCn3DUI.prototype.showDomainPerStructure = function(r) {
        var a = this,
            c = Object.keys(a.icn3d.structures),
            d = c[r],
            e = a.baseUrl + "mmdb/mmdb_strview.cgi?v=2&program=icn3d&domain&molinfor&uid=" + d;
        if (0 == r && void 0 !== a.mmdb_data)
            for (var t in a.protein_chainid) - 1 !== t.indexOf(d) && a.showDomainWithData(t, a.mmdb_data);
        else if (void 0 !== a.mmdb_dataArray[r])
            for (var t in a.protein_chainid) - 1 !== t.indexOf(d) && a.showDomainWithData(t, a.mmdb_dataArray[r]);
        else $.ajax({
            url: e,
            dataType: "json",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                for (var t in a.mmdb_dataArray[r] = e, a.protein_chainid) - 1 !== t.indexOf(d) && a.showDomainWithData(t, a.mmdb_dataArray[r]);
                if (a.enableHlSeq(), a.bAjax3ddomain = !0, a.bAjaxDoneArray[r] = !0, void 0 !== a.deferred3ddomain)
                    if (void 0 === a.cfg.align || void 0 === a.cfg.chainalign || a.bRealign) a.deferred3ddomain.resolve();
                    else {
                        for (var i = !0, n = 0, o = c.length; n < o; ++n) i = i && a.bAjaxDoneArray[n];
                        i && a.deferred3ddomain.resolve()
                    }
            },
            error: function(e, t, i) {
                if (this.tryCount++, this.tryCount <= this.retryLimit) $.ajax(this);
                else {
                    for (var n in console.log("No 3D domain data were found for the protein " + d + "..."), a.protein_chainid) - 1 !== n.indexOf(d) && ($("#" + a.pre + "dt_domain_" + n).html(""), $("#" + a.pre + "ov_domain_" + n).html(""), $("#" + a.pre + "tt_domain_" + n).html(""));
                    if (a.enableHlSeq(), a.bAjax3ddomain = !0, bAjaxDone1 = !0, void 0 !== a.deferred3ddomain)
                        if (void 0 === a.cfg.align || void 0 === a.cfg.chainalign) a.deferred3ddomain.resolve();
                        else {
                            for (var o = !0, r = 0, s = c.length; r < s; ++r) o = o && a.bAjaxDoneArray[r];
                            o && a.deferred3ddomain.resolve()
                        }
                }
            }
        })
    }, iCn3DUI.prototype.showDomainAll = function() {
        var e = Object.keys(this.icn3d.structures);
        this.mmdb_dataArray = [], this.bAjaxDoneArray = [];
        for (var t = 0, i = e.length; t < i; ++t) this.bAjaxDoneArray[t] = !1;
        for (t = 0, i = e.length; t < i; ++t) this.showDomainPerStructure(t)
    }, iCn3DUI.prototype.showDomainWithData = function(e, t) {
        var i, n, o, r = this,
            s = '<div id="' + r.pre + e + '_domainseq_sequence" class="icn3d-dl_sequence">',
            a = s,
            c = s,
            d = e.indexOf("_"),
            l = e.substr(d + 1),
            h = t.moleculeInfor;
        for (var p in h)
            if (h[p].chain === l) {
                n = h[o = p].name;
                break
            } void 0 !== o && void 0 !== t.domains[o] && (i = t.domains[o].domains), void 0 === i && (i = []);
        for (var m = 0, u = i.length; m < u; ++m) {
            for (var f = "3D domain " + (m + 1).toString() + " of " + n, g = 17 < f.length ? f.substr(0, 17) + "..." : f, v = i[m].intervals, b = {}, y = {}, _ = [], C = [], w = {}, S = 0, k = 0, A = v.length; k < A; ++k) {
                var x = Math.round(v[k][0]) - 1,
                    R = Math.round(v[k][1]) - 1;
                if (!b.hasOwnProperty(x) && !y.hasOwnProperty(R)) {
                    b[x] = 1, y[R] = 1, _.push(x + r.baseResi[e]), C.push(R + r.baseResi[e]), S += R - x + 1;
                    for (var E = x; E <= R; ++E) w[E + 1] = 1
                }
            }
            var D = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (m + 1).toString() + '" from="' + _ + '" to="' + C + '" shorttitle="' + g + '" index="' + m + '" setname="' + e + "_3d_domain_" + (m + 1).toString() + '" anno="sequence" chain="' + e + '" title="' + f + '">' + g + " </div>",
                O = '<span class="icn3d-residueNum" title="residue count">' + S.toString() + " Res</span>";
            c += D + O + "<br>";
            var T = '<span class="icn3d-seqLine">';
            s += D + O + T, a += D + O + T;
            var H = "domain3d" + m.toString();
            for (k = 0, A = r.giSeq[e].length; k < A; ++k)
                if (s += r.insertGap(e, k, "-"), w.hasOwnProperty(k + 1)) {
                    var M = r.giSeq[e][k],
                        I = M;
                    1 < M.length && (I = M[0] + "..");
                    d = k >= r.matchedPos[e] && k - r.matchedPos[e] < r.icn3d.chainsSeq[e].length ? r.icn3d.chainsSeq[e][k - r.matchedPos[e]].resi : r.baseResi[e] + 1 + k;
                    s += '<span id="' + H + "_" + r.pre + e + "_" + d + '" title="' + I + d + '" class="icn3d-residue">' + M + "</span>"
                } else s += "<span>-</span>";
            var L = r.icn3d.getFirstCalphaAtomObj(r.icn3d.chains[e]),
                F = void 0 === L.color || "FFFFFF" === L.color.getHexString() ? "DDDDDD" : L.color.getHexString(),
                P = void 0 !== L.color ? F : "CCCCCC";
            if (r.cfg.blast_rep_id != e)
                for (k = 0, A = _.length; k < A; ++k) {
                    a += '<div style="display:inline-block; width:' + (0 == k ? Math.round(r.seqAnnWidth * (_[k] - r.baseResi[e] - 1) / r.maxAnnoLength) : Math.round(r.seqAnnWidth * (_[k] - C[k - 1] - 1) / r.maxAnnoLength)) + 'px;">&nbsp;</div>', a += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + P + "; width:" + Math.round(r.seqAnnWidth * (C[k] - _[k] + 1) / r.maxAnnoLength) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (m + 1).toString() + '" from="' + _ + '" to="' + C + '" shorttitle="' + g + '" index="' + m + '" setname="' + e + "_3d_domain_" + (m + 1).toString() + '" id="' + e + "_3d_domain_" + m + '" anno="sequence" chain="' + e + '" title="' + f + '">3D domain ' + (m + 1).toString() + "</div>"
                } else {
                    var N = [],
                        z = [];
                    for (k = 0, A = _.length; k < A; ++k) {
                        N.push(_[k]);
                        for (E = _[k]; E <= C[k]; ++E) void 0 !== r.targetGapHash && r.targetGapHash.hasOwnProperty(E) && (z.push(E - 1), N.push(E));
                        z.push(C[k])
                    }
                    for (k = 0, A = N.length; k < A; ++k) {
                        a += r.insertGapOverview(e, N[k]), a += '<div style="display:inline-block; width:' + (0 == k ? Math.round(r.seqAnnWidth * (N[k] - r.baseResi[e] - 1) / (r.maxAnnoLength + r.nTotalGap)) : Math.round(r.seqAnnWidth * (N[k] - z[k - 1] - 1) / (r.maxAnnoLength + r.nTotalGap))) + 'px;">&nbsp;</div>', a += '<div style="display:inline-block; color:white!important; font-weight:bold; background-color:#' + P + "; width:" + Math.round(r.seqAnnWidth * (z[k] - N[k] + 1) / (r.maxAnnoLength + r.nTotalGap)) + 'px;" class="icn3d-seqTitle icn3d-link icn3d-blue" 3ddomain="' + (m + 1).toString() + '" from="' + N + '" to="' + z + '" shorttitle="' + g + '" index="' + m + '" setname="' + e + "_3d_domain_" + (m + 1).toString() + '" id="' + e + "_3d_domain_" + m + '" anno="sequence" chain="' + e + '" title="' + f + '">3D domain ' + (m + 1).toString() + "</div>"
                    }
                }
            T = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + S.toString() + " Residues</span>", T += "</span>", s += T += "<br>", a += T
        }
        s += "</div>", a += "</div>", c += "</div>", $("#" + r.pre + "dt_domain_" + e).html(s), $("#" + r.pre + "ov_domain_" + e).html(a), $("#" + r.pre + "tt_domain_" + e).html(c)
    }, iCn3DUI.prototype.showInteraction = function(e, t) {
        var i = this;
        void 0 !== i.chainname2residues || void 0 === i.cfg.mmdbid && void 0 === i.cfg.gi && void 0 === i.cfg.blast_rep_id && void 0 === i.cfg.align && void 0 === i.cfg.chainalign ? i.showInteraction_base(e, t) : setTimeout(function() {
            i.showInteraction_base(e, t)
        }, 1e3)
    }, iCn3DUI.prototype.showInteraction_base = function(e, t) {
        var i = this;
        void 0 === i.chainname2residues && (i.chainname2residues = {});
        var n = Object.keys(i.icn3d.chains),
            o = e;
        if (!(4 < (z = Math.round(o.indexOf("_"))))) {
            var r = i.icn3d.getFirstCalphaAtomObj(i.icn3d.chains[o]);
            if (void 0 === i.chainname2residues[o]) {
                i.chainname2residues[o] = {};
                var s = n.length;
                if (100 < s && void 0 === i.cfg.mmdbid && void 0 === i.cfg.gi && void 0 === i.cfg.blast_rep_id && void 0 === i.cfg.align && void 0 === i.cfg.chainalign) return $("#" + i.pre + "dt_interaction_" + e).html(""), void $("#" + i.pre + "ov_interaction_" + e).html("");
                for (var a = 0; a < s; ++a) {
                    var c = n[a];
                    if (c !== o && (c.substr(0, c.indexOf("_")) === o.substr(0, o.indexOf("_")) && !(4 < (z = Math.round(o.indexOf("_")))))) {
                        var d, l = i.icn3d.getFirstCalphaAtomObj(i.icn3d.chains[c]);
                        i.icn3d.chemicals.hasOwnProperty(l.serial) ? d = "chemical" : i.icn3d.nucleotides.hasOwnProperty(l.serial) ? d = "nucleotide" : i.icn3d.ions.hasOwnProperty(l.serial) ? d = "ion" : i.icn3d.proteins.hasOwnProperty(l.serial) ? d = "protein" : i.icn3d.water.hasOwnProperty(l.serial) && (d = "water");
                        var h = i.icn3d.getAtomsWithinAtom(i.icn3d.hash2Atoms(i.icn3d.chains[o]), i.icn3d.hash2Atoms(i.icn3d.chains[c]), 4);
                        if (0 != Object.keys(h).length) {
                            var p = {};
                            for (var m in h) {
                                p[(r = i.icn3d.atoms[m]).structure + "_" + r.chain + "_" + r.resi] = 1
                            }
                            var u = c.substr(c.indexOf("_") + 1) + " (" + d + ")";
                            i.chainname2residues[o][u] = Object.keys(p)
                        }
                    }
                }
            }
            var f = '<div id="' + i.pre + e + '_interseq_sequence" class="icn3d-dl_sequence">',
                g = f,
                v = f,
                b = 0;
            for (var y in i.chainname2residues[e]) {
                var _ = i.chainname2residues[e][y],
                    C = "Interact ." + y;
                17 < C.length && (C = C.substr(0, 17) + "...");
                for (var w = "Interact ." + y, S = [], k = 0, A = _.length; k < A; ++k) {
                    var x = _[k],
                        R = Math.round(x.substr(_[k].lastIndexOf("_") + 1)),
                        E = Object.keys(i.icn3d.residues[x])[0];
                    (i.icn3d.proteins.hasOwnProperty(E) || i.icn3d.nucleotides.hasOwnProperty(E)) && S.push(R)
                }
                var D = S.length;
                if (0 != D) {
                    var O = y.replace(/\s/g, ""),
                        T = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" interaction="' + (b + 1).toString() + '" posarray="' + S.toString() + '" shorttitle="' + C + '" setname="' + e + "_" + O + '" anno="sequence" chain="' + e + '" title="' + w + '">' + C + " </div>",
                        H = '<span class="icn3d-residueNum" title="residue count">' + D.toString() + " Res</span>";
                    v += T + H + "<br>";
                    var M = '<span class="icn3d-seqLine">';
                    f += T + H + M, g += T + H + M;
                    var I = "inter" + b.toString(),
                        L = 0,
                        F = 0;
                    for (k = 0, A = i.giSeq[e].length; k < A; ++k)
                        if (f += i.insertGap(e, k, "-"), -1 != S.indexOf(k + 1 + i.baseResi[e])) {
                            var P = i.giSeq[e][k],
                                N = P;
                            1 < P.length && (N = P[0] + "..");
                            var z = k >= i.matchedPos[e] && k - i.matchedPos[e] < i.icn3d.chainsSeq[e].length ? i.icn3d.chainsSeq[e][k - i.matchedPos[e]].resi : i.baseResi[e] + 1 + k;
                            f += '<span id="' + I + "_" + i.pre + e + "_" + z + '" title="' + P + z + '" class="icn3d-residue">' + N + "</span>", g += i.insertGapOverview(e, k);
                            var q = i.cfg.blast_rep_id == e ? Math.round(i.seqAnnWidth * k / (i.maxAnnoLength + i.nTotalGap) - L - F) : Math.round(i.seqAnnWidth * k / i.maxAnnoLength - L - F);
                            0 <= q && (g += '<div style="display:inline-block; width:' + q + 'px;">&nbsp;</div>', g += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + N + z + '">&nbsp;</div>', L += q, F += 1)
                        } else f += "<span>-</span>";
                    M = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + D.toString() + " Residues</span>", M += "</span>", f += M += "<br>", g += M, ++b
                }
            }
            f += "</div>", g += "</div>", v += "</div>", $("#" + i.pre + "dt_interaction_" + e).html(f), $("#" + i.pre + "ov_interaction_" + e).html(g), $("#" + i.pre + "tt_interaction_" + e).html(v), i.isMobile() ? (i.selectSequenceMobile(), i.selectChainMobile()) : i.selectSequenceNonMobile()
        }
    }, iCn3DUI.prototype.showSsbond = function(e, t) {
        var i = this;
        void 0 === i.icn3d.ssbondpnts ? setTimeout(function() {
            i.showSsbond_base(e, t)
        }, 1e3) : i.showSsbond_base(e, t)
    }, iCn3DUI.prototype.showSsbond_base = function(e, t) {
        var i = t,
            n = {},
            o = i.substr(0, i.indexOf("_")),
            r = this.icn3d.ssbondpnts[o];
        if (void 0 === r) return $("#" + this.pre + "dt_ssbond_" + e).html(""), $("#" + this.pre + "ov_ssbond_" + e).html(""), void $("#" + this.pre + "tt_ssbond_" + e).html("");
        for (var s = 0, a = r.length; s < a; s += 2) {
            var c = r[s],
                d = r[s + 1],
                l = c.substr(0, c.lastIndexOf("_")),
                h = d.substr(0, d.lastIndexOf("_"));
            i === l && (void 0 === n[c] && (n[c] = []), n[c].push(d)), i === h && (void 0 === n[d] && (n[d] = []), n[d].push(c))
        }
        var p = Object.keys(n);
        this.showAnnoType(e, t, "ssbond", "Disulfide Bonds", p, n)
    }, iCn3DUI.prototype.showCrosslink = function(e, t) {
        var i = this;
        void 0 === i.icn3d.clbondpnts ? setTimeout(function() {
            i.showCrosslink_base(e, t)
        }, 1e3) : i.showCrosslink_base(e, t)
    }, iCn3DUI.prototype.showCrosslink_base = function(e, t) {
        var i = t,
            n = {},
            o = i.substr(0, i.indexOf("_")),
            r = this.icn3d.clbondpnts[o];
        if (void 0 === r) return $("#" + this.pre + "dt_crosslink_" + e).html(""), $("#" + this.pre + "ov_crosslink_" + e).html(""), void $("#" + this.pre + "tt_crosslink_" + e).html("");
        for (var s = 0, a = r.length; s < a; s += 2) {
            var c = r[s],
                d = r[s + 1];
            c.substr(0, c.lastIndexOf("_"));
            i === d.substr(0, d.lastIndexOf("_")) && (void 0 === n[d] && (n[d] = []), n[d].push(c))
        }
        var l = Object.keys(n);
        this.showAnnoType(e, t, "crosslink", "Cross-Linkages", l, n)
    }, iCn3DUI.prototype.showTransmem = function(e, t) {
        var i = this;
        void 0 === i.icn3d.ssbondpnts ? setTimeout(function() {
            i.showTransmem_base(e, t)
        }, 1e3) : i.showTransmem_base(e, t)
    }, iCn3DUI.prototype.showTransmem_base = function(e, t) {
        var i = {};
        for (var n in this.icn3d.chains[t]) {
            var o = this.icn3d.atoms[n];
            if (o.coord.z < this.icn3d.halfBilayerSize && o.coord.z > -this.icn3d.halfBilayerSize) i[o.structure + "_" + o.chain + "_" + o.resi] = 1
        }
        var r = Object.keys(i);
        this.showAnnoType(e, t, "transmem", "Transmembrane domain", r)
    }, iCn3DUI.prototype.showAnnoType = function(e, t, i, n, o, r) {
        var s = this,
            a = '<div id="' + s.pre + e + "_" + i + 'seq_sequence" class="icn3d-dl_sequence">',
            c = a,
            d = a;
        if (0 == o.length) return $("#" + s.pre + "dt_" + i + "_" + e).html(""), $("#" + s.pre + "ov_" + i + "_" + e).html(""), void $("#" + s.pre + "tt_" + i + "_" + e).html("");
        var l = n;
        17 < n.length && (n = n.substr(0, 17) + "...");
        for (var h = [], p = 0, m = o.length; p < m; ++p) {
            var u = o[p],
                f = Math.round(u.substr(o[p].lastIndexOf("_") + 1));
            h.push(f)
        }
        var g = h.length,
            v = i,
            b = '<div class="icn3d-seqTitle icn3d-link icn3d-blue" ' + i + '="" posarray="' + h.toString() + '" shorttitle="' + n + '" setname="' + e + "_" + v + '" anno="sequence" chain="' + e + '" title="' + l + '">' + n + " </div>",
            y = '<span class="icn3d-residueNum" title="residue count">' + g.toString() + " Res</span>";
        d += b + y + "<br>";
        var _ = '<span class="icn3d-seqLine">';
        a += b + y + _, c += b + y + _;
        var C = i,
            w = 0,
            S = 0;
        for (p = 0, m = s.giSeq[e].length; p < m; ++p)
            if (a += s.insertGap(e, p, "-"), -1 != h.indexOf(p + 1 + s.baseResi[e])) {
                var k = s.giSeq[e][p],
                    A = k;
                1 < k.length && (A = k[0] + "..");
                var x = p >= s.matchedPos[e] && p - s.matchedPos[e] < s.icn3d.chainsSeq[e].length ? s.icn3d.chainsSeq[e][p - s.matchedPos[e]].resi : s.baseResi[e] + 1 + p;
                u = e + "_" + (p + 1 + s.baseResi[e]).toString(), n = k + (p + 1 + s.baseResi[e]).toString();
                if ("ssbond" == i) {
                    if (n = "Residue " + u + " has disulfide bond with", void 0 !== r[u])
                        for (var R = 0, E = r[u].length; R < E; ++R) n += " residue " + r[u][R]
                } else if ("crosslink" == i && (n = "Residue " + u + " has cross-linkage with", void 0 !== r[u]))
                    for (R = 0, E = r[u].length; R < E; ++R) n += " residue " + r[u][R];
                a += '<span id="' + C + "_" + s.pre + e + "_" + x + '" title="' + n + '" class="icn3d-residue">' + A + "</span>", c += s.insertGapOverview(e, p);
                var D = s.cfg.blast_rep_id == e ? Math.round(s.seqAnnWidth * p / (s.maxAnnoLength + s.nTotalGap) - w - S) : Math.round(s.seqAnnWidth * p / s.maxAnnoLength - w - S);
                0 <= D && (c += '<div style="display:inline-block; width:' + D + 'px;">&nbsp;</div>', c += '<div style="display:inline-block; background-color:#000; width:1px;" title="' + n + '">&nbsp;</div>', w += D, S += 1)
            } else a += "<span>-</span>";
        _ = '<span class="icn3d-residueNum" title="residue count">&nbsp;' + g.toString() + " Residues</span>", _ += "</span>", a += _ += "<br>", c += _, a += "</div>", c += "</div>", d += "</div>", $("#" + s.pre + "dt_" + i + "_" + e).html(a), $("#" + s.pre + "ov_" + i + "_" + e).html(c), $("#" + s.pre + "tt_" + i + "_" + e).html(d)
    }, iCn3DUI.prototype.hideAllAnno = function() {
        this.hideAllAnnoBase(), $("[id^=" + this.pre + "custom]").hide()
    }, iCn3DUI.prototype.hideAllAnnoBase = function() {
        $("[id^=" + this.pre + "site]").hide(), $("[id^=" + this.pre + "snp]").hide(), $("[id^=" + this.pre + "clinvar]").hide(), $("[id^=" + this.pre + "cdd]").hide(), $("[id^=" + this.pre + "domain]").hide(), $("[id^=" + this.pre + "interaction]").hide(), $("[id^=" + this.pre + "ssbond]").hide(), $("[id^=" + this.pre + "crosslink]").hide(), $("[id^=" + this.pre + "transmem]").hide()
    }, iCn3DUI.prototype.setAnnoTabAll = function() {
        var e = this;
        $("#" + e.pre + "anno_all").length && ($("#" + e.pre + "anno_all")[0].checked = !0), $("#" + e.pre + "anno_binding").length && ($("#" + e.pre + "anno_binding")[0].checked = !0), $("#" + e.pre + "anno_snp").length && ($("#" + e.pre + "anno_snp")[0].checked = !0), $("#" + e.pre + "anno_clinvar").length && ($("#" + e.pre + "anno_clinvar")[0].checked = !0), $("#" + e.pre + "anno_cdd").length && ($("#" + e.pre + "anno_cdd")[0].checked = !0), $("#" + e.pre + "anno_3dd").length && ($("#" + e.pre + "anno_3dd")[0].checked = !0), $("#" + e.pre + "anno_interact").length && ($("#" + e.pre + "anno_interact")[0].checked = !0), $("#" + e.pre + "anno_custom").length && ($("#" + e.pre + "anno_custom")[0].checked = !0), $("#" + e.pre + "anno_ssbond").length && ($("#" + e.pre + "anno_ssbond")[0].checked = !0), $("#" + e.pre + "anno_crosslink").length && ($("#" + e.pre + "anno_crosslink")[0].checked = !0), $("#" + e.pre + "anno_transmem").length && ($("#" + e.pre + "anno_transmem")[0].checked = !0), $("[id^=" + e.pre + "site]").show(), $("[id^=" + e.pre + "snp]").show(), $("[id^=" + e.pre + "clinvar]").show(), $("[id^=" + e.pre + "cdd]").show(), $("[id^=" + e.pre + "domain]").show(), $("[id^=" + e.pre + "interaction]").show(), $("[id^=" + e.pre + "custom]").show(), $("[id^=" + e.pre + "ssbond]").show(), $("[id^=" + e.pre + "crosslink]").show(), $("[id^=" + e.pre + "transmem]").show(), e.updateClinvar(), e.updateSnp(), e.updateDomain(), e.updateInteraction(), e.updateSsbond(), e.updateCrosslink(), e.updateTransmem()
    }, iCn3DUI.prototype.hideAnnoTabAll = function() {
        var e = this;
        $("#" + e.pre + "anno_all").length && ($("#" + e.pre + "anno_all")[0].checked = !1), $("#" + e.pre + "anno_binding").length && ($("#" + e.pre + "anno_binding")[0].checked = !1), $("#" + e.pre + "anno_snp").length && ($("#" + e.pre + "anno_snp")[0].checked = !1), $("#" + e.pre + "anno_clinvar").length && ($("#" + e.pre + "anno_clinvar")[0].checked = !1), $("#" + e.pre + "anno_cdd").length && ($("#" + e.pre + "anno_cdd")[0].checked = !1), $("#" + e.pre + "anno_3dd").length && ($("#" + e.pre + "anno_3dd")[0].checked = !1), $("#" + e.pre + "anno_interact").length && ($("#" + e.pre + "anno_interact")[0].checked = !1), $("#" + e.pre + "anno_custom").length && ($("#" + e.pre + "anno_custom")[0].checked = !1), $("#" + e.pre + "anno_ssbond").length && ($("#" + e.pre + "anno_ssbond")[0].checked = !1), $("#" + e.pre + "anno_crosslink").length && ($("#" + e.pre + "anno_crosslink")[0].checked = !1), $("#" + e.pre + "anno_transmem").length && ($("#" + e.pre + "anno_transmem")[0].checked = !1), e.hideAllAnno()
    }, iCn3DUI.prototype.resetAnnoTabAll = function() {
        var e = this;
        $("#" + e.pre + "anno_binding").length && $("#" + e.pre + "anno_binding")[0].checked && $("[id^=" + e.pre + "site]").show(), $("#" + e.pre + "anno_snp").length && $("#" + e.pre + "anno_snp")[0].checked && ($("[id^=" + e.pre + "snp]").show(), e.bSnpShown = !1, e.updateSnp()), $("#" + e.pre + "anno_clinvar").length && $("#" + e.pre + "anno_clinvar")[0].checked && ($("[id^=" + e.pre + "clinvar]").show(), e.bClinvarShown = !1, e.updateClinvar()), $("#" + e.pre + "anno_cdd").length && $("#" + e.pre + "anno_cdd")[0].checked && $("[id^=" + e.pre + "cdd]").show(), $("#" + e.pre + "anno_3dd").length && $("#" + e.pre + "anno_3dd")[0].checked && ($("[id^=" + e.pre + "domain]").show(), e.bDomainShown = !1, e.updateDomain()), $("#" + e.pre + "anno_interact").length && $("#" + e.pre + "anno_interact")[0].checked && ($("[id^=" + e.pre + "interaction]").show(), e.bInteractionShown = !1, e.updateInteraction()), $("#" + e.pre + "anno_custom").length && $("#" + e.pre + "anno_custom")[0].checked && $("[id^=" + e.pre + "custom]").show(), $("#" + e.pre + "anno_ssbond").length && $("#" + e.pre + "anno_ssbond")[0].checked && ($("[id^=" + e.pre + "ssbond]").show(), e.bSSbondShown = !1, e.updateSsbond()), $("#" + e.pre + "anno_crosslink").length && $("#" + e.pre + "anno_crosslink")[0].checked && ($("[id^=" + e.pre + "crosslink]").show(), e.bCrosslinkShown = !1, e.updateCrosslink()), $("#" + e.pre + "anno_transmem").length && $("#" + e.pre + "anno_transmem")[0].checked && ($("[id^=" + e.pre + "transmem]").show(), e.bTranememShown = !1, e.updateTransmem())
    }, iCn3DUI.prototype.setAnnoTabCustom = function() {
        $("[id^=" + this.pre + "custom]").show(), $("#" + this.pre + "anno_custom").length && ($("#" + this.pre + "anno_custom")[0].checked = !0)
    }, iCn3DUI.prototype.hideAnnoTabCustom = function() {
        $("[id^=" + this.pre + "custom]").hide(), $("#" + this.pre + "anno_custom").length && ($("#" + this.pre + "anno_custom")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabClinvar = function() {
        $("[id^=" + this.pre + "clinvar]").show(), $("#" + this.pre + "anno_clinvar").length && ($("#" + this.pre + "anno_clinvar")[0].checked = !0), this.updateClinvar()
    }, iCn3DUI.prototype.hideAnnoTabClinvar = function() {
        $("[id^=" + this.pre + "clinvar]").hide(), $("#" + this.pre + "anno_clinvar").length && ($("#" + this.pre + "anno_clinvar")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabSnp = function() {
        $("[id^=" + this.pre + "snp]").show(), $("#" + this.pre + "anno_snp").length && ($("#" + this.pre + "anno_snp")[0].checked = !0), this.updateSnp()
    }, iCn3DUI.prototype.hideAnnoTabSnp = function() {
        $("[id^=" + this.pre + "snp]").hide(), $("#" + this.pre + "anno_snp").length && ($("#" + this.pre + "anno_snp")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabCdd = function() {
        $("[id^=" + this.pre + "cdd]").show(), $("#" + this.pre + "anno_cdd").length && ($("#" + this.pre + "anno_cdd")[0].checked = !0)
    }, iCn3DUI.prototype.hideAnnoTabCdd = function() {
        $("[id^=" + this.pre + "cdd]").hide(), $("#" + this.pre + "anno_cdd").length && ($("#" + this.pre + "anno_cdd")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTab3ddomain = function() {
        $("[id^=" + this.pre + "domain]").show(), $("#" + this.pre + "anno_3dd").length && ($("#" + this.pre + "anno_3dd")[0].checked = !0), this.updateDomain()
    }, iCn3DUI.prototype.hideAnnoTab3ddomain = function() {
        $("[id^=" + this.pre + "domain]").hide(), $("#" + this.pre + "anno_3dd").length && ($("#" + this.pre + "anno_3dd")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabSite = function() {
        $("[id^=" + this.pre + "site]").show(), $("#" + this.pre + "anno_binding").length && ($("#" + this.pre + "anno_binding")[0].checked = !0)
    }, iCn3DUI.prototype.hideAnnoTabSite = function() {
        $("[id^=" + this.pre + "site]").hide(), $("#" + this.pre + "anno_binding").length && ($("#" + this.pre + "anno_binding")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabInteraction = function() {
        $("[id^=" + this.pre + "interaction]").show(), $("#" + this.pre + "anno_interact").length && ($("#" + this.pre + "anno_interact")[0].checked = !0), this.updateInteraction()
    }, iCn3DUI.prototype.hideAnnoTabInteraction = function() {
        $("[id^=" + this.pre + "interaction]").hide(), $("#" + this.pre + "anno_interact").length && ($("#" + this.pre + "anno_interact")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabSsbond = function() {
        $("[id^=" + this.pre + "ssbond]").show(), $("#" + this.pre + "anno_ssbond").length && ($("#" + this.pre + "anno_ssbond")[0].checked = !0), this.updateSsbond()
    }, iCn3DUI.prototype.hideAnnoTabSsbond = function() {
        $("[id^=" + this.pre + "ssbond]").hide(), $("#" + this.pre + "anno_ssbond").length && ($("#" + this.pre + "anno_ssbond")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabCrosslink = function() {
        $("[id^=" + this.pre + "crosslink]").show(), $("#" + this.pre + "anno_crosslink").length && ($("#" + this.pre + "anno_crosslink")[0].checked = !0), this.updateCrosslink()
    }, iCn3DUI.prototype.hideAnnoTabCrosslink = function() {
        $("[id^=" + this.pre + "crosslink]").hide(), $("#" + this.pre + "anno_crosslink").length && ($("#" + this.pre + "anno_crosslink")[0].checked = !1)
    }, iCn3DUI.prototype.setAnnoTabTransmem = function() {
        $("[id^=" + this.pre + "transmem]").show(), $("#" + this.pre + "anno_transmem").length && ($("#" + this.pre + "anno_transmem")[0].checked = !0), this.updateTransmem()
    }, iCn3DUI.prototype.hideAnnoTabTransmem = function() {
        $("[id^=" + this.pre + "transmem]").hide(), $("#" + this.pre + "anno_transmem").length && ($("#" + this.pre + "anno_transmem")[0].checked = !1)
    }, iCn3DUI.prototype.setTabs = function() {
        var t = this;
        $("#" + t.pre + "dl_addtrack_tabs").tabs(), $("#" + t.pre + "dl_anno_view_tabs").tabs(), $("#" + t.pre + "anno_all").click(function(e) {
            $("#" + t.pre + "anno_all")[0].checked ? (t.setAnnoTabAll(), t.setLogCmd("set annotation all", !0)) : (t.hideAnnoTabAll(), t.setLogCmd("hide annotation all", !0))
        }), $("#" + t.pre + "anno_binding").click(function(e) {
            $("#" + t.pre + "anno_binding")[0].checked ? (t.setAnnoTabSite(), t.setLogCmd("set annotation site", !0)) : (t.hideAnnoTabSite(), t.setLogCmd("hide annotation site", !0))
        }), $("#" + t.pre + "anno_snp").click(function(e) {
            $("#" + t.pre + "anno_snp")[0].checked ? (t.setAnnoTabSnp(), t.setLogCmd("set annotation snp", !0)) : (t.hideAnnoTabSnp(), t.setLogCmd("hide annotation snp", !0))
        }), $("#" + t.pre + "anno_clinvar").click(function(e) {
            $("#" + t.pre + "anno_clinvar")[0].checked ? (t.setAnnoTabClinvar(), t.setLogCmd("set annotation clinvar", !0)) : (t.hideAnnoTabClinvar(), t.setLogCmd("hide annotation clinvar", !0))
        }), $("#" + t.pre + "anno_cdd").click(function(e) {
            t.clickCdd()
        }), $("#" + t.pre + "anno_3dd").click(function(e) {
            $("#" + t.pre + "anno_3dd")[0].checked ? (t.setAnnoTab3ddomain(), t.setLogCmd("set annotation 3ddomain", !0)) : (t.hideAnnoTab3ddomain(), t.setLogCmd("hide annotation 3ddomain", !0))
        }), $("#" + t.pre + "anno_interact").click(function(e) {
            $("#" + t.pre + "anno_interact")[0].checked ? (t.setAnnoTabInteraction(), t.setLogCmd("set annotation interaction", !0)) : (t.hideAnnoTabInteraction(), t.setLogCmd("hide annotation interaction", !0))
        }), $("#" + t.pre + "anno_custom").click(function(e) {
            $("#" + t.pre + "anno_custom")[0].checked ? (t.setAnnoTabCustom(), t.setLogCmd("set annotation custom", !0)) : (t.hideAnnoTabCustom(), t.setLogCmd("hide annotation custom", !0))
        }), $("#" + t.pre + "anno_ssbond").click(function(e) {
            $("#" + t.pre + "anno_ssbond")[0].checked ? (t.setAnnoTabSsbond(), t.setLogCmd("set annotation ssbond", !0)) : (t.hideAnnoTabSsbond(), t.setLogCmd("hide annotation ssbond", !0))
        }), $("#" + t.pre + "anno_crosslink").click(function(e) {
            $("#" + t.pre + "anno_crosslink")[0].checked ? (t.setAnnoTabCrosslink(), t.setLogCmd("set annotation crosslink", !0)) : (t.hideAnnoTabCrosslink(), t.setLogCmd("hide annotation crosslink", !0))
        }), $("#" + t.pre + "anno_transmem").click(function(e) {
            $("#" + t.pre + "anno_transmem").length && $("#" + t.pre + "anno_transmem")[0].checked ? (t.setAnnoTabTransmem(), t.setLogCmd("set annotation transmembrane", !0)) : (t.hideAnnoTabTransmem(), t.setLogCmd("hide annotation transmembrane", !0))
        })
    }, iCn3DUI.prototype.clickCdd = function() {
        0 < $("[id^=" + this.pre + "cdd]").length && ($("#" + this.pre + "anno_cdd")[0].checked ? (this.setAnnoTabCdd(), this.setLogCmd("set annotation cdd", !0)) : (this.hideAnnoTabCdd(), this.setLogCmd("hide annotation cdd", !0)))
    }, iCn3DUI.prototype.setToolTip = function() {
        $("[id^=" + this.pre + "snp]").add("[id^=" + this.pre + "clinvar]").add("[id^=" + this.pre + "ssbond]").add("[id^=" + this.pre + "crosslink]").tooltip({
            content: function() {
                return $(this).prop("title")
            },
            show: null,
            close: function(e, t) {
                t.tooltip.hover(function() {
                    $(this).stop(!0).fadeTo(400, 1)
                }, function() {
                    $(this).fadeOut("200", function() {
                        $(this).remove()
                    })
                })
            }
        })
    }, iCn3DUI.prototype.showAnnoSelectedChains = function() {
        var e = {};
        for (var t in this.icn3d.hAtoms) {
            e[i = (n = this.icn3d.atoms[t]).structure + "_" + n.chain] = 1
        }
        for (var i in $("#" + this.pre + "dl_annotations > .icn3d-annotation").hide(), e) {
            var n;
            if ($("#" + this.pre + "anno_" + i).length && $("#" + this.pre + "anno_" + i).show(), void 0 !== (n = this.icn3d.getFirstCalphaAtomObj(this.icn3d.chains[i])).resn) {
                var o = this.icn3d.residueName2Abbr(n.resn.substr(0, 3));
                $("#" + this.pre + "anno_" + o).show()
            }
        }
    }, iCn3DUI.prototype.showAnnoAllChains = function() {
        $("#" + this.pre + "dl_annotations > .icn3d-annotation").show()
    }, iCn3DUI.prototype.setAnnoView = function(e) {
        "detailed view" === e ? (this.view = "detailed view", $("#" + this.pre + "dl_anno_view_tabs").tabs("option", "active", 1)) : (this.view = "overview", $("#" + this.pre + "dl_anno_view_tabs").tabs("option", "active", 0))
    }, iCn3DUI.prototype.showFixedTitle = function() {
        var e = this,
            t = "display:block;";
        $("[id^=" + e.pre + "tt_giseq]").attr("style", t), $("[id^=" + e.pre + "tt_custom]").attr("style", t), $("[id^=" + e.pre + "tt_site]").attr("style", t), $("[id^=" + e.pre + "tt_snp]").attr("style", t), $("[id^=" + e.pre + "tt_clinvar]").attr("style", t), $("[id^=" + e.pre + "tt_cdd]").attr("style", t), $("[id^=" + e.pre + "tt_domain]").attr("style", t), $("[id^=" + e.pre + "tt_interaction]").attr("style", t), $("[id^=" + e.pre + "tt_ssbond]").attr("style", t), $("[id^=" + e.pre + "tt_crosslink]").attr("style", t), $("[id^=" + e.pre + "tt_transmem]").attr("style", t)
    }, iCn3DUI.prototype.hideFixedTitle = function() {
        var e = this,
            t = "display:none!important;";
        $("[id^=" + e.pre + "tt_giseq]").attr("style", t), $("[id^=" + e.pre + "tt_custom]").attr("style", t), $("[id^=" + e.pre + "tt_site]").attr("style", t), $("[id^=" + e.pre + "tt_snp]").attr("style", t), $("[id^=" + e.pre + "tt_clinvar]").attr("style", t), $("[id^=" + e.pre + "tt_cdd]").attr("style", t), $("[id^=" + e.pre + "tt_domain]").attr("style", t), $("[id^=" + e.pre + "tt_interaction]").attr("style", t), $("[id^=" + e.pre + "tt_ssbond]").attr("style", t), $("[id^=" + e.pre + "tt_crosslink]").attr("style", t), $("[id^=" + e.pre + "tt_transmem]").attr("style", t)
    }, iCn3DUI.prototype.setAnnoViewAndDisplay = function(e) {
        var t = this;
        if ("detailed view" === e) {
            t.setAnnoView("detailed view");
            var i = "display:block;";
            $("[id^=" + t.pre + "dt_giseq]").attr("style", i), $("[id^=" + t.pre + "dt_custom]").attr("style", i), $("[id^=" + t.pre + "dt_site]").attr("style", i), $("[id^=" + t.pre + "dt_snp]").attr("style", i), $("[id^=" + t.pre + "dt_clinvar]").attr("style", i), $("[id^=" + t.pre + "dt_cdd]").attr("style", i), $("[id^=" + t.pre + "dt_domain]").attr("style", i), $("[id^=" + t.pre + "dt_interaction]").attr("style", i), $("[id^=" + t.pre + "dt_ssbond]").attr("style", i), $("[id^=" + t.pre + "dt_crosslink]").attr("style", i), $("[id^=" + t.pre + "dt_transmem]").attr("style", i), $("#" + t.pre + "seqguide_wrapper").attr("style", i), i = "display:none;", $("[id^=" + t.pre + "ov_giseq]").attr("style", i), $("[id^=" + t.pre + "ov_custom]").attr("style", i), $("[id^=" + t.pre + "ov_site]").attr("style", i), $("[id^=" + t.pre + "ov_snp]").attr("style", i), $("[id^=" + t.pre + "ov_clinvar]").attr("style", i), $("[id^=" + t.pre + "ov_cdd]").attr("style", i), $("[id^=" + t.pre + "ov_domain]").attr("style", i), $("[id^=" + t.pre + "ov_interaction]").attr("style", i), $("[id^=" + t.pre + "ov_ssbond]").attr("style", i), $("[id^=" + t.pre + "ov_crosslink]").attr("style", i), $("[id^=" + t.pre + "ov_transmem]").attr("style", i)
        } else {
            t.setAnnoView("overview"), t.hideFixedTitle();
            i = "display:none;";
            $("[id^=" + t.pre + "dt_giseq]").attr("style", i), $("[id^=" + t.pre + "dt_custom]").attr("style", i), $("[id^=" + t.pre + "dt_site]").attr("style", i), $("[id^=" + t.pre + "dt_snp]").attr("style", i), $("[id^=" + t.pre + "dt_clinvar]").attr("style", i), $("[id^=" + t.pre + "dt_cdd]").attr("style", i), $("[id^=" + t.pre + "dt_domain]").attr("style", i), $("[id^=" + t.pre + "dt_interaction]").attr("style", i), $("[id^=" + t.pre + "dt_ssbond]").attr("style", i), $("[id^=" + t.pre + "dt_crosslink]").attr("style", i), $("[id^=" + t.pre + "dt_transmem]").attr("style", i), $("#" + t.pre + "seqguide_wrapper").attr("style", i), i = "display:block;", $("[id^=" + t.pre + "ov_giseq]").attr("style", i), $("[id^=" + t.pre + "ov_custom]").attr("style", i), $("[id^=" + t.pre + "ov_site]").attr("style", i), $("[id^=" + t.pre + "ov_snp]").attr("style", i), $("[id^=" + t.pre + "ov_clinvar]").attr("style", i), $("[id^=" + t.pre + "ov_cdd]").attr("style", i), $("[id^=" + t.pre + "ov_domain]").attr("style", i), $("[id^=" + t.pre + "ov_interaction]").attr("style", i), $("[id^=" + t.pre + "ov_ssbond]").attr("style", i), $("[id^=" + t.pre + "ov_crosslink]").attr("style", i), $("[id^=" + t.pre + "ov_transmem]").attr("style", i)
        }
    }, iCn3DUI.prototype.clickAddTrack = function() {
        var i = this;
        $(document).on("click", ".icn3d-addtrack", function(e) {
            e.stopImmediatePropagation(), $("#" + i.pre + "anno_custom")[0].checked = !0, $("[id^=" + i.pre + "custom]").show();
            var t = $(this).attr("chainid");
            $("#" + i.pre + "track_chainid").val(t), i.openDialog(i.pre + "dl_addtrack", "Add track for Chain: " + t), $("#" + i.pre + "track_gi").focus()
        })
    }, iCn3DUI.prototype.clickCustomColor = function() {
        var i = this;
        $(document).on("click", ".icn3d-customcolor", function(e) {
            e.stopImmediatePropagation();
            var t = $(this).attr("chainid");
            $("#" + i.pre + "customcolor_chainid").val(t), i.openDialog(i.pre + "dl_customcolor", "Apply custom color or tube for Chain: " + t)
        })
    }, iCn3DUI.prototype.clickDefineHelix = function() {
        var i = this;
        $(document).on("click", ".icn3d-helixsets", function(e) {
            e.stopImmediatePropagation();
            var t = $(this).attr("chainid");
            i.defineSecondary(t, "helix"), i.setLogCmd("define helix sets | chain " + t, !0)
        })
    }, iCn3DUI.prototype.clickDefineSheet = function() {
        var i = this;
        $(document).on("click", ".icn3d-sheetsets", function(e) {
            e.stopImmediatePropagation();
            var t = $(this).attr("chainid");
            i.defineSecondary(t, "sheet"), i.setLogCmd("define sheet sets | chain " + t, !0)
        })
    }, iCn3DUI.prototype.clickDefineCoil = function() {
        var i = this;
        $(document).on("click", ".icn3d-coilsets", function(e) {
            e.stopImmediatePropagation();
            var t = $(this).attr("chainid");
            i.defineSecondary(t, "coil"), i.setLogCmd("define coil sets | chain " + t, !0)
        })
    }, iCn3DUI.prototype.clickDeleteSets = function() {
        var t = this;
        $("#" + t.pre + "deletesets").click(function(e) {
            t.deleteSelectedSets(), t.setLogCmd("delete selected sets", !0)
        })
    }, iCn3DUI.prototype.defineSecondary = function(e, t) {
        var i = this;
        $("#" + i.pre + "dl_definedsets").hasClass("ui-dialog-content") && $("#" + i.pre + "dl_definedsets").dialog("isOpen") || (i.openDialog(i.pre + "dl_definedsets", "Select sets"), $("#" + i.pre + "atomsCustom").resizable());
        var n, o, r = {},
            s = !1,
            a = 0,
            c = 0,
            d = e + "_C(Nterm";
        i.icn3d.hAtoms = {};
        for (var l = 0, h = i.icn3d.chainsSeq[e].length; l < h; ++l) {
            var p = e + "_" + i.icn3d.chainsSeq[e][l].resi;
            if (i.icn3d.residues.hasOwnProperty(p)) {
                var m = i.icn3d.getFirstCalphaAtomObj(i.icn3d.residues[p]),
                    u = i.icn3d.secondaries[p];
                "H" == u ? (m.ssbegin && (++a, 0 < Object.keys(r).length && (o = n + "H" + a + ")", "coil" == t && (i.selectResidueList(r, o, o, s, !0), s = s || !0), r = {}, 0)), n = e + "_H" + a, r[p] = 1, m.ssend && (d = e + "_C(H" + a, "helix" == t && (i.selectResidueList(r, n, n, s, !0), s = s || !0), r = {}, 0)) : "E" == u ? (m.ssbegin && (++c, 0 < Object.keys(r).length && (o = n + "S" + c + ")", "coil" == t && (i.selectResidueList(r, o, o, s, !0), s = s || !0), r = {}, 0)), n = e + "_S" + c, r[p] = 1, m.ssend && (d = e + "_C(S" + c, "sheet" == t && (i.selectResidueList(r, n, n, s, !0), s = s || !0), r = {}, 0)) : (n = d + "-", r[p] = 1)
            }
        }
        0 < Object.keys(r).length && (o = n + "Cterm)", "coil" == t && i.selectResidueList(r, o, o, s, !0))
    }, iCn3DUI.prototype.simplifyText = function(e) {
        var t, i = "",
            n = !1,
            o = -1;
        for (t = 0, il = e.length; t < il; ++t) "-" == e[t] || " " == e[t] ? (n && t !== o && (i += o + 1 == t - 1 ? (o + 1 + 1).toString() + " " + e.substr(o + 1, t - 1 - o) + ", " : (o + 1 + 1).toString() + "-" + (t - 1 + 1).toString() + " " + e.substr(o + 1, t - 1 - o) + ", ", n = !1), o = t) : n = !0;
        return n && t == il && (i += o + 1 == t - 1 ? (o + 1 + 1).toString() + " " + e.substr(o + 1, t - 1 - o) + ", " : (o + 1 + 1).toString() + "-" + (t - 1 + 1).toString() + " " + e.substr(o + 1, t - 1 - o) + ", "), i
    }, iCn3DUI.prototype.alignSequenceToStructure = function(e, t, i) {
        var n, o;
        void 0 !== t.data && (n = t.data[0].query, o = (o = t.data[0].targets[e.replace(/_/g, "")]).hsps[0]);
        var r = "";
        if (void 0 !== n && void 0 !== o) {
            var s = o.scores.e_value.toPrecision(2);
            1e-200 < s && (s = parseFloat(s).toExponential());
            o.scores.bit_score;
            for (var a = t.targets[e.replace(/_/g, "")].seqdata, c = n.seqdata, d = o.segs, l = {}, h = 0, p = d.length; h < p; ++h)
                for (var m = d[h], u = 0; u <= m.orito - m.orifrom; ++u) l[u + m.orifrom] = u + m.from;
            var f = [];
            for (h = 0, p = a.length; h < p; ++h)
                if (l.hasOwnProperty(h)) {
                    r += c[l[h]];
                    var g = this.getColorhexFromBlosum62(a[h], c[l[h]]);
                    f.push("#" + g);
                    var v = h + 1;
                    for (var b in this.icn3d.residues[e + "_" + v]) {
                        var y = new THREE.Color("#" + g);
                        this.icn3d.atoms[b].color = y, this.icn3d.atomPrevColors[b] = y
                    }
                } else r += "-", f.push("");
            i += ", E: " + s
        } else r += "cannot be aligned";
        this.showNewTrack(e, i, r, f, l, "seq"), this.updateHlAll(), this.icn3d.draw(), this.setLogCmd("add track | chainid " + e + " | title " + i + " | text " + this.simplifyText(r) + " | type seq", !0)
    }, iCn3DUI.prototype.resetAnnoAll = function() {
        $("[id^=" + this.pre + "dt_]").html(""), $("[id^=" + this.pre + "tt_]").html(""), $("[id^=" + this.pre + "ov_]").html(""), this.processSeqData(this.chainid_seq), this.setAnnoViewAndDisplay("detailed view"), this.resetAnnoTabAll()
    }, iCn3DUI.prototype.clickAddTrackButton = function() {
        var P = this;
        $(document).on("click", "#" + P.pre + "addtrack_button1", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            var t = $("#" + P.pre + "track_chainid").val(),
                i = $("#" + P.pre + "track_gi").val(),
                n = isNaN(i) ? "Acc " + i : "gi " + i;
            $.ajax({
                url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
                type: "POST",
                data: {
                    targets: t,
                    queries: i
                },
                dataType: "jsonp",
                tryCount: 0,
                retryLimit: 1,
                success: function(e) {
                    P.alignSequenceToStructure(t, e, n)
                },
                error: function(e, t, i) {
                    this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                }
            })
        }), $(document).on("click", "#" + P.pre + "addtrack_button2", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            var t = $("#" + P.pre + "track_chainid").val(),
                i = $("#" + P.pre + "track_fasta").val(),
                n = $("#" + P.pre + "fasta_title").val();
            $.ajax({
                url: "https://www.ncbi.nlm.nih.gov/Structure/pwaln/pwaln.fcgi?from=track",
                type: "POST",
                data: {
                    targets: t,
                    queries: i
                },
                dataType: "jsonp",
                tryCount: 0,
                retryLimit: 1,
                success: function(e) {
                    P.alignSequenceToStructure(t, e, n)
                },
                error: function(e, t, i) {
                    this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                }
            })
        }), $(document).on("click", "#" + P.pre + "addtrack_button2b", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            for (var t, i = $("#" + P.pre + "track_chainid").val(), n = $("#" + P.pre + "fasta_startpos").val(), o = "identity" == $("#" + P.pre + "colorseqby").val() ? "identity" : "custom", r = $("#" + P.pre + "track_fastaalign").val().split(">"), s = r[1].indexOf("\n"), a = (r[1].substr(0, s), r[1].substr(s + 1).replace(/\n/g, "")), c = [], d = [], l = 2, h = r.length; l < h; ++l) {
                var p = r[l].indexOf("\n"),
                    m = r[l].substr(0, p);
                c.push(m);
                var u = r[l].substr(p + 1).replace(/\n/g, "");
                d.push(u)
            }
            for (l = 0, h = P.giSeq[i].length; l < h; ++l) {
                (p = l >= P.matchedPos[i] && l - P.matchedPos[i] < P.icn3d.chainsSeq[i].length ? P.icn3d.chainsSeq[i][l - P.matchedPos[i]].resi : P.baseResi[i] + 1 + l) == n && (t = l)
            }
            void 0 === t && alert('Please double check the start position before clicking "Add Track"');
            var f, g = "-",
                v = 0,
                b = 0,
                y = 0,
                _ = !(P.targetGapHash = {}),
                C = 0,
                w = 0;
            for (l = 0, h = a.length; l < h; ++l) "-" == a[l] && a[l] != g && (f = b, y = 0), "-" == g && a[l] != g && 0 < b && (P.targetGapHash[f] = {
                from: f,
                to: v + y - 1
            }), g = a[l], v = b, "-" != a[l] ? (++b, w = l, _ || (C = l, _ = !0)) : ++y;
            P.resetAnnoAll();
            var S = "",
                k = 0;
            for (var l in P.targetGapHash) 0 < k && (S += " "), S += l + "_" + P.targetGapHash[l].from + "_" + P.targetGapHash[l].to, ++k;
            P.setLogCmd("msa | " + S, !0);
            for (var A = {}, x = 0, R = d.length; x < R; ++x) {
                for (var E = t + 1, D = "", O = C; O <= w; ++O) 0 == x && (A[E] = 0), D += d[x][O], "-" != a[O] && (a[O] == d[x][O] && ++A[E], ++E);
                m = c[x].length < 20 ? c[x] : c[x].substr(0, 20) + "...";
                P.showNewTrack(i, m, D, void 0, void 0, o, void 0, !0), P.setLogCmd("add track | chainid " + i + " | title " + m + " | text " + P.simplifyText(D) + " | type " + o + " | color 0 | msa 1", !0)
            }
            if (0 < d.length) {
                void 0 === P.icn3d.queryresi2score && (P.icn3d.queryresi2score = {}), void 0 === P.icn3d.queryresi2score[i] && (P.icn3d.queryresi2score[i] = {});
                var T = d.length;
                for (var E in A) {
                    var H = parseInt(A[E] / T * 100);
                    P.icn3d.queryresi2score[i][E] = H
                }
                var M = Object.keys(A),
                    I = Math.min.apply(null, M),
                    L = Math.max.apply(null, M),
                    F = "";
                for (E = I; E <= L; ++E) A.hasOwnProperty(E) ? F += Math.round(A[E] / T * 9) : F += "_";
                P.icn3d.opts.color = "align custom", P.icn3d.setColorByOptions(P.icn3d.opts, P.icn3d.hAtoms), P.updateHlAll(), P.icn3d.draw(), P.setLogCmd("color align custom | " + i + " | range " + I + "_" + L + " | " + F, !0)
            }
        }), $(document).on("click", "#" + P.pre + "addtrack_button3", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            var k = $("#" + P.pre + "track_chainid").val(),
                t = $("#" + P.pre + "track_bed")[0].files[0];
            if (t) {
                window.File && window.FileReader && window.FileList && window.Blob || alert("The File APIs are not fully supported in this browser.");
                var i = new FileReader;
                i.onload = function(e) {
                    for (var t, i = e.target.result.split("\n"), n = !1, o = !1, r = 0, s = i.length; r < s; ++r)
                        if ("browser" != i[r].substr(0, 7))
                            if ("track" == i[r].substr(0, 5)) {
                                if (-1 != i[r].toLowerCase().indexOf("itemrgb") && (n = !0), -1 != i[r].toLowerCase().indexOf("colorbystrand=")) {
                                    o = !0;
                                    var a = i[r].toLowerCase().indexOf("colorbystrand="),
                                        c = i[r].substr(a),
                                        d = c.indexOf('"');
                                    if (-1 != d) {
                                        var l = c.substr(d + 1),
                                            h = l.indexOf('"');
                                        if (-1 != d) t = l.substr(0, h).split(" ")
                                    }
                                }
                            } else {
                                if ("" == i[r]) continue;
                                var p = i[r].replace(/\s+/g, " ").split(" ");
                                (8 < p.length || p.length < 6) && (o = !1), p.length < 9 && (n = !1);
                                p[0];
                                var m = p[1],
                                    u = p[2],
                                    f = p[3];
                                if (4 < p.length) p[4];
                                if (5 < p.length) var g = p[5];
                                if (6 < p.length) p[6];
                                if (7 < p.length) p[7];
                                if (8 < p.length) var v = p[8];
                                if (9 < p.length) p[9];
                                if (10 < p.length) p[10];
                                if (11 < p.length) p[11];
                                var b = f,
                                    y = "51,51,51";
                                n ? y = v : o && ("+" == g && 0 < t.length ? y = t[0] : "-" == g && 1 < t.length ? y = t[1] : "." == g && 2 < t.length && (y = t[2]));
                                for (var _ = "", C = [], w = 0, S = u; w < S; ++w) w < m ? (_ += "-", C.push("")) : (_ += P.giSeq[k][w], C.push("rgb(" + y + ")"));
                                P.showNewTrack(k, b, _, C, void 0, void 0, y), P.setLogCmd("add track | chainid " + k + " | title " + b + " | text " + P.simplifyText(_) + " | type bed | color " + y, !0)
                            }
                }, i.readAsText(t)
            } else alert("Please select a file...")
        }), $(document).on("click", "#" + P.pre + "addtrack_button4", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            var t = $("#" + P.pre + "track_chainid").val(),
                i = $("#" + P.pre + "track_title").val(),
                n = $("#" + P.pre + "track_text").val();
            P.showNewTrack(t, i, P.getFullText(n), void 0, "custom", void 0), P.setLogCmd("add track | chainid " + t + " | title " + i + " | text " + n + " | type custom", !0)
        }), $(document).on("click", "#" + P.pre + "addtrack_button5", function(e) {
            e.stopImmediatePropagation(), dialog.dialog("close");
            for (var t = $("#" + P.pre + "track_chainid").val(), i = $("#" + P.pre + "track_selection").val(), n = "", o = P.icn3d.intHash(P.icn3d.hAtoms, P.icn3d.chains[t]), r = P.icn3d.getResiduesFromCalphaAtoms(o), s = [], a = 0, c = P.giSeq[t].length; a < c; ++a) {
                var d = P.giSeq[t][a],
                    l = d;
                1 < d.length && (l = d[0]);
                var h = a >= P.matchedPos[t] && a - P.matchedPos[t] < P.icn3d.chainsSeq[t].length ? P.icn3d.chainsSeq[t][a - P.matchedPos[t]].resi : P.baseResi[t] + 1 + a;
                if (r.hasOwnProperty(t + "_" + h)) {
                    var p = P.icn3d.getFirstCalphaAtomObj(P.icn3d.residues[t + "_" + h]),
                        m = void 0 === p.color || "FFFFFF" === p.color.getHexString().toUpperCase() ? "DDDDDD" : p.color.getHexString(),
                        u = void 0 !== p.color ? m : "CCCCCC";
                    n += l, s.push("#" + u)
                } else n += "-", s.push("")
            }
            P.showNewTrack(t, i, n, s, void 0, "selection", void 0), P.setLogCmd("add track | chainid " + t + " | title " + i + " | text " + P.simplifyText(n) + " | type selection", !0)
        })
    }, iCn3DUI.prototype.showNewTrack = function(e, t, i, n, o, r, s, a) {
        var c = this,
            d = !1;
        "cannot be aligned" == i && (d = !0);
        var l = i.replace(/-/g, "").length;
        if (!a)
            if (i.length > c.giSeq[e].length) i = i.substr(0, c.giSeq[e].length);
            else if (i.length < c.giSeq[e].length && !d) {
            for (var h = "", p = 0, m = c.giSeq[e].length - i.length; p < m; ++p) h += "-";
            i += h
        }
        var u = t.replace(/\s/g, "_").replace(/\./g, "dot").replace(/\W/g, "");
        20 < u.length && (u = u.substr(0, 20));
        var f = c.RESIDUE_WIDTH * i.length + 200;
        $("#" + c.pre + "dt_custom_" + e).append("<div id='" + c.pre + "dt_custom_" + e + "_" + u + "'></div>"), $("#" + c.pre + "dt_custom_" + e + "_" + u).width(f), $("#" + c.pre + "ov_custom_" + e).append("<div id='" + c.pre + "ov_custom_" + e + "_" + u + "'></div>"), $("#" + c.pre + "ov_custom_" + e + "_" + u).width(f), $("#" + c.pre + "tt_custom_" + e).append("<div id='" + c.pre + "tt_custom_" + e + "_" + u + "'></div>"), $("#" + c.pre + "tt_custom_" + e + "_" + u).width(f);
        var g = '<div id="' + c.pre + 'giseq_sequence" class="icn3d-dl_sequence">',
            v = g,
            b = g,
            y = '<div class="icn3d-seqTitle" gi="' + e + '" anno="sequence" chain="' + e + '"><span style="white-space:nowrap;">' + t + "</span></div>",
            _ = '<span class="icn3d-residueNum" title="residue count">' + l.toString() + " Pos</span>";
        b += y + _ + "<br>", g += y + _ + (F = '<span class="icn3d-seqLine">'), v += y + _ + F;
        var C = e.indexOf("_"),
            w = "cst" + e.substr(C),
            S = 0,
            k = 0,
            A = (void 0 === r || "seq" === r || "custom" === r) && -1 == i.indexOf("cannot-be-aligned") && -1 == i.indexOf("cannot be aligned"),
            x = "identity" === r && -1 == i.indexOf("cannot-be-aligned") && -1 == i.indexOf("cannot be aligned"),
            R = {},
            E = 0,
            D = 1;
        for (p = 0, m = i.length; p < m; ++p) {
            var O = p - E;
            a ? c.targetGapHash.hasOwnProperty(O) && !R.hasOwnProperty(O) && (E += c.targetGapHash[O].to - c.targetGapHash[O].from + 1, R[O] = 1) : g += c.insertGap(e, p, "-");
            var T = i.charAt(p);
            if (" " != T && "-" != T) {
                var H = c.getColorhexFromBlosum62(T, c.icn3d.chainsSeq[e][O].name),
                    M = T == c.icn3d.chainsSeq[e][O].name ? "FF0000" : "0000FF",
                    I = D;
                void 0 !== o && (I = o[p] + 1), void 0 !== n && "" != n[p] ? g += '<span id="' + w + "_" + c.pre + e + "_" + I + '" title="' + T + I + '" class="icn3d-residue" style="color:' + n[p] + '">' + T + "</span>" : g += s ? '<span id="' + w + "_" + c.pre + e + "_" + I + '" title="' + T + I + '" class="icn3d-residue" style="color:rgb(' + s + ')">' + T + "</span>" : A ? '<span id="' + w + "_" + c.pre + e + "_" + I + '" title="' + T + I + '" class="icn3d-residue" style="color:#' + H + '">' + T + "</span>" : x ? '<span id="' + w + "_" + c.pre + e + "_" + I + '" title="' + T + I + '" class="icn3d-residue" style="color:#' + M + '">' + T + "</span>" : '<span id="' + w + "_" + c.pre + e + "_" + I + '" title="' + T + I + '" class="icn3d-residue">' + T + "</span>", v += c.insertGapOverview(e, p);
                var L = c.cfg.blast_rep_id == e ? Math.round(c.seqAnnWidth * p / (c.maxAnnoLength + c.nTotalGap) - S - k) : Math.round(c.seqAnnWidth * p / c.maxAnnoLength - S - k);
                L < 0 && (L = 0), v += '<div style="display:inline-block; width:' + L + 'px;">&nbsp;</div>', void 0 !== n && "" != n[p] ? v += '<div style="display:inline-block; background-color:' + n[p] + '; width:1px;" title="' + T + (p + 1).toString() + '">&nbsp;</div>' : v += s ? '<div style="display:inline-block; background-color:rgb(' + s + '); width:1px;" title="' + T + (p + 1).toString() + '">&nbsp;</div>' : A ? '<div style="display:inline-block; background-color:#' + H + '; width:1px;" title="' + T + (p + 1).toString() + '">&nbsp;</div>' : '<div style="display:inline-block; background-color:#333; width:1px;" title="' + T + (p + 1).toString() + '">&nbsp;</div>', S += L, k += 1, ++D
            } else g += d ? "<span>" + T + "</span>" : "<span>-</span>"
        }
        var F = '<span class="icn3d-residueNum" title="residue count">' + l.toString() + " Pos</span>";
        F += "</span>", F += "<br>", g += F += "</div>", v += F, b += "</div>", $("#" + c.pre + "dt_custom_" + e + "_" + u).html(g), $("#" + c.pre + "ov_custom_" + e + "_" + u).html(v), $("#" + c.pre + "tt_custom_" + e + "_" + u).html(b)
    }, iCn3DUI.prototype.checkGiSeq = function(e, t, i, n, o, r, s) {
        var a = this;
        return !(20 < s) && (void 0 !== a.giSeq && void 0 !== a.giSeq[e] ? (i = a.getFullText(i), a.showNewTrack(e, t, i, void 0, void 0, n, o, r), !1) : void setTimeout(function() {
            a.checkGiSeq(e, t, i, n, o, r, s + 1)
        }, 100))
    }, iCn3DUI.prototype.getFullText = function(e) {
        for (var t = "", i = e.split(","), n = -1, o = 0, r = i.length; o < r; ++o) {
            var s = i[o].trim();
            if (0 != s.length) {
                var a = s.split(" ");
                if (2 === a.length) {
                    var c, d, l = a[1],
                        h = a[0].split("-");
                    if (2 == h.length) c = h[0] - 1, d = h[1] - 1;
                    else {
                        if (1 != h.length) continue;
                        d = c = h[0] - 1
                    }
                    for (var p = 0; p < c - n - 1; ++p) t += "-";
                    var m = d - c + 1;
                    l.length > m ? t += l.substr(0, m) : t += l;
                    for (p = 0; p < m - l.length; ++p) t += "-";
                    n = d
                }
            }
        }
        return t
    },
    function(e, t) {
        "object" == typeof exports && "undefined" != typeof module ? t(exports, require("d3-dispatch"), require("d3-drag"), require("d3-interpolate"), require("d3-selection"), require("d3-transition")) : "function" == typeof define && define.amd ? define(["exports", "d3-dispatch", "d3-drag", "d3-interpolate", "d3-selection", "d3-transition"], t) : t(e.d3 = e.d3 || {}, e.d3, e.d3, e.d3, e.d3, e.d3)
    }(this, function(e, c, N, d, z, q) {
        "use strict";
        var l = function(e) {
                return function() {
                    return e
                }
            },
            h = function(e, t, i) {
                this.target = e, this.type = t, this.selection = i
            };

        function j() {
            z.event.stopImmediatePropagation()
        }
        var U = function() {
                z.event.preventDefault(), z.event.stopImmediatePropagation()
            },
            B = {
                name: "drag"
            },
            G = {
                name: "space"
            },
            V = {
                name: "handle"
            },
            W = {
                name: "center"
            },
            Y = {
                name: "x",
                handles: ["e", "w"].map(p),
                input: function(e, t) {
                    return e && [
                        [e[0], t[0][1]],
                        [e[1], t[1][1]]
                    ]
                },
                output: function(e) {
                    return e && [e[0][0], e[1][0]]
                }
            },
            X = {
                name: "y",
                handles: ["n", "s"].map(p),
                input: function(e, t) {
                    return e && [
                        [t[0][0], e[0]],
                        [t[1][0], e[1]]
                    ]
                },
                output: function(e) {
                    return e && [e[0][1], e[1][1]]
                }
            },
            t = {
                name: "xy",
                handles: ["n", "e", "s", "w", "nw", "ne", "se", "sw"].map(p),
                input: function(e) {
                    return e
                },
                output: function(e) {
                    return e
                }
            },
            K = {
                overlay: "crosshair",
                selection: "move",
                n: "ns-resize",
                e: "ew-resize",
                s: "ns-resize",
                w: "ew-resize",
                nw: "nwse-resize",
                ne: "nesw-resize",
                se: "nwse-resize",
                sw: "nesw-resize"
            },
            Z = {
                e: "w",
                w: "e",
                nw: "ne",
                ne: "nw",
                se: "sw",
                sw: "se"
            },
            Q = {
                n: "s",
                s: "n",
                nw: "sw",
                ne: "se",
                se: "ne",
                sw: "nw"
            },
            J = {
                overlay: 1,
                selection: 1,
                n: null,
                e: 1,
                s: null,
                w: -1,
                nw: -1,
                ne: 1,
                se: 1,
                sw: -1
            },
            ee = {
                overlay: 1,
                selection: 1,
                n: -1,
                e: null,
                s: 1,
                w: null,
                nw: -1,
                ne: -1,
                se: 1,
                sw: 1
            };

        function p(e) {
            return {
                type: e
            }
        }

        function m() {
            return !z.event.button
        }

        function u() {
            var e = this.ownerSVGElement || this;
            return [
                [0, 0],
                [e.width.baseVal.value, e.height.baseVal.value]
            ]
        }

        function te(e) {
            for (; !e.__brush;)
                if (!(e = e.parentNode)) return;
            return e.__brush
        }

        function ie(e) {
            return e[0][0] === e[1][0] || e[0][1] === e[1][1]
        }

        function i(I) {
            var $, t = u,
                L = m,
                i = c.dispatch(o, "start", "brush", "end"),
                n = 6;

            function o(e) {
                var t = e.property("__brush", a).selectAll(".overlay").data([p("overlay")]);
                t.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", K.overlay).merge(t).each(function() {
                    var e = te(this).extent;
                    z.select(this).attr("x", e[0][0]).attr("y", e[0][1]).attr("width", e[1][0] - e[0][0]).attr("height", e[1][1] - e[0][1])
                }), e.selectAll(".selection").data([p("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", K.selection).attr("fill", "#777").attr("fill-opacity", .3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
                var i = e.selectAll(".handle").data(I.handles, function(e) {
                    return e.type
                });
                i.exit().remove(), i.enter().append("rect").attr("class", function(e) {
                    return "handle handle--" + e.type
                }).attr("cursor", function(e) {
                    return K[e.type]
                }), e.each(F).attr("fill", "none").attr("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush touchstart.brush", s)
            }

            function F() {
                var e = z.select(this),
                    t = te(this).selection;
                t ? (e.selectAll(".selection").style("display", null).attr("x", t[0][0]).attr("y", t[0][1]).attr("width", t[1][0] - t[0][0]).attr("height", t[1][1] - t[0][1]), e.selectAll(".handle").style("display", null).attr("x", function(e) {
                    return "e" === e.type[e.type.length - 1] ? t[1][0] - n / 2 : t[0][0] - n / 2
                }).attr("y", function(e) {
                    return "s" === e.type[0] ? t[1][1] - n / 2 : t[0][1] - n / 2
                }).attr("width", function(e) {
                    return "n" === e.type || "s" === e.type ? t[1][0] - t[0][0] + n : n
                }).attr("height", function(e) {
                    return "e" === e.type || "w" === e.type ? t[1][1] - t[0][1] + n : n
                })) : e.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null)
            }

            function P(e, t) {
                return e.__brush.emitter || new r(e, t)
            }

            function r(e, t) {
                this.that = e, this.args = t, this.state = e.__brush, this.active = 0
            }

            function s() {
                if (z.event.touches) {
                    if (z.event.changedTouches.length < z.event.touches.length) return U()
                } else if ($) return;
                if (L.apply(this, arguments)) {
                    var t, i, n, o, r, s, a, c, d, l, h, p, m, u = this,
                        f = z.event.target.__data__.type,
                        g = "selection" === (z.event.metaKey ? f = "overlay" : f) ? B : z.event.altKey ? W : V,
                        v = I === X ? null : J[f],
                        b = I === Y ? null : ee[f],
                        y = te(u),
                        e = y.extent,
                        _ = y.selection,
                        C = e[0][0],
                        w = e[0][1],
                        S = e[1][0],
                        k = e[1][1],
                        A = z.mouse(u),
                        x = A,
                        R = P(u, arguments).beforestart();
                    "overlay" === f ? y.selection = _ = [
                        [t = I === X ? C : A[0], n = I === Y ? w : A[1]],
                        [r = I === X ? S : t, a = I === Y ? k : n]
                    ] : (t = _[0][0], n = _[0][1], r = _[1][0], a = _[1][1]), i = t, o = n, s = r, c = a;
                    var E = z.select(u).attr("pointer-events", "none"),
                        D = E.selectAll(".overlay").attr("cursor", K[f]);
                    if (z.event.touches) E.on("touchmove.brush", T, !0).on("touchend.brush touchcancel.brush", M, !0);
                    else {
                        var O = z.select(z.event.view).on("keydown.brush", function() {
                            switch (z.event.keyCode) {
                                case 18:
                                    g === V && (v && (r = s - d * v, t = i + d * v), b && (a = c - l * b, n = o + l * b), g = W, H());
                                    break;
                                case 32:
                                    g !== V && g !== W || (v < 0 ? r = s - d : 0 < v && (t = i - d), b < 0 ? a = c - l : 0 < b && (n = o - l), g = G, D.attr("cursor", K.selection), H());
                                    break;
                                default:
                                    return
                            }
                            U()
                        }, !0).on("keyup.brush", function() {
                            switch (z.event.keyCode) {
                                case 18:
                                    g === W && (v < 0 ? r = s : 0 < v && (t = i), b < 0 ? a = c : 0 < b && (n = o), g = V, H());
                                    break;
                                case 32:
                                    g === G && (g = z.event.altKey ? (v && (r = s - d * v, t = i + d * v), b && (a = c - l * b, n = o + l * b), W) : (v < 0 ? r = s : 0 < v && (t = i), b < 0 ? a = c : 0 < b && (n = o), V), D.attr("cursor", K[f]), H());
                                    break;
                                default:
                                    return
                            }
                            U()
                        }, !0).on("mousemove.brush", T, !0).on("mouseup.brush", M, !0);
                        N.dragDisable(z.event.view)
                    }
                    j(), q.interrupt(u), F.call(u), R.start()
                }

                function T() {
                    var e = z.mouse(u);
                    x = e, h = !0, U(), H()
                }

                function H() {
                    var e;
                    switch (d = x[0] - A[0], l = x[1] - A[1], g) {
                        case G:
                        case B:
                            v && (d = Math.max(C - t, Math.min(S - r, d)), i = t + d, s = r + d), b && (l = Math.max(w - n, Math.min(k - a, l)), o = n + l, c = a + l);
                            break;
                        case V:
                            v < 0 ? (d = Math.max(C - t, Math.min(S - t, d)), i = t + d, s = r) : 0 < v && (d = Math.max(C - r, Math.min(S - r, d)), i = t, s = r + d), b < 0 ? (l = Math.max(w - n, Math.min(k - n, l)), o = n + l, c = a) : 0 < b && (l = Math.max(w - a, Math.min(k - a, l)), o = n, c = a + l);
                            break;
                        case W:
                            v && (i = Math.max(C, Math.min(S, t - d * v)), s = Math.max(C, Math.min(S, r + d * v))), b && (o = Math.max(w, Math.min(k, n - l * b)), c = Math.max(w, Math.min(k, a + l * b)))
                    }
                    s < i && (v *= -1, e = t, t = r, r = e, e = i, i = s, s = e, f in Z && D.attr("cursor", K[f = Z[f]])), c < o && (b *= -1, e = n, n = a, a = e, e = o, o = c, c = e, f in Q && D.attr("cursor", K[f = Q[f]])), y.selection && (_ = y.selection), p && (i = _[0][0], s = _[1][0]), m && (o = _[0][1], c = _[1][1]), _[0][0] === i && _[0][1] === o && _[1][0] === s && _[1][1] === c || (y.selection = [
                        [i, o],
                        [s, c]
                    ], F.call(u), R.brush())
                }

                function M() {
                    if (j(), z.event.touches) {
                        if (z.event.touches.length) return;
                        $ && clearTimeout($), $ = setTimeout(function() {
                            $ = null
                        }, 500), E.on("touchmove.brush touchend.brush touchcancel.brush", null)
                    } else N.dragEnable(z.event.view, h), O.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
                    E.attr("pointer-events", "all"), D.attr("cursor", K.overlay), y.selection && (_ = y.selection), ie(_) && (y.selection = null, F.call(u)), R.end()
                }
            }

            function a() {
                var e = this.__brush || {
                    selection: null
                };
                return e.extent = t.apply(this, arguments), e.dim = I, e
            }
            return o.move = function(e, a) {
                e.selection ? e.on("start.brush", function() {
                    P(this, arguments).beforestart().start()
                }).on("interrupt.brush end.brush", function() {
                    P(this, arguments).end()
                }).tween("brush", function() {
                    var t = this,
                        i = t.__brush,
                        n = P(t, arguments),
                        e = i.selection,
                        o = I.input("function" == typeof a ? a.apply(this, arguments) : a, i.extent),
                        r = d.interpolate(e, o);

                    function s(e) {
                        i.selection = 1 === e && ie(o) ? null : r(e), F.call(t), n.brush()
                    }
                    return e && o ? s : s(1)
                }) : e.each(function() {
                    var e = arguments,
                        t = this.__brush,
                        i = I.input("function" == typeof a ? a.apply(this, e) : a, t.extent),
                        n = P(this, e).beforestart();
                    q.interrupt(this), t.selection = null == i || ie(i) ? null : i, F.call(this), n.start().brush().end()
                })
            }, r.prototype = {
                beforestart: function() {
                    return 1 == ++this.active && ((this.state.emitter = this).starting = !0), this
                },
                start: function() {
                    return this.starting && (this.starting = !1, this.emit("start")), this
                },
                brush: function() {
                    return this.emit("brush"), this
                },
                end: function() {
                    return 0 == --this.active && (delete this.state.emitter, this.emit("end")), this
                },
                emit: function(e) {
                    z.customEvent(new h(o, e, I.output(this.state.selection)), i.apply, i, [e, this.that, this.args])
                }
            }, o.extent = function(e) {
                return arguments.length ? (t = "function" == typeof e ? e : l([
                    [+e[0][0], +e[0][1]],
                    [+e[1][0], +e[1][1]]
                ]), o) : t
            }, o.filter = function(e) {
                return arguments.length ? (L = "function" == typeof e ? e : l(!!e), o) : L
            }, o.handleSize = function(e) {
                return arguments.length ? (n = +e, o) : n
            }, o.on = function() {
                var e = i.on.apply(i, arguments);
                return e === i ? o : e
            }, o
        }
        e.brush = function() {
            return i(t)
        }, e.brushX = function() {
            return i(Y)
        }, e.brushY = function() {
            return i(X)
        }, e.brushSelection = function(e) {
            var t = e.__brush;
            return t ? t.dim.output(t.selection) : null
        }, Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }), iCn3DUI.prototype.drawGraph = function(e, t) {
        var i = this;
        "undefined" == typeof d3v4 && (d3v4 = d3);
        var n = JSON.parse(e),
            o = $("#" + t).width(),
            r = $("#" + t).height(),
            s = +o,
            a = +r,
            c = o,
            d = r,
            l = d3.select("#" + i.svgid).attr("width", o).attr("height", r).attr("viewBox", "0,0," + s + "," + a);
        l.selectAll(".g-main").remove();
        var h = l.append("g").classed("g-main", !0),
            p = h.append("rect").attr("width", c).attr("height", d).style("fill", "#FFF"),
            m = h.append("g"),
            u = d3v4.zoom().on("zoom", function() {
                m.attr("transform", d3v4.event.transform)
            });
        if (h.call(u), n.links) {
            for (var f = [], g = {}, v = 0, b = n.nodes.length; v < b; ++v) {
                g[(x = n.nodes[v]).id] = 1
            }
            var y = !1;
            for (v = 0, b = n.links.length; v < b; ++v) {
                var _ = n.links[v];
                g.hasOwnProperty(_.source) && g.hasOwnProperty(_.target) ? f.push(_) : (g.hasOwnProperty(_.source) || console.log("The node " + _.source + " is not found... "), g.hasOwnProperty(_.target) || console.log("The node " + _.target + " is not found... "), y = !0)
            }
            y && console.log(JSON.stringify(n)), n.links = f;
            var C = {};
            for (v = 0; v < n.nodes.length; v++) i.force || (n.nodes[v].x *= 10, n.nodes[v].y *= 10), C[n.nodes[v].id] = n.nodes[v], n.nodes[v].weight = 1.01;
            if (i.hideedges && !i.force) {
                var w = [];
                for (v = 0; v < n.links.length; v++) "FFF" != n.links[v].c && w.push(n.links[v]);
                n.links = w
            }
            var S = m.append("g"),
                k = null,
                A = (_ = m.append("g").attr("class", "link").selectAll("line").data(n.links).enter().append("line").attr("stroke", function(e) {
                    return e.v == i.contactInsideValue ? "#" + i.contactInsideColor : e.v == i.hbondInsideValue ? "#" + i.hbondInsideColor : e.v == i.ionicInsideValue ? "#" + i.ionicInsideColor : e.v == i.halogenInsideValue ? "#" + i.halogenInsideColor : e.v == i.picationInsideValue ? "#" + i.picationInsideColor : e.v == i.pistackingInsideValue ? "#" + i.pistackingInsideColor : "#" + e.c
                }).attr("stroke-width", function(e) {
                    return e.v == i.contactValue || e.v == i.contactInsideValue || e.v == i.hbondInsideValue || e.v == i.ionicInsideValue || e.v == i.halogenInsideValue || e.v == i.picationInsideValue || e.v == i.pistackingInsideValue ? "1px" : e.v == i.hbondValue || e.v == i.ionicValue || e.v == i.halogenValue || e.v == i.picationValue || e.v == i.pistackingValue ? "2px" : e.v == i.ssbondValue || e.v == i.clbondValue ? "3px" : e.v + "px"
                }), m.append("g").attr("class", "node")),
                x = A.selectAll("circle").data(n.nodes).enter().append("circle").attr("r", 3).attr("fill", function(e) {
                    return "#" + e.c
                }).attr("stroke", function(e) {
                    return "#" + e.c
                }).attr("res", function(e) {
                    return e.r
                }).attr("class", "icn3d-node").call(d3v4.drag().on("start", function(t) {
                    d3v4.event.active || i.simulation.alphaTarget(.9).restart();
                    t.selected || P || x.classed("selected", function(e) {
                        return e.selected = e.previouslySelected = !1
                    });
                    d3v4.select(this).classed("selected", function(e) {
                        return t.previouslySelected = t.selected, t.selected = !0
                    }), x.filter(function(e) {
                        return e.selected
                    }).each(function(e) {
                        e.fx = e.x, e.fy = e.y
                    })
                }).on("drag", function(e) {
                    x.filter(function(e) {
                        return e.selected
                    }).each(function(e) {
                        e.fx += d3v4.event.dx, e.fy -= d3v4.event.dy
                    })
                }).on("end", function(e) {
                    d3v4.event.active || i.simulation.alphaTarget(0);
                    e.fx = null, e.fy = null, x.filter(function(e) {
                        return e.selected
                    }).each(function(e) {
                        e.fx = null, e.fy = null
                    })
                })),
                R = A.selectAll("text").data(n.nodes).enter().append("text").text(function(e) {
                    var t = e.id,
                        i = t.indexOf(".");
                    return -1 !== i && (t = t.substr(0, i)), t
                }).attr("fill", function(e) {
                    return "#" + e.c
                }).attr("stroke", "none").attr("class", "icn3d-node-text8");
            x.append("title").text(function(e) {
                return e.id
            });
            var E = parseInt($("#" + i.pre + "dist_ss").val()),
                D = parseInt($("#" + i.pre + "dist_coil").val()),
                O = parseInt($("#" + i.pre + "dist_hbond").val()),
                T = parseInt($("#" + i.pre + "dist_inter").val()),
                H = parseInt($("#" + i.pre + "dist_ssbond").val()),
                M = parseInt($("#" + i.pre + "dist_ionic").val()),
                I = parseInt($("#" + i.pre + "dist_halogen").val()),
                L = parseInt($("#" + i.pre + "dist_pication").val()),
                F = parseInt($("#" + i.pre + "dist_pistacking").val());
            i.simulation = d3v4.forceSimulation().force("link", d3v4.forceLink().id(function(e) {
                return e.id
            }).distance(function(e) {
                return 30
            }).strength(function(e) {
                return i.force ? e.v == i.ssValue ? isNaN(E) ? 1 : E / 100 : e.v == i.coilValue || e.v == i.clbondValue ? isNaN(D) ? .5 : D / 100 : e.v == i.hbondValue || e.v == i.hbondInsideValue ? isNaN(O) ? .5 : O / 100 : e.v == i.contactValue || e.v == i.contactInsideValue ? isNaN(T) ? .25 : T / 100 : e.v == i.ssbondValue ? isNaN(H) ? .5 : H / 100 : e.v == i.ionicValue || e.v == i.ionicInsideValue ? isNaN(M) ? .5 : M / 100 : e.v == i.halogenValue || e.v == i.halogenInsideValue ? isNaN(I) ? .5 : I / 100 : e.v == i.picationValue || e.v == i.picationInsideValue ? isNaN(L) ? .5 : L / 100 : e.v == i.pistackingValue || e.v == i.pistackingInsideValue ? isNaN(F) ? .5 : F / 100 : 0 : 0
            })).force("center", d3v4.forceCenter(c / 2, d / 2)), i.force && i.simulation.force("charge", d3v4.forceManyBody()), 1 == i.force ? i.simulation.force("x", d3v4.forceX(function(e) {
                return "a" == e.s ? c / 4 : .75 * c
            }).strength(function(e) {
                return .4
            })).force("y", d3v4.forceY(d / 2).strength(function(e) {
                return .02
            })) : 2 == i.force ? i.simulation.force("y", d3v4.forceY(function(e) {
                return "a" == e.s ? .75 * d : d / 4
            }).strength(function(e) {
                return .4
            })).force("x", d3v4.forceX(c / 2).strength(function(e) {
                return .02
            })) : 3 == i.force ? i.simulation.force("r", d3v4.forceRadial(function(e) {
                return "a" == e.s ? 200 : 100
            }, c / 2, d / 2).strength(function(e) {
                return .8
            })) : i.force, i.simulation.nodes(n.nodes).on("tick", function() {
                _.attr("x1", function(e) {
                    return e.source.x
                }).attr("y1", function(e) {
                    return d - e.source.y
                }).attr("x2", function(e) {
                    return e.target.x
                }).attr("y2", function(e) {
                    return d - e.target.y
                }), x.attr("cx", function(e) {
                    return e.x
                }).attr("cy", function(e) {
                    return d - e.y
                }), R.attr("x", function(e) {
                    return e.x + 6
                }).attr("y", function(e) {
                    return d - (e.y + 3)
                })
            }), i.simulation.force("link").links(n.links);
            var P, N = !1,
                z = !1,
                q = d3v4.brush().on("start", function() {
                    z = !0, x.each(function(e) {
                        e.previouslySelected = P && e.selected
                    })
                }).on("brush", function() {
                    if (!d3v4.event.sourceEvent) return;
                    if (!d3v4.event.selection) return;
                    var t = d3v4.event.selection;
                    x.classed("selected", function(e) {
                        return e.selected = e.previouslySelected ^ (t[0][0] <= e.x && e.x < t[1][0] && t[0][1] <= d - e.y && d - e.y < t[1][1])
                    })
                }).on("end", function() {
                    if (!d3v4.event.sourceEvent) return;
                    if (!d3v4.event.selection) return;
                    if (!k) return;
                    k.call(q.move, null), N || (k.remove(), k = null);
                    z = !1
                });
            return p.on("click", function() {
                x.each(function(e) {
                    e.selected = !1, e.previouslySelected = !1
                }), x.classed("selected", !1)
            }), d3v4.select("body").on("keydown", function() {
                if (P = d3v4.event.ctrlKey) {
                    if (k) return;
                    N = !0, k || (k = S.append("g")).call(q)
                }
            }), d3v4.select("body").on("keyup", function() {
                if (N = P = !1, !k) return;
                z || (k.remove(), k = null)
            }), n
        }
        console.log("Graph is missing links")
    }, iCn3DUI.prototype.getSvgXml = function(e) {
        return '<svg title="graph" version="1.1" xmlns="http://www.w3.org/2000/svg"><style>text {font-family: sans-serif; font-weight: bold; font-size: 18px;}</style>' + document.getElementById(e).innerHTML + "</svg>"
    }, iCn3DUI.prototype.saveSvg = function(e, t) {
        var i = this.getSvgXml(e),
            n = new Blob([i], {
                type: "image/svg+xml"
            });
        saveAs(n, t)
    }, iCn3DUI.prototype.savePng = function(e, t, i, n) {
        var o = this,
            r = document.getElementById(e),
            s = r.getBBox(),
            a = r.cloneNode(!0);
        o.copyStylesInline(a, r);
        var c = document.createElement("CANVAS");
        c.width = i, c.height = n;
        var d = c.getContext("2d");
        d.clearRect(0, 0, s.width, s.height);
        var l = o.getSvgXml(e),
            h = window.URL || window.webkitURL || window,
            p = new Blob([l], {
                type: "image/svg+xml;charset=utf-8"
            }),
            m = new Image;
        m.src = h.createObjectURL(p), m.onload = function() {
            if (d.drawImage(m, 0, 0), h.revokeObjectURL(this.src), o.isIE()) {
                var e = c.msToBlob();
                return saveAs(e, t), void c.remove()
            }
            c.toBlob(function(e) {
                saveAs(e, t), c.remove()
            })
        }
    }, iCn3DUI.prototype.copyStylesInline = function(e, t) {
        for (var i = ["svg", "g"], n = 0; n < e.childNodes.length; n++) {
            var o = e.childNodes[n];
            if (-1 == i.indexOf(o.tagName)) {
                var r = t.childNodes[n].currentStyle || window.getComputedStyle(t.childNodes[n]);
                if ("undefined" != r && null != r)
                    for (var s = 0; s < r.length; s++) o.style.setProperty(r[s], r.getPropertyValue(r[s]))
            } else this.copyStylesInline(o, t.childNodes[n])
        }
    }, iCn3DUI.prototype.clickShow_selected = function() {
        var t = this;
        $("#" + t.pre + "show_selected").add("#" + t.pre + "mn2_show_selected").click(function(e) {
            t.showSelection(), t.setLogCmd("show selection", !0)
        })
    }, iCn3DUI.prototype.clickHide_selected = function() {
        var t = this;
        $("#" + t.pre + "mn2_hide_selected").click(function(e) {
            t.hideSelection(), t.setLogCmd("hide selection", !0)
        })
    }, iCn3DUI.prototype.showSelection = function() {
        var e = this;
        e.icn3d.dAtoms = {}, 0 == Object.keys(e.icn3d.hAtoms).length && e.selectAll_base(), e.icn3d.dAtoms = e.icn3d.cloneHash(e.icn3d.hAtoms);
        var t = e.icn3d.centerAtoms(e.icn3d.hash2Atoms(e.icn3d.dAtoms));
        e.icn3d.maxD = t.maxD, e.icn3d.maxD < 5 && (e.icn3d.maxD = 5), e.icn3d.opts.rotationcenter = "display center", e.saveSelectionIfSelected(), e.icn3d.draw(), e.update2DdgmContent(), e.updateHl2D(), e.showAnnoSelectedChains(), void 0 !== e.graphStr && (e.graphStr = e.getGraphDataForDisplayed()), e.bGraph && e.drawGraph(e.graphStr), e.bLinegraph && e.drawLineGraph(e.graphStr), e.bScatterplot && e.drawLineGraph(e.graphStr, !0)
    }, iCn3DUI.prototype.getGraphDataForDisplayed = function() {
        for (var e = JSON.parse(this.graphStr), t = this.icn3d.getResiduesFromAtoms(this.icn3d.dAtoms), i = [], n = [], o = {}, r = 0, s = e.nodes.length; r < s; ++r) {
            var a = e.nodes[r],
                c = a.r.substr(4);
            t.hasOwnProperty(c) && (i.push(a), o[a.id] = 1)
        }
        for (r = 0, s = e.links.length; r < s; ++r) {
            var d = e.links[r];
            o.hasOwnProperty(d.source) && o.hasOwnProperty(d.target) && n.push(d)
        }
        return e.nodes = i, e.links = n, this.graphStr = JSON.stringify(e), this.graphStr
    }, iCn3DUI.prototype.hideSelection = function() {
        var e = this;
        e.icn3d.dAtoms = e.icn3d.exclHash(e.icn3d.dAtoms, e.icn3d.hAtoms), e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.dAtoms);
        var t = e.icn3d.centerAtoms(e.icn3d.hash2Atoms(e.icn3d.dAtoms));
        e.icn3d.maxD = t.maxD, e.icn3d.maxD < 5 && (e.icn3d.maxD = 5), e.icn3d.opts.rotationcenter = "display center", e.saveSelectionIfSelected(), e.icn3d.draw(), e.update2DdgmContent(), e.updateHl2D(), e.showAnnoSelectedChains()
    }, iCn3DUI.prototype.clickModeswitch = function() {
        var t = this;
        $("#" + t.pre + "modeswitch").click(function(e) {
            void 0 !== $("#" + t.pre + "modeswitch")[0] && $("#" + t.pre + "modeswitch")[0].checked ? t.setModeAndDisplay("selection") : t.setModeAndDisplay("all")
        }), $("#" + t.pre + "mn6_modeall").click(function(e) {
            t.setModeAndDisplay("all")
        }), $("#" + t.pre + "mn6_modeselection").click(function(e) {
            t.setModeAndDisplay("selection")
        })
    }, iCn3DUI.prototype.selectAll_base = function() {
        var e = this;
        for (var t in e.icn3d.hAtoms = {}, e.icn3d.dAtoms = {}, e.icn3d.chains) e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.chains[t]), e.icn3d.dAtoms = e.icn3d.unionHash(e.icn3d.dAtoms, e.icn3d.chains[t])
    }, iCn3DUI.prototype.selectAll = function() {
        var e = this;
        e.selectAll_base(), e.icn3d.removeHlObjects(), e.removeHl2D(), e.removeHlMenus(), e.bSelectResidue = !1, e.bSelectAlignResidue = !1, e.removeSeqResidueBkgd(), e.update2DdgmContent(), $("#" + e.pre + "dl_annotations > .icn3d-annotation").show(), e.setMode("all")
    }, iCn3DUI.prototype.setModeAndDisplay = function(e) {
        var t = this;
        "all" === e ? (t.setMode("all"), t.icn3d.prevHighlightAtoms = t.icn3d.cloneHash(t.icn3d.hAtoms), t.setLogCmd("set mode all", !0), t.selectAll(), t.icn3d.draw()) : (t.setMode("selection"), void 0 !== t.icn3d.prevHighlightAtoms ? t.icn3d.hAtoms = t.icn3d.cloneHash(t.icn3d.prevHighlightAtoms) : t.selectAll(), t.setLogCmd("set mode selection", !0), t.updateHlAll())
    }, iCn3DUI.prototype.setMode = function(e) {
        var t = this;
        "all" === e ? ($("#" + t.pre + "modeall").show(), $("#" + t.pre + "modeselection").hide(), void 0 !== $("#" + t.pre + "modeswitch")[0] && ($("#" + t.pre + "modeswitch")[0].checked = !1), $("#" + t.pre + "style").hasClass("icn3d-modeselection") && $("#" + t.pre + "style").removeClass("icn3d-modeselection"), $("#" + t.pre + "color").hasClass("icn3d-modeselection") && $("#" + t.pre + "color").removeClass("icn3d-modeselection")) : ($("#" + t.pre + "modeall").hide(), $("#" + t.pre + "modeselection").show(), void 0 !== $("#" + t.pre + "modeswitch")[0] && ($("#" + t.pre + "modeswitch")[0].checked = !0), $("#" + t.pre + "style").hasClass("icn3d-modeselection") || $("#" + t.pre + "style").addClass("icn3d-modeselection"), $("#" + t.pre + "color").hasClass("icn3d-modeselection") || $("#" + t.pre + "color").addClass("icn3d-modeselection"))
    }, iCn3DUI.prototype.saveSelection = function(e, t) {
        var i = this;
        i.selectedResidues = {}, i.selectedResidues = i.icn3d.getResiduesFromCalphaAtoms(i.icn3d.hAtoms), 0 < Object.keys(i.selectedResidues).length && (i.selectResidueList(i.selectedResidues, e, t), i.updateSelectionNameDesc(), i.setLogCmd("select " + i.residueids2spec(Object.keys(i.selectedResidues)) + " | name " + e, !0))
    }, iCn3DUI.prototype.removeSelection = function() {
        var e = this;
        e.bAnnotations || e.removeSeqChainBkgd(), e.icn3d.bCtrl || e.icn3d.bShift || (e.removeSeqResidueBkgd(), e.removeSeqChainBkgd()), e.selectedResidues = {}, e.bSelectResidue = !1, e.icn3d.hAtoms = {}, e.icn3d.removeHlObjects(), e.removeHl2D()
    }, iCn3DUI.prototype.updateSelectionNameDesc = function() {
        var e = Object.keys(this.icn3d.defNames2Residues).length + Object.keys(this.icn3d.defNames2Atoms).length;
        $("#" + this.pre + "seq_command_name").val("seq_" + e), $("#" + this.pre + "seq_command_name2").val("seq_" + e), $("#" + this.pre + "alignseq_command_name").val("alseq_" + e)
    }, iCn3DUI.prototype.selectAChain = function(e, t, i, n) {
        var o = this,
            r = (t = t.replace(/\s/g, ""), void 0 !== i || i ? "select alignChain " + e : "select chain " + e);
        void 0 !== n && n ? (o.icn3d.hAtoms = o.icn3d.unionHash(o.icn3d.hAtoms, o.icn3d.chains[e]), void 0 === o.menuHlHash && (o.menuHlHash = {})) : (o.icn3d.hAtoms = {}, o.menuHlHash = {}), o.menuHlHash[e] = 1;
        var s = i ? o.icn3d.alnChainsSeq[e] : o.icn3d.chainsSeq[e];
        chnsSeqLen = void 0 === s ? 0 : s.length;
        for (var a = {}, c = 0, d = chnsSeqLen; c < d; ++c) {
            var l = s[c],
                h = e + "_" + l.resi,
                p = l.name;
            if ("" !== p && "-" !== p)
                for (var m in a[h] = 1, o.icn3d.residues[h]) o.icn3d.hAtoms[m] = 1
        }
        void 0 !== o.icn3d.defNames2Atoms && o.icn3d.defNames2Atoms.hasOwnProperty(t) || void 0 !== o.icn3d.defNames2Residues && o.icn3d.defNames2Residues.hasOwnProperty(t) || o.addCustomSelection(Object.keys(a), t, t, r, !0);
        i ? o.updateHlAll(void 0, void 0, n, !0) : o.updateHlAll(Object.keys(o.menuHlHash), void 0, n, !0)
    }, iCn3DUI.prototype.selectResidueList = function(e, t, i, n, o) {
        var r = this;
        if (void 0 !== e && 0 < Object.keys(e).length) {
            for (var s in void 0 !== n && n ? void 0 === r.menuHlHash && (r.menuHlHash = {}) : (r.icn3d.hAtoms = {}, r.menuHlHash = {}), e)
                for (var a in r.icn3d.residues[s]) r.icn3d.hAtoms[a] = 1;
            t = t.replace(/\s/g, "");
            r.menuHlHash[t] = 1;
            var c = "select " + r.residueids2spec(Object.keys(e)),
                d = Object.keys(e);
            r.addCustomSelection(d, t, i, c, !0), void 0 !== o && !o || r.updateHlAll(Object.keys(r.menuHlHash), void 0, n)
        }
    }, iCn3DUI.prototype.addCustomSelection = function(e, t, i, n, o) {
        o ? this.icn3d.defNames2Residues[t] = e : this.icn3d.defNames2Atoms[t] = e, this.icn3d.defNames2Command[t] = n, this.icn3d.defNames2Descr[t] = i, this.updateHlMenus([t])
    }, iCn3DUI.prototype.selectMainChains = function() {
        var e = this.icn3d.cloneHash(this.icn3d.hAtoms);
        this.icn3d.hAtoms = this.icn3d.selectMainChainSubset(e), this.showHighlight()
    }, iCn3DUI.prototype.selectSideChains = function() {
        var e = this,
            t = e.icn3d.cloneHash(e.icn3d.hAtoms),
            i = ["C1'", "C1*", "C2'", "C2*", "C3'", "C3*", "C4'", "C4*", "C5'", "C5*", "O3'", "O3*", "O4'", "O4*", "O5'", "O5*", "P", "OP1", "O1P", "OP2", "O2P"];
        for (var n in e.icn3d.hAtoms = {}, t)(e.icn3d.proteins.hasOwnProperty(n) && "N" !== e.icn3d.atoms[n].name && "C" !== e.icn3d.atoms[n].name && "O" !== e.icn3d.atoms[n].name && ("CA" !== e.icn3d.atoms[n].name || "C" !== e.icn3d.atoms[n].elem) || e.icn3d.nucleotides.hasOwnProperty(n) && -1 === i.indexOf(e.icn3d.atoms[n].name)) && (e.icn3d.hAtoms[n] = 1);
        e.showHighlight()
    }, iCn3DUI.prototype.selectMainSideChains = function() {
        var e = this,
            t = e.icn3d.getResiduesFromAtoms(e.icn3d.hAtoms);
        for (var i in e.icn3d.hAtoms = {}, t) e.icn3d.hAtoms = e.icn3d.unionHash(e.icn3d.hAtoms, e.icn3d.residues[i]), e.icn3d.dAtoms = e.icn3d.unionHash(e.icn3d.dAtoms, e.icn3d.residues[i]);
        e.icn3d.draw(), e.showHighlight()
    }, iCn3DUI.prototype.clickCommand_apply = function() {
        var n = this;
        $("#" + n.pre + "command_apply").click(function(e) {
            e.preventDefault();
            var t = $("#" + n.pre + "command").val(),
                i = $("#" + n.pre + "command_name").val().replace(/;/g, "_").replace(/\s+/g, "_");
            t && (n.selectByCommand(t, i, i), n.setLogCmd("select " + t + " | name " + i, !0))
        }), $("#" + n.pre + "command_apply2").click(function(e) {
            e.preventDefault();
            var t = $("#" + n.pre + "command2").val(),
                i = $("#" + n.pre + "command_name2").val().replace(/;/g, "_").replace(/\s+/g, "_");
            t && (n.selectByCommand(t, i, i), n.setLogCmd("select " + t + " | name " + i, !0))
        })
    }, iCn3DUI.prototype.selectCombinedSets = function(e, t) {
        for (var i = e.split(" "), n = [], o = [], r = [], s = "or", a = 0, c = i.length; a < c; ++a) "or" !== i[a] && "and" !== i[a] && "not" !== i[a] ? "or" === s ? n.push(i[a]) : "and" === s ? o.push(i[a]) : "not" === s && r.push(i[a]) : s = i[a];
        null !== i && this.combineSets(n, o, r, t)
    }, iCn3DUI.prototype.selectByCommand = function(e, t, i) {
        var n = this;
        if (0 === e.indexOf("saved atoms")) {
            var o = 12,
                r = e.substr(o);
            n.selectCombinedSets(r, t)
        } else {
            for (var s = e.replace(/ AND /g, " and ").replace(/ OR /g, " or ").replace(/ or and /g, " and ").replace(/ and /g, " or and ").replace(/ or not /g, " not ").replace(/ not /g, " or not "), a = ("select" === s.trim().substr(0, 6) ? s.trim().substr(7) : s.trim()).split(" or "), c = {}, d = 0, l = a.length; d < l; ++d) {
                var h = a[d].trim().replace(/\s+/g, " ");
                o = h.indexOf(" ");
                n.icn3d.hAtoms = {}, c = "and" === h.substr(0, o).toLowerCase() ? (n.applyCommand("select " + h.substr(o + 1)), n.icn3d.intHash(c, n.icn3d.hAtoms)) : "not" === h.substr(0, o).toLowerCase() ? (n.applyCommand("select " + h.substr(o + 1)), n.icn3d.exclHash(c, n.icn3d.hAtoms)) : (n.applyCommand("select " + h), n.icn3d.unionHash(c, n.icn3d.hAtoms))
            }
            n.icn3d.hAtoms = n.icn3d.cloneHash(c);
            var p = Object.keys(n.icn3d.hAtoms);
            if ("" !== t) {
                n.addCustomSelection(p, t, i, e, !1);
                var m = [t];
                n.changeCustomAtoms(m)
            }
        }
    }, iCn3DUI.prototype.selectBySpec = function(e, t, i, n) {
        var o = this;
        e = "select" === e.trim().substr(0, 6) ? e.trim().substr(7) : e.trim(), o.icn3d.hAtoms = {};
        for (var r, s = e.replace(/\s+/g, " ").replace(/ AND /g, " and ").split(" and "), a = {}, c = {}, d = !0, l = 0, h = s.length; l < h; ++l) {
            var p, m, u, f, g = s[l].indexOf("$"),
                v = s[l].indexOf("."),
                b = s[l].indexOf(":"),
                y = s[l].indexOf("@"),
                _ = s[l]; - 1 === y ? f = ["*"] : (f = _.substr(y + 1).split(","), _ = _.substr(0, y)), -1 === b ? u = "*" : (u = _.substr(b + 1), _ = _.substr(0, b)), -1 === v ? m = "*" : (m = _.substr(v + 1), _ = _.substr(0, v)), -1 === g ? p = "*" : (p = _.substr(g + 1).toUpperCase(), _ = _.substr(0, g)), 1 == f.length && "*" !== f[0] && (d = !1);
            var C, w, S, k, A = [],
                x = [];
            if (A = "*" === p ? Object.keys(o.icn3d.structures) : p.split(","), "*" === m)
                for (var R = Object.keys(o.icn3d.chains), E = 0, D = R.length; E < D; ++E) C = (w = R[E]).substr(0, w.indexOf("_")), -1 !== A.toString().toLowerCase().indexOf(C.toLowerCase()) && x.push(w);
            else
                for (E = 0, D = A.length; E < D; ++E) {
                    C = A[E];
                    var O = m.split(",");
                    for (var T in O) x.push(C + "_" + O[T])
                }
            var H = u.split(",");
            for (E = 0, D = H.length; E < D; ++E) {
                var M, I = !1,
                    $ = H[E].indexOf("-"),
                    L = !1,
                    F = !1;
                if (-1 !== $) S = H[E].substr(0, $), k = H[E].substr($ + 1), I = !0;
                else if ("" === H[E] || isNaN(H[E])) {
                    if ("*" === H[E]) L = !0;
                    else if ("proteins" !== H[E] && "nucleotides" !== H[E] && "chemicals" !== H[E] && "ions" !== H[E] && "water" !== H[E]) {
                        M = H[E].toUpperCase(), F = !0
                    }
                } else k = S = H[E], I = !0;
                for (var P = 0, N = x.length; P < N; ++P)
                    if (w = x[P], I)
                        for (T = parseInt(S); T <= parseInt(k); ++T) {
                            var z = w + "_" + T;
                            for (var q in 0 === l ? a[z] = 1 : a.hasOwnProperty(z) || delete a[z], o.icn3d.residues[z])
                                for (var j = 0, U = f.length; j < U; ++j) {
                                    "*" !== (oe = f[j]) && oe !== o.icn3d.atoms[q].name || (0 === l ? c[q] = 1 : c.hasOwnProperty(q) || delete c[q])
                                }
                        } else if (w in o.icn3d.chains) {
                            var B = o.icn3d.chains[w];
                            for (var q in B) {
                                o.icn3d.atoms[q].resn.substr(0, 3).toUpperCase();
                                if (L || "proteins" === H[E] && q in o.icn3d.proteins || "nucleotides" === H[E] && q in o.icn3d.nucleotides || "chemicals" === H[E] && q in o.icn3d.chemicals || "ions" === H[E] && q in o.icn3d.ions || "water" === H[E] && q in o.icn3d.water) {
                                    if (0 === l) a[w + "_" + o.icn3d.atoms[q].resi] = 1;
                                    else {
                                        var G = w + "_" + o.icn3d.atoms[q].resi;
                                        a.hasOwnProperty(G) || delete a[G]
                                    }
                                    for (j = 0, U = f.length; j < U; ++j) {
                                        "*" !== (oe = f[j]) && oe !== o.icn3d.atoms[q].name || (0 === l ? c[q] = 1 : c.hasOwnProperty(q) || delete c[q])
                                    }
                                }
                            }
                            if (F) {
                                for (var V = "", W = [], Y = 0, X = o.icn3d.chainsSeq[w].length; Y < X; ++Y) V += 1 == o.icn3d.chainsSeq[w][Y].name.length ? o.icn3d.chainsSeq[w][Y].name : " ", W.push(o.icn3d.chainsSeq[w][Y].resi);
                                V = V.toUpperCase();
                                for (var K = M.replace(/x/gi, "."), Z = [], Q = new RegExp(K, "i"), J = V, ee = te = J.search(Q); - 1 !== te;) Z.push(ee), ee += (te = (J = J.substr(te + 1)).search(Q)) + 1;
                                for (Y = 0, X = Z.length; Y < X; ++Y)
                                    for (var te = Z[Y], ie = 0, ne = M.length; ie < ne; ++ie) {
                                        z = w + "_" + W[ie + te];
                                        for (var q in 0 === l ? a[z] = 1 : a.hasOwnProperty(z) || delete a[z], o.icn3d.residues[z])
                                            for (j = 0, U = f.length; j < U; ++j) {
                                                var oe;
                                                "*" !== (oe = f[j]) && oe !== o.icn3d.atoms[q].name || (0 === l ? c[q] = 1 : c.hasOwnProperty(q) || delete c[q])
                                            }
                                    }
                            }
                        }
            }
        }
        if (o.icn3d.hAtoms = o.icn3d.cloneHash(c), 0 == Object.keys(o.icn3d.hAtoms).length && console.log("No residues were selected. Please try another search."), void 0 !== n && !n || o.updateHlAll(), r = d ? Object.keys(a) : Object.keys(c), "" != t) {
            o.addCustomSelection(r, t, i, e, d);
            var re = [t];
            o.changeCustomAtoms(re)
        }
    }, iCn3DUI.prototype.showSets = function() {
        var e = this;
        e.openDialog(e.pre + "dl_definedsets", "Select sets"), $("#" + e.pre + "dl_setsmenu").show(), $("#" + e.pre + "dl_setoperations").show(), $("#" + e.pre + "dl_command").hide(), $("#" + e.pre + "atomsCustom").resizable();
        var t = e.icn3d.cloneHash(e.icn3d.hAtoms),
            i = e.icn3d.cloneHash(e.icn3d.dAtoms);
        void 0 !== e.bSetChainsAdvancedMenu && e.bSetChainsAdvancedMenu || (e.setPredefinedInMenu(), e.bSetChainsAdvancedMenu = !0), e.icn3d.hAtoms = e.icn3d.cloneHash(t), e.icn3d.dAtoms = e.icn3d.cloneHash(i), e.updateHlMenus()
    }, iCn3DUI.prototype.clickCustomAtoms = function() {
        var i = this;
        $("#" + i.pre + "atomsCustom").change(function(e) {
            var t = $(this).val();
            if (null !== t) {
                i.changeCustomAtoms(t, !1), i.setLogCmd("select sets " + t.join(" " + i.setOperation + " "), !0), i.bSelectResidue = !1
            }
        }), $("#" + i.pre + "atomsCustom").focus(function(e) {
            i.isMobile() && $("#" + i.pre + "atomsCustom").val("")
        })
    }, iCn3DUI.prototype.deleteSelectedSets = function() {
        for (var e = this, t = $("#" + e.pre + "atomsCustom").val(), i = 0; i < t.length; ++i) {
            var n = t[i];
            (void 0 !== e.icn3d.defNames2Atoms && e.icn3d.defNames2Atoms.hasOwnProperty(n) || void 0 !== e.icn3d.defNames2Residues && e.icn3d.defNames2Residues.hasOwnProperty(n)) && (void 0 !== e.icn3d.defNames2Atoms && e.icn3d.defNames2Atoms.hasOwnProperty(n) && delete e.icn3d.defNames2Atoms[n], void 0 !== e.icn3d.defNames2Residues && e.icn3d.defNames2Residues.hasOwnProperty(n) && delete e.icn3d.defNames2Residues[n])
        }
        e.updateHlMenus()
    }, iCn3DUI.prototype.changeCustomAtoms = function(e, t) {
        var i = this;
        i.icn3d.hAtoms = {};
        for (var n = 0; n < e.length; ++n) {
            var o = e[n];
            if (void 0 !== i.icn3d.defNames2Atoms && i.icn3d.defNames2Atoms.hasOwnProperty(o) || void 0 !== i.icn3d.defNames2Residues && i.icn3d.defNames2Residues.hasOwnProperty(o)) {
                if (void 0 !== i.icn3d.defNames2Atoms && i.icn3d.defNames2Atoms.hasOwnProperty(o))
                    for (var r = 0, s = (l = i.icn3d.defNames2Atoms[o]).length; r < s; ++r) i.icn3d.hAtoms[l[r]] = 1;
                if (void 0 !== i.icn3d.defNames2Residues && i.icn3d.defNames2Residues.hasOwnProperty(o)) {
                    var a = i.icn3d.defNames2Residues[o],
                        c = {};
                    for (r = 0, s = a.length; r < s; ++r) c = i.icn3d.unionHash(c, i.icn3d.residues[a[r]]);
                    i.icn3d.hAtoms = i.icn3d.unionHash(i.icn3d.hAtoms, c)
                }
            }
        }
        i.updateHlAll(e, t), i.showAnnoSelectedChains(), $("#" + i.pre + "command").val(""), $("#" + i.pre + "command_name").val("");
        n = 0;
        for (var d = e.length; n < d; ++n) {
            var l = i.icn3d.defNames2Atoms[e[n]];
            i.icn3d.defNames2Residues[e[n]], i.icn3d.defNames2Descr[e[n]];
            if (0 === n) $("#" + i.pre + "command").val("saved atoms " + e[n]), $("#" + i.pre + "command_name").val(e[n]);
            else {
                var h = $("#" + i.pre + "command").val();
                $("#" + i.pre + "command").val(h + " " + i.setOperation + " " + e[n]);
                h = $("#" + i.pre + "command_name").val();
                $("#" + i.pre + "command_name").val(h + " " + i.setOperation + " " + e[n])
            }
        }
    }, iCn3DUI.prototype.setHAtomsFromSets = function(e, t) {
        for (var i = this, n = 0; n < e.length; ++n) {
            var o = e[n];
            if (void 0 !== i.icn3d.defNames2Atoms && i.icn3d.defNames2Atoms.hasOwnProperty(o) || void 0 !== i.icn3d.defNames2Residues && i.icn3d.defNames2Residues.hasOwnProperty(o)) {
                if (void 0 !== i.icn3d.defNames2Atoms && i.icn3d.defNames2Atoms.hasOwnProperty(o)) {
                    var r = i.icn3d.defNames2Atoms[o];
                    if ("or" === t)
                        for (var s = 0, a = r.length; s < a; ++s) i.icn3d.hAtoms[r[s]] = 1;
                    else if ("and" === t) {
                        var c = {};
                        for (s = 0, a = r.length; s < a; ++s) c[r[s]] = 1;
                        i.icn3d.hAtoms = i.icn3d.intHash(i.icn3d.hAtoms, c)
                    } else if ("not" === t) {
                        for (c = {}, s = 0, a = r.length; s < a; ++s) c[r[s]] = 1;
                        i.icn3d.hAtoms = i.icn3d.exclHash(i.icn3d.hAtoms, c)
                    }
                }
                if (void 0 !== i.icn3d.defNames2Residues && i.icn3d.defNames2Residues.hasOwnProperty(o)) {
                    var d = i.icn3d.defNames2Residues[o];
                    for (c = {}, s = 0, a = d.length; s < a; ++s) c = i.icn3d.unionHash(c, i.icn3d.residues[d[s]]);
                    "or" === t ? i.icn3d.hAtoms = i.icn3d.unionHash(i.icn3d.hAtoms, c) : "and" === t ? i.icn3d.hAtoms = i.icn3d.intHash(i.icn3d.hAtoms, c) : "not" === t && (i.icn3d.hAtoms = i.icn3d.exclHash(i.icn3d.hAtoms, c))
                }
            }
        }
    }, iCn3DUI.prototype.updateAdvancedCommands = function(e, t) {
        for (var i = " " + t + " ", n = 0, o = e.length; n < o; ++n)
            if (0 === n && "or" == t) $("#" + this.pre + "command").val("saved atoms " + e[n]), $("#" + this.pre + "command_name").val(e[n]);
            else {
                var r = $("#" + this.pre + "command").val();
                $("#" + this.pre + "command").val(r + i + e[n]);
                r = $("#" + this.pre + "command_name").val();
                $("#" + this.pre + "command_name").val(r + i + e[n])
            }
    }, iCn3DUI.prototype.combineSets = function(e, t, i, n) {
        var o = this;
        if (o.icn3d.hAtoms = {}, o.setHAtomsFromSets(e, "or"), 0 == Object.keys(o.icn3d.hAtoms).length && (o.icn3d.hAtoms = o.icn3d.cloneHash(o.icn3d.atoms)), o.setHAtomsFromSets(t, "and"), o.setHAtomsFromSets(i, "not"), o.icn3d.bInitial || o.updateHlAll(), o.showAnnoSelectedChains(), $("#" + o.pre + "command").val(""), $("#" + o.pre + "command_name").val(""), o.updateAdvancedCommands(e, "or"), o.updateAdvancedCommands(t, "and"), o.updateAdvancedCommands(i, "not"), void 0 !== n) {
            var r = "select " + $("#" + o.pre + "command").val();
            $("#" + o.pre + "command_name").val(n), o.addCustomSelection(Object.keys(o.icn3d.hAtoms), n, n, r, !1)
        }
    }, iCn3DUI.prototype.setProtNuclLigInMenu = function() {
        var e = this;
        if (0 < Object.keys(e.icn3d.proteins).length && (e.icn3d.defNames2Residues.proteins = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.proteins)), e.icn3d.defNames2Descr.proteins = "proteins", e.icn3d.defNames2Command.proteins = "select :proteins"), 0 < Object.keys(e.icn3d.nucleotides).length && (e.icn3d.defNames2Residues.nucleotides = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.nucleotides)), e.icn3d.defNames2Descr.nucleotides = "nucleotides", e.icn3d.defNames2Command.nucleotides = "select :nucleotides"), 0 < Object.keys(e.icn3d.chemicals).length)
            if (e.icn3d.bOpm) {
                var t = {},
                    i = {};
                for (var n in e.icn3d.chemicals) {
                    var o = e.icn3d.atoms[n],
                        r = o.structure + "_" + o.chain + "_" + o.resi;
                    "DUM" === o.resn ? i[r] = 1 : t[r] = 1
                }
                0 < Object.keys(t).length && (e.icn3d.defNames2Residues.chemicals = Object.keys(t), e.icn3d.defNames2Descr.chemicals = "chemicals", e.icn3d.defNames2Command.chemicals = "select :chemicals"), 0 < Object.keys(i).length && (e.icn3d.defNames2Residues.membrane = Object.keys(i), e.icn3d.defNames2Descr.membrane = "membrane", e.icn3d.defNames2Command.membrane = "select :membrane")
            } else e.icn3d.defNames2Residues.chemicals = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.chemicals)), e.icn3d.defNames2Descr.chemicals = "chemicals", e.icn3d.defNames2Command.chemicals = "select :chemicals";
        0 < Object.keys(e.icn3d.ions).length && (e.icn3d.defNames2Residues.ions = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.ions)), e.icn3d.defNames2Descr.ions = "ions", e.icn3d.defNames2Command.ions = "select :ions"), 0 < Object.keys(e.icn3d.water).length && (e.icn3d.defNames2Residues.water = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.water)), e.icn3d.defNames2Descr.water = "water", e.icn3d.defNames2Command.water = "select :water"), e.setTransmemInMenu(e.icn3d.halfBilayerSize, -e.icn3d.halfBilayerSize)
    }, iCn3DUI.prototype.setTransmemInMenu = function(e, t, i) {
        var n = this;
        if (n.icn3d.bOpm) {
            var o = {},
                r = {},
                s = {};
            for (var a in n.icn3d.atoms) {
                var c = n.icn3d.atoms[a],
                    d = c.structure + "_" + c.chain + "_" + c.resi;
                c.coord.z > e ? r[d] = 1 : c.coord.z < t ? s[d] = 1 : "DUM" !== c.resn && (o[d] = 1)
            }
            var l = i ? "2" : "";
            0 < Object.keys(o).length && (n.icn3d.defNames2Residues["transmembrane" + l] = Object.keys(o), n.icn3d.defNames2Descr["transmembrane" + l] = "transmembrane" + l, n.icn3d.defNames2Command["transmembrane" + l] = "select :transmembrane" + l), 0 < Object.keys(r).length && (n.icn3d.defNames2Residues["extracellular" + l] = Object.keys(r), n.icn3d.defNames2Descr["extracellular" + l] = "extracellular" + l, n.icn3d.defNames2Command["extracellular" + l] = "select :extracellular" + l), 0 < Object.keys(s).length && (n.icn3d.defNames2Residues["intracellular" + l] = Object.keys(s), n.icn3d.defNames2Descr["intracellular" + l] = "intracellular" + l, n.icn3d.defNames2Command["intracellular" + l] = "select :intracellular" + l)
        }
    }, iCn3DUI.prototype.setChainsInMenu = function() {
        var e = this;
        for (var t in e.icn3d.chains)
            if (1 < e.icn3d.chainsSeq[t].length) {
                e.icn3d.defNames2Residues[t] = Object.keys(e.icn3d.getResiduesFromAtoms(e.icn3d.chains[t]));
                var i = (e.icn3d.defNames2Descr[t] = t).indexOf("_"),
                    n = t.substr(0, i),
                    o = t.substr(i + 1);
                e.icn3d.defNames2Command[t] = "select $" + n + "." + o
            } if (1 == Object.keys(e.icn3d.structures)) {
            n = Object.keys(e.icn3d.structures)[0];
            e.icn3d.defNames2Residues[n] = Object.keys(e.icn3d.residues), e.icn3d.defNames2Descr[n] = n, e.icn3d.defNames2Command[n] = "select $" + n
        } else {
            for (var r = Object.keys(e.icn3d.residues), s = {}, a = 0, c = r.length; a < c; ++a) {
                var d = r[a];
                i = d.indexOf("_");
                void 0 === s[n = d.substr(0, i)] && (s[n] = []), s[n].push(d)
            }
            for (var n in s) e.icn3d.defNames2Residues[n] = s[n], e.icn3d.defNames2Descr[n] = n, e.icn3d.defNames2Command[n] = "select $" + n
        }
    }, iCn3DUI.prototype.loadScript = function(e, t) {
        var i = this;
        i.bCommandLoad = !0, i.icn3d.bRender = !1, i.icn3d.bStopRotate = !0, e = t ? e.replace(/\+/g, " ") : e.replace(/\+/g, " ").replace(/;/g, "\n");
        var n = [];
        0 < i.icn3d.commands.length && (n[0] = i.icn3d.commands[0]);
        var o = e.trim().split("\n"),
            r = (i.icn3d.commands = o)[0].indexOf("command=");
        if (t && -1 != r) {
            var s = o[0].substr(0, r - 1);
            i.icn3d.commands.splice(0, 1, s)
        }
        i.STATENUMBER = i.icn3d.commands.length, i.icn3d.commands = n.concat(i.icn3d.commands), i.STATENUMBER = i.icn3d.commands.length, t || i.bReplay ? i.CURRENTNUMBER = 0 : i.CURRENTNUMBER = 1, i.bReplay ? i.replayFirstStep(i.CURRENTNUMBER) : i.execCommands(i.CURRENTNUMBER, i.STATENUMBER - 1, i.STATENUMBER)
    }, iCn3DUI.prototype.replayFirstStep = function(e) {
        var t = this;
        t.icn3d.reinitAfterLoad(), t.icn3d.opts = t.icn3d.cloneHash(t.opts), t.execCommandsBase(e, e, t.STATENUMBER);
        var i = t.icn3d.commands[e].indexOf(" | "),
            n = t.icn3d.commands[e].substr(0, i),
            o = 20 < n.length ? n.substr(0, 20) + "..." : n,
            r = t.getMenuFromCmd(o);
        $("#" + t.pre + "replay_cmd").html("Cmd: " + o), $("#" + t.pre + "replay_menu").html("Menu: " + r), t.bCommandLoad = !1, t.hideLoading(), t.icn3d.bRender = !0, t.icn3d.draw()
    }, iCn3DUI.prototype.loadSelection = function(e) {
        for (var t = e.trim().split("\n"), i = 0, n = t.length; i < n; ++i) {
            var o = t[i].split("\t"),
                r = o[0],
                s = o[1],
                a = s.indexOf(" ");
            this.selectByCommand(s.substr(a + 1), r, r, !1)
        }
    }, iCn3DUI.prototype.execCommands = function(e, t, i) {
        this.icn3d.bRender = !1, this.icn3d.reinitAfterLoad(), this.icn3d.opts = this.icn3d.cloneHash(this.opts), this.execCommandsBase(e, t, i)
    }, iCn3DUI.prototype.execCommandsBase = function(e, t, i, n) {
        for (var o = this, r = e; r <= t; ++r) {
            n = r === i - 1;
            if (-1 !== o.icn3d.commands[r].indexOf("load")) return 0 === t && e === t ? void(o.bNotLoadStructure ? (o.icn3d.hAtoms = o.icn3d.cloneHash(o.icn3d.atoms), 1 === o.icn3d.commands.length && (o.bAddCommands = !0), n && o.renderFinalStep(i)) : $.when(o.applyCommandLoad(o.icn3d.commands[r])).then(function() {
                1 === o.icn3d.commands.length && (o.bAddCommands = !0), n && o.renderFinalStep(i)
            })) : void(o.bNotLoadStructure ? (o.icn3d.hAtoms = o.icn3d.cloneHash(o.icn3d.atoms), o.backForward && o.renderFinalStep(1), o.execCommandsBase(r + 1, t, i)) : $.when(o.applyCommandLoad(o.icn3d.commands[r])).then(function() {
                o.backForward && o.renderFinalStep(1), o.execCommandsBase(r + 1, t, i)
            }));
            if (0 == o.icn3d.commands[r].trim().indexOf("set map") && -1 == o.icn3d.commands[r].trim().indexOf("set map wireframe")) {
                if (3 == (d = (a = o.icn3d.commands[r].split("|||"))[0].trim().split(" | ")[0].substr(8).split(" ")).length && "sigma" == d[1]) {
                    d[2];
                    var s = d[0];
                    return void(("2fofc" != s || void 0 !== o.bAjax2fofc && o.bAjax2fofc) && ("fofc" != s || void 0 !== o.bAjaxfofc && o.bAjaxfofc) ? (o.applyCommandMap(a[0].trim()), o.execCommandsBase(r + 1, t, i)) : $.when(o.applyCommandMap(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }))
                }
            } else if (0 == o.icn3d.commands[r].trim().indexOf("set emmap") && -1 == o.icn3d.commands[r].trim().indexOf("set emmap wireframe")) {
                if (2 == (d = (a = o.icn3d.commands[r].split("|||"))[0].trim().substr(10).split(" ")).length && "percentage" == d[0]) {
                    d[1];
                    return void(void 0 !== o.bAjaxEm && o.bAjaxEm ? (o.applyCommandEmmap(a[0].trim()), o.execCommandsBase(r + 1, t, i)) : $.when(o.applyCommandEmmap(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }))
                }
            } else {
                if (0 == o.icn3d.commands[r].trim().indexOf("view annotations")) {
                    var a = o.icn3d.commands[r].split("|||");
                    return void(0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjaxCddSite || !o.bAjaxCddSite) ? $.when(o.applyCommandAnnotationsAndCddSite(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }) : (0 < Object.keys(o.icn3d.proteins).length && o.applyCommandAnnotationsAndCddSiteBase(a[0].trim()), o.execCommandsBase(r + 1, t, i)))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("set annotation clinvar")) {
                    a = o.icn3d.commands[r].split("|||");
                    return void(0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjaxClinvar || !o.bAjaxClinvar) ? $.when(o.applyCommandClinvar(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }) : (0 < Object.keys(o.icn3d.proteins).length && o.applyCommandClinvar(a[0].trim()), o.execCommandsBase(r + 1, t, i)))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("set annotation snp")) {
                    a = o.icn3d.commands[r].split("|||");
                    return void(0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjaxSnp || !o.bAjaxSnp) ? $.when(o.applyCommandSnp(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }) : (0 < Object.keys(o.icn3d.proteins).length && o.applyCommandSnp(a[0].trim()), o.execCommandsBase(r + 1, t, i)))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("set annotation 3ddomain")) {
                    a = o.icn3d.commands[r].split("|||");
                    return void(0 < Object.keys(o.icn3d.proteins).length && void 0 === o.mmdb_data && (void 0 === o.bAjax3ddomain || !o.bAjax3ddomain) ? $.when(o.applyCommand3ddomain(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }) : (0 < Object.keys(o.icn3d.proteins).length && o.applyCommand3ddomain(a[0].trim()), o.execCommandsBase(r + 1, t, i)))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("set annotation all")) {
                    a = o.icn3d.commands[r].split("|||");
                    return void(!(0 < Object.keys(o.icn3d.proteins).length) || void 0 !== o.bAjaxClinvar && o.bAjaxClinvar || void 0 !== o.bAjaxSnp && o.bAjaxSnp || void 0 !== o.bAjax3ddomain && o.bAjax3ddomain && void 0 !== o.mmdb_data ? !(0 < Object.keys(o.icn3d.proteins).length) || void 0 !== o.bAjaxClinvar && o.bAjaxClinvar || void 0 !== o.bAjaxSnp && o.bAjaxSnp ? !(0 < Object.keys(o.icn3d.proteins).length) || void 0 !== o.bAjaxClinvar && o.bAjaxClinvar || void 0 !== o.bAjax3ddomain && o.bAjax3ddomain && void 0 !== o.mmdb_data ? !(0 < Object.keys(o.icn3d.proteins).length) || void 0 !== o.bAjax3ddomain && o.bAjax3ddomain && void 0 !== o.mmdb_data || void 0 !== o.bAjaxSnp && o.bAjaxSnp ? 0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjaxClinvar || !o.bAjaxClinvar) ? $.when(o.applyCommandClinvar(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : 0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjaxSnp || !o.bAjaxSnp) ? $.when(o.applyCommandSnp(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : 0 < Object.keys(o.icn3d.proteins).length && (void 0 === o.bAjax3ddomain || !o.bAjax3ddomain || void 0 === o.mmdb_data) ? $.when(o.applyCommand3ddomain(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : (0 < Object.keys(o.icn3d.proteins).length && (o.bAjaxClinvar && o.applyCommandClinvarBase(a[0].trim()), o.bAjaxSnp && o.applyCommandSnpBase(a[0].trim()), !o.bAjax3ddomain && void 0 === o.mmdb_data || o.applyCommand3ddomainBase(a[0].trim())), o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)) : $.when(o.applyCommand3ddomain(a[0].trim())).then(o.applyCommandSnp(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : $.when(o.applyCommandClinvar(a[0].trim())).then(o.applyCommand3ddomain(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : $.when(o.applyCommandClinvar(a[0].trim())).then(o.applyCommandSnp(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }) : $.when(o.applyCommandClinvar(a[0].trim())).then(o.applyCommandSnp(a[0].trim())).then(o.applyCommand3ddomain(a[0].trim())).then(function() {
                        o.setAnnoTabAll(), o.execCommandsBase(r + 1, t, i)
                    }))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("view interactions") && void 0 !== o.cfg.align) {
                    a = o.icn3d.commands[r].split("|||");
                    return void(void 0 !== o.b2DShown && o.b2DShown ? o.execCommandsBase(r + 1, t, i) : $.when(o.applyCommandViewinteraction(a[0].trim())).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("symmetry")) {
                    var c = (h = (a = o.icn3d.commands[r].split("|||"))[0].trim()).substr(h.indexOf(" ") + 1);
                    return o.icn3d.symmetrytitle = "none" === c ? void 0 : c, void("none" !== c && void 0 === o.icn3d.symmetryHash ? $.when(o.applyCommandSymmetry(h)).then(function() {
                        o.cfg.notebook || dialog.dialog("close"), o.icn3d.draw(), o.execCommandsBase(r + 1, t, i)
                    }) : (o.icn3d.draw(), o.execCommandsBase(r + 1, t, i)))
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("realign on seq align")) {
                    var d;
                    if (2 == (d = (h = (a = o.icn3d.commands[r].split("|||"))[0].trim()).split(" | ")).length) {
                        var l = d[1].split(",");
                        o.icn3d.hAtoms = o.getAtomsFromNameArray(l)
                    }
                    return void $.when(o.applyCommandRealign(h)).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    })
                }
                if (0 == o.icn3d.commands[r].trim().indexOf("graph interaction pairs")) {
                    var h = (a = o.icn3d.commands[r].split("|||"))[0].trim();
                    return void(void 0 === o.bD3 ? $.when(o.applyCommandGraphinteraction(h)).then(function() {
                        o.execCommandsBase(r + 1, t, i)
                    }) : (o.applyCommandGraphinteraction(h), o.execCommandsBase(r + 1, t, i)))
                }
                o.applyCommand(o.icn3d.commands[r])
            }
        }
        r !== i && !n || (o.bCommandLoad = !1, o.hideLoading(), r + 1 === o.icn3d.commands.length && (o.bAddCommands = !0), o.renderFinalStep(r))
    }, iCn3DUI.prototype.setStrengthPara = function(e) {
        var t = this;
        if (5 <= e.length) {
            var i = e[4].split(" ");
            4 <= i.length && ($("#" + t.pre + "hbondthreshold").val(i[1]), $("#" + t.pre + "saltbridgethreshold").val(i[2]), $("#" + t.pre + "contactthreshold").val(i[3]), 7 <= i.length && ($("#" + t.pre + "halogenthreshold").val(i[4]), $("#" + t.pre + "picationthreshold").val(i[5]), $("#" + t.pre + "pistackingthreshold").val(i[6])))
        }
        if (6 == e.length) {
            var n = e[5].split(" ");
            6 <= n.length && ($("#" + t.pre + "dist_ss").val(n[0]), $("#" + t.pre + "dist_coil").val(n[1]), $("#" + t.pre + "dist_hbond").val(n[2]), $("#" + t.pre + "dist_inter").val(n[3]), $("#" + t.pre + "dist_ssbond").val(n[4]), $("#" + t.pre + "dist_ionic").val(n[5]), 9 == n.length && ($("#" + t.pre + "dist_halogen").val(n[6]), $("#" + t.pre + "dist_pication").val(n[7]), $("#" + t.pre + "dist_pistacking").val(n[8])))
        }
    }, iCn3DUI.prototype.oneStructurePerWindow = function() {
        var e = this,
            t = Object.keys(e.icn3d.structures);
        if (e.cfg.bSidebyside && 2 == t.length) {
            for (var i = t[Object.keys(window.icn3duiHash).indexOf(e.divid)], n = e.icn3d.structures[i], o = {}, r = 0, s = n.length; r < s; ++r) o = e.icn3d.unionHash(o, e.icn3d.chains[n[r]]);
            e.icn3d.dAtoms = e.icn3d.intHash(o, e.icn3d.dAtoms), e.icn3d.hAtoms = e.icn3d.cloneHash(e.icn3d.dAtoms)
        }
    }, iCn3DUI.prototype.renderFinalStep = function(e) {
        var t = this;
        t.icn3d.bRender = !0;
        var i = t.icn3d.commands[e - 1].split("|||");
        if (2 == i.length) {
            var n = JSON.parse(i[1]);
            t.icn3d._zoomFactor = n.factor, t.icn3d.mouseChange.x = n.mouseChange.x, t.icn3d.mouseChange.y = n.mouseChange.y, t.icn3d.quaternion._x = n.quaternion._x, t.icn3d.quaternion._y = n.quaternion._y, t.icn3d.quaternion._z = n.quaternion._z, t.icn3d.quaternion._w = n.quaternion._w
        }
        if (t.oneStructurePerWindow(), 1 === e || Object.keys(t.icn3d.hAtoms).length === Object.keys(t.icn3d.atoms).length || void 0 !== t.icn3d.optsHistory[e - 1] && t.icn3d.optsHistory[e - 1].hasOwnProperty("hlatomcount") && t.icn3d.optsHistory[e - 1].hlatomcount === Object.keys(t.icn3d.atoms).length)
            if (1 === e && (t.icn3d.setAtomStyleByOptions(t.icn3d.optsHistory[e - 1]), t.icn3d.setColorByOptions(t.icn3d.optsHistory[e - 1], t.icn3d.hAtoms)), t.icn3d.optsHistory.length >= e) {
                var o = t.icn3d.optsHistory[e - 1].pk;
                "no" === o ? t.icn3d.pk = 0 : "atom" === o ? t.icn3d.pk = 1 : "residue" === o ? t.icn3d.pk = 2 : "strand" === o && (t.icn3d.pk = 3), 1 === e && t.icn3d.applyOriginalColor(), t.updateHlAll(), jQuery.extend(t.icn3d.opts, t.icn3d.optsHistory[e - 1]), t.icn3d.draw()
            } else t.updateHlAll(), t.icn3d.draw();
        else t.updateHlAll(), t.icn3d.draw();
        t.cfg.closepopup && (t.closeDialogs(), t.resizeCanvas(t.WIDTH, t.HEIGHT, !0)), t.bTransparentSurface && t.icn3d.bRender && t.icn3d.render()
    }, iCn3DUI.prototype.applyCommandLoad = function(c) {
        var d = this;
        if (!(void 0 !== d.icn3d.atoms && 0 < Object.keys(d.icn3d.atoms).length)) return d.deferred2 = $.Deferred(function() {
            d.bAddCommands = !1;
            var e = c.split("|||")[0].replace(/\s\s/g, " ").trim().toLowerCase();
            if (-1 !== e.indexOf("load")) {
                var t = e.split(" | "),
                    i = t[0];
                if (1 < t.length) {
                    var n = t[t.length - 1].indexOf(" ");
                    d.cfg.inpara = t[t.length - 1].substr(n + 1), "undefined" === d.cfg.inpara && (d.cfg.inpara = "")
                }
                var o = i.substr(i.lastIndexOf(" ") + 1);
                if (d.inputid = o, -1 !== e.indexOf("load mmtf")) d.cfg.mmtfid = o, d.downloadMmtf(o);
                else if (-1 !== e.indexOf("load pdb")) d.cfg.pdbid = o, d.downloadPdb(o);
                else if (-1 !== e.indexOf("load opm")) d.cfg.opmid = o, d.downloadOpm(o);
                else if (-1 !== e.indexOf("load mmcif")) d.cfg.mmcifid = o, d.downloadMmcif(o);
                else if (-1 !== e.indexOf("load mmdb")) d.cfg.mmdbid = o, d.downloadMmdb(o);
                else if (-1 !== e.indexOf("load gi")) d.cfg.gi = o, d.downloadGi(o);
                else if (-1 !== e.indexOf("load seq_struc_ids")) d.downloadBlast_rep_id(o);
                else if (-1 !== e.indexOf("load cid")) d.cfg.cid = o, d.downloadCid(o);
                else if (-1 !== e.indexOf("load alignment")) d.cfg.align = o, d.downloadAlignment(o);
                else if (-1 !== e.indexOf("load chainalignment")) d.cfg.chainalign = o, d.downloadChainAlignment(o);
                else if (-1 !== e.indexOf("load url")) {
                    var r = t[1],
                        s = void 0 !== r ? r.indexOf("type ") : -1,
                        a = "pdb"; - 1 !== s && (a = r.substr(s + 5)), d.cfg.url = o, d.downloadUrl(o, a)
                }
            }
            d.bAddCommands = !0
        }), d.deferred2.promise()
    }, iCn3DUI.prototype.applyCommandMap = function(o) {
        var r = this;
        return r.deferredMap = $.Deferred(function() {
            var e = o.split(" | "),
                t = e[0].substr(8).split(" ");
            if (3 == t.length && "sigma" == t[1]) {
                var i = t[2],
                    n = t[0];
                2 == e.length ? r.Dsn6ParserBase(e[1], n, i) : r.Dsn6Parser(r.inputid, n, i)
            }
        }), r.deferredMap.promise()
    }, iCn3DUI.prototype.applyCommandEmmap = function(t) {
        var n = this;
        return n.deferredEmmap = $.Deferred(function() {
            var i = t.substr(10).split(" ");
            if (2 == i.length && "percentage" == i[0])
                if (void 0 === iCn3DUI.prototype.DensityCifParser) {
                    $.ajax({
                        url: "https://www.ncbi.nlm.nih.gov/Structure/icn3d/density_cif_parser.min.js",
                        dataType: "script",
                        cache: !0,
                        tryCount: 0,
                        retryLimit: 1,
                        success: function(e) {
                            var t = i[1];
                            n.DensityCifParser(n.inputid, "em", t, n.icn3d.emd)
                        },
                        error: function(e, t, i) {
                            this.tryCount++, this.tryCount <= this.retryLimit && $.ajax(this)
                        }
                    })
                } else {
                    var e = i[1];
                    n.DensityCifParser(n.inputid, "em", e, n.icn3d.emd)
                }
        }), n.deferredEmmap.promise()
    }, iCn3DUI.prototype.applyCommandSymmetryBase = function(e) {
        this.retrieveSymmetry(Object.keys(this.icn3d.structures)[0])
    }, iCn3DUI.prototype.applyCommandSymmetry = function(e) {
        var t = this;
        return t.deferredSymmetry = $.Deferred(function() {
            t.applyCommandSymmetryBase(e)
        }), t.deferredSymmetry.promise()
    }, iCn3DUI.prototype.applyCommandRealignBase = function(e) {
        this.realignOnSeqAlign()
    }, iCn3DUI.prototype.applyCommandRealign = function(e) {
        var t = this;
        return t.deferredRealign = new $.Deferred(function() {
            t.applyCommandRealignBase(e)
        }), t.deferredRealign.promise()
    }, iCn3DUI.prototype.applyCommandGraphinteractionBase = function(e) {
        var t = e.split(" | ");
        if (3 <= t.length) {
            var i, n = t[1].split(" "),
                o = n[0].split(","),
                r = n[1].split(","),
                s = -1 !== t[2].indexOf("hbonds"),
                a = -1 !== t[2].indexOf("salt bridge"),
                c = -1 !== t[2].indexOf("interactions"),
                d = -1 !== t[2].indexOf("halogen"),
                l = -1 !== t[2].indexOf("pi-cation"),
                h = -1 !== t[2].indexOf("pi-stacking");
            4 <= t.length && (i = "true" == t[3]), this.setStrengthPara(t), this.viewInteractionPairs(o, r, i, "graph", s, a, c, d, l, h)
        }
    }, iCn3DUI.prototype.applyCommandGraphinteraction = function(e) {
        var t = this;
        return t.deferredGraphinteraction = $.Deferred(function() {
            t.applyCommandGraphinteractionBase(e)
        }), t.deferredGraphinteraction.promise()
    }, iCn3DUI.prototype.getAxisColor = function(e, t) {
        var i = e.substr(0, 1);
        return "C" == i ? new THREE.Color(16711680) : "D" == i ? 2 == t ? new THREE.Color(65535) : new THREE.Color(16711680) : "T" == i ? 2 == t ? new THREE.Color(65535) : new THREE.Color(65280) : "O" == i || "I" == i ? 2 == t ? new THREE.Color(65535) : 3 == t ? new THREE.Color(65280) : new THREE.Color(16711680) : new THREE.Color(16711680)
    }, iCn3DUI.prototype.getPolygonColor = function(e) {
        var t = e.substr(0, 1);
        return "C" == t ? new THREE.Color(16747520) : "D" == t ? new THREE.Color(65535) : "T" == t ? new THREE.Color(15631086) : "O" == t ? new THREE.Color(16753920) : "I" == t ? new THREE.Color(65280) : new THREE.Color(11119017)
    }, iCn3DUI.prototype.retrieveSymmetry = function(e) {
        var y = this,
            t = "https://data.rcsb.org/rest/v1/core/assembly/" + e + "/1";
        $.ajax({
            url: t,
            dataType: "json",
            cache: !0,
            tryCount: 0,
            retryLimit: 1,
            success: function(e) {
                var t = e.rcsb_struct_symmetry;
                if (void 0 !== t) {
                    if (void 0 !== y.icn3d.rmsd_supr && void 0 !== y.icn3d.rmsd_supr.rot) var i = y.icn3d.rmsd_supr.rot,
                        n = y.icn3d.rmsd_supr.trans1,
                        o = y.icn3d.rmsd_supr.trans2;
                    y.icn3d.symmetryHash = {};
                    for (var r = 0, s = t.length; r < s; ++r)
                        if ("C1" != t[r].symbol) {
                            var a = "no title";
                            "Pseudo Symmetry" == t[r].kind ? a = t[r].symbol + " (pseudo)" : "Global Symmetry" == t[r].kind ? a = t[r].symbol + " (global)" : "Local Symmetry" == t[r].kind && (a = t[r].symbol + " (local)");
                            for (var c = t[r].rotation_axes, d = [], l = 0, h = c.length; l < h; ++l) {
                                var p = [],
                                    m = new THREE.Vector3(c[l].start[0], c[l].start[1], c[l].start[2]),
                                    u = new THREE.Vector3(c[l].end[0], c[l].end[1], c[l].end[2]);
                                void 0 !== y.icn3d.rmsd_supr && void 0 !== y.icn3d.rmsd_supr.rot && (m = y.icn3d.transformMemPro(m, i, n, o), u = y.icn3d.transformMemPro(u, i, n, o)), p.push(m), p.push(u);
                                var f = y.getAxisColor(t[r].symbol, c[l].order),
                                    g = y.getPolygonColor(t[r].symbol);
                                p.push(f), p.push(g), p.push(c[l].order), p.push(t[r].clusters[0].members[0].asym_id), d.push(p)
                            }
                            y.icn3d.symmetryHash[a] = d
                        } if (0 == Object.keys(y.icn3d.symmetryHash).length) $("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry.");
                    else {
                        var v = "<option value='none'>None</option>",
                            b = 0;
                        for (var a in y.icn3d.symmetryHash) {
                            v += "<option value='" + a + "' " + (0 == b ? "selected" : "") + ">" + a + "</option>", ++b
                        }
                        $("#" + y.pre + "selectSymmetry").html(v)
                    }
                } else $("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry.");
                y.openDialog(y.pre + "dl_symmetry", "Symmetry"), void 0 !== y.deferredSymmetry && y.deferredSymmetry.resolve()
            },
            error: function(e, t, i) {
                this.tryCount++, this.tryCount <= this.retryLimit ? $.ajax(this) : ($("#" + y.pre + "dl_symmetry").html("<br>This structure has no symmetry."), y.openDialog(y.pre + "dl_symmetry", "Symmetry"), void 0 !== y.deferredSymmetry && y.deferredSymmetry.resolve())
            }
        })
    }, iCn3DUI.prototype.applyCommandAnnotationsAndCddSiteBase = function(e) {
        "view annotations" == e && this.showAnnotations()
    }, iCn3DUI.prototype.applyCommandAnnotationsAndCddSite = function(e) {
        var t = this;
        return t.deferredAnnoCddSite = $.Deferred(function() {
            t.applyCommandAnnotationsAndCddSiteBase(e)
        }), t.deferredAnnoCddSite.promise()
    }, iCn3DUI.prototype.applyCommandClinvarBase = function(e) {
        var t = e.lastIndexOf(" ");
        e.substr(t + 1);
        this.setAnnoTabClinvar()
    }, iCn3DUI.prototype.applyCommandSnpBase = function(e) {
        var t = e.lastIndexOf(" ");
        e.substr(t + 1);
        this.setAnnoTabSnp()
    }, iCn3DUI.prototype.applyCommandClinvar = function(e) {
        var t = this;
        return t.deferredClinvar = $.Deferred(function() {
            t.applyCommandClinvarBase(e)
        }), t.deferredClinvar.promise()
    }, iCn3DUI.prototype.applyCommandSnp = function(e) {
        var t = this;
        return t.deferredSnp = $.Deferred(function() {
            t.applyCommandSnpBase(e)
        }), t.deferredSnp.promise()
    }, iCn3DUI.prototype.applyCommand3ddomainBase = function(e) {
        var t = e.lastIndexOf(" "),
            i = e.substr(t + 1);
        "3ddomain" != i && "all" != i || this.setAnnoTab3ddomain()
    }, iCn3DUI.prototype.applyCommand3ddomain = function(e) {
        var t = this;
        return t.deferred3ddomain = $.Deferred(function() {
            t.applyCommand3ddomainBase(e)
        }), t.deferred3ddomain.promise()
    }, iCn3DUI.prototype.applyCommandViewinteractionBase = function(e) {
        if (void 0 !== this.cfg.align || void 0 !== this.cfg.chainalign) {
            var t = Object.keys(this.icn3d.structures);
            this.set2DDiagramsForAlign(t[0].toUpperCase(), t[1].toUpperCase())
        }
    }, iCn3DUI.prototype.applyCommandViewinteraction = function(e) {
        var t = this;
        return t.deferredViewinteraction = $.Deferred(function() {
            t.applyCommandViewinteractionBase(e)
        }), t.deferredViewinteraction.promise()
    }, iCn3DUI.prototype.getThresholdNameArrays = function(e) {
        if (void 0 === this.bSetChainsAdvancedMenu || !this.bSetChainsAdvancedMenu) {
            var t = this.icn3d.cloneHash(this.icn3d.hAtoms);
            this.setPredefinedInMenu(), this.bSetChainsAdvancedMenu = !0, this.icn3d.hAtoms = this.icn3d.cloneHash(t)
        }
        var i, n = e.split(" | "),
            o = parseFloat(n[0].substr(n[0].lastIndexOf(" ") + 1)),
            r = [],
            s = [];
        if (2 <= n.length && 4 < n[1].length) {
            var a = n[1].split(" ");
            1 < a.length && (s = a[1].split(",")), 2 < a.length && (r = a[2].split(","))
        } else s = ["selected"], r = ["non-selected"];
        return 3 == n.length && (i = "true" == n[2]), {
            threshold: o,
            nameArray2: s,
            nameArray: r,
            bHbondCalc: i
        }
    }, iCn3DUI.prototype.applyCommand = function(e) {
        var t = this;
        t.bAddCommands = !1;
        var i = e.split("|||")[0].replace(/\s+/g, " ").trim(),
            n = i.toLowerCase();
        if ("export state file" != n)
            if (0 == n.indexOf("export canvas")) setTimeout(function() {
                var e = n.substr(13).trim();
                t.icn3d.scaleFactor = "" === e ? 1 : parseInt(e), t.shareLink(!0)
            }, 500);
            else if ("export interactions" == n) t.exportInteractions();
        else if ("export stl file" == n) setTimeout(function() {
            t.exportStlFile("")
        }, 500);
        else if ("export vrml file" == n) setTimeout(function() {
            t.exportVrmlFile("")
        }, 500);
        else if ("export stl stabilizer file" == n) setTimeout(function() {
            t.hideStabilizer(), t.resetAfter3Dprint(), t.addStabilizer(), t.exportStlFile("_stab")
        }, 500);
        else if ("export vrml stabilizer file" == n) setTimeout(function() {
            t.hideStabilizer(), t.resetAfter3Dprint(), t.addStabilizer(), t.exportVrmlFile("_stab")
        }, 500);
        else if ("select all" == n) t.selectAll();
        else if ("show all" == n) t.showAll();
        else if ("select complement" == n) t.selectComplement();
        else if ("set pk atom" == n) t.icn3d.pk = 1, t.icn3d.opts.pk = "atom";
        else if ("set pk off" == n) t.icn3d.pk = 0, t.icn3d.opts.pk = "no", t.icn3d.draw(), t.icn3d.removeHlObjects();
        else if ("set pk residue" == n) t.icn3d.pk = 2, t.icn3d.opts.pk = "residue";
        else if ("set pk strand" == n) t.icn3d.pk = 3, t.icn3d.opts.pk = "strand";
        else if ("set pk domain" == n) t.icn3d.pk = 4, t.icn3d.opts.pk = "domain";
        else if ("set pk chain" == n) t.icn3d.pk = 5, t.icn3d.opts.pk = "chain";
        else if ("set surface wireframe on" == n) t.icn3d.opts.wireframe = "yes", t.icn3d.applySurfaceOptions();
        else if ("set surface wireframe off" == n) t.icn3d.opts.wireframe = "no", t.icn3d.applySurfaceOptions();
        else if ("set map wireframe on" == n) t.icn3d.opts.mapwireframe = "yes", t.icn3d.applyMapOptions();
        else if ("set map wireframe off" == n) t.icn3d.opts.mapwireframe = "no", t.icn3d.applyMapOptions();
        else if ("set emmap wireframe on" == n) t.icn3d.opts.emmapwireframe = "yes", t.icn3d.applyEmmapOptions();
        else if ("set emmap wireframe off" == n) t.icn3d.opts.emmapwireframe = "no", t.icn3d.applyEmmapOptions();
        else if ("set surface neighbors on" == n) t.icn3d.bConsiderNeighbors = !0, t.icn3d.applySurfaceOptions();
        else if ("set surface neighbors off" == n) t.icn3d.bConsiderNeighbors = !1, t.icn3d.applySurfaceOptions();
        else if ("set axis on" == n) t.icn3d.opts.axis = "yes";
        else if ("set axis off" == n) t.icn3d.opts.axis = "no";
        else if ("set fog on" == n) t.icn3d.opts.fog = "yes", t.icn3d.setFog(!0);
        else if ("set fog off" == n) t.icn3d.opts.fog = "no", t.icn3d.setFog(!0);
        else if ("set slab on" == n) t.icn3d.opts.slab = "yes";
        else if ("set slab off" == n) t.icn3d.opts.slab = "no";
        else if ("set assembly on" == n) t.icn3d.bAssembly = !0;
        else if ("set assembly off" == n) t.icn3d.bAssembly = !1;
        else if ("set chemicalbinding show" == n) t.setOption("chemicalbinding", "show");
        else if ("set chemicalbinding hide" == n) t.setOption("chemicalbinding", "hide");
        else if ("set hbonds off" == n) t.icn3d.hideHbonds(), t.icn3d.draw();
        else if ("set salt bridge off" == n) t.icn3d.hideSaltbridge(), t.icn3d.draw();
        else if ("set contact off" == n) t.icn3d.hideContact(), t.icn3d.draw();
        else if ("set halogen pi off" == n) t.icn3d.hideHalogenPi(), t.icn3d.draw();
        else if ("hydrogens" == n) t.showHydrogens(), t.icn3d.draw();
        else if ("set hydrogens off" == n) t.hideHydrogens(), t.icn3d.draw();
        else if ("set stabilizer off" == n) t.hideStabilizer(), t.icn3d.draw();
        else if ("set disulfide bonds off" == n) t.icn3d.opts.ssbonds = "no", t.icn3d.draw();
        else if ("set cross linkage off" == n) t.icn3d.opts.clbonds = "no", t.icn3d.draw();
        else if ("set lines off" == n) t.icn3d.labels.distance = [], t.icn3d.lines.distance = [], t.icn3d.draw();
        else if ("set labels off" == n) {
            for (var o in t.icn3d.labels) t.icn3d.labels[o] = [];
            t.icn3d.draw()
        } else if ("set mode all" == n) t.setModeAndDisplay("all");
        else if ("set mode selection" == n) t.setModeAndDisplay("selection");
        else if ("set view detailed view" == n) t.setAnnoViewAndDisplay("detailed view");
        else if ("set view overview" == n) t.setAnnoViewAndDisplay("overview");
        else if ("set annotation custom" == n) t.setAnnoTabCustom();
        else if ("set annotation interaction" == n) t.setAnnoTabInteraction();
        else if ("set annotation cdd" == n) t.setAnnoTabCdd();
        else if ("set annotation site" == n) t.setAnnoTabSite();
        else if ("set annotation ssbond" == n) t.setAnnoTabSsbond();
        else if ("set annotation crosslink" == n) t.setAnnoTabCrosslink();
        else if ("set annotation transmembrane" == n) t.setAnnoTabTransmem();
        else if ("highlight level up" == n) t.switchHighlightLevelUp();
        else if ("highlight level down" == n) t.switchHighlightLevelDown();
        else if (0 == n.indexOf("hide annotation")) {
            var r = n.lastIndexOf(" ");
            "all" == (k = n.substr(r + 1)) ? t.hideAnnoTabAll(): "custom" == k ? t.hideAnnoTabCustom() : "clinvar" == k ? t.hideAnnoTabClinvar() : "snp" == k ? t.hideAnnoTabSnp() : "cdd" == k ? t.hideAnnoTabCdd() : "3ddomain" == k ? t.hideAnnoTab3ddomain() : "site" == k ? t.hideAnnoTabSite() : "interaction" == k ? t.hideAnnoTabInteraction() : "ssbond" == k ? t.hideAnnoTabSsbond() : "crosslink" == k ? t.hideAnnoTabCrosslink() : "transmembrane" == k && t.hideAnnoTabTransmem()
        } else if ("add residue labels" == n) t.icn3d.addResiudeLabels(t.icn3d.hAtoms), t.icn3d.draw();
        else if ("add residue number labels" == n) t.icn3d.addResiudeLabels(t.icn3d.hAtoms, void 0, void 0, !0), t.icn3d.draw();
        else if ("add atom labels" == n) t.icn3d.addAtomLabels(t.icn3d.hAtoms), t.icn3d.draw();
        else if ("add chain labels" == n) t.addChainLabels(t.icn3d.hAtoms), t.icn3d.draw();
        else if ("add terminal labels" == n) t.addTerminiLabels(t.icn3d.hAtoms), t.icn3d.draw();
        else if ("rotate left" == n) t.icn3d.bStopRotate = !1, t.ROT_DIR = "left", t.rotStruc("left");
        else if ("rotate right" == n) t.icn3d.bStopRotate = !1, t.ROT_DIR = "right", t.rotStruc("right");
        else if ("rotate up" == n) t.icn3d.bStopRotate = !1, t.ROT_DIR = "up", t.rotStruc("up");
        else if ("rotate down" == n) t.icn3d.bStopRotate = !1, t.ROT_DIR = "down", t.rotStruc("down");
        else if ("rotate x" == n) {
            var s = new THREE.Vector3(1, 0, 0),
                a = .5 * Math.PI;
            t.icn3d.setRotation(s, a)
        } else if ("rotate y" == n) {
            s = new THREE.Vector3(0, 1, 0), a = .5 * Math.PI;
            t.icn3d.setRotation(s, a)
        } else if ("rotate z" == n) {
            s = new THREE.Vector3(0, 0, 1), a = .5 * Math.PI;
            t.icn3d.setRotation(s, a)
        } else if ("reset" === n) t.resetAll();
        else if ("reset orientation" === n) t.icn3d.resetOrientation(), t.icn3d.draw();
        else if ("reset thickness" == n) t.resetAfter3Dprint(), t.icn3d.draw();
        else if ("clear selection" == n) t.icn3d.removeHlObjects(), t.removeHl2D(), t.icn3d.bShowHighlight = !1, t.bSelectResidue = !1;
        else if ("zoom selection" == n) t.icn3d.zoominSelection(), t.icn3d.draw();
        else if ("center selection" == n) t.icn3d.centerSelection(), t.icn3d.draw();
        else if ("show selection" == n) t.showSelection();
        else if ("hide selection" == n) t.hideSelection();
        else if ("output selection" == n) t.outputSelection();
        else if ("toggle selection" == n) t.toggleSelection();
        else if ("toggle highlight" == n) t.toggleHighlight();
        else if ("stabilizer" == n) t.addStabilizer(), t.prepareFor3Dprint();
        else if ("disulfide bonds" == n) t.showSsbonds();
        else if ("cross linkage" == n) t.showClbonds();
        else if ("back" == n) t.back();
        else if ("forward" == n) t.forward();
        else if ("clear all" == n) t.selectAll();
        else if ("defined sets" == n) t.showSets();
        else if ("delete selected sets" == n) t.deleteSelectedSets();
        else if ("view interactions" == n) void 0 === t.cfg.mmdbid && void 0 === t.cfg.gi || t.set2DDiagrams(t.inputid);
        else if ("show annotations all chains" == n) t.showAnnoAllChains();
        else if ("save color" == n) t.saveColor();
        else if ("apply saved color" == n) t.applySavedColor();
        else if ("save style" == n) t.saveStyle();
        else if ("apply saved style" == n) t.applySavedStyle();
        else if ("select main chains" == n) t.selectMainChains();
        else if ("select side chains" == n) t.selectSideChains();
        else if ("select main side chains" == n) t.selectMainSideChains();
        else if ("realign" == n) t.realign();
        else if ("area" == n) t.calculateArea();
        else if ("table inter count only" == n) $(".icn3d-border").hide();
        else if ("table inter details" == n) $(".icn3d-border").show();
        else if (0 == i.indexOf("define helix sets")) {
            var c = i.split(" | ")[1].split(" ")[1];
            t.defineSecondary(c, "helix")
        } else if (0 == i.indexOf("define sheet sets")) {
            c = i.split(" | ")[1].split(" ")[1];
            t.defineSecondary(c, "sheet")
        } else if (0 == i.indexOf("define coil sets")) {
            c = i.split(" | ")[1].split(" ")[1];
            t.defineSecondary(c, "coil")
        } else if (0 == i.indexOf("select interaction")) {
            if (null !== (f = i.substr(i.lastIndexOf(" ") + 1).split(","))) {
                var d = f[0].split("_")[0];
                t.b2DShown || t.download2Ddgm(d.toUpperCase()), t.selectInteraction(f[0], f[1])
            }
        } else if (0 == i.indexOf("select saved atoms") || 0 == i.indexOf("select sets")) {
            var l = (b = (i = i.replace(/aligned_protein/g, "protein_aligned")).split(" | "))[0].replace(/,/g, " or ");
            r = 19;
            0 == i.indexOf("select sets") && (r = 12);
            var h = l.substr(r),
                p = h;
            2 == b.length && (p = b[1].substr(5)), t.selectCombinedSets(h, p)
        } else if (-1 !== i.indexOf("select chain"))
            for (var m = 0, u = (f = i.substr(i.lastIndexOf(" ") + 1).split(",")).length; m < u; ++m) t.selectAChain(f[m], f[m], !1);
        else if (-1 !== i.indexOf("select alignChain")) {
            var f;
            for (m = 0, u = (f = i.substr(i.lastIndexOf(" ") + 1).split(",")).length; m < u; ++m) t.selectAChain(f[m], "align_" + f[m], !0)
        } else if (0 == i.indexOf("select zone cutoff")) {
            var g = t.getThresholdNameArrays(i);
            t.pickCustomSphere(g.threshold, g.nameArray2, g.nameArray, g.bHbondCalc), t.bSphereCalc = !0
        } else if (0 == n.indexOf("set surface opacity")) {
            var v = n.substr(n.lastIndexOf(" ") + 1);
            t.icn3d.opts.opacity = parseFloat(v), t.icn3d.applySurfaceOptions(), parseInt(100 * v) < 100 && (t.bTransparentSurface = !0)
        } else if (0 == n.indexOf("set label scale")) {
            v = n.substr(n.lastIndexOf(" ") + 1);
            t.icn3d.labelScale = parseFloat(v)
        } else if (0 == n.indexOf("set surface")) {
            v = n.substr(12);
            t.icn3d.opts.surface = v, t.icn3d.applySurfaceOptions()
        } else if (0 == n.indexOf("set camera")) {
            v = n.substr(n.lastIndexOf(" ") + 1);
            t.icn3d.opts.camera = v
        } else if (0 == n.indexOf("set background")) {
            v = n.substr(n.lastIndexOf(" ") + 1);
            "white" == (t.icn3d.opts.background = v) || "grey" == v ? ($("#" + t.pre + "title").css("color", "black"), $("#" + t.pre + "titlelink").css("color", "black")) : ($("#" + t.pre + "title").css("color", t.GREYD), $("#" + t.pre + "titlelink").css("color", t.GREYD))
        } else if (0 == i.indexOf("set thickness")) {
            var b = n.split(" | ");
            t.bSetThickness = !0;
            for (m = 1, u = b.length; m < u; ++m) {
                var y = (_ = b[m].split(" "))[0];
                v = parseFloat(_[1]);
                "linerad" == y && (t.icn3d.lineRadius = v), "coilrad" == y && (t.icn3d.coilWidth = v), "stickrad" == y && (t.icn3d.cylinderRadius = v), "tracerad" == y && (t.icn3d.traceRadius = v), "ballscale" == y && (t.icn3d.dotSphereScale = v), "ribbonthick" == y && (t.icn3d.ribbonthickness = v), "proteinwidth" == y && (t.icn3d.helixSheetWidth = v), "nucleotidewidth" == y && (t.icn3d.nucleicAcidWidth = v), t.icn3d.draw()
            }
        } else if (0 == n.indexOf("set highlight color")) {
            "yellow" === (w = n.substr(20)) ? (t.icn3d.hColor = new THREE.Color(16776960), t.icn3d.matShader = t.icn3d.setOutlineColor("yellow")) : "green" === w ? (t.icn3d.hColor = new THREE.Color(65280), t.icn3d.matShader = t.icn3d.setOutlineColor("green")) : "red" === w && (t.icn3d.hColor = new THREE.Color(16711680), t.icn3d.matShader = t.icn3d.setOutlineColor("red")), t.icn3d.draw()
        } else if (0 == n.indexOf("set highlight style")) {
            "outline" === (ae = n.substr(20)) ? t.icn3d.bHighlight = 1: "3d" === ae && (t.icn3d.bHighlight = 2), t.icn3d.draw()
        } else if (0 == n.indexOf("add line")) {
            var _ = (b = n.split(" | "))[1].split(" "),
                C = b[2].split(" "),
                w = b[3].substr(b[3].lastIndexOf(" ") + 1),
                S = "true" === b[4].substr(b[4].lastIndexOf(" ") + 1),
                k = b[5].substr(b[5].lastIndexOf(" ") + 1);
            t.addLine(parseFloat(_[1]), parseFloat(_[3]), parseFloat(_[5]), parseFloat(C[1]), parseFloat(C[3]), parseFloat(C[5]), w, S, k), t.icn3d.draw()
        } else if (0 == i.indexOf("add label")) {
            var A, x, R, E, D, O = (b = i.split(" | "))[0].substr("add label".length + 1),
                T = !1;
            for (m = 1, u = b.length; m < u; ++m) {
                var H = b[m].split(" ");
                "x" == H[0] ? (T = !0, A = H[1], x = H[3], R = H[5]) : "size" == H[0] ? E = b[m].substr(b[m].lastIndexOf(" ") + 1) : "color" == H[0] ? w = b[m].substr(b[m].lastIndexOf(" ") + 1) : "background" == H[0] ? D = b[m].substr(b[m].lastIndexOf(" ") + 1) : "type" == H[0] && (k = b[m].substr(b[m].lastIndexOf(" ") + 1))
            }
            if (!T) {
                var M = t.icn3d.centerAtoms(t.icn3d.hash2Atoms(t.icn3d.hAtoms));
                A = M.center.x, x = M.center.y, R = M.center.z
            }
            t.addLabel(O, A, x, R, E, w, D, k), t.icn3d.draw()
        } else if (0 == i.indexOf("msa")) {
            var I = (b = i.split(" | "))[1].split(" ");
            t.targetGapHash = {};
            for (m = 0, u = I.length; m < u; ++m) {
                var L = I[m].split("_");
                t.targetGapHash[parseInt(L[0])] = {
                    from: parseInt(L[1]),
                    to: parseInt(L[2])
                }
            }
            t.resetAnnoAll()
        } else if (0 == i.indexOf("add track")) {
            c = (b = i.split(" | "))[1].substr(8);
            var F, P = b[2].substr(6);
            O = b[3].substr(5);
            5 <= b.length && (k = b[4].substr(5)), 6 <= b.length && (w = b[5].substr(6)), 7 <= b.length && (F = b[6].substr(4)), $("#" + t.pre + "anno_custom")[0].checked = !0, $("[id^=" + t.pre + "custom]").show(), "0" == w && (w = void 0), t.checkGiSeq(c, P, O, k, w, F, 0)
        } else if (0 == n.indexOf("remove one stabilizer")) {
            _ = (b = n.split(" | "))[1].split(" ");
            var N = [];
            N.push(parseInt(_[0])), N.push(parseInt(_[1])), t.removeOneStabilizer(N), t.icn3d.draw()
        } else if (0 == n.indexOf("add one stabilizer")) {
            _ = (b = n.split(" | "))[1].split(" ");
            void 0 === t.icn3d.pairArray && (t.icn3d.pairArray = []), t.icn3d.pairArray.push(parseInt(_[0])), t.icn3d.pairArray.push(parseInt(_[1])), t.icn3d.draw()
        } else if (0 == n.indexOf("select planes z-axis")) {
            if (5 == (b = n.split(" ")).length) {
                var z = parseFloat(b[3]),
                    q = parseFloat(b[4]);
                t.selectBtwPlanes(z, q)
            }
        } else if (0 == n.indexOf("adjust membrane z-axis")) {
            if (5 == (b = n.split(" ")).length) {
                z = parseFloat(b[3]), q = parseFloat(b[4]);
                t.adjustMembrane(z, q)
            }
        } else if (0 == n.indexOf("toggle membrane")) t.toggleMembrane();
        else if (0 == i.indexOf("calc buried surface")) {
            if (2 == (b = i.split(" | ")).length) {
                var j = (B = b[1].split(" "))[0].split(","),
                    U = B[1].split(",");
                t.calcBuriedSurface(j, U)
            }
        } else if (0 == i.indexOf("display interaction 3d") || 0 == i.indexOf("view interaction pairs") || 0 == i.indexOf("save1 interaction pairs") || 0 == i.indexOf("save2 interaction pairs") || 0 == i.indexOf("line graph interaction pairs") || 0 == i.indexOf("scatterplot interaction pairs")) {
            if (3 <= (b = i.split(" | ")).length) {
                j = (B = b[1].split(" "))[0].split(","), U = B[1].split(",");
                var B, G, V = -1 !== b[2].indexOf("hbonds"),
                    W = -1 !== b[2].indexOf("salt bridge"),
                    Y = -1 !== b[2].indexOf("interactions"),
                    X = -1 !== b[2].indexOf("halogen"),
                    K = -1 !== b[2].indexOf("pi-cation"),
                    Z = -1 !== b[2].indexOf("pi-stacking");
                4 <= b.length && (G = "true" == b[3]), 5 <= b.length && (thresholdArray = b[4].split(" "), 4 <= thresholdArray.length && ($("#" + t.pre + "hbondthreshold").val(thresholdArray[1]), $("#" + t.pre + "saltbridgethreshold").val(thresholdArray[2]), $("#" + t.pre + "contactthreshold").val(thresholdArray[3]), 7 == thresholdArray.length && ($("#" + t.pre + "halogenthreshold").val(thresholdArray[4]), $("#" + t.pre + "picationthreshold").val(thresholdArray[5]), $("#" + t.pre + "pistackingthreshold").val(thresholdArray[6])))), 0 == i.indexOf("display interaction 3d") ? k = "3d" : 0 == i.indexOf("view interaction pairs") ? k = "view" : 0 == i.indexOf("save1 interaction pairs") ? k = "save1" : 0 == i.indexOf("save2 interaction pairs") ? k = "save2" : 0 == i.indexOf("line graph interaction pairs") ? k = "linegraph" : 0 == i.indexOf("scatterplot interaction pairs") && (k = "scatterplot"), t.viewInteractionPairs(j, U, G, k, V, W, Y, X, K, Z)
            }
        } else if (0 == n.indexOf("graph label")) {
            r = n.lastIndexOf(" ");
            var Q = n.substr(r + 1);
            $("#" + t.svgid + "_label").val(Q), $("#" + t.svgid + " text").removeClass(), $("#" + t.svgid + " text").addClass(Q)
        } else if (0 == n.indexOf("line graph scale")) {
            r = n.lastIndexOf(" ");
            var J = n.substr(r + 1);
            $("#" + t.linegraphid + "_label").val(J), $("#" + t.linegraphid).attr("width", (t.linegraphWidth * parseFloat(J)).toString() + "px")
        } else if (0 == n.indexOf("scatterplot scale")) {
            r = n.lastIndexOf(" "), J = n.substr(r + 1);
            $("#" + t.scatterplotid + "_label").val(J), $("#" + t.scatterplot).attr("width", (t.scatterplotWidth * parseFloat(J)).toString() + "px")
        } else if (0 == n.indexOf("graph force")) {
            r = n.lastIndexOf(" ");
            t.force = parseInt(n.substr(r + 1)), $("#" + t.svgid + "_force").val(t.force), t.handleForce()
        } else if (0 == n.indexOf("hide edges")) {
            r = n.lastIndexOf(" ");
            t.hideedges = parseInt(n.substr(r + 1)), $("#" + t.svgid + "_hideedges").val(t.hideedges), t.hideedges ? (t.contactInsideColor = "FFF", t.hbondInsideColor = "FFF", t.ionicInsideColor = "FFF") : (t.contactInsideColor = "DDD", t.hbondInsideColor = "AFA", t.ionicInsideColor = "8FF"), void 0 !== t.graphStr && t.icn3d.bRender && t.force && t.drawGraph(t.graphStr)
        } else if (0 == n.indexOf("reset interaction pairs")) t.resetInteractionPairs();
        else if (0 == n.indexOf("side by side")) {
            var ee = (b = n.split(" | "))[1];
            window.open(ee, "_blank")
        } else if (0 == i.indexOf("your note")) {
            b = i.split(" | ");
            t.yournote = b[1], $("#" + t.pre + "yournote").val(t.yournote), document.title = t.yournote
        } else if (0 == n.indexOf("cross structure interaction")) t.icn3d.crossstrucinter = parseInt(n.substr(n.lastIndexOf(" ") + 1)), $("#" + t.pre + "crossstrucinter").val(t.icn3d.crossstrucinter);
        else if ("replay on" == n) t.replayon();
        else if ("replay off" == n) t.replayoff();
        else if (0 == n.indexOf("pickatom")) {
            var te = parseInt(n.substr(n.lastIndexOf(" ") + 1));
            t.icn3d.pAtom = t.icn3d.atoms[te], t.icn3d.showPicking(t.icn3d.pAtom)
        } else if (0 == i.indexOf("color")) {
            w = (re = i.split(" | "))[0].substr(re[0].indexOf(" ") + 1);
            if ("residue custom" == (t.icn3d.opts.color = w) && 2 == re.length)
                for (var ie in t.icn3d.customResidueColors = JSON.parse(re[1]), t.icn3d.customResidueColors) t.icn3d.customResidueColors[ie.toUpperCase()] = new THREE.Color("#" + t.icn3d.customResidueColors[ie]);
            else if ("align custom" == w && 3 == re.length) {
                c = re[1];
                var ne = re[2].split(", ");
                t.icn3d.queryresi2score = {}, t.icn3d.queryresi2score[c] = {};
                for (m = 0, u = ne.length; m < u; ++m) {
                    var oe = ne[m].split(" ");
                    t.icn3d.queryresi2score[c][oe[0]] = oe[1]
                }
            } else "align custom" == w && 4 == re.length ? t.setQueryresi2score(re) : "area" == w && 2 == re.length && (t.icn3d.midpercent = re[1], $("#" + t.pre + "midpercent").val(t.icn3d.midpercent));
            t.icn3d.setColorByOptions(t.icn3d.opts, t.icn3d.hAtoms), t.updateHlAll(), t.updateGraphCOlor()
        } else if (0 == i.indexOf("custom tube")) {
            var re = i.split(" | ");
            t.setQueryresi2score(re), t.setStyle("proteins", "custom tube")
        } else if (0 == n.indexOf("style")) {
            var se = (ce = n.substr(n.indexOf(" ") + 1)).substr(0, ce.indexOf(" ")),
                ae = ce.substr(ce.indexOf(" ") + 1);
            t.setStyle(se, ae)
        } else if (0 == n.indexOf("window")) {
            var ce;
            "aligned sequences" == (ce = n.substr(n.indexOf(" ") + 1)) ? t.openDialog(t.pre + "dl_alignment", "Select residues in aligned sequences"): "interaction table" == ce ? t.openDialog(t.pre + "dl_allinteraction", "Show interactions") : "interaction graph" == ce ? t.openDialog(t.pre + "dl_linegraph", "Show interactions between two lines of residue nodes") : "interaction scatterplot" == ce ? t.openDialog(t.pre + "dl_scatterplot", "Show interactions as scatterplot") : "force-directed graph" == ce && t.openDialog(t.pre + "dl_graph", "Force-directed graph")
        } else if (-1 !== n.indexOf("select displayed set")) t.icn3d.hAtoms = t.icn3d.cloneHash(t.icn3d.dAtoms), t.updateHlAll();
        else if (-1 !== n.indexOf("select prop")) {
            var de, le, he = (b = i.split(" | "))[0].substr("select prop".length + 1);
            if (2 == b.length) {
                var pe = b[1].split("_");
                de = pe[0], le = pe[1]
            }
            t.selectProperty(he, de, le)
        } else if (0 == n.indexOf("select") && -1 !== n.indexOf("name")) {
            l = "", p = "";
            var me = "";
            for (m = 0, u = (b = i.split(" | ")).length; m < u; ++m) {
                -1 !== (y = b[m]).indexOf("select") ? l = y.substr(y.indexOf(" ") + 1) : -1 !== y.indexOf("name") && (p = y.substr(y.indexOf(" ") + 1))
            }
            me = p, t.selectByCommand(l, p, me)
        } else if (-1 !== n.indexOf("select $") || -1 !== n.indexOf("select .") || -1 !== n.indexOf("select :") || -1 !== n.indexOf("select @")) {
            l = (b = i.split(" | "))[0].substr(b[0].indexOf(" ") + 1), p = "", me = "";
            1 < b.length && (p = b[1].substr(b[1].indexOf(" ") + 1)), 2 < b.length && (me = b[2].substr(b[2].indexOf(" ") + 1)), -1 !== l.indexOf(" or ") ? t.selectByCommand(l, p, me) : t.selectBySpec(l, p, me)
        }
        t.setLogCmd(i, !1), t.bAddCommands = !0
    }, iCn3DUI.prototype.setQueryresi2score = function(e) {
        var t = e[1],
            i = e[2].split(" ")[1].split("_"),
            n = e[3];
        void 0 === this.icn3d.queryresi2score && (this.icn3d.queryresi2score = {}), this.icn3d.queryresi2score[t] = {};
        for (var o = parseInt(i[0]), r = 0; o <= parseInt(i[1]); ++o, ++r) "_" != n[r] && (this.icn3d.queryresi2score[t][o] = parseInt(n[r]) * (100 / 9))
    }, iCn3DUI.prototype.getMenuFromCmd = function(e) {
        return 0 == (e = e.trim()).indexOf("load") ? "File > Retrieve by ID, Align" : 0 == e.indexOf("set map") && -1 == e.indexOf("set map wireframe") ? "Style > Electron Density" : 0 == e.indexOf("set emmap") && -1 == e.indexOf("set emmap wireframe") ? "Style > EM Density Map" : 0 == e.indexOf("view annotations") ? "Windows > View Sequences & Annotations" : 0 == e.indexOf("set annotation all") ? 'Windows > Sequences & Annotations: "All" checkbox' : 0 == e.indexOf("set annotation clinvar") ? 'Windows > Sequences & Annotations: "ClinVar" checkbox' : 0 == e.indexOf("set annotation snp") ? 'Windows > Sequences & Annotations: "SNP" checkbox' : 0 == e.indexOf("set annotation 3ddomain") ? 'Windows > Sequences & Annotations: "3D Domains" checkbox' : 0 == e.indexOf("view interactions") ? "Windows > View Interactions" : 0 == e.indexOf("symmetry") ? "View > Symmetry" : 0 == e.indexOf("realign on seq align") ? "File > Realign Selection > on Sequence Alignment" : 0 == e.indexOf("realign") ? "File > Realign Selection > Residue by Residue" : 0 == e.indexOf("graph interaction pairs") ? "View > H-Bonds & Interactions > 2D Graph (Force-Directed)" : 0 == e.indexOf("export canvas") ? "File > Save Files > iCn3D PNG Image" : "export stl file" == e ? "File > 3D Printing > STL" : "export vrml file" == e ? "File > 3D Printing > VRML (Color)" : "export stl stabilizer file" == e ? "File > 3D Printing > STL W/ Stabilizers" : "export vrml stabilizer file" == e ? "File > 3D Printing > VRML (Color, W/ Stabilizers)" : "select all" == e ? 'Select > All; or Toggle to "All" (next to "Help")' : "show all" == e ? "View > View Full Structure" : "select complement" == e ? "Select > Inverse" : "set pk atom" == e ? "Select > Select on 3D > Atom" : "set pk residue" == e ? "Select > Select on 3D > Residue" : "set pk strand" == e ? "Select > Select on 3D > Strand/Helix" : "set pk domain" == e ? "Select > Select on 3D > 3D Domain" : "set pk chain" == e ? "Select > Select on 3D > Chain" : "set surface wireframe on" == e ? "Style > Surface Wireframe > Yes" : "set surface wireframe off" == e ? "Style > Surface Wireframe > No" : "set map wireframe on" == e ? "Style > Map Wireframe > Yes" : "set map wireframe off" == e ? "Style > Map Wireframe > No" : "set emmap wireframe on" == e ? "Style > EM Map Wireframe > Yes" : "set emmap wireframe off" == e ? "Style > EM Map Wireframe > No" : "set surface neighbors on" == e ? "Style > Surface Type > ... with Context" : "set axis on" == e ? "View > XYZ-axes > Show" : "set axis off" == e ? "View > XYZ-axes > Hide" : "set fog on" == e ? "View > Fog for Selection > On" : "set fog off" == e ? "View > Fog for Selection > Off" : "set slab on" == e ? "View > Slab for Selection > On" : "set slab off" == e ? "View > Slab for Selection > Off" : "set assembly on" == e ? "View > Assembly > Biological Assembly" : "set assembly off" == e ? "View > Assembly > Asymmetric Unit" : "set chemicalbinding show" == e ? "View CHem. Binding > Show" : "set chemicalbinding hide" == e ? "View CHem. Binding > Hide" : "set hbonds off" == e || "set salt bridge off" == e || "set contact off" == e || "set halogen pi off" == e ? "View > H-Bonds & Interactions > Reset" : "hydrogens" == e ? "Style > Hydrogens > Show" : "set hydrogens off" == e ? "Style > Hydrogens > Hide" : "set stabilizer off" == e ? "File > 3D Printing > Remove All Stabilizers" : "set disulfide bonds off" == e ? "View > Disulfide Bonds > Hide" : "set cross linkage off" == e ? "View > Cross-Linkages > Hide" : "set lines off" == e ? "View > Distance > Hide" : "set labels off" == e ? "View > Label > Remove" : "set mode all" == e ? 'Toggle to "All" (next to "Help")' : "set mode selection" == e ? 'Toggle to "Selection" (next to "Help")' : "set view detailed view" == e ? 'Windows > Sequences & Annotations: "Details" tab' : "set view overview" == e ? 'Windows > Sequences & Annotations: "Summary" tab' : "set annotation custom" == e ? 'Windows > Sequences & Annotations: "Custom" checkbox' : "set annotation interaction" == e ? 'Windows > Sequences & Annotations: "Interactions" checkbox' : "set annotation cdd" == e ? 'Windows > Sequences & Annotations: "Conserved Domains" checkbox' : "set annotation site" == e ? 'Windows > Sequences & Annotations: "Functional Sites" checkbox' : "set annotation ssbond" == e ? 'Windows > Sequences & Annotations: "Disulfide Bonds" checkbox' : "set annotation crosslink" == e ? 'Windows > Sequences & Annotations: "Cross-Linkages" checkbox' : "set annotation transmembrane" == e ? 'Windows > Sequences & Annotations: "Transmembrane" checkbox' : "highlight level up" == e ? "Keyboard Arrow Up" : "highlight level down" == e ? "Keyboard Arrow Down" : 0 == e.indexOf("hide annotation") ? "Windows > Sequences & Annotations: checkboxes off" : "add residue labels" == e ? "View > Label > per Residue" : "add residue number labels" == e ? "View > Label > per Residue & Number" : "add atom labels" == e ? "View > Label > per Atom" : "add chain labels" == e ? "View > Label > per Chain" : "add terminal labels" == e ? "View > Label > N- & C- Termini" : "rotate left" == e ? "View > Rotate > Auto Rotation > Rotate Left; or Key l" : "rotate right" == e ? "View > Rotate > Auto Rotation > Rotate Right; or Key j" : "rotate up" == e ? "View > Rotate > Auto Rotation > Rotate Up; or Key i" : "rotate down" == e ? "View > Rotate > Auto Rotation > Rotate Down; or Key m" : "rotate x" == e ? "View > Rotate > Rotate 90 deg > X-axis" : "rotate y" == e ? "View > Rotate > Rotate 90 deg > Y-axis" : "rotate z" == e ? "View > Rotate > Rotate 90 deg > Z-axis" : "reset" == e ? "View > Reset > All" : "reset orientation" == e ? "View > Reset > Orientation" : "reset thickness" == e ? "File > 3D Printing > Reset Thickness" : "clear selection" == e ? "Select > Clear Selection" : "zoom selection" == e ? "Select > Zoom in Selection" : "center selection" == e ? "Select > Center Selection" : "show selection" == e ? "Select > View Only Selection" : "hide selection" == e ? "Select > Hide Selection" : "output selection" == e ? "Select > Clear Selection" : "toggle highlight" == e ? "Select > Toggle Highlight" : "stabilizer" == e ? "File > 3D Printing > Add all Stabilizers" : "disulfide bonds" == e ? "View > Disulfide Bonds > Show" : "cross linkage" == e ? "View > Cross-Linkages > Show" : "back" == e ? "View > Undo" : "forward" == e ? "View > Redo" : "clear all" == e ? "Select > Clear Selection" : "defined sets" == e ? "Windows > Defined Sets" : "delete selected sets" == e ? 'Windows > Defined Sets: "Delete Selected Sets" button' : "view interactions" == e ? "Windows > View Interactions" : "show annotations all chains" == e ? 'Windows > Sequences & Annotations: "Show All Chains" button' : "save color" == e ? "Color > Save Color" : "apply saved color" == e ? "Color > Apply Saved Color" : "save style" == e ? "Style > Save Style" : "apply saved style" == e ? "Style > Apply Saved Style" : "select main chains" == e ? "Select > Main Chains" : "select side chains" == e ? "Select > Side Chains" : "select main side chains" == e ? "Select > Main & Side Chains" : "area" == e ? "View > Surface Area" : "table inter count only" == e ? 'View > H-Bonds & Interactions: "Set 1" button: "Show Count Only" button' : "table inter details" == e ? 'View > H-Bonds & Interactions: "Set 1" button: "Show Details" button' : 0 == e.indexOf("define helix sets") ? 'Windows > Sequences & Annotations: "Helix Sets" button' : 0 == e.indexOf("define sheet sets") ? 'Windows > Sequences & Annotations: "Sheet Sets" button' : 0 == e.indexOf("define coil sets") ? 'Windows > Sequences & Annotations: "Coil Sets" button' : 0 == e.indexOf("select interaction") ? "Windows > View Interactions: click on edges" : 0 == e.indexOf("select saved atoms") || 0 == e.indexOf("select sets") ? "Windows > Defined Sets: select in menu" : -1 !== e.indexOf("select chain") ? "Windows > Sequences & Annotations: click on chain names" : -1 !== e.indexOf("select alignChain") ? "Windows > View Aligned Sequences: click on chain names" : 0 == e.indexOf("select zone cutoff") ? "Select > by Distance" : 0 == e.indexOf("set surface opacity") ? "Style > Surface Opacity" : 0 == e.indexOf("set label scale") ? "View > Label Scale" : 0 == e.indexOf("set surface") ? "Style > Surface Type" : 0 == e.indexOf("set camera") ? "View > Camera" : 0 == e.indexOf("set background") ? "Style > Background" : 0 == e.indexOf("set thickness") ? "File > 3D Printing > Set Thickness" : 0 == e.indexOf("set highlight color") ? "Select > Highlight Color" : 0 == e.indexOf("set highlight style") ? "Select > Highlight Style" : 0 == e.indexOf("add line") || 0 == e.indexOf("add label") ? "View > Distance > Measure" : 0 == e.indexOf("msa") ? 'Windows > Sequences & Annotations: "Add Track" button: "FASTA Alignment" button' : 0 == e.indexOf("add track") ? 'Windows > Sequences & Annotations: "Add Track" button' : 0 == e.indexOf("remove one stabilizer") ? "File > 3D Printing > Remove One Stablizer" : 0 == e.indexOf("add one stabilizer") ? "File > 3D Printing > Add One Stablizer" : 0 == e.indexOf("select planes z-axis") ? "View > Select between Two X-Y Planes" : 0 == e.indexOf("adjust membrane z-axis") ? "View > Adjust Membrane" : 0 == e.indexOf("toggle membrane") ? "View > Toggle Membrane" : 0 == e.indexOf("calc buried surface") ? 'View > H-Bonds & Interactions: "Buried Surface Area" button' : 0 == e.indexOf("display interaction 3d") ? 'View > H-Bonds & Interactions: "3D Display Interactions" button' : 0 == e.indexOf("view interaction pairs") ? 'View > H-Bonds & Interactions: "Highlight Interactions in Table" button' : 0 == e.indexOf("save1 interaction pairs") ? 'View > H-Bonds & Interactions: "Set 1" button' : 0 == e.indexOf("save2 interaction pairs") ? 'View > H-Bonds & Interactions: "Set 2" button' : 0 == e.indexOf("line graph interaction pairs") ? 'View > H-Bonds & Interactions: "2D Interaction Graph" button' : 0 == e.indexOf("scatterplot interaction pairs") ? 'View > H-Bonds & Interactions: "2D Interaction Scatterplot" button' : 0 == e.indexOf("graph label") ? 'View > H-Bonds & Interactions > 2D Graph (Force-Directed): "Label Size" menu' : 0 == e.indexOf("graph force") ? 'View > H-Bonds & Interactions > 2D Graph (Force-Directed): "Force on Nodes" menu' : 0 == e.indexOf("hide edges") ? 'View > H-Bonds & Interactions > 2D Graph (Force-Directed): "Internal Edges" menu' : 0 == e.indexOf("reset interaction pairs") ? "View > H-Bonds & Interactions > Reset" : 0 == e.indexOf("side by side") ? "View > Side by Side" : 0 == e.indexOf("your note") ? "Windows > Your Notes / Window Title" : 0 == e.indexOf("pickatom") ? "Hold Alt key and click on 3D structure" : 0 == e.indexOf("color") ? "Color menu" : 0 == e.indexOf("custom tube") ? 'Windows > Sequences & Annotations: "Custom Color/Tube" button: "Custom Tube" button' : 0 == e.indexOf("style") ? "Style menu" : -1 !== e.indexOf("select displayed set") ? "Select > Displayed Set" : -1 !== e.indexOf("select prop") ? "Select > by Property" : 0 == e.indexOf("select") && -1 !== e.indexOf("name") ? "Windows > Sequences & Annotations: drag on residues to select" : -1 !== e.indexOf("select $") || -1 !== e.indexOf("select .") || -1 !== e.indexOf("select :") || -1 !== e.indexOf("select @") ? "Select > Advanced; or other selection" : -1 !== e.indexOf("replay on") ? "File > Replay Each Step > On" : -1 !== e.indexOf("replay off") ? "File > Replay Each Step > Off" : ""
    }, iCn3DUI.prototype.resetAll = function() {
        this.icn3d.reinitAfterLoad(), this.renderFinalStep(1), this.icn3d.bRender && this.icn3d.render()
    }, iCn3DUI.prototype.selectResidues = function(e, t) {
        var i = this;
        if (void 0 !== e && "" !== e) {
            e = e.substr(e.indexOf("_") + 1), i.bSelectResidue = !0, $(t).toggleClass("icn3d-highlightSeq");
            var n = e.substr(e.indexOf("_") + 1);
            if (i.icn3d.residues.hasOwnProperty(n))
                if ($(t).hasClass("icn3d-highlightSeq")) {
                    for (var o in i.icn3d.residues[n]) i.icn3d.hAtoms[o] = 1;
                    if (i.selectedResidues[n] = 1, i.bAnnotations && void 0 !== $(t).attr("disease")) {
                        var r = $(t).attr("disease"),
                            s = i.icn3d.centerAtoms(i.icn3d.hash2Atoms(i.icn3d.residues[n]));
                        15 < r.length && (r = r.substr(0, 15) + "...");
                        var a = i.icn3d.LABELSIZE,
                            c = i.GREYD;
                        i.addLabel(r, s.center.x, s.center.y, s.center.z, a, c, void 0, "custom")
                    }
                } else {
                    for (var d in i.icn3d.residues[n]) delete i.icn3d.hAtoms[d];
                    delete i.selectedResidues[n], i.icn3d.removeHlObjects()
                }
        }
    }, iCn3DUI.prototype.selectTitle = function(e) {
        var t = this;
        if ($(e).hasClass("icn3d-seqTitle")) {
            var i, n, o, r = $(e).attr("chain");
            if (t.bAlignSeq ? t.bSelectAlignResidue = !1 : t.bSelectResidue = !1, t.bAnnotations || t.removeSeqChainBkgd(r), t.icn3d.bCtrl || t.icn3d.bShift || (t.removeSeqResidueBkgd(), t.removeSeqChainBkgd(), t.currSelectedSets = []), $(e).toggleClass("icn3d-highlightSeq"), t.bAnnotations ? (i = $(e).attr("setname"), n = $(e).attr("title")) : i = t.bAlignSeq ? "align_" + r : r, $(e).hasClass("icn3d-highlightSeq"))
                if (t.bAnnotations) {
                    if ($(e).hasClass("icn3d-highlightSeq"))
                        if (t.removeHl2D(), void 0 !== $(e).attr("gi")) {
                            t.icn3d.bCtrl || t.icn3d.bShift ? (t.currSelectedSets.push(r), t.selectAChain(r, r, !1, !0)) : (t.currSelectedSets = [r], t.selectAChain(r, r, !1)), t.setLogCmd("select chain " + r, !0);
                            b = t.currSelectedSets.join(" or ");
                            1 < t.currSelectedSets.length && t.setLogCmd("select sets " + b, !0)
                        } else {
                            var s = {};
                            if (void 0 !== $(e).attr("domain") || void 0 !== $(e).attr("3ddomain")) {
                                t.hlSummaryDomain3ddomain(e);
                                for (var a = $(e).attr("from").split(","), c = $(e).attr("to").split(","), d = 0, l = a.length; d < l; ++d)
                                    for (var h = parseInt(a[d]), p = parseInt(c[d]), m = h; m <= p; ++m) s[u = r + "_" + (m + 1).toString()] = 1;
                                t.icn3d.bCtrl || t.icn3d.bShift ? t.selectResidueList(s, i, n, !0) : t.selectResidueList(s, i, n, !1), u = r + "_" + parseInt((h + p) / 2).toString(), o = t.icn3d.centerAtoms(t.icn3d.hash2Atoms(t.icn3d.residues[u]))
                            } else if (void 0 !== $(e).attr("posarray")) {
                                var u, f = $(e).attr("posarray").split(",");
                                for (d = 0, l = f.length; d < l; ++d) s[u = void 0 !== $(e).attr("site") ? r + "_" + (parseInt(f[d]) + 1).toString() : r + "_" + f[d]] = 1;
                                t.icn3d.bCtrl || t.icn3d.bShift ? t.selectResidueList(s, i, n, !0) : t.selectResidueList(s, i, n, !1), u = r + "_" + f[parseInt((0 + f.length) / 2)].toString(), o = t.icn3d.centerAtoms(t.icn3d.hash2Atoms(t.icn3d.residues[u]))
                            }
                            for (var g in t.icn3d.labels) "schematic" !== g && "distance" !== g && (t.icn3d.labels[g] = []);
                            var v = t.icn3d.LABELSIZE;
                            void 0 !== o && t.addLabel(n, o.center.x, o.center.y, o.center.z, v, "FFFF00", void 0, "custom"), t.icn3d.draw(), t.setLogCmd("select " + t.residueids2spec(Object.keys(s)) + " | name " + i, !0), t.icn3d.bCtrl || t.icn3d.bShift ? t.currSelectedSets.push(i) : t.currSelectedSets = [i];
                            b = t.currSelectedSets.join(" or ");
                            1 < t.currSelectedSets.length && t.setLogCmd("select sets " + b, !0)
                        }
                } else {
                    t.icn3d.bCtrl || t.icn3d.bShift ? (t.currSelectedSets.push(i), t.selectAChain(r, i, !0, !0)) : (t.currSelectedSets = [i], t.selectAChain(r, i, !0)), t.bAlignSeq ? t.setLogCmd("select alignChain " + r, !0) : t.setLogCmd("select chain " + r, !0);
                    var b = t.currSelectedSets.join(" or ");
                    1 < t.currSelectedSets.length && t.setLogCmd("select sets " + b, !0)
                }
            else t.icn3d.removeHlObjects(), t.removeHl2D(), $("#" + t.pre + "atomsCustom").val("")
        }
    }, iCn3DUI.prototype.selectSequenceNonMobile = function() {
        var o = this;
        $("#" + o.pre + "dl_sequence2").add("[id^=" + o.pre + "dt_giseq]").add("[id^=" + o.pre + "dt_site]").add("[id^=" + o.pre + "dt_snp]").add("[id^=" + o.pre + "dt_clinvar]").add("[id^=" + o.pre + "dt_cdd]").add("[id^=" + o.pre + "dt_domain]").add("[id^=" + o.pre + "dt_interaction]").add("[id^=" + o.pre + "dt_ssbond]").add("[id^=" + o.pre + "dt_crosslink]").add("[id^=" + o.pre + "dt_transmem]").add("[id^=" + o.pre + "tt_giseq]").add("[id^=" + o.pre + "tt_site]").add("[id^=" + o.pre + "tt_snp]").add("[id^=" + o.pre + "tt_clinvar]").add("[id^=" + o.pre + "tt_cdd]").add("[id^=" + o.pre + "tt_domain]").add("[id^=" + o.pre + "tt_interaction]").add("[id^=" + o.pre + "tt_ssbond]").add("[id^=" + o.pre + "tt_crosslink]").add("[id^=" + o.pre + "tt_transmem]").selectable({
            stop: function() {
                $(this).attr("id") === o.pre + "dl_sequence2" ? (o.bAlignSeq = !0, o.bAnnotations = !1) : (o.bAlignSeq = !1, o.bAnnotations = !0), !1 !== o.bSelectResidue || o.icn3d.bShift || o.icn3d.bCtrl || o.removeSelection(), $("span.ui-selected", this).each(function() {
                    var e = $(this).attr("id");
                    void 0 !== e && o.selectResidues(e, this)
                }), o.icn3d.addHlObjects();
                var e = {};
                for (var t in o.selectedResidues) {
                    var i = t.lastIndexOf("_");
                    e[t.substr(0, i)] = 1
                }
                var n = Object.keys(e);
                o.updateHl2D(n), $("div.ui-selected", this).each(function() {
                    void 0 !== $(this).attr("chain") && o.selectTitle(this)
                })
            }
        }), $("[id^=" + o.pre + "ov_giseq]").add("[id^=" + o.pre + "ov_site]").add("[id^=" + o.pre + "ov_snp]").add("[id^=" + o.pre + "ov_clinvar]").add("[id^=" + o.pre + "ov_cdd]").add("[id^=" + o.pre + "ov_domain]").add("[id^=" + o.pre + "ov_interaction]").add("[id^=" + o.pre + "ov_ssbond]").add("[id^=" + o.pre + "ov_crosslink]").add("[id^=" + o.pre + "ov_transmem]").add("[id^=" + o.pre + "tt_giseq]").add("[id^=" + o.pre + "tt_site]").add("[id^=" + o.pre + "tt_snp]").add("[id^=" + o.pre + "tt_clinvar]").add("[id^=" + o.pre + "tt_cdd]").add("[id^=" + o.pre + "tt_domain]").add("[id^=" + o.pre + "tt_interaction]").add("[id^=" + o.pre + "tt_ssbond]").add("[id^=" + o.pre + "tt_crosslink]").add("[id^=" + o.pre + "tt_transmem]").on("click", ".icn3d-seqTitle", function(e) {
            e.stopImmediatePropagation(), o.bAlignSeq = !1, o.bAnnotations = !0, o.selectTitle(this), o.hlSummaryDomain3ddomain(this), window.getSelection ? window.getSelection().empty ? window.getSelection().empty() : window.getSelection().removeAllRanges && window.getSelection().removeAllRanges() : document.selection && document.selection.empty()
        })
    }, iCn3DUI.prototype.hlSummaryDomain3ddomain = function(e) {
        if (void 0 !== $(e).attr("domain")) {
            var t = $(e).attr("index"),
                i = $(e).attr("chain");
            0 !== $("[id^=" + i + "_domain_" + t + "]").length && $("[id^=" + i + "_domain_" + t + "]").addClass("icn3d-highlightSeqBox")
        }
        if (void 0 !== $(e).attr("3ddomain")) {
            t = $(e).attr("index"), i = $(e).attr("chain");
            0 !== $("[id^=" + i + "_3d_domain_" + t + "]").length && $("[id^=" + i + "_3d_domain_" + t + "]").addClass("icn3d-highlightSeqBox")
        }
    }, iCn3DUI.prototype.selectSequenceMobile = function() {
        var s = this;
        $("#" + s.pre + "dl_sequence2").add("[id^=" + s.pre + "giseq]").add("[id^=" + s.pre + "site]").add("[id^=" + s.pre + "clinvar]").add("[id^=" + s.pre + "snp]").add("[id^=" + s.pre + "cdd]").add("[id^=" + s.pre + "domain]").add("[id^=" + s.pre + "interaction]").add("[id^=" + s.pre + "ssbond]").add("[id^=" + s.pre + "crosslink]").add("[id^=" + s.pre + "transmem]").on("click", ".icn3d-residue", function(e) {
            e.stopImmediatePropagation(), $(this).attr("id") === s.pre + "dl_sequence2" ? (s.bAlignSeq = !0, s.bAnnotations = !1) : (s.bAlignSeq = !1, s.bAnnotations = !0);
            var t = $(this).attr("id");
            void 0 !== t && s.selectResidues(t, this), s.icn3d.addHlObjects();
            var i = {};
            for (var n in s.selectedResidues) {
                var o = n.lastIndexOf("_");
                i[n.substr(0, o)] = 1
            }
            s.removeHl2D();
            var r = Object.keys(i);
            s.updateHl2D(r)
        })
    }, iCn3DUI.prototype.selectChainMobile = function() {
        var t = this;
        $("#" + t.pre + "dl_sequence2").add("[id^=" + t.pre + "giseq]").add("[id^=" + t.pre + "site]").add("[id^=" + t.pre + "clinvar]").add("[id^=" + t.pre + "snp]").add("[id^=" + t.pre + "cdd]").add("[id^=" + t.pre + "domain]").add("[id^=" + t.pre + "interaction]").add("[id^=" + t.pre + "ssbond]").add("[id^=" + t.pre + "crosslink]").add("[id^=" + t.pre + "transmem]").on("click", ".icn3d-seqTitle", function(e) {
            e.stopImmediatePropagation(), $(this).attr("id") === t.pre + "dl_sequence2" ? (t.bAlignSeq = !0, t.bAnnotations = !1) : (t.bAlignSeq = !1, t.bAnnotations = !0), t.selectTitle(this), t.hlSummaryDomain3ddomain(this)
        })
    }, iCn3DUI.prototype.removeSeqChainBkgd = function(t) {
        void 0 === t ? $(".icn3d-seqTitle").each(function(e) {
            $(this).removeClass("icn3d-highlightSeq"), $(this).removeClass("icn3d-highlightSeqBox")
        }) : $(".icn3d-seqTitle").each(function(e) {
            $(this).attr("chain") !== t && ($(this).removeClass("icn3d-highlightSeq"), $(this).removeClass("icn3d-highlightSeqBox"))
        })
    }, iCn3DUI.prototype.removeSeqResidueBkgd = function() {
        $(".icn3d-residue").each(function(e) {
            $(this).removeClass("icn3d-highlightSeq")
        })
    }, iCn3DUI.prototype.update2DdgmContent = function() {
        var e = this,
            t = "";
        void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi ? (t += e.draw2Ddgm(e.interactionData, e.inputid, void 0, !0), t += e.set2DdgmNote(), $("#" + e.pre + "dl_2ddgm").html(t)) : void 0 === e.cfg.align && void 0 === e.cfg.chainalign && !e.bRealign || (t += e.draw2Ddgm(e.interactionData1, e.mmdbidArray[0].toUpperCase(), 0, !0), void 0 !== e.mmdbid_q && e.mmdbid_q === e.mmdbid_t ? t += e.draw2Ddgm(e.interactionData2, e.mmdbidArray[0].toUpperCase(), 1, !0) : t += e.draw2Ddgm(e.interactionData2, e.mmdbidArray[1].toUpperCase(), 1, !0), t += e.set2DdgmNote(!0), $("#" + e.pre + "dl_2ddgm").html(t))
    }, iCn3DUI.prototype.changeSeqColor = function(e) {
        for (var t = 0, i = e.length; t < i; ++t) {
            var n = e[t],
                o = this.icn3d.getFirstCalphaAtomObj(this.icn3d.residues[n]),
                r = void 0 === o.color || "FFFFFF" === o.color.getHexString().toUpperCase() ? "DDDDDD" : o.color.getHexString(),
                s = void 0 !== o.color ? r : "CCCCCC";
            $("[id=giseq_" + this.pre + n + "]").attr("style", "color:#" + s), $("[id=align_" + this.pre + n + "]").attr("style", "color:#" + s), void 0 === this.cfg.align && void 0 === this.cfg.chainalign && !this.bRealign || $("[id=align_" + this.pre + n + "]").attr("style", "color:#" + s)
        }
    }, iCn3DUI.prototype.removeHlAll = function() {
        this.removeHlObjects(), this.removeHlSeq(), this.removeHl2D(), this.removeHlMenus()
    }, iCn3DUI.prototype.removeHlObjects = function() {
        this.icn3d.removeHlObjects()
    }, iCn3DUI.prototype.removeHlSeq = function() {
        this.removeSeqResidueBkgd()
    }, iCn3DUI.prototype.removeHl2D = function() {
        $("#" + this.pre + "dl_2ddgm rect").attr("stroke", "#000000"), $("#" + this.pre + "dl_2ddgm circle").attr("stroke", "#000000"), $("#" + this.pre + "dl_2ddgm polygon").attr("stroke", "#000000"), $("#" + this.pre + "dl_2ddgm svg line").attr("stroke", "#000000"), $("#" + this.pre + "dl_2ddgm rect").attr("stroke-width", 1), $("#" + this.pre + "dl_2ddgm circle").attr("stroke-width", 1), $("#" + this.pre + "dl_2ddgm polygon").attr("stroke-width", 1), $("#" + this.pre + "dl_2ddgm line").attr("stroke-width", 1)
    }, iCn3DUI.prototype.removeHlMenus = function() {
        $("#" + this.pre + "atomsCustom").val(""), $("#" + this.pre + "atomsCustom")[0].blur()
    }, iCn3DUI.prototype.updateHlAll = function(e, t, i, n) {
        this.icn3d.prevHighlightAtoms = this.icn3d.cloneHash(this.icn3d.hAtoms), this.updateHlObjects(n), void 0 !== e ? this.updateHlSeqInChain(e, i) : this.updateHlSeq(void 0, void 0, i), this.updateHl2D(), void 0 !== t && !t || this.updateHlMenus(e)
    }, iCn3DUI.prototype.updateHlObjects = function(e) {
        this.icn3d.removeHlObjects(), (void 0 !== this.icn3d.hAtoms && Object.keys(this.icn3d.hAtoms).length < Object.keys(this.icn3d.atoms).length || e) && (this.icn3d.addHlObjects(), this.setMode("selection"))
    }, iCn3DUI.prototype.updateHlSeq = function(e, t, i) {
        void 0 !== i && i || this.removeHlSeq(), void 0 === t && (t = this.icn3d.getResiduesFromCalphaAtoms(this.icn3d.hAtoms)), Object.keys(this.icn3d.hAtoms).length < Object.keys(this.icn3d.atoms).length && this.hlSeq(Object.keys(t)), this.changeSeqColor(Object.keys(t))
    }, iCn3DUI.prototype.updateHlSeqInChain = function(e, t) {
        var i = this;
        if (void 0 !== t && t || i.removeHlSeq(), Object.keys(i.icn3d.hAtoms).length != Object.keys(i.icn3d.atoms).length)
            for (var n = 0, o = e.length; n < o; ++n) {
                var r = e[n];
                if (-1 !== Object.keys(i.icn3d.chains).indexOf(r)) i.hlSeqInChain(r);
                else {
                    var s = [];
                    void 0 !== i.icn3d.defNames2Residues[r] && 0 < i.icn3d.defNames2Residues[r].length && (s = i.icn3d.defNames2Residues[r]);
                    var a = {};
                    if (void 0 !== i.icn3d.defNames2Atoms[r] && 0 < i.icn3d.defNames2Atoms[r].length) {
                        for (var c = 0, d = i.icn3d.defNames2Atoms[r].length; c < d; ++c) {
                            var l = i.icn3d.defNames2Atoms[r][c],
                                h = i.icn3d.atoms[l];
                            a[h.structure + "_" + h.chain + "_" + h.resi] = 1
                        }
                        s = s.concat(Object.keys(a))
                    }
                    i.hlSeq(s)
                }
            }
    }, iCn3DUI.prototype.updateHl2D = function(e) {
        var t = this;
        if (t.removeHl2D(), Object.keys(t.icn3d.hAtoms).length != Object.keys(t.icn3d.atoms).length) {
            if (void 0 === e) {
                var i = t.icn3d.getChainsFromAtoms(t.icn3d.hAtoms);
                e = Object.keys(i)
            }
            if (void 0 !== e)
                for (var n = 0, o = e.length; n < o; ++n) {
                    var r = t.icn3d.intHash(t.icn3d.chains[e[n]], t.icn3d.hAtoms),
                        s = Object.keys(r).length / Object.keys(t.icn3d.chains[e[n]]).length,
                        a = t.icn3d.getFirstCalphaAtomObj(r);
                    if (void 0 !== t.icn3d.alnChains[e[n]]) {
                        var c = t.icn3d.intHash(t.icn3d.alnChains[e[n]], r);
                        0 < Object.keys(c).length && (a = t.icn3d.getFirstCalphaAtomObj(c))
                    }
                    var d = void 0 !== a && void 0 !== a.color ? "#" + a.color.getHexString() : "#FFFFFF",
                        l = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] rect[class='icn3d-hlnode']"),
                        h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] rect[class='icn3d-basenode']");
                    void 0 !== l && (t.highlightNode("rect", l, h, s), $(l).attr("fill", d)), l = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] circle[class='icn3d-hlnode']"), h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] circle[class='icn3d-basenode']"), void 0 !== l && (t.highlightNode("circle", l, h, s), $(l).attr("fill", d)), l = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] polygon[class='icn3d-hlnode']"), h = $("#" + t.pre + "dl_2ddgm g[chainid=" + e[n] + "] polygon[class='icn3d-basenode']"), void 0 !== l && (t.highlightNode("polygon", l, h, s), $(l).attr("fill", d))
                }
            if (void 0 !== t.lineArray2d)
                for (n = 0, o = t.lineArray2d.length; n < o; n += 2) $("#" + t.pre + "dl_2ddgm g[chainid1=" + t.lineArray2d[n] + "][chainid2=" + t.lineArray2d[n + 1] + "] line").attr("stroke", t.ORANGE);
            t.icn3d.prevHighlightAtoms = t.icn3d.cloneHash(t.icn3d.hAtoms), t.setMode("selection")
        }
    }, iCn3DUI.prototype.updateHlMenus = function(e) {
        void 0 === e && (e = []);
        var t = this.setAtomMenu(e);
        $("#" + this.pre + "atomsCustom").length && ($("#" + this.pre + "atomsCustom").html(t), $("#" + this.pre + "atomsCustom")[0].blur())
    }, iCn3DUI.prototype.setAtomMenu = function(e) {
        var t = this,
            i = "",
            n = void 0 !== t.icn3d.defNames2Residues ? Object.keys(t.icn3d.defNames2Residues) : [],
            o = void 0 !== t.icn3d.defNames2Atoms ? Object.keys(t.icn3d.defNames2Atoms) : [],
            r = n.concat(o).sort(),
            s = [];
        $.each(r, function(e, t) {
            -1 === $.inArray(t, s) && s.push(t)
        });
        for (var a = 0, c = s.length; a < c; ++a) {
            var d, l, h = s[a];
            if (void 0 !== t.icn3d.defNames2Atoms && t.icn3d.defNames2Atoms.hasOwnProperty(h)) {
                var p = t.icn3d.defNames2Atoms[h];
                0 < p.length && (d = t.icn3d.atoms[p[0]])
            } else if (void 0 !== t.icn3d.defNames2Residues && t.icn3d.defNames2Residues.hasOwnProperty(h)) {
                var m = t.icn3d.defNames2Residues[h];
                0 < m.length && (l = t.icn3d.residues[m[0]]) && (d = t.icn3d.atoms[Object.keys(l)[0]])
            }
            var u = void 0 === d || void 0 === d.color || "FFFFFF" === d.color.getHexString().toUpperCase() ? "DDDDDD" : d.color.getHexString(),
                f = void 0 !== d && void 0 !== d.color ? u : "000000"; - 1 != e.indexOf(h) ? i += "<option value='" + h + "' style='color:#" + f + "' selected='selected'>" + h + "</option>" : i += "<option value='" + h + "' style='color:#" + f + "'>" + h + "</option>"
        }
        return i
    }, iCn3DUI.prototype.setPredefinedInMenu = function() {
        var e = this;
        if (e.setChainsInMenu(), e.setProtNuclLigInMenu(), void 0 !== e.cfg.mmdbid || void 0 !== e.cfg.gi || void 0 !== e.cfg.chainalign)
            for (var t in e.icn3d.tddomains) e.selectResidueList(e.icn3d.tddomains[t], t, t, !1, !1);
        if ((void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign) && e.bFullUi) {
            e.selectResidueList(e.consHash1, e.conservedName1, e.conservedName1, !1, !1), e.selectResidueList(e.consHash2, e.conservedName2, e.conservedName2, !1, !1), e.selectResidueList(e.nconsHash1, e.nonConservedName1, e.nonConservedName1, !1, !1), e.selectResidueList(e.nconsHash2, e.nonConservedName2, e.nonConservedName2, !1, !1), e.selectResidueList(e.nalignHash1, e.notAlignedName1, e.notAlignedName1, !1, !1), e.selectResidueList(e.nalignHash2, e.notAlignedName2, e.notAlignedName2, !1, !1);
            var i = {};
            for (var n in e.icn3d.alnChains) i = e.icn3d.unionHash(i, e.icn3d.alnChains[n]);
            var o = {},
                r = {};
            for (var s in i) {
                var a = e.icn3d.atoms[s],
                    c = a.structure + "_" + a.chain;
                o[c + "_" + a.resi] = 1, r[c] = 1
            }
            var d = "select " + e.residueids2spec(Object.keys(o));
            e.addCustomSelection(Object.keys(o), "protein_aligned", "aligned protein and nucleotides", d, !0)
        }
    }, iCn3DUI.prototype.hlSeq = function(e) {
        for (var t = {}, i = 0, n = e.length; i < n; ++i) {
            var o = e[i],
                r = $("[id=giseq_" + this.pre + o + "]");
            0 !== r.length && r.addClass("icn3d-highlightSeq"), 0 !== (r = $("[id=align_" + this.pre + o + "]")).length && r.addClass("icn3d-highlightSeq");
            var s = o.lastIndexOf("_");
            t[a = o.substr(0, s)] = 1
        }
        for (var a in t) 0 !== $("#giseq_summary_" + this.pre + a).length && $("#giseq_summary_" + this.pre + a).addClass("icn3d-highlightSeqBox")
    }, iCn3DUI.prototype.hlSeqInChain = function(e) {
        for (var t = 0, i = this.icn3d.chainsSeq[e].length; t < i; ++t) {
            var n = e + "_" + this.icn3d.chainsSeq[e][t].resi;
            0 !== $("#giseq_" + this.pre + n).length && $("#giseq_" + this.pre + n).addClass("icn3d-highlightSeq"), 0 !== $("#align_" + this.pre + n).length && $("#align_" + this.pre + n).addClass("icn3d-highlightSeq")
        }
        0 !== $("#giseq_summary_" + this.pre + e).length && $("#giseq_summary_" + this.pre + e).addClass("icn3d-highlightSeqBox")
    }, iCn3DUI.prototype.toggleHighlight = function() {
        0 < this.icn3d.prevHighlightObjects.length || 0 < this.icn3d.prevHighlightObjects_ghost.length ? (this.clearHighlight(), this.icn3d.bShowHighlight = !1) : (this.showHighlight(), this.icn3d.bShowHighlight = !0)
    }, iCn3DUI.prototype.clearHighlight = function() {
        this.icn3d.labels.picking = [], this.icn3d.draw(), this.icn3d.removeHlObjects(), this.removeHl2D(), this.icn3d.bRender && this.icn3d.render(), this.removeSeqChainBkgd(), this.removeSeqResidueBkgd(), this.bSelectResidue = !1
    }, iCn3DUI.prototype.showHighlight = function() {
        this.icn3d.addHlObjects(), this.updateHlAll()
    }, iCn3DUI.prototype.highlightChains = function(e) {
        this.icn3d.removeHlObjects(), this.removeHl2D(), this.icn3d.addHlObjects(), this.updateHl2D(e);
        for (var t = {}, i = 0, n = e.length; i < n; ++i) {
            var o = e[i];
            for (var r in this.icn3d.chainsSeq[o]) {
                var s = this.icn3d.chainsSeq[o][r],
                    a = o + "_" + s.resi;
                "" !== s.name && "-" !== s.name && (t[a] = 1)
            }
        }
        this.hlSeq(Object.keys(t))
    }, iCn3DUI.prototype.setTools = function() {
        var e = "";
        return e += this.divStr + "selection' style='display:none;'><div style='position:absolute; z-index:555; float:left; display:table-row; margin: 32px 0px 0px 3px;'>", e += "<table style='margin-top: 3px; width:100px;'><tr valign='center'>", e += this.setTools_base(), e += "</tr></table>", e += "</div></div>"
    }, iCn3DUI.prototype.setButton = function(e, t, i, n, o) {
        return o = void 0 !== o ? "color:" + o : "", "<div style='margin:3px 0px 0px 10px;'><button style='-webkit-appearance:" + e + "; height:36px;" + (this.isMobile() ? " background-color:#DDDDDD;" : "") + "' id='" + this.pre + t + "'><span style='white-space:nowrap;" + o + "' class='icn3d-commandTitle' title='" + i + "'>" + n + "</span></button></div>"
    }, iCn3DUI.prototype.setTools_base = function() {
        var e = this,
            t = "",
            i = e.isMobile() ? "none" : "button",
            n = "<td valign='top'>";
        return void 0 === e.cfg.align && void 0 === e.cfg.chainalign || (t += n + e.setButton(i, "alternate", "Alternate the structures", 'Alternate<br/>(Key "a")', e.ORANGE) + "</td>"), t += n + e.setButton(i, "saveimage", "Save iCn3D PNG Image", "Save iCn3D<br/>PNG Image") + "</td>", void 0 === e.cfg.cid && (t += n + e.setButton(i, "hbondsYes", "View H-Bonds & Interactions", "H-Bonds &<br/> Interactions") + "</td>"), t += n + e.setButton(i, "show_selected", "View ONLY the selected atoms", "View Only<br/>Selection") + "</td>", t += n + e.setButton(i, "toggleHighlight", "Turn on and off the 3D highlight in the viewer", "Toggle<br/>Highlight") + "</td>", void 0 === e.cfg.cid && (t += n + e.setButton(i, "removeLabels", "Remove Labels", "Remove<br/>Labels") + "</td>"), t
    }, iCn3DUI.prototype.setTopMenusHtmlMobile = function(e) {
        var t = this,
            i = "";
        if (i += "<div style='position:relative;'>", i += t.divStr + "popup' class='icn3d-text icn3d-popup'></div>", i += t.setReplayHtml(), !t.isMobile()) {
            var n = t.WIDTH - 40 + 5;
            i += t.buttonStr + "fullscreen' style='position:absolute; z-index:1999; display:block; padding:0px; margin: 7px 0px 0px " + n + "px; width:30px; height:34px; border-radius:4px; border:none;' title='Full screen'>", i += "<svg fill='#1c94c4' viewBox='0 0 24 24' width='24' height='24'>", i += "<path d='M0 0h24v24H0z' fill='none'></path>", i += "<path d='M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z'></path>", i += "</svg>", i += "</button>"
        }
        i += "\x3c!--https://forum.jquery.com/topic/looking-for-a-jquery-horizontal-menu-bar--\x3e", i += t.divStr + "mnlist' style='position:absolute; z-index:999; float:left; display:block; margin: 5px 0px 0px 5px;'>", i += "<div>", i += "<accordion id='" + t.pr2e + "accordion0' class='icn3d-accordion'>", i += "<h3 style='width:20px; height:24px; position:relative'><span style='position:absolute; left:5px; top:6px;'>&#9776;</span></h3>", i += "<div>";
        var o = "<li><span class='icn3d-menu-color'";
        i += "<ul class='icn3d-mn'>", i += o + ">File</span>", i += t.setMenu1_base(), i += o + ">Select</span>", i += t.setMenu2_base(), i += o + ">View</span>", i += t.setMenu2b_base(), i += o + " id='" + t.pre + "style'>Style</span>", i += t.setMenu3_base(), i += o + " id='" + t.pre + "color'>Color</span>", i += t.setMenu4_base(), i += o + ">Windows</span>", i += t.setMenu5_base(), i += o + ">Help</span>", i += t.setMenu6_base(), i += "<li><div style='position:relative; margin-top:-6px;'><label class='icn3d-switch'><input id='" + t.pre + "modeswitch' type='checkbox'><div class='icn3d-slider icn3d-round' style='width:34px; height:18px; margin: 6px 0px 0px 3px;' title='Left (\"All atoms\"): Style and color menu options will be applied to all atoms in the structure&#13;Right (\"Selection\"): Style and color menu options will be applied only to selected atoms'></div></label>", i += "<div class='icn3d-commandTitle' style='margin-top: 3px; white-space: nowrap;'><span id='" + t.pre + "modeall' title='Style and color menu options will be applied to all atoms in the structure'>All atoms&nbsp;&nbsp;</span><span id='" + t.pre + "modeselection' class='icn3d-modeselection' style='display:none;' title='Style and color menu options will be applied only to selected atoms'>Selection&nbsp;&nbsp;</span></div></div>", void 0 !== t.cfg.align && (i += "<li><span id='" + t.pre + "alternate2' class='icn3d-menu-color' title='Alternate the structures'>Alternate</span>"), i += "</ul>", i += "</div>", i += "</accordion>", i += "</div>", i += "</div>";
        var r = "white" == t.opts.background || "grey" == t.opts.background ? "black" : t.GREYD;
        i += t.divStr + "title' class='icn3d-commandTitle' style='font-size:1.2em; font-weight:normal; position:absolute; z-index:1; float:left; display:block; margin: 12px 0px 0px 40px; color:" + r + "; width:" + (t.WIDTH - 40).toString() + "px'></div>", i += t.divStr + "viewer' style='position:relative; width:100%; height:100%; background-color: " + t.GREYD + ";'>", i += t.divStr + "mnLogSection'>", i += "<div style='height: " + t.MENU_HEIGHT + "px;'></div>", i += "</div>", void 0 === t.cfg.mmtfid && (t.realHeight < 300 ? i += t.divStr + "wait' style='position:absolute; top:100px; left:50px; font-size: 1.2em; color: #444444;'>Loading data...</div>" : i += t.divStr + "wait' style='position:absolute; top:180px; left:50px; font-size: 1.8em; color: #444444;'>Loading data...</div>"), i += "<canvas id='" + t.pre + "canvas' style='width:100%; height: 100%; background-color: #000;'>Your browser does not support WebGL.</canvas>", void 0 !== t.cfg.showcommand && !t.cfg.showcommand || (i += t.setLogWindow()), i += "</div>", i += "</div>", i += t.setDialogs(), i += t.setCustomDialogs(), $("#" + e).html(i), $("accordion").accordion({
            collapsible: !0,
            active: !1,
            heightStyle: "content"
        }), $("accordion div").removeClass("ui-accordion-content ui-corner-all ui-corner-bottom ui-widget-content"), $(".icn3d-mn").menu({
            position: {
                my: "left top",
                at: "right top"
            }
        }), $(".icn3d-mn").hover(function() {}, function() {
            $("accordion").accordion("option", "active", "none")
        }), $("#" + t.pre + "accordion0").hover(function() {
            $("#" + t.pre + "accordion0 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion0 div").css("display", "none")
        })
    }, iCn3DUI.prototype.setReplayHtml = function(e) {
        var t = "";
        return t += this.divStr + "replay' style='display:none; position:absolute; z-index:9999; top:" + parseInt(this.HEIGHT - 100).toString() + "px; left:20px;'>", t += "<div title='Click to replay one step'><svg style='cursor:pointer;' fill='#f8b84e' viewBox='0 0 60 60' width='40' height='40'>", t += '<circle style="fill:#f8b84e;" cx="29" cy="29" r="29"/>', t += "<g>", t += '<polygon style="fill:#FFFFFF;" points="44,29 22,44 22,29.273 22,14"/>', t += '<path style="fill:#FFFFFF;" d="M22,45c-0.16,0-0.321-0.038-0.467-0.116C21.205,44.711,21,44.371,21,44V14c0-0.371,0.205-0.711,0.533-0.884c0.328-0.174,0.724-0.15,1.031,0.058l22,15C44.836,28.36,45,28.669,45,29s-0.164,0.64-0.437,0.826l-22,15C22.394,44.941,22.197,45,22,45z M23,15.893v26.215L42.225,29L23,15.893z"/>', t += "</g>", t += "</svg></div>", t += this.divStr + "replay_menu' style='background-color:#DDDDDD; padding:3px; font-weight:bold;'></div>", t += this.divStr + "replay_cmd' style='background-color:#DDDDDD; padding:3px; max-width:250px'></div>", t += "</div>"
    }, iCn3DUI.prototype.setTopMenusHtml = function(e) {
        var t = this,
            i = "";
        i += "<div style='position:relative;'>", i += t.divStr + "popup' class='icn3d-text icn3d-popup'></div>", i += t.setReplayHtml(), i += "\x3c!--https://forum.jquery.com/topic/looking-for-a-jquery-horizontal-menu-bar--\x3e", i += t.divStr + "mnlist' style='position:absolute; z-index:999; float:left; display:table-row; margin-top: -2px;'>", i += "<table border='0' cellpadding='0' cellspacing='0' width='100'><tr>";
        var n = '<td valign="top">';
        i += n + t.setMenu1() + "</td>", t.cfg.simplemenu || (i += n + t.setMenu2() + "</td>"), i += n + t.setMenu2b() + "</td>", i += n + t.setMenu3() + "</td>", i += n + t.setMenu4() + "</td>", t.cfg.simplemenu || (i += n + t.setMenu5() + "</td>", i += n + t.setMenu6() + "</td>", i += n + "<div style='position:relative; margin-left:6px;'><label class='icn3d-switch'><input id='" + t.pre + "modeswitch' type='checkbox'><div class='icn3d-slider icn3d-round' style='width:34px; height:18px; margin: 6px 0px 0px 3px;' title='Left (\"All atoms\"): Style and color menu options will be applied to all atoms in the structure&#13;Right (\"Selection\"): Style and color menu options will be applied only to selected atoms'></div></label>", i += "<div class='icn3d-commandTitle' style='min-width:40px; margin-top: 3px; white-space: nowrap;'><span id='" + t.pre + "modeall' title='Style and color menu options will be applied to all atoms in the structure'>All atoms&nbsp;&nbsp;</span><span id='" + t.pre + "modeselection' class='icn3d-modeselection' style='display:none;' title='Style and color menu options will be applied only to selected atoms'>Selection&nbsp;&nbsp;</span></div></div></td>", i += n + '<div class="icn3d-commandTitle" style="white-space:nowrap; margin-top:10px; border-left:solid 1px #888888"><span id="' + t.pre + 'selection_expand" class="icn3d-expand icn3d-link" title="Expand">&nbsp;&nbsp;Show Toolbar&nbsp;&nbsp;</span><span id="' + t.pre + 'selection_shrink" class="icn3d-shrink icn3d-link" style="display:none;" title="Shrink">&nbsp;&nbsp;Hide Toolbar&nbsp;&nbsp;</span></div></td>', i += n + '<div class="icn3d-commandTitle" style="white-space:nowrap; margin-top:8px; border-left:solid 1px #888888">&nbsp;&nbsp;<input type="text" id="' + t.pre + 'search_seq" size="10" placeholder="one-letter seq."> <button style="white-space:nowrap;" id="' + t.pre + 'search_seq_button">Search Seq.</button> <a style="text-decoration: none;" href="' + t.baseUrl + 'icn3d/icn3d.html#selectb" target="_blank" title="Specification tips">?</a></div></td>'), i += "</tr>", i += "</table>", i += "</div>", i += t.setTools(), i += t.divStr + "title' class='icn3d-commandTitle' style='font-size:1.2em; font-weight:normal; position:absolute; z-index:1; float:left; display:table-row; margin: 85px 0px 0px 5px; color:" + t.GREYD + "; width:" + t.WIDTH + "px'></div>", i += t.divStr + "viewer' style='position:relative; width:100%; height:100%; background-color: " + t.GREYD + ";'>", i += t.divStr + "mnLogSection'>", i += "<div style='height: " + t.MENU_HEIGHT + "px;'></div>", i += " </div>", void 0 === t.cfg.mmtfid && (t.realHeight < 300 ? i += t.divStr + "wait' style='position:absolute; top:100px; left:50px; font-size: 1.2em; color: #444444;'>Loading data...</div>" : i += t.divStr + "wait' style='position:absolute; top:180px; left:50px; font-size: 1.8em; color: #444444;'>Loading data...</div>"), i += "<canvas id='" + t.pre + "canvas' style='width:100%; height: 100%; background-color: #000;'>Your browser does not support WebGL.</canvas>", void 0 !== t.cfg.showcommand && !t.cfg.showcommand || (i += t.setLogWindow()), i += "</div>", i += "</div>", i += t.setDialogs(), i += t.setCustomDialogs(), $("#" + e).html(i), $("accordion").accordion({
            collapsible: !0,
            active: !1,
            heightStyle: "content"
        }), $("accordion div").removeClass("ui-accordion-content ui-corner-all ui-corner-bottom ui-widget-content"), $(".icn3d-mn").menu({
            position: {
                my: "left top",
                at: "right top"
            }
        }), $(".icn3d-mn").hover(function() {}, function() {
            $("accordion").accordion("option", "active", "none")
        }), $("#" + t.pre + "accordion1").hover(function() {
            $("#" + t.pre + "accordion1 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion1 div").css("display", "none")
        }), $("#" + t.pre + "accordion2").hover(function() {
            $("#" + t.pre + "accordion2 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion2 div").css("display", "none")
        }), $("#" + t.pre + "accordion2b").hover(function() {
            $("#" + t.pre + "accordion2b div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion2b div").css("display", "none")
        }), $("#" + t.pre + "accordion3").hover(function() {
            $("#" + t.pre + "accordion3 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion3 div").css("display", "none")
        }), $("#" + t.pre + "accordion4").hover(function() {
            $("#" + t.pre + "accordion4 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion4 div").css("display", "none")
        }), $("#" + t.pre + "accordion5").hover(function() {
            $("#" + t.pre + "accordion5 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion5 div").css("display", "none")
        }), $("#" + t.pre + "accordion6").hover(function() {
            $("#" + t.pre + "accordion6 div").css("display", "block")
        }, function() {
            $("#" + t.pre + "accordion6 div").css("display", "none")
        })
    }, iCn3DUI.prototype.getLink = function(e, t) {
        return "<li><span id='" + this.pre + e + "' class='icn3d-link'>" + t + "</span></li>"
    }, iCn3DUI.prototype.getLinkWrapper = function(e, t, i) {
        return "<li id='" + this.pre + i + "'><span id='" + this.pre + e + "' class='icn3d-link'>" + t + "</span></li>"
    }, iCn3DUI.prototype.getRadio = function(e, t, i, n) {
        var o = n ? " checked" : "";
        return "<li><label for='" + this.pre + t + "' class='icn3d-rad'>" + this.inputRadioStr + "name='" + this.pre + e + "' id='" + this.pre + t + "'" + o + "><span class='ui-icon ui-icon-blank'></span> <span class='icn3d-rad-text'>" + i + "</span></label></li>"
    }, iCn3DUI.prototype.getRadioColor = function(e, t, i, n, o) {
        var r = o ? " checked" : "";
        return "<li><label for='" + this.pre + t + "' class='icn3d-rad'>" + this.inputRadioStr + "name='" + this.pre + e + "' id='" + this.pre + t + "'" + r + "><span class='ui-icon ui-icon-blank'></span> <span class='icn3d-color-rad-text' color='" + n + "'><span style='background-color:#" + n + "'>&nbsp;&nbsp;&nbsp;</span> " + i + "</span></label></li>"
    }, iCn3DUI.prototype.setMenu1 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion1' class='icn3d-accordion'>", e += "<h3>File</h3>", e += "<div>", e += this.setMenu1_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu1_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", t += "<li><span>Retrieve by ID</span>", t += "<ul>", t += e.getLink("mn1_mmdbid", "MMDB ID"), t += e.getLink("mn1_mmtfid", "MMTF ID"), t += e.getLink("mn1_pdbid", "PDB ID"), t += e.getLink("mn1_opmid", "OPM PDB ID"), t += e.getLink("mn1_mmcifid", "mmCIF ID"), t += e.getLink("mn1_gi", "NCBI gi"), t += e.getLink("mn1_cid", "PubChem CID"), t += "</ul>", t += "</li>", t += "<li><span>Open File</span>", t += "<ul>", t += e.getLink("mn1_pdbfile", "PDB File"), t += e.getLink("mn1_mmciffile", "mmCIF File"), t += e.getLink("mn1_mol2file", "Mol2 File"), t += e.getLink("mn1_sdffile", "SDF File"), t += e.getLink("mn1_xyzfile", "XYZ File"), t += e.getLink("mn1_urlfile", "URL (Same Host) "), t += "<li>-</li>", t += e.getLink("mn1_pngimage", "iCn3D PNG Image"), t += e.getLink("mn1_state", "State/Script File"), t += e.getLink("mn1_fixedversion", "Share Link in Archived Ver."), t += e.getLink("mn1_selection", "Selection File"), t += "<li>-</li>", t += "<li><span>Electron Density (DSN6)</span>", t += "<ul>", t += e.getLink("mn1_dsn6", "Local File"), t += e.getLink("mn1_dsn6url", "URL (Same Host)"), t += "</ul>", t += "</ul>", t += "</li>", t += "<li><span>Align</span>", t += "<ul>", t += e.getLink("mn1_blast_rep_id", "Sequence to Structure"), t += e.getLink("mn1_align", "Structure to Structure"), t += e.getLink("mn1_chainalign", "Chain to Chain"), t += "</ul>", t += "</li>", t += "<li id='" + e.pre + "mn2_realignWrap'><span>Realign Selection</span>", t += "<ul>", t += e.getRadio("mn2_realign", "mn2_realignonseqalign", "on Sequence Alignment", !0), t += e.getRadio("mn2_realign", "mn2_realignresbyres", "Residue by Residue"), t += "</ul>", t += "</li>", t += "<li><span>3D Printing</span>", t += "<ul>", void 0 === e.cfg.cid ? (t += e.getLink("mn1_exportVrmlStab", "VRML (Color, W/  Stabilizers)"), t += e.getLink("mn1_exportStlStab", "STL (W/  Stabilizers)"), t += "<li>-</li>", t += e.getLink("mn1_exportVrml", "VRML (Color)"), t += e.getLink("mn1_exportStl", "STL"), t += "<li>-</li>", t += e.getLink("mn1_stabilizerYes", "Add All  Stabilizers"), t += e.getLink("mn1_stabilizerNo", "Remove All  Stabilizers"), t += "<li>-</li>", t += e.getLink("mn1_stabilizerOne", "Add One  Stabilizer"), t += e.getLink("mn1_stabilizerRmOne", "Remove One  Stabilizer"), t += "<li>-</li>", t += e.getLink("mn1_thicknessSet", "Set Thickness"), t += e.getLink("mn1_thicknessReset", "Reset Thickness")) : (t += e.getLink("mn1_exportVrml", "VRML (Color)"), t += e.getLink("mn1_exportStl", "STL")), t += "</ul>", t += "</li>", t += "<li><span>Save Files</span>", t += "<ul>", t += "<li><span>iCn3D PNG Image</span>", t += "<ul>", t += e.getLink("mn1_exportCanvas", "Original Size"), t += e.getLink("mn1_exportCanvas2", "2X Large"), t += e.getLink("mn1_exportCanvas4", "4X Large"), t += e.getLink("mn1_exportCanvas8", "8X Large"), t += "</ul>", t += "</li>", t += e.getLink("mn1_exportState", "State File"), t += e.getLink("mn1_exportSelections", "Selection File"), t += e.getLink("mn1_exportCounts", "Residue Counts"), t += "</ul>", t += "</li>", t += e.getLink("mn1_sharelink", "Share Link"), t += e.getLink("mn1_replayon", "Replay Each Step"), t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu2 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion2' class='icn3d-accordion'>", e += "<h3>Select</h3>", e += "<div>", e += this.setMenu2_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu2_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", t += e.getLink("mn2_definedsets", "Defined Sets"), t += e.getLink("mn2_selectall", "All"), t += e.getLink("mn2_selectdisplayed", "Displayed Set"), t += e.getLink("mn2_aroundsphere", "by Distance"), t += "<li><span>by Property</span>", t += "<ul>", t += e.getLink("mn2_propPos", "Positive"), t += e.getLink("mn2_propNeg", "Negative"), t += e.getLink("mn2_propHydro", "Hydrophobic"), t += e.getLink("mn2_propPolar", "Polar"), t += e.getLink("mn2_propBfactor", "B-factor"), t += e.getLink("mn2_propSolAcc", "Solvent Accessibility"), t += "</ul>", t += "</li>", t += e.getLink("mn2_selectcomplement", "Inverse"), t += e.getLink("mn2_selectmainchains", "Main Chains"), t += e.getLink("mn2_selectsidechains", "Side Chains"), t += e.getLink("mn2_selectmainsidechains", "Main & Side Chains"), t += e.getLink("mn2_command", "Advanced"), void 0 === e.cfg.cid ? (t += "<li><span>Select on 3D</span>", t += "<ul>", t += '<li>"Alt"+Click: start selection</li>', t += '<li>"Ctrl"+Click: union selection</li>', t += '<li>"Shift"+Click: range Selection</li>', t += "<li>-</li>", t += e.getRadio("mn2_pk", "mn2_pkChain", "Chain"), void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || (t += e.getRadio("mn2_pk", "mn2_pkDomain", "3D Domain")), t += e.getRadio("mn2_pk", "mn2_pkStrand", "Strand/Helix"), t += e.getRadio("mn2_pk", "mn2_pkResidue", "Residue", !0), t += e.getRadio("mn2_pk", "mn2_pkYes", "Atom"), t += "</ul>", t += "</li>") : e.isMobile() ? t += "<li><span>Touch to pick</span>" : t += '<li><span>Picking with<br>"Alt" + Click</span>', t += "<li>-</li>", t += e.getLink("mn2_saveselection", "Save Selection"), t += e.getLink("clearall", "Clear Selection"), t += "<li>-</li>", t += "<li><span>Highlight Color</span>", t += "<ul>", t += e.getRadio("mn2_hl_clr", "mn2_hl_clrYellow", "Yellow", !0), t += e.getRadio("mn2_hl_clr", "mn2_hl_clrGreen", "Green"), t += e.getRadio("mn2_hl_clr", "mn2_hl_clrRed", "Red"), t += "</ul>", t += "</li>", t += "<li><span>Highlight Style</span>", t += "<ul>", t += e.getRadio("mn2_hl_style", "mn2_hl_styleOutline", "Outline", !0), t += e.getRadio("mn2_hl_style", "mn2_hl_styleObject", "3D Objects"), t += "</ul>", t += "</li>", t += e.getLink("toggleHighlight2", "Toggle Highlight"), t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu2b = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion2b' class='icn3d-accordion'>", e += "<h3>View</h3>", e += "<div>", e += this.setMenu2b_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu2b_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", t += e.getLink("mn2_show_selected", "View Only <br>Selection"), t += e.getLink("mn2_hide_selected", "Hide Selection"), t += e.getLink("mn2_selectedcenter", "Zoom in Selection"), t += e.getLink("mn6_center", "Center Selection"), t += e.getLink("mn2_fullstru", "View Full Structure"), t += "<li id='" + e.pre + "mn2_alternateWrap'><span id='" + e.pre + "mn2_alternate' class='icn3d-link'>Alternate (Key \"a\")</span></li>", t += "<li>-</li>", void 0 === e.cfg.cid && (t += "<li><span>Chem. Binding</span>", t += "<ul>", t += e.getRadio("mn6_chemicalbinding", "mn6_chemicalbindingshow", "Show"), t += e.getRadio("mn6_chemicalbinding", "mn6_chemicalbindinghide", "Hide", !0), t += "</ul>", t += "</li>", t += e.getLink("mn6_hbondsYes", "H-Bonds <br>& Interactions"), t += "<li><span>Disulfide Bonds</span>", t += "<ul>", t += e.getRadio("mn6_ssbonds", "mn6_ssbondsYes", "Show", !0), t += e.getRadio("mn6_ssbonds", "mn6_ssbondsExport", "Export Pairs"), t += e.getRadio("mn6_ssbonds", "mn6_ssbondsNo", "Hide"), t += "</ul>", t += "</li>", t += "<li><span>Cross-Linkages</span>", t += "<ul>", t += e.getRadio("mn6_clbonds", "mn6_clbondsYes", "Show", !0), t += e.getRadio("mn6_ssbonds", "mn6_clbondsExport", "Export Pairs"), t += e.getRadio("mn6_clbonds", "mn6_clbondsNo", "Hide"), t += "</ul>", t += "</li>", void 0 === e.cfg.mmtfid && void 0 === e.cfg.pdbid && void 0 === e.cfg.opmid && void 0 === e.cfg.mmcifid && void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi && void 0 === e.cfg.blast_rep_id || (t += "<li id='" + e.pre + "assemblyWrapper'><span>Assembly</span>", t += "<ul>", t += e.getRadio("mn6_assembly", "mn6_assemblyYes", "Biological Assembly", !0), t += e.getRadio("mn6_assembly", "mn6_assemblyNo", "Asymmetric Unit"), t += "</ul>", t += "</li>", t += e.getLink("mn6_symmetry", "Symmetry"))), t += "<li><span>Distance</span>", t += "<ul>", t += e.getRadio("mn6_distance", "mn6_distanceYes", "Measure"), t += e.getRadio("mn6_distance", "mn6_distanceNo", "Hide", !0), t += "</ul>", t += "</li>", t += e.getLink("mn6_area", "Surface Area"), t += "<li><span>Label</span>", t += "<ul>", t += e.getRadio("mn6_addlabel", "mn6_addlabelYes", "by Picking Atoms"), t += e.getRadio("mn6_addlabel", "mn6_addlabelSelection", "per Selection"), t += e.getRadio("mn6_addlabel", "mn6_addlabelAtoms", "per Atom"), void 0 === e.cfg.cid && (t += e.getRadio("mn6_addlabel", "mn6_addlabelResidues", "per Residue"), t += e.getRadio("mn6_addlabel", "mn6_addlabelResnum", "per Residue & Number"), t += e.getRadio("mn6_addlabel", "mn6_addlabelChains", "per Chain"), t += e.getRadio("mn6_addlabel", "mn6_addlabelTermini", "N- & C-Termini")), t += e.getRadio("mn6_addlabel", "mn6_addlabelNo", "Remove", !0), t += "</ul>", t += "</li>", t += "<li><span>Label Scale</span>", t += "<ul>", t += e.getRadio("mn6_labelscale", "mn6_labelscale01", "0.1"), t += e.getRadio("mn6_labelscale", "mn6_labelscale02", "0.2"), t += e.getRadio("mn6_labelscale", "mn6_labelscale03", "0.3", !0), t += e.getRadio("mn6_labelscale", "mn6_labelscale04", "0.4"), t += e.getRadio("mn6_labelscale", "mn6_labelscale05", "0.5"), t += e.getRadio("mn6_labelscale", "mn6_labelscale06", "0.6"), t += e.getRadio("mn6_labelscale", "mn6_labelscale07", "0.7"), t += e.getRadio("mn6_labelscale", "mn6_labelscale08", "0.8"), t += e.getRadio("mn6_labelscale", "mn6_labelscale09", "0.9"), t += e.getRadio("mn6_labelscale", "mn6_labelscale10", "1.0"), t += e.getRadio("mn6_labelscale", "mn6_labelscale20", "2.0"), t += e.getRadio("mn6_labelscale", "mn6_labelscale40", "4.0"), t += "</ul>", t += "</li>", void 0 !== e.cfg.opmid ? (t += "<li>-</li>", t += "<li id='" + e.pre + "togglememli'><span id='" + e.pre + "togglemem' class='icn3d-link'>Toggle Membrane</span></li>", t += "<li id='" + e.pre + "adjustmemli'><span id='" + e.pre + "adjustmem' class='icn3d-link'>Adjust Membrane</span></li>", t += "<li id='" + e.pre + "selectplaneli'><span id='" + e.pre + "selectplane' class='icn3d-link'>Select between<br>Two X-Y Planes</span></li>") : (t += "<li>-</li>", t += "<li id='" + e.pre + "togglememli' style='display:none'><span id='" + e.pre + "togglemem' class='icn3d-link'>Toggle Membrane</span></li>", t += "<li id='" + e.pre + "adjustmemli' style='display:none'><span id='" + e.pre + "adjustmem' class='icn3d-link'>Adjust Membrane</span></li>", t += "<li id='" + e.pre + "selectplaneli' style='display:none'><span id='" + e.pre + "selectplane' class='icn3d-link'>Select between<br>Two X-Y Planes</span></li>"), t += "<li>-</li>", t += e.getLink("mn6_sidebyside", "Side by Side"), t += "<li><span>Rotate</span>", t += "<ul>", t += "<li><span>Rotate 90&deg;</span>", t += "<ul>", t += e.getRadio("mn6_rotate90", "mn6_rotatex", "X-axis (Shift + Key M)"), t += e.getRadio("mn6_rotate90", "mn6_rotatey", "Y-axis (Shift + Key J)"), t += e.getRadio("mn6_rotate90", "mn6_rotatez", "Z-axis"), t += "</ul>", t += "</li>", t += "<li><span>Auto Rotation</span>", t += "<ul>", t += e.getRadio("mn6_rotate", "mn6_rotateleft", "Rotate Left"), t += e.getRadio("mn6_rotate", "mn6_rotateright", "Rotate Right"), t += e.getRadio("mn6_rotate", "mn6_rotateup", "Rotate Up"), t += e.getRadio("mn6_rotate", "mn6_rotatedown", "Rotate Down"), t += "</ul>", t += "</li>", t += "</ul>", t += "</li>", t += "<li><span>Camera</span>", t += "<ul>", t += e.getRadio("mn6_camera", "mn6_cameraPers", "Perspective", !0), t += e.getRadio("mn6_camera", "mn6_cameraOrth", "Orthographic"), t += "</ul>", t += "</li>", t += "<li><span>Fog for Selection</span>", t += "<ul>", t += e.getRadio("mn6_showfog", "mn6_showfogYes", "On"), t += e.getRadio("mn6_showfog", "mn6_showfogNo", "Off", !0), t += "</ul>", t += "</li>", t += "<li><span>Slab for Selection</span>", t += "<ul>", t += e.getRadio("mn6_showslab", "mn6_showslabYes", "On"), t += e.getRadio("mn6_showslab", "mn6_showslabNo", "Off", !0), t += "</ul>", t += "</li>", t += "<li><span>XYZ-axes</span>", t += "<ul>", t += e.getRadio("mn6_showaxis", "mn6_showaxisYes", "Show"), t += e.getRadio("mn6_showaxis", "mn6_showaxisNo", "Hide", !0), t += "</ul>", t += "</li>", t += "<li>-</li>", t += "<li><span>Reset</span>", t += "<ul>", t += e.getRadio("mn6_reset", "reset", "All"), t += e.getRadio("mn6_reset", "mn6_resetOrientation", "Orientation"), t += "</ul>", t += "</li>", t += e.getLink("mn6_back", "Undo"), t += e.getLink("mn6_forward", "Redo"), t += e.getLink("mn6_fullscreen", "Full Screen"), t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu3 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion3' class='icn3d-accordion'>", e += "<h3 id='" + this.pre + "style'>Style</h3>", e += "<div>", e += this.setMenu3_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu3_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", void 0 === e.cfg.cid && (t += "<li><span>Proteins</span>", t += "<ul>", void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? t += e.getRadio("mn3_proteins", "mn3_proteinsRibbon", "Ribbon") : t += e.getRadio("mn3_proteins", "mn3_proteinsRibbon", "Ribbon", !0), t += e.getRadio("mn3_proteins", "mn3_proteinsStrand", "Strand"), t += e.getRadio("mn3_proteins", "mn3_proteinsCylinder", "Cylinder and Plate"), t += e.getRadio("mn3_proteins", "mn3_proteinsSchematic", "Schematic"), void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? t += e.getRadio("mn3_proteins", "mn3_proteinsCalpha", "C Alpha Trace", !0) : t += e.getRadio("mn3_proteins", "mn3_proteinsCalpha", "C Alpha Trace"), t += e.getRadio("mn3_proteins", "mn3_proteinsBackbone", "Backbone"), t += e.getRadio("mn3_proteins", "mn3_proteinsBfactor", "B-factor Tube"), t += e.getRadio("mn3_proteins", "mn3_proteinsLines", "Lines"), t += e.getRadio("mn3_proteins", "mn3_proteinsStick", "Stick"), t += e.getRadio("mn3_proteins", "mn3_proteinsBallstick", "Ball and Stick"), t += e.getRadio("mn3_proteins", "mn3_proteinsSphere", "Sphere"), t += e.getRadio("mn3_proteins", "mn3_proteinsNo", "Hide"), t += "</ul>", t += "</li>", t += "<li><span>Side Chains</span>", t += "<ul>", t += e.getRadio("mn3_sidec", "mn3_sidecLines", "Lines"), t += e.getRadio("mn3_sidec", "mn3_sidecStick", "Stick"), t += e.getRadio("mn3_sidec", "mn3_sidecBallstick", "Ball and Stick"), t += e.getRadio("mn3_sidec", "mn3_sidecSphere", "Sphere"), t += e.getRadio("mn3_sidec", "mn3_sidecNo", "Hide", !0), t += "</ul>", t += "</li>", t += "<li><span>Nucleotides</span>", t += "<ul>", t += e.getRadio("mn3_nucl", "mn3_nuclCartoon", "Cartoon", !0), t += e.getRadio("mn3_nucl", "mn3_nuclPhos", "O3' Trace"), t += e.getRadio("mn3_nucl", "mn3_nuclBackbone", "Backbone"), t += e.getRadio("mn3_nucl", "mn3_nuclSchematic", "Schematic"), t += e.getRadio("mn3_nucl", "mn3_nuclLines", "Lines"), t += e.getRadio("mn3_nucl", "mn3_nuclStick", "Stick"), t += e.getRadio("mn3_nucl", "mn3_nuclBallstick", "Ball and Stick"), t += e.getRadio("mn3_nucl", "mn3_nuclSphere", "Sphere"), t += e.getRadio("mn3_nucl", "mn3_nuclNo", "Hide"), t += "</ul>", t += "</li>"), t += "<li><span>Chemicals</span>", t += "<ul>", t += e.getRadio("mn3_lig", "mn3_ligLines", "Lines"), void 0 === e.cfg.cid ? (t += e.getRadio("mn3_lig", "mn3_ligStick", "Stick", !0), t += e.getRadio("mn3_lig", "mn3_ligBallstick", "Ball and Stick")) : (t += e.getRadio("mn3_lig", "mn3_ligStick", "Stick"), t += e.getRadio("mn3_lig", "mn3_ligBallstick", "Ball and Stick", !0)), t += e.getRadio("mn3_lig", "mn3_ligSchematic", "Schematic"), t += e.getRadio("mn3_lig", "mn3_ligSphere", "Sphere"), t += e.getRadio("mn3_lig", "mn3_ligNo", "Hide"), t += "</ul>", t += "</li>", void 0 !== e.cfg.cid && (t += "<li><span>Hydrogens</span>", t += "<ul>", t += e.getRadio("mn3_hydrogens", "mn3_hydrogensYes", "Show", !0), t += e.getRadio("mn3_hydrogens", "mn3_hydrogensNo", "Hide"), t += "</ul>", t += "</li>"), t += "<li><span>Ions</span>", t += "<ul>", t += e.getRadio("mn3_ions", "mn3_ionsSphere", "Sphere", !0), t += e.getRadio("mn3_ions", "mn3_ionsDot", "Dot"), t += e.getRadio("mn3_ions", "mn3_ionsNo", "Hide"), t += "</ul>", t += "</li>", t += "<li><span>Water</span>", t += "<ul>", t += e.getRadio("mn3_water", "mn3_waterSphere", "Sphere"), t += e.getRadio("mn3_water", "mn3_waterDot", "Dot"), t += e.getRadio("mn3_water", "mn3_waterNo", "Hide", !0), t += "</ul>", t += "</li>", t += e.getLink("mn3_setThickness", "Set Thickness"), t += "<li>-</li>", t += e.getLink("mn3_styleSave", "Save Style"), t += e.getLink("mn3_styleApplySave", "Apply Saved Style"), t += "<li>-</li>", t += "<li><span>Surface Type</span>", t += "<ul>", t += e.getRadio("mn5_surface", "mn5_surfaceVDW", "Van der Waals"), t += e.getRadio("mn5_surface", "mn5_surfaceVDWContext", "VDW with Context"), t += e.getRadio("mn5_surface", "mn5_surfaceMolecular", "Molecular Surface"), t += e.getRadio("mn5_surface", "mn5_surfaceMolecularContext", "MS with Context"), t += e.getRadio("mn5_surface", "mn5_surfaceSAS", "Solvent Accessible"), t += e.getRadio("mn5_surface", "mn5_surfaceSASContext", "SA with Context"), t += "</ul>", t += "</li>", t += e.getLink("mn5_surfaceNo", "Remove Surface"), t += "<li><span>Surface Opacity</span>", t += "<ul>", t += e.getRadio("mn5_opacity", "mn5_opacity10", "1.0", !0), t += e.getRadio("mn5_opacity", "mn5_opacity09", "0.9"), t += e.getRadio("mn5_opacity", "mn5_opacity08", "0.8"), t += e.getRadio("mn5_opacity", "mn5_opacity07", "0.7"), t += e.getRadio("mn5_opacity", "mn5_opacity06", "0.6"), t += e.getRadio("mn5_opacity", "mn5_opacity05", "0.5"), t += e.getRadio("mn5_opacity", "mn5_opacity04", "0.4"), t += e.getRadio("mn5_opacity", "mn5_opacity03", "0.3"), t += e.getRadio("mn5_opacity", "mn5_opacity02", "0.2"), t += e.getRadio("mn5_opacity", "mn5_opacity01", "0.1"), t += "</ul>", t += "</li>", t += "<li><span>Surface <br>Wireframe</span>", t += "<ul>", t += e.getRadio("mn5_wireframe", "mn5_wireframeYes", "Yes"), t += e.getRadio("mn5_wireframe", "mn5_wireframeNo", "No", !0), t += "</ul>", t += "</li>", void 0 === e.cfg.cid && void 0 === e.cfg.align && void 0 === e.cfg.chainalign && (t += "<li>-</li>", t += "<li id='" + e.pre + "mapWrapper1'><span>Electron Density</span>", t += "<ul>", t += e.getRadio("mn5_elecmap", "mn5_elecmap2fofc", "2Fo-Fc Map"), t += e.getRadio("mn5_elecmap", "mn5_elecmapfofc", "Fo-Fc Map"), t += "</ul>", t += "</li>", t += e.getLinkWrapper("mn5_elecmapNo", "Remove Map", "mapWrapper2"), t += "<li id='" + e.pre + "mapWrapper3'><span>Map <br>Wireframe</span>", t += "<ul>", t += e.getRadio("mn5_mapwireframe", "mn5_mapwireframeYes", "Yes", !0), t += e.getRadio("mn5_mapwireframe", "mn5_mapwireframeNo", "No"), t += "</ul>", t += "</li>", void 0 === e.cfg.mmtfid && (t += e.getLinkWrapper("mn5_emmap", "EM Density Map", "emmapWrapper1"), t += e.getLinkWrapper("mn5_emmapNo", "Remove EM Map", "emmapWrapper2"), t += "<li id='" + e.pre + "emmapWrapper3'><span>EM Map <br>Wireframe</span>", t += "<ul>", t += e.getRadio("mn5_emmapwireframe", "mn5_emmapwireframeYes", "Yes", !0), t += e.getRadio("mn5_emmapwireframe", "mn5_emmapwireframeNo", "No"), t += "</ul>", t += "</li>")), t += "<li>-</li>", t += "<li><span>Background</span>", t += "<ul>", t += e.getRadio("mn6_bkgd", "mn6_bkgdTransparent", "Transparent", !0), t += e.getRadio("mn6_bkgd", "mn6_bkgdBlack", "Black"), t += e.getRadio("mn6_bkgd", "mn6_bkgdGrey", "Grey"), t += e.getRadio("mn6_bkgd", "mn6_bkgdWhite", "White"), t += "</ul>", t += "</li>", t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu4 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion4' class='icn3d-accordion'>", e += "<h3 id='" + this.pre + "color'>Color</h3>", e += "<div>", e += this.setMenu4_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu4_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", t += "<li><span style='padding-left:2.3em;'>Unicolor</span>", t += "<ul>", t += "<li><span>Red</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrRed1", "Red", "F00"), t += e.getRadioColor("mn4_clr", "mn4_clrRed2", "Indian Red", "CD5C5C"), t += e.getRadioColor("mn4_clr", "mn4_clrRed3", "Light Coral", "F08080"), t += e.getRadioColor("mn4_clr", "mn4_clrRed4", "Salmon", "FA8072"), t += e.getRadioColor("mn4_clr", "mn4_clrRed5", "Dark Salmon", "E9967A"), t += e.getRadioColor("mn4_clr", "mn4_clrRed6", "Light Salmon", "FFA07A"), t += e.getRadioColor("mn4_clr", "mn4_clrRed7", "Crimson", "DC143C"), t += e.getRadioColor("mn4_clr", "mn4_clrRed8", "Fire Brick", "B22222"), t += e.getRadioColor("mn4_clr", "mn4_clrRed9", "Dark Red", "8B0000"), t += "</ul>", t += "<li><span>Pink</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrPink1", "Pink", "FFC0CB"), t += e.getRadioColor("mn4_clr", "mn4_clrPink2", "Light Pink", "FFB6C1"), t += e.getRadioColor("mn4_clr", "mn4_clrPink3", "Hot Pink", "FF69B4"), t += e.getRadioColor("mn4_clr", "mn4_clrPink4", "Deep Pink", "FF1493"), t += e.getRadioColor("mn4_clr", "mn4_clrPink5", "Medium Violet Red", "C71585"), t += e.getRadioColor("mn4_clr", "mn4_clrPink6", "Pale Violet Red", "DB7093"), t += "</ul>", t += "<li><span>Orange</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrOrange1", "Orange", "FFA500"), t += e.getRadioColor("mn4_clr", "mn4_clrOrange2", "Dark Orange", "FF8C00"), t += e.getRadioColor("mn4_clr", "mn4_clrOrange3", "Orange Red", "FF4500"), t += e.getRadioColor("mn4_clr", "mn4_clrOrange4", "Tomato", "FF6347"), t += e.getRadioColor("mn4_clr", "mn4_clrOrange5", "Coral", "FF7F50"), t += e.getRadioColor("mn4_clr", "mn4_clrOrange6", "Light Salmon", "FFA07A"), t += "</ul>", t += "<li><span>Yellow</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrYellow1", "Yellow", "FF0"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow2", "Gold", "FFD700"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow3", "Light Yellow", "FFFFE0"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow4", "Lemon Chiffon", "FFFACD"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow5", "Light Golden Rod", "FAFAD2"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow6", "Papaya Whip", "FFEFD5"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow7", "Moccasin", "FFE4B5"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow8", "Peach Puff", "FFDAB9"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow9", "Pale Golden Rod", "EEE8AA"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow10", "Khaki", "F0E68C"), t += e.getRadioColor("mn4_clr", "mn4_clrYellow11", "Dark Khaki", "BDB76B"), t += "</ul>", t += "<li><span>Magenta</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrMagenta1", "Magenta", "F0F"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta2", "Orchid", "DA70D6"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta3", "Violet", "EE82EE"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta4", "Plum", "DDA0DD"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta5", "Thistle", "D8BFD8"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta6", "Lavender", "E6E6FA"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta7", "Medium Orchid", "BA55D3"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta8", "Medium Purple", "9370DB"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta9", "Rebecca Purple", "663399"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta10", "Blue Violet", "8A2BE2"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta11", "Dark Violet", "9400D3"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta12", "Dark Orchid", "9932CC"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta13", "Dark Magenta", "8B008B"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta14", "Purple", "800080"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta15", "Indigo", "4B0082"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta16", "Slat Blue", "6A5ACD"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta17", "Dark Slate Blue", "483D8B"), t += e.getRadioColor("mn4_clr", "mn4_clrMagenta18", "Medium Slat Blue", "6A5ACD"), t += "</ul>", t += "<li><span>Green</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrGreen1", "Green", "0F0"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen2", "Dark Green", "006400"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen3", "Yellow Green", "9ACD32"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen4", "Olive Drab", "6B8E23"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen5", "Olive", "808000"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen6", "Dark Olive Green", "556B2F"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen7", "Medium Aquamarine", "66CDAA"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen8", "Dark Sea Green", "8FBC8B"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen9", "Lignt Sea Green", "20B2AA"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen10", "Dark Cyan", "008B8B"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen11", "Teal", "008080"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen12", "Forest Green", "228B22"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen13", "Sea Green", "2E8B57"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen14", "Medium Sea Green", "3CB371"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen15", "Spring Green", "00FF7F"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen16", "Medium Spring", "00FA9A"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen17", "Light Green", "90EE90"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen18", "Pale Green", "98FB98"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen19", "Lime Green", "32CD32"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen20", "Lawn Green", "7CFC00"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen21", "Chartreuse", "7FFF00"), t += e.getRadioColor("mn4_clr", "mn4_clrGreen22", "Green Yellow", "ADFF2F"), t += "</ul>", t += "<li><span>Cyan</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrCyan1", "Cyan", "0FF"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan2", "Light Cyan", "E0FFFF"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan3", "Pale Turquoise", "AFEEEE"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan4", "Aquamarine", "7FFFD4"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan5", "Turquoise", "40E0D0"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan6", "Medium Turquoise", "48D1CC"), t += e.getRadioColor("mn4_clr", "mn4_clrCyan7", "Dark Turquoise", "00CED1"), t += "</ul>", t += "<li><span>Blue</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrBlue1", "Blue", "00F"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue2", "Medium Blue", "0000CD"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue3", "Dark Blue", "00008B"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue4", "Navy", "000080"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue5", "Midnight Blue", "191970"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue6", "Royal Blue", "4169E1"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue7", "Medium Slate Blue", "7B68EE"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue8", "Corn Flower Blue", "6495ED"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue9", "Dodger Blue", "1E90FF"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue10", "Deep Sky Blue", "00BFFF"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue11", "Light Sky Blue", "87CEFA"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue12", "Sky Blue", "87CEEB"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue13", "Light Blue", "ADD8E6"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue14", "Powder Blue", "B0E0E6"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue15", "Light Steel Blue", "B0C4DE"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue16", "Steel Blue", "4682B4"), t += e.getRadioColor("mn4_clr", "mn4_clrBlue17", "Cadet Blue", "5F9EA0"), t += "</ul>", t += "<li><span>Brown</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrBrown1", "Brown", "A52A2A"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown2", "Maroon", "800000"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown3", "Sienna", "A0522D"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown4", "Saddle Brown", "8B4513"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown5", "Chocolate", "D2691E"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown6", "Peru", "CD853F"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown7", "Dark Golden Rod", "B8860B"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown8", "Golden Rod", "DAA520"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown9", "Sandy Brown", "F4A460"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown10", "Rosy Brown", "BC8F8F"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown11", "Tan", "D2B48C"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown12", "Burlywood", "DEB887"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown13", "Wheat", "F5DEB3"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown14", "Navajo White", "FFDEAD"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown15", "Bisque", "FFE4C4"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown16", "Blanched Almond", "FFEBCD"), t += e.getRadioColor("mn4_clr", "mn4_clrBrown17", "Corn Silk", "FFF8DC"), t += "</ul>", t += "<li><span>White</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrWhite1", "White", "FFF"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite2", "Snow", "FFFAFA"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite3", "Honey Dew", "F0FFF0"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite4", "Mint Cream", "F5FFFA"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite5", "Azure", "F0FFFF"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite6", "Alice Blue", "F0F8FF"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite7", "Ghost White", "F8F8FF"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite8", "White Smoke", "F5F5F5"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite9", "Sea Shell", "FFF5EE"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite10", "Beige", "F5F5DC"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite11", "Old Lace", "FDF5E6"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite12", "Floral White", "FFFAF0"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite13", "Ivory", "FFFFF0"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite14", "Antique White", "FAEBD7"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite15", "Linen", "FAF0E6"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite16", "Lavenderblush", "FFF0F5"), t += e.getRadioColor("mn4_clr", "mn4_clrWhite17", "Misty Rose", "FFE4E1"), t += "</ul>", t += "<li><span>Grey</span>", t += "<ul>", t += e.getRadioColor("mn4_clr", "mn4_clrGray1", "Gray", "808080"), t += e.getRadioColor("mn4_clr", "mn4_clrGray2", "Dim Gray", "696969"), t += e.getRadioColor("mn4_clr", "mn4_clrGray3", "Light Slate Gray", "778899"), t += e.getRadioColor("mn4_clr", "mn4_clrGray4", "Slate Gray", "708090"), t += e.getRadioColor("mn4_clr", "mn4_clrGray5", "Dark Slate Gray", "2F4F4F"), t += e.getRadioColor("mn4_clr", "mn4_clrGray6", "Black", "000000"), t += e.getRadioColor("mn4_clr", "mn4_clrGray7", "Dark Gray", "A9A9A9"), t += e.getRadioColor("mn4_clr", "mn4_clrGray8", "Silver", "C0C0C0"), t += e.getRadioColor("mn4_clr", "mn4_clrGray9", "Light Gray", "D3D3D3"), t += e.getRadioColor("mn4_clr", "mn4_clrGray10", "Gainsboro", "DCDCDC"), t += "</ul>", t += "</ul>", t += e.getRadio("mn4_clr", "mn4_clrCustom", "Color Picker"), t += "<li>-</li>", void 0 === e.cfg.cid ? (t += e.getRadio("mn4_clr", "mn4_clrSpectrum", "Spectrum"), t += "<li><span style='padding-left:2.3em;'>Secondary</span>", t += "<ul>", t += e.getRadio("mn4_clr", "mn4_clrSSGreen", "Sheet in Green"), t += e.getRadio("mn4_clr", "mn4_clrSSYellow", "Sheet in Yellow"), t += e.getRadio("mn4_clr", "mn4_clrSSSpectrum", "Spectrum"), t += "</ul>", t += e.getRadio("mn4_clr", "mn4_clrCharge", "Charge"), t += e.getRadio("mn4_clr", "mn4_clrHydrophobic", 'Wimley-White<br><span style="padding-left:1.5em;">Hydrophobicity</span>'), t += "<li><span style='padding-left:2.3em;'>B-factor</span>", t += "<ul>", t += e.getRadio("mn4_clr", "mn4_clrBfactor", "Original"), t += e.getRadio("mn4_clr", "mn4_clrBfactorNorm", "Percentile"), t += "</ul>", t += e.getRadio("mn4_clr", "mn4_clrArea", 'Solvent<br><span style="padding-left:1.5em;">Accessibility</span>'), void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign || void 0 !== e.cfg.blast_rep_id ? t += e.getRadio("mn4_clr", "mn4_clrChain", "Chain") : t += e.getRadio("mn4_clr", "mn4_clrChain", "Chain", !0), void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi || (t += e.getRadio("mn4_clr", "mn4_clrdomain", "3D Domain")), t += "<li><span style='padding-left:2.3em;'>Residue</span>", t += "<ul>", t += e.getRadio("mn4_clr", "mn4_clrResidue", "Default"), t += e.getRadio("mn4_clr", "mn4_clrResidueCustom", "Custom"), t += "</ul>", t += e.getRadio("mn4_clr", "mn4_clrAtom", "Atom"), void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? (t += e.getRadio("mn4_clr", "mn4_clrIdentity", "Identity", !0), t += e.getRadio("mn4_clr", "mn4_clrConserved", "Conservation")) : void 0 !== e.cfg.blast_rep_id && (t += e.getRadio("mn4_clr", "mn4_clrIdentity", "Identity"), t += e.getRadio("mn4_clr", "mn4_clrConserved", "Conservation", !0))) : t += e.getRadio("mn4_clr", "mn4_clrAtom", "Atom", !0), t += "<li>-</li>", t += e.getLink("mn4_clrSave", "Save Color"), t += e.getLink("mn4_clrApplySave", "Apply Saved Color"), t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu5 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion5' class='icn3d-accordion'>", e += "<h3 id='" + this.pre + "windows' style='font-size:1.2em'>&nbsp;Windows</h3>", e += "<div>", e += this.setMenu5_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu5_base = function() {
        var e = this,
            t = "";
        return t += "<ul class='icn3d-mn'>", void 0 === e.cfg.cid && (t += e.getLink("mn6_selectannotations", "View Sequences<br>& Annotations"), void 0 === e.cfg.align && void 0 === e.cfg.chainalign && !e.bRealign || (t += e.getLink("mn2_alignment", "View Aligned<br>Sequences")), void 0 === e.cfg.mmdbid && void 0 === e.cfg.gi && void 0 === e.cfg.blast_rep_id && void 0 === e.cfg.align && void 0 === e.cfg.chainalign || (t += e.getLink("mn2_2ddgm", "View Interactions")), t += e.getLink("definedsets2", "Defined Sets")), t += e.getLink("mn6_yournote", "Your Note /<br>Window Title"), t += "<li><span>Show Windows</span>", t += "<ul>", t += e.getLink("mn1_window_table", "Highlight Interactions in Table"), t += e.getLink("mn1_window_linegraph", "2D Interaction Graph"), t += e.getLink("mn1_window_graph", "2D Graph (Force-Directed)"), t += "</ul>", t += "</li>", void 0 !== e.cfg.cid ? (t += "<li><span>Links</span>", t += "<ul>", t += e.getLink("mn1_link_structure", "Compound Summary"), t += e.getLink("mn1_link_vast", "Similar Compounds"), t += e.getLink("mn1_link_bind", "Structures Bound")) : (t += "<li><span>Links</span>", t += "<ul>", t += e.getLink("mn1_link_structure", "Structure Summary"), t += e.getLink("mn1_link_vast", "Similar Structures"), t += e.getLink("mn1_link_pubmed", "Literature"), t += e.getLink("mn1_link_protein", "Protein")), t += "</ul>", t += "</li>", t += "<li><br/></li>", t += "</ul>"
    }, iCn3DUI.prototype.setMenu6 = function() {
        var e = "";
        return e += "<div class='icn3d-menu'>", e += "<accordion id='" + this.pre + "accordion6' class='icn3d-accordion'>", e += "<h3>Help</h3>", e += "<div>", e += this.setMenu6_base(), e += "</div>", e += "</accordion>", e += "</div>"
    }, iCn3DUI.prototype.setMenu6_base = function() {
        var e = "",
            t = "<li><a href='";
        return e += "<ul class='icn3d-mn'>", e += t + this.baseUrl + "icn3d/docs/icn3d_about.html' target='_blank'>About iCn3D<span style='font-size:0.9em'> " + this.REVISION + "</span></a></li>", e += t + this.baseUrl + "icn3d/docs/icn3d_help.html' target='_blank'>Help Doc</a></li>", e += t + this.baseUrl + "icn3d/icn3d.html#gallery' target='_blank'>Gallery</a></li>", e += "<li><span>Web APIs</span>", e += "<ul>", e += t + this.baseUrl + "icn3d/icn3d.html#HowToUse' target='_blank'>How to Embed</a></li>", e += t + this.baseUrl + "icn3d/icn3d.html#parameters' target='_blank'>URL Parameters</a></li>", e += t + this.baseUrl + "icn3d/icn3d.html#commands' target='_blank'>Commands</a></li>", e += "</ul>", e += "</li>", e += t + "https://github.com/ncbi/icn3d' target='_blank'>Source Code</a></li>", e += "<li>-</li>", e += "<li><span>Transform Hints</span>", e += "<ul>", e += "<li><span>Rotate</span>", e += "<ul>", e += "<li>Left Mouse</li>", e += "<li>Key l: Left</li>", e += "<li>Key j: Right</li>", e += "<li>Key i: Up</li>", e += "<li>Key m: Down</li>", e += "<li>Shift + Key l: Left 90&deg;</li>", e += "<li>Shift + Key j: Right 90&deg;</li>", e += "<li>Shift + Key i: Up 90&deg;</li>", e += "<li>Shift + Key m: Down 90&deg;</li>", e += "</ul>", e += "</li>", e += "<li><span>Zoom</span>", e += "<ul>", e += "<li>Middle Mouse</li>", e += "<li>Key z: Zoom in</li>", e += "<li>Key x: Zoom out</li>", e += "</ul>", e += "</li>", e += "<li><span>Translate</span>", e += "<ul>", e += "<li>Right Mouse</li>", e += "</ul>", e += "</li>", e += "</ul>", e += "</li>", e += t + this.baseUrl + "icn3d/icn3d.html#HowToUseStep5' target='_blank'>Selection Hints</a></li>", e += "<li><br/></li>", e += "</ul>"
    }, iCn3DUI.prototype.setLogWindow = function() {
        var e = "";
        return e += this.divStr + "cmdlog' style='float:left; margin-top: -5px; width: 100%;'>", e += "<textarea id='" + this.pre + "logtext' rows='2' style='width: 100%; height: " + this.CMD_HEIGHT + "px; padding: 0px; border: 0px; background-color: " + this.GREYD + ";'></textarea>", e += "</div>"
    }, iCn3DUI.prototype.setAdvanced = function(e) {
        var t = void 0 === e ? "" : e,
            i = this.divStr + "dl_advanced" + t + "'>";
        return i += "<table width='500'><tr><td valign='top'><table cellspacing='0'>", i += "<tr><td><b>Select:</b></td><td>" + this.inputTextStr + "id='" + this.pre + "command" + t + "' placeholder='$[structures].[chains]:[residues]@[atoms]' size='60'></td></tr>", i += "<tr><td><b>Name:</b></td><td>" + this.inputTextStr + "id='" + this.pre + "command_name" + t + "' placeholder='my_selection' size='60'></td></tr>", i += "<tr><td colspan='2' align='left'>&nbsp;&nbsp;&nbsp;" + this.buttonStr + "command_apply" + t + "'><b>Save Selection to Defined Sets</b></button></td></tr>", i += "</table></td>", i += "</tr>", i += "<tr><td>", i += 'Specification Tips: <div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + this.pre + "specguide" + t + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + this.pre + "specguide" + t + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>', i += this.divStr + "specguide" + t + "' style='display:none; width:500px' class='icn3d-box'>", i += '<b>Specification:</b> In the selection "$1HHO,4N7N.A,B,C:5-10,KRDE,chemicals@CA,C":', i += '<ul><li>"$1HHO,4N7N" uses "$" to indicate structure selection.<br/>', i += '<li>".A,B,C" uses "." to indicate chain selection.<br/>', i += '<li>":5-10,KRDE,chemicals" uses the colon ":" to indicate residue selection. Residue selection could be residue number (5-10), one-letter IUPAC abbreviations (KRDE), or predefined names: "proteins", "nucleotides", "chemicals", "ions", and "water". IUPAC abbreviations can be written either as a contiguous string (e.g., ":KRDE"), in order to find all instances of that sequence in the structure, or they can be separated by commas (e.g., ":K,R,D,E") to select all residues of a given type in the structure (in the latter case, select all Lysine, Arginine, Aspartic Acid, and Glutamic Acid in the structure).<br/>', i += '<li>"@CA,C" uses "@" to indicate atom selection.<br/>', i += '<li>Partial definition is allowed, e.g., ":1-10" selects all residue IDs 1-10 in all chains.<br/>', i += '<li>Different selections can be unioned (with "<b>or</b>", default), intersected (with "<b>and</b>"), or negated (with "<b>not</b>"). For example, ":1-10 or :K" selects all residues 1-10 and all Lys residues. ":1-10 and :K" selects all Lys residues in the range of residue number 1-10. ":1-10 or not :K" selects all residues 1-10, which are not Lys residues.<br/>', i += '<li>The wild card character "X" or "x" can be used to represent any character.', i += "</ul>", i += "<b>Set Operation:</b>", i += '<ul><li>Users can select multiple sets in the menu "Select > Defined Sets".<br/>', i += '<li>Different sets can be unioned (with "<b>or</b>", default), intersected (with "<b>and</b>"), or negated (with "<b>not</b>"). For example, if the "Defined Sets" menu has four sets ":1-10", ":11-20", ":5-15", and ":7-8", the command "saved atoms :1-10 or :11-20 and :5-15 not :7-8" unions all residues 1-10 and 11-20 to get the residues 1-20, then intersects with the residues 5-15 to get the residues 5-15, then exclude the residues 7-8 to get the final residues 5-6 and 9-15.</ul>', i += "<b>Full commands in url or command window:</b>", i += "<ul><li>Select without saving the set: select $1HHO,4N7N.A,B,C:5-10,KRDE,chemicals@CA,C<br/>", i += "<li>Select and save: select $1HHO,4N7N.A,B,C:5-10,KRDE,chemicals@CA,C | name my_name</ul>", i += "</div>", i += "</td></tr></table>", i += "</div>"
    }, iCn3DUI.prototype.setDialogs = function() {
        var e = this,
            t = "",
            i = "<option value=";
        t += "\x3c!-- dialog will not be part of the form --\x3e", t += e.divStr + "alldialogs' class='icn3d-hidden icn3d-dialog'>", t += e.divStr + "dl_2ddgm' class='icn3d-dl_2ddgm'>", t += "</div>", void 0 === e.cfg.align && void 0 === e.cfg.chainalign && !e.bRealign || (t += e.divStr + "dl_alignment' style='background-color:white;'>", t += e.divStr + "alignseqguide_wrapper'><br>" + e.setAlignSequenceGuide() + "</div>", t += e.divStr + "dl_sequence2' class='icn3d-dl_sequence'>", t += "</div>", t += "</div>"), t += e.divStr + "dl_definedsets'>", t += e.divStr + "dl_setsmenu'>", t += "<b>Defined Sets:</b> <br/>", t += "<select id='" + e.pre + "atomsCustom' multiple size='6' style='min-width:130px;'>", t += "</select>", t += "<div style='margin: 6px 0 6px 0;'>" + e.buttonStr + "deletesets'><b>Delete Selected Sets</b></button></div>", t += '        <b>Set Operations</b>: <div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_command_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_command_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div><br>', t += "</div>", t += e.divStr + "dl_command' style='display:none;'>", t += e.divStr + "dl_setoperations'>", t += "<label for='" + e.pre + "setOr'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setOr' checked> Union (or) </label><br/>", t += "<label for='" + e.pre + "setAnd'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setAnd'> Intersection (and) </label><br/>", t += "<label for='" + e.pre + "setNot'>" + e.inputRadioStr + "name='" + e.pre + "setOperation' id='" + e.pre + "setNot'> Exclusion (not) </label>", t += "</div><br>", t += e.setAdvanced(), t += "</div>", t += "</div>", t += e.setAdvanced(2), t += e.divStr + "dl_mmtfid'>", t += "MMTF ID: " + e.inputTextStr + "id='" + e.pre + "mmtfid' value='1TUP' size=8> ", t += e.buttonStr + "reload_mmtf'>Load</button>", t += "</div>", t += e.divStr + "dl_pdbid'>", t += "PDB ID: " + e.inputTextStr + "id='" + e.pre + "pdbid' value='1TUP' size=8> ", t += e.buttonStr + "reload_pdb'>Load</button>", t += "</div>", t += e.divStr + "dl_opmid'>", t += "<a href='https://opm.phar.umich.edu' target='_blank'>Orientations of Proteins in Membranes(OPM)</a> PDB ID: " + e.inputTextStr + "id='" + e.pre + "opmid' value='6JXR' size=8> ", t += e.buttonStr + "reload_opm'>Load</button>", t += "</div>", t += e.divStr + "dl_pdbfile'>", t += 'Note: Several PDB files could be concatenated into a single PDB file. Use the line "ENDMDL" to separate PDB files.<br><br>', t += "PDB File: " + e.inputFileStr + " id='" + e.pre + "pdbfile' size=8> ", t += e.buttonStr + "reload_pdbfile'>Load</button>", t += "</div>", t += e.divStr + "dl_rescolorfile'>", t += '<div style="width:450px;">The custom JSON file on residue colors has the following format for proteins ("ALA" and "ARG") and nucleotides ("G" and "A"):<br>', t += '{"ALA":"#C8C8C8", "ARG":"#145AFF", ..., "G":"#008000", "A":"#6080FF", ...}</div><br>', t += "Residue Color File: " + e.inputFileStr + "id='" + e.pre + "rescolorfile' size=8> ", t += e.buttonStr + "reload_rescolorfile'>Load</button>", t += "</div>", t += e.divStr + "dl_customcolor'>", t += " <input type='hidden' id='" + e.pre + "customcolor_chainid' value=''>", t += '<div style="width:450px;">The custom file for the structure has two columns separated by space or tab: ', t += 'residue number, and score in the range of 0-100. If you click "Custom Color" button, ', t += 'scores 0 and 100 mean blue and red, respectively. If you click "Custom Tube", ', t += 'the selected residues will be displayed in a style similar to "B-factor Tube".</div><br>', t += "Custom File: " + e.inputFileStr + "id='" + e.pre + "cstcolorfile' size=8> ", t += e.buttonStr + "reload_customcolorfile' style='margin-left:15px'>Custom Color</button>", t += e.buttonStr + "reload_customtubefile' style='margin-left:15px'>Custom Tube</button>", t += "</div>", t += e.divStr + "dl_align'>", t += "Enter the PDB IDs or MMDB IDs of two structures that have been found to be similar by <A HREF=' " + e.baseUrl + "vastplus/vastplus.cgi'>VAST+</A> : <br/><br/>ID1: " + e.inputTextStr + "id='" + e.pre + "alignid1' value='1HHO' size=8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID2: " + e.inputTextStr + "id='" + e.pre + "alignid2' value='4N7N' size=8><br/><br/>", t += e.buttonStr + "reload_align_ori'>All Matching Molecules Superposed</button>&nbsp;&nbsp;&nbsp;" + e.buttonStr + "reload_align_refined'>Invariant Substructure Superposed</button>", t += "</div>", t += e.divStr + "dl_chainalign'>", t += "Enter the PDB chain IDs in the form of pdbid_chain (e.g., 1HHO_A, case sensitive): <br/><br/>ID1: " + e.inputTextStr + "id='" + e.pre + "chainalignid1' value='1HHO_A' size=8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ID2: " + e.inputTextStr + "id='" + e.pre + "chainalignid2' value='4N7N_A' size=8><br/><br/>", t += e.buttonStr + "reload_chainalign'>Align</button><br/><br/>", t += '<div style=\'width:450px\'>(Note: To align chains in custom PDB files, you could concatenate PDB files in a single PDB file with the separation line "ENDMDL". Then load it in "Open File > PDB File" in the "File" menu and click "View Sequences & Annotations" in the "Window" menu. Finally select two chains in the sequence window and click "Realign Selection" in the "File" menu.)</div>', t += "</div>", t += e.divStr + "dl_mol2file'>", t += "Mol2 File: " + e.inputFileStr + "id='" + e.pre + "mol2file' size=8> ", t += e.buttonStr + "reload_mol2file'>Load</button>", t += "</div>", t += e.divStr + "dl_sdffile'>", t += "SDF File: " + e.inputFileStr + "id='" + e.pre + "sdffile' size=8> ", t += e.buttonStr + "reload_sdffile'>Load</button>", t += "</div>", t += e.divStr + "dl_xyzfile'>", t += "XYZ File: " + e.inputFileStr + "id='" + e.pre + "xyzfile' size=8> ", t += e.buttonStr + "reload_xyzfile'>Load</button>", t += "</div>", t += e.divStr + "dl_urlfile'>", t += "File type: ", t += "<select id='" + e.pre + "filetype'>", t += i + "'pdb' selected>pdb</option>", t += i + "'mol2'>mol2</option>", t += i + "'sdf'>sdf</option>", t += i + "'xyz'>xyz</option>", t += "</select><br/>", t += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "urlfile' size=20><br/> ", t += e.buttonStr + "reload_urlfile'>Load</button>", t += "</div>", t += e.divStr + "dl_mmciffile'>", t += "mmCIF File: " + e.inputFileStr + "id='" + e.pre + "mmciffile' value='1TUP' size=8> ", t += e.buttonStr + "reload_mmciffile'>Load</button>", t += "</div>", t += e.divStr + "dl_mmcifid'>", t += "mmCIF ID: " + e.inputTextStr + "id='" + e.pre + "mmcifid' value='1TUP' size=8> ", t += e.buttonStr + "reload_mmcif'>Load</button>", t += "</div>", t += e.divStr + "dl_mmdbid'>", t += "MMDB or PDB ID: " + e.inputTextStr + "id='" + e.pre + "mmdbid' value='1TUP' size=8> ", t += e.buttonStr + "reload_mmdb'>Load</button>", t += "</div>", t += e.divStr + "dl_blast_rep_id' style='max-width:500px;'>", t += "Enter a Sequence ID (or FASTA sequence) and the aligned Structure ID, which can be found using the <a href='https://blast.ncbi.nlm.nih.gov/Blast.cgi?PROGRAM=blastp&PAGE_TYPE=BlastSearch&DATABASE=pdb' target='_blank'>BLAST</a> search against the pdb database with the Sequence ID or FASTA sequence as input.<br><br> ", t += "<b>Sequence ID</b> (NCBI protein accession of a sequence): " + e.inputTextStr + "id='" + e.pre + "query_id' value='NP_001108451.1' size=8><br> ", t += "or FASTA sequence: <br><textarea id='" + e.pre + "query_fasta' rows='5' style='width: 100%; height: " + e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>", t += "<b>Structure ID</b> (NCBI protein accession of a chain of a 3D structure): " + e.inputTextStr + "id='" + e.pre + "blast_rep_id' value='1TSR_A' size=8><br> ", t += e.buttonStr + "reload_blast_rep_id'>Load</button>", t += "</div>", t += e.divStr + "dl_yournote'>", t += 'Your note will be saved in the HTML file when you click "File > Save Files > iCn3D PNG Image".<br><br>', t += "<textarea id='" + e.pre + "yournote' rows='5' style='width: 100%; height: " + e.LOG_HEIGHT + "px; padding: 0px; border: 0px;' placeholder='Enter your note here'></textarea><br>", t += e.buttonStr + "applyyournote'>Save</button>", t += "</div>", t += e.divStr + "dl_gi'>", t += "Protein gi: " + e.inputTextStr + "id='" + e.pre + "gi' value='1310960' size=8> ", t += e.buttonStr + "reload_gi'>Load</button>", t += "</div>", t += e.divStr + "dl_cid'>", t += "PubChem CID: " + e.inputTextStr + "id='" + e.pre + "cid' value='2244' size=8> ", t += e.buttonStr + "reload_cid'>Load</button>", t += "</div>", t += e.divStr + "dl_pngimage'>", t += "iCn3D PNG image: " + e.inputFileStr + "id='" + e.pre + "pngimage'><br/>", t += e.buttonStr + "reload_pngimage' style='margin-top: 6px;'>Load</button>", t += "</div>", t += e.divStr + "dl_state'>", t += "State file: " + e.inputFileStr + "id='" + e.pre + "state'><br/>", t += e.buttonStr + "reload_state' style='margin-top: 6px;'>Load</button>", t += "</div>", t += e.divStr + "dl_fixedversion' style='max-width:500px'>", t += "To show the original view with the archived version of iCn3D, you can choose one of the options:<br><br>", t += '1. If your Share Link URL was generated after June 30, 2020, you can paste your URL below and click "Show Originial View".<br><br>', t += "Share Link URL: " + e.inputTextStr + "id='" + e.pre + "sharelinkurl' size=60><br>", t += e.buttonStr + "reload_fixedversion'>Show Original View</button><br><br>", t += '2. If your URL was generated before June 30, 2020, you can find the archived version of iCn3D <a href=\'https://www.ncbi.nlm.nih.gov/Structure/icn3d/icn3d.html#log\' target=\'_blank\'>online</a>, e.g., "2.1.0". Then paste your Share Link URL into the browser to see the expanded full-length URL. Finally replace "full.html" with "full_2.1.0.html" in the URL.<br><br>', t += "</div>", t += e.divStr + "dl_selection'>", t += "Selection file: " + e.inputFileStr + "id='" + e.pre + "selectionfile'><br/>", t += e.buttonStr + "reload_selectionfile' style='margin-top: 6px;'>Load</button>", t += "</div>", t += e.divStr + "dl_dsn6'>", t += "<b>Note</b>: Always load a PDB file before loading DSN6 files. <br/><br/><br/>", t += "<span style='white-space:nowrap;font-weight:bold;'>2fofc contour at: <select id='" + e.pre + "dsn6sigma2fofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5' selected>1.5</option>", t += i + "'2'>2</option>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span><br/>", t += e.inputFileStr + "id='" + e.pre + "dsn6file2fofc'> " + e.buttonStr + "reload_dsn6file2fofc' style='margin-top: 6px;'>Load</button><br><br><br/>", t += "<span style='white-space:nowrap;font-weight:bold;'>fofc contour at: <select id='" + e.pre + "dsn6sigmafofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5'>1.5</option>", t += i + "'2'>2</option>", t += i + "'3' selected>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span><br/>", t += e.inputFileStr + "id='" + e.pre + "dsn6filefofc'> " + e.buttonStr + "reload_dsn6filefofc' style='margin-top: 6px;'>Load</button><br><br><br>", t += e.buttonStr + "elecmapNo4'>Remove Map</button><br>", t += "</div>", t += e.divStr + "dl_dsn6url'>", t += "<b>Note</b>: Always load a PDB file before loading DSN6 files. <br/><br/><br/>", t += "<span style='white-space:nowrap;font-weight:bold;'>2fofc contour at: <select id='" + e.pre + "dsn6sigmaurl2fofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5' selected>1.5</option>", t += i + "'2'>2</option>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span><br/>", t += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "dsn6fileurl2fofc' size=20>&nbsp;&nbsp;&nbsp;" + e.buttonStr + "reload_dsn6fileurl2fofc' style='margin-top: 6px;'>Load</button><br><br><br/>", t += "<span style='white-space:nowrap;font-weight:bold;'>fofc contour at: <select id='" + e.pre + "dsn6sigmaurlfofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5'>1.5</option>", t += i + "'2'>2</option>", t += i + "'3' selected>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span><br/>", t += "URL in the same host: " + e.inputTextStr + "id='" + e.pre + "dsn6fileurlfofc' size=20>&nbsp;&nbsp;&nbsp;" + e.buttonStr + "reload_dsn6fileurlfofc' style='margin-top: 6px;'>Load</button><br><br><br/>", t += e.buttonStr + "elecmapNo5'>Remove Map</button><br>", t += "</div>", t += e.divStr + "dl_clr'>", t += "Click in the input box to use the color picker:<br><br> ", t += "Custom Color: " + e.inputTextStr + "id='" + e.pre + "colorcustom' value='FF0000' size=8> ", t += e.buttonStr + "applycustomcolor'>Apply</button>", t += "</div>", t += e.divStr + "dl_symmetry'><br>", t += e.divNowrapStr + "Symmetry: <select id='" + e.pre + "selectSymmetry'>", t += "</select>&nbsp;&nbsp;&nbsp;", t += e.buttonStr + "applysymmetry'>Apply</button>&nbsp;&nbsp;&nbsp;", t += e.buttonStr + "clearsymmetry'>Clear</button></div>", t += "</div>", t += e.divStr + "dl_hbonds'>", t += "1. Choose interaction types and their thresholds:<br>", t += "<div class='icn3d-box'><table border=0 width=450><tr>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_hbond' checked>Hydrogen Bonds <span style='background-color:#" + e.hbondColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "hbondthreshold'>", t += i + "'3.2'>3.2</option>", t += i + "'3.3'>3.3</option>", t += i + "'3.4'>3.4</option>", t += i + "'3.5'>3.5</option>", t += i + "'3.6'>3.6</option>", t += i + "'3.7'>3.7</option>", t += i + "'3.8' selected>3.8</option>", t += i + "'3.9'>3.9</option>", t += i + "'4.0'>4.0</option>", t += i + "'4.1'>4.1</option>", t += i + "'4.2'>4.2</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_saltbridge' checked>Salt Bridge/Ionic <span style='background-color:#" + e.ionicColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "saltbridgethreshold'>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6' selected>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_contact' checked>Contacts/Interactions <span style='background-color:#" + e.contactColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "contactthreshold'>", t += i + "'3'>3</option>", t += i + "'4' selected>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "</tr>", t += "<tr>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_halogen' checked>Halogen Bonds <span style='background-color:#" + e.halogenColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "halogenthreshold'>", t += i + "'3.2'>3.2</option>", t += i + "'3.3'>3.3</option>", t += i + "'3.4'>3.4</option>", t += i + "'3.5'>3.5</option>", t += i + "'3.6'>3.6</option>", t += i + "'3.7'>3.7</option>", t += i + "'3.8' selected>3.8</option>", t += i + "'3.9'>3.9</option>", t += i + "'4.0'>4.0</option>", t += i + "'4.1'>4.1</option>", t += i + "'4.2'>4.2</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_pication' checked>&pi;-Cation <span style='background-color:#" + e.picationColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "picationthreshold'>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6' selected>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "<td style='white-space:nowrap'>" + e.inputCheckStr + "id='" + e.pre + "analysis_pistacking' checked>&pi;-Stacking <span style='background-color:#" + e.pistackingColor + "'>&nbsp;&nbsp;&nbsp;</span></td>", t += "<td>", t += e.divNowrapStr + " <select id='" + e.pre + "pistackingthreshold'>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'5.5' selected>5.5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += "</select> &#197;&nbsp;&nbsp;&nbsp;</div></td>", t += "</tr></table></div>", t += "<table border=0 width=400 cellspacing=10><tr><td>", t += e.divNowrapStr + "2. Select the first set:</div>", t += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomHbond2' multiple size='5' style='min-width:130px;'>", t += "</select></div>", t += "</td><td>", t += e.divNowrapStr + "3. Select the second set:</div>", t += "<div style='text-indent:1.1em'><select style='max-width:200px' id='" + e.pre + "atomsCustomHbond' multiple size='5' style='min-width:130px;'>", t += "</select></div>", t += "</td></tr></table>", void 0 !== e.cfg.align || void 0 !== e.cfg.chainalign ? (t += "<div>4. <b>Cross Structure Interactions</b>: <select id='" + e.pre + "crossstrucinter'>", t += i + "'1'>Yes</option>", t += i + "'0' selected>No</option>", t += "</select></div><br>", t += "<div style='text-indent:1.1em'>" + e.buttonStr + "applyhbonds'>3D Display Interactions</button></div><br>") : t += "<div>4. " + e.buttonStr + "applyhbonds'>3D Display Interactions</button></div><br>", t += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondWindow'>Highlight Interactions in Table</button><span style='margin-left:30px; font-wieght:bold'>Sort Interactions on</span>: " + e.buttonStr + "sortSet1'> Set 1</button>" + e.buttonStr + "sortSet2' style='margin-left:20px'>Set 2</button></div><br>", t += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondLineGraph'>2D Interaction Graph</button> to show interactions in two lines of residue nodes</div><br>", t += "<div style='text-indent:1.1em'>" + e.buttonStr + "hbondGraph'>2D Graph (Force-Directed)</button> to show interactions with strength parameters in 0-200:</div>", t += '<div style="text-indent:1.1em"><table><tr><td>Helix or Sheet: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_ss" size="4" value="100"></td>', t += '<td>Coil or Nucleotide: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_coil" size="4" value="50"></td>', t += '<td>Disulfide Bonds: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_ssbond" size="4" value="50"></td></tr>', t += '<tr><td>Hydrogen Bonds: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_hbond" size="4" value="50"></td>', t += '<td>Salt Bridge/Ionic: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_ionic" size="4" value="50"></td>', t += '<td>Contacts: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_inter" size="4" value="25"></td></tr>', t += '<tr><td>Halogen Bonds: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_halogen" size="4" value="50"></td>', t += '<td>&pi;-Cation: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_pication" size="4" value="50"></td>', t += '<td>&pi;-Stacking: </td><td><input style="margin-left:-12px" type="text" id="' + e.pre + 'dist_pistacking" size="4" value="50"></td></tr></table></div>', t += '<div style="text-indent:1.1em">(Note: you can also adjust thresholds at #1 to add/remove interactions.)</div><br>', t += "<div style='text-indent:1.1em'>" + e.buttonStr + "areaWindow'>Buried Surface Area</button></div><br>", t += "<div>5. " + e.buttonStr + "hbondReset'>Reset</button> and select new sets</div>", t += "</div>", t += e.divStr + "dl_realign'>", t += e.divNowrapStr + "1. Select sets from two structures below <br>or use your current selection:</div><br>", t += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomRealign' multiple size='5' style='min-width:130px;'>", t += "</select></div>", t += "<div>2. " + e.buttonStr + "applyRealign'>Realign</button></div><br>", t += "</div>", t += e.divStr + "dl_allinteraction' style='background-color:white'>", t += "</div>", t += e.divStr + "dl_interactionsorted' style='background-color:white'>", t += "</div>", t += e.divStr + "dl_linegraph' style='background-color:white'>", t += e.divNowrapStr + "Hold Ctrl key to select multiple nodes/lines.&nbsp;&nbsp;&nbsp;", t += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_linegraphcolor_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_linegraphcolor_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div></div>', t += e.divStr + "dl_linegraphcolor' style='display:none;'>", t += e.divNowrapStr + '<span style="margin-left:33px; color:#00FF00; font-weight:bold">Green</span>: H-Bonds; ', t += '<span style="color:#00FFFF; font-weight:bold">Cyan</span>: Salt Bridge/Ionic; ', t += '<span style="font-weight:bold">Grey</span>: contacts</div>', t += e.divNowrapStr + '<span style="margin-left:33px; color:#FF00FF; font-weight:bold">Magenta</span>: Halogen Bonds; ', t += '<span style="color:#FF0000; font-weight:bold">Red</span>: &pi;-Cation; ', t += '<span style="color:#0000FF; font-weight:bold">Blue</span>: &pi;-Stacking</div>', t += "</div>", e.linegraphid = e.pre + "linegraph", t += e.divNowrapStr + '<button class="icn3d-commandTitle" style="-webkit-appearance:button; height:24px;background-color:#DDDDDD;" id="' + e.linegraphid + '_svg">SVG</button>&nbsp;&nbsp;', t += '<button class="icn3d-commandTitle" style="-webkit-appearance:button; height:24px;background-color:#DDDDDD;" id="' + e.linegraphid + '_png">PNG</button>&nbsp;&nbsp;&nbsp;&nbsp;', t += "<b>Scale</b>: <select id='" + e.linegraphid + "_scale'>", t += i + "'0.1'>0.1</option>", t += i + "'0.2'>0.2</option>", t += i + "'0.4'>0.4</option>", t += i + "'0.6'>0.6</option>", t += i + "'0.8'>0.8</option>", t += i + "'1' selected>1</option>", t += i + "'2'>2</option>", t += i + "'4'>4</option>", t += i + "'6'>6</option>", t += i + "'8'>8</option>", t += i + "'10'>10</option>", t += "</select></div><br>", t += '<div id="' + e.pre + 'linegraphDiv"></div>', t += "</div>", t += e.divStr + "dl_elecmap2fofc'>", t += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "sigma2fofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5' selected>1.5</option>", t += i + "'2'>2</option>", t += i + "'3'>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applymap2fofc'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "elecmapNo2'>Remove Map</button></span>", t += "</div>", t += e.divStr + "dl_elecmapfofc'>", t += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "sigmafofc'>", t += i + "'0'>0</option>", t += i + "'0.5'>0.5</option>", t += i + "'1'>1</option>", t += i + "'1.5'>1.5</option>", t += i + "'2'>2</option>", t += i + "'3' selected>3</option>", t += i + "'4'>4</option>", t += i + "'5'>5</option>", t += i + "'6'>6</option>", t += i + "'7'>7</option>", t += i + "'8'>8</option>", t += i + "'9'>9</option>", t += i + "'10'>10</option>", t += "</select> &sigma;</span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applymapfofc'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "elecmapNo3'>Remove Map</button></span>", t += "</div>", t += e.divStr + "dl_emmap'>", t += "<span style='white-space:nowrap;font-weight:bold;'>Contour at: <select id='" + e.pre + "empercentage'>", t += i + "'0'>0</option>", t += i + "'10'>10</option>", t += i + "'20'>20</option>", t += i + "'30' selected>30</option>", t += i + "'40'>40</option>", t += i + "'50'>50</option>", t += i + "'60'>60</option>", t += i + "'70'>70</option>", t += i + "'80'>80</option>", t += i + "'90'>90</option>", t += i + "'100'>100</option>", t += "</select> % of maximum EM values</span><br><span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "applyemmap'>Display</button></span> <span style='white-space:nowrap; margin-left:30px;'>" + e.buttonStr + "emmapNo2'>Remove EM Map</button></span>", t += "</div>", t += e.divStr + "dl_aroundsphere'>", t += e.divNowrapStr + "1. Select the first set:</div>", t += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomSphere2' multiple size='3' style='min-width:130px;'>", t += "</select></div><br>", t += e.divNowrapStr + "2. Sphere with a radius: " + e.inputTextStr + "id='" + e.pre + "radius_aroundsphere' value='4' size='2'> &#197;</div><br/>", t += e.divNowrapStr + "3. Select the second set to apply the sphere:</div>", t += "<div style='text-indent:1.1em'><select id='" + e.pre + "atomsCustomSphere' multiple size='3' style='min-width:130px;'>", t += "</select></div><br>", t += e.divNowrapStr + "4. " + e.buttonStr + "applypick_aroundsphere'>Display</button> the sphere around the first set of atoms</div><br>", t += "<div style='text-indent:1.1em'>" + e.buttonStr + "sphereExport'>Save</button> interacting/contacting residue pairs in a file</div>", t += "</div>", t += e.divStr + "dl_adjustmem'>", t += "<b>Note</b>: The membranes are parallel to the X-Y plane. The center of the membranes is at Z = 0. <br/><br/>", t += e.divNowrapStr + "1. Extracellular membrane Z-axis position: " + e.inputTextStr + "id='" + e.pre + "extra_mem_z' value='' size='3'> &#197;</div><br/>", t += e.divNowrapStr + "2. intracellular membrane Z-axis position: " + e.inputTextStr + "id='" + e.pre + "intra_mem_z' value='' size='3'> &#197;</div><br/>", t += e.divNowrapStr + "3. " + e.buttonStr + "apply_adjustmem'>Display</button> the adjusted membranes</div><br>", t += "</div>", t += e.divStr + "dl_selectplane'>", t += "<b>Note</b>: The membranes are parallel to the X-Y plane. The center of the membranes is at Z = 0. <br/><br/>", t += e.divNowrapStr + "1. Z-axis position of the first X-Y plane: " + e.inputTextStr + "id='" + e.pre + "selectplane_z1' value='15' size='3'> &#197;</div><br/>", t += e.divNowrapStr + "2. Z-axis position of the second X-Y plane: " + e.inputTextStr + "id='" + e.pre + "selectplane_z2' value='-15' size='3'> &#197;</div><br/>", t += e.divNowrapStr + "3. " + e.buttonStr + "apply_selectplane'>Save</button> the region between the planes to Defined Sets</div><br>", t += "</div>", t += e.divStr + "dl_addlabel'>", t += "1. Text: " + e.inputTextStr + "id='" + e.pre + "labeltext' value='Text' size=4><br/>", t += "2. Size: " + e.inputTextStr + "id='" + e.pre + "labelsize' value='18' size=4 maxlength=2><br/>", t += "3. Color: " + e.inputTextStr + "id='" + e.pre + "labelcolor' value='ffff00' size=4><br/>", t += "4. Background: " + e.inputTextStr + "id='" + e.pre + "labelbkgd' value='cccccc' size=4><br/>", e.isMobile() ? t += e.spanNowrapStr + "5. Touch TWO atoms</span><br/>" : t += e.spanNowrapStr + '5. Pick TWO atoms while holding "Alt" key</span><br/>', t += e.spanNowrapStr + "6. " + e.buttonStr + "applypick_labels'>Display</button></span>", t += "</div>", t += e.divStr + "dl_addlabelselection'>", t += "1. Text: " + e.inputTextStr + "id='" + e.pre + "labeltext2' value='Text' size=4><br/>", t += "2. Size: " + e.inputTextStr + "id='" + e.pre + "labelsize2' value='18' size=4 maxlength=2><br/>", t += "3. Color: " + e.inputTextStr + "id='" + e.pre + "labelcolor2' value='ffff00' size=4><br/>", t += "4. Background: " + e.inputTextStr + "id='" + e.pre + "labelbkgd2' value='cccccc' size=4><br/>", t += e.spanNowrapStr + "5. " + e.buttonStr + "applyselection_labels'>Display</button></span>", t += "</div>", t += e.divStr + "dl_distance'>", e.isMobile() ? t += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : t += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>', t += e.spanNowrapStr + "2. Color: " + e.inputTextStr + "id='" + e.pre + "distancecolor' value='ffff00' size=4><br/>", t += e.spanNowrapStr + "3. " + e.buttonStr + "applypick_measuredistance'>Display</button></span>", t += "</div>", t += e.divStr + "dl_stabilizer'>", e.isMobile() ? t += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : t += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>', t += e.spanNowrapStr + "2. Color: " + e.inputTextStr + "id='" + e.pre + "stabilizercolor' value='ffffff' size=4><br/>", t += e.spanNowrapStr + "3. " + e.buttonStr + "applypick_stabilizer'>Add</button></span>", t += "</div>", t += e.divStr + "dl_stabilizer_rm'>", e.isMobile() ? t += e.spanNowrapStr + "1. Touch TWO atoms</span><br/>" : t += e.spanNowrapStr + '1. Pick TWO atoms while holding "Alt" key</span><br/>', t += e.spanNowrapStr + "2. " + e.buttonStr + "applypick_stabilizer_rm'>Remove</button></span>", t += "</div>", t += e.divStr + "dl_thickness'>", t += e.setThicknessHtml("3dprint"), t += "</div>", t += e.divStr + "dl_thickness2'>", t += e.setThicknessHtml("style"), t += "</div>", t += e.divStr + "dl_addtrack'>", t += " <input type='hidden' id='" + e.pre + "track_chainid' value=''>", t += e.divStr + "dl_addtrack_tabs' style='border:0px;'>", t += "<ul>", t += "<li><a href='#" + e.pre + "tracktab1'>NCBI gi/Accession</a></li>", t += "<li><a href='#" + e.pre + "tracktab2'>FASTA</a></li>", t += "<li><a href='#" + e.pre + "tracktab2b'>FASTA Alignment</a></li>", t += "<li><a href='#" + e.pre + "tracktab3'>BED File</a></li>", t += "<li><a href='#" + e.pre + "tracktab4'>Custom</a></li>", t += "<li><a href='#" + e.pre + "tracktab5'>Current Selection</a></li>", t += "</ul>", t += e.divStr + "tracktab1'>", t += "NCBI gi/Accession: " + e.inputTextStr + "id='" + e.pre + "track_gi' placeholder='gi' size=16> <br><br>", t += e.buttonStr + "addtrack_button1'>Add Track</button>", t += "</div>", t += e.divStr + "tracktab2'>", t += "FASTA Title: " + e.inputTextStr + "id='" + e.pre + "fasta_title' placeholder='track title' size=16> <br><br>", t += "FASTA sequence: <br><textarea id='" + e.pre + "track_fasta' rows='5' style='width: 100%; height: " + 2 * e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>", t += e.buttonStr + "addtrack_button2'>Add Track</button>", t += "</div>", t += e.divStr + "tracktab2b'>", t += "<div style='width:600px'>The full protein sequences with gaps are listed one by one. The sequence of the structure is listed at the top. If there are non-gap residues (e.g., from RefSeq) outside of the sequence of the structure, please remove them. Each sequence has a title line starting with \">\".</div><br>", t += "<b>FASTA alignment sequences</b>:<br>", t += "<textarea id='" + e.pre + "track_fastaalign' rows='5' style='width: 100%; height: " + 2 * e.LOG_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>", t += "Position of the first residue in Sequences & Annotations window: " + e.inputTextStr + "id='" + e.pre + "fasta_startpos' value='1' size=2> <br><br>", t += "Color Sequence by: <select id='" + e.pre + "colorseqby'>", t += i + "'identity' selected>Identity</option>", t += i + "'conservation'>Conservation</option>", t += "</select> <br><br>", t += e.buttonStr + "addtrack_button2b'>Add Track(s)</button>", t += "</div>", t += e.divStr + "tracktab3'>", t += "BED file: " + e.inputFileStr + "id='" + e.pre + "track_bed' size=16> <br><br>", t += e.buttonStr + "addtrack_button3'>Add Track</button>", t += "</div>", t += e.divStr + "tracktab4'>", t += "Track Title: " + e.inputTextStr + "id='" + e.pre + "track_title' placeholder='track title' size=16> <br><br>", t += 'Track Text (e.g., "152 G, 155-156 RR" defines a character "G" at the position 152 and two continuous characters "RR" at positions from 155 to 156. The starting position is 1): <br>', t += "<textarea id='" + e.pre + "track_text' rows='5' style='width: 100%; height: " + 2 * e.MENU_HEIGHT + "px; padding: 0px; border: 0px;'></textarea><br><br>", t += e.buttonStr + "addtrack_button4'>Add Track</button>", t += "</div>", t += e.divStr + "tracktab5'>", t += "Track Title: " + e.inputTextStr + "id='" + e.pre + "track_selection' placeholder='track title' size=16> <br><br>", t += e.buttonStr + "addtrack_button5'>Add Track</button>", t += "</div>", t += "</div>", t += "</div>", t += e.divStr + "dl_saveselection'>";
        var n = e.icn3d ? Object.keys(e.icn3d.defNames2Atoms).length : 1;
        return t += "Name: " + e.inputTextStr + "id='" + e.pre + "seq_command_name' value='seq_" + n + "' size='5'> <br>", t += "<button style='white-space:nowrap;' id='" + e.pre + "seq_saveselection'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + e.pre + "seq_clearselection'>Clear</button><br/><br/>", t += "</div>", t += e.divStr + "dl_copyurl' style='width:500px;'>", t += 'Please copy one of the URLs below. They show the same result.<br>(To add a title to share link, click "Windows > Your Note" and click "File > Share Link" again.)<br><br>', t += "Original URL with commands: <br><textarea id='" + e.pre + "ori_url' rows='4' style='width:100%'></textarea><br><br>", t += "Short URL: (To replace this URL, send a pull request to update share.html at <a href='https://github.com/ncbi/icn3d' target='_blank'>iCn3D GitHub</a>)<br>" + e.inputTextStr + "id='" + e.pre + "short_url' value='' style='width:100%'><br><br>", t += "</div>", t += e.divStr + "dl_selectannotations' class='icn3d-annotation' style='background-color:white;'>", t += e.divStr + "dl_annotations_tabs'>", t += e.divStr + "dl_anno_view_tabs' style='border:0px; height:33px;'>", t += "<ul>", t += "<li><a href='#" + e.pre + "anno_tmp1' id='" + e.pre + "anno_summary'>Summary</a></li>", t += "<li><a href='#" + e.pre + "anno_tmp2' id='" + e.pre + "anno_details'>Details</a></li>", t += "</ul>", t += e.divStr + "anno_tmp1'>", t += "</div>", t += e.divStr + "anno_tmp2'>", t += "</div>", t += "</div>", t += "<div class='icn3d-box' style='width:520px;'><b>Annotations:&nbsp;</b><br><table border=0><tr>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_all'>All&nbsp;&nbsp;</td>", t += "<td style='min-width:130px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_cdd' checked>Conserved Domains&nbsp;&nbsp;</td>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_clinvar'>ClinVar&nbsp;&nbsp;</td>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_binding'>Functional Sites&nbsp;&nbsp;</td>", t += "</tr><tr>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_custom'>Custom&nbsp;&nbsp;</td>", t += "<td style='min-width:130px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_3dd'>3D Domains&nbsp;&nbsp;</td>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_snp'>SNPs&nbsp;&nbsp;</td>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_interact'>Interactions&nbsp;&nbsp;</td>", t += "<td></td>", t += "</tr><tr>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_ssbond'>Disulfide Bonds&nbsp;&nbsp;</td>", t += "<td style='min-width:110px;'>" + e.inputCheckStr + "id='" + e.pre + "anno_crosslink'>Cross-Linkages&nbsp;&nbsp;</td>", void 0 !== e.cfg.opmid ? t += "<td style='min-width:110px;'><span id='" + e.pre + "anno_transmemli'>" + e.inputCheckStr + "id='" + e.pre + "anno_transmem'>Transmembrane&nbsp;&nbsp;</span></td>" : t += "<td style='min-width:110px;'><span id='" + e.pre + "anno_transmemli' style='display:none'>" + e.inputCheckStr + "id='" + e.pre + "anno_transmem'>Transmembrane&nbsp;&nbsp;</span></td>", t += "<td></td>", t += "</tr></table></div>", t += "<button style='white-space:nowrap; margin-left:5px;' id='" + e.pre + "showallchains'>Show All Chains</button><br>", t += e.divStr + "seqguide_wrapper' style='display:none'><br>" + e.setSequenceGuide("2") + "</div>", t += "</div><br/><hr><br>", t += e.divStr + "dl_annotations'>", t += "</div>", t += "</div>", t += e.divStr + "dl_graph' style='background-color:white;'>", e.svgid = e.pre + "icn3d_viz", t += "<style>", t += "#" + e.svgid + " svg { border: 1px solid; font: 13px sans-serif; text-anchor: end; }", t += "#" + e.svgid + " .node { stroke: #eee; stroke-width: 1.5px; }", t += ".node .selected { stroke: " + e.ORANGE + "; }", t += ".link { stroke: #999; stroke-opacity: 0.6; }", t += "</style>", t += e.divNowrapStr + "<b>Zoom</b>: mouse wheel; &nbsp;&nbsp;&nbsp; <b>Move</b>: left button; &nbsp;&nbsp;&nbsp; <b>Select Multiple Nodes</b>: Ctrl Key and drag an Area&nbsp;&nbsp;&nbsp;", t += '<div style="width:20px; margin-top:6px; display:inline-block;"><span id="' + e.pre + 'dl_svgcolor_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + e.pre + 'dl_svgcolor_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div></div>', t += e.divStr + "dl_svgcolor' style='display:none;'>", t += e.divNowrapStr + '<span style="margin-left:33px">Click "View > H-Bonds & Interactions" to adjust parameters and relaunch the graph</span></div>', t += e.divNowrapStr + '<span style="margin-left:33px; color:#00FF00; font-weight:bold">Green</span>: H-Bonds; ', t += '<span style="color:#00FFFF; font-weight:bold">Cyan</span>: Salt Bridge/Ionic; ', t += '<span style="font-weight:bold">Grey</span>: contacts; ', t += '<span style="color:' + e.ORANGE + '; font-weight:bold">Orange</span>: disulfide bonds</div>', t += e.divNowrapStr + '<span style="margin-left:33px; color:#FF00FF; font-weight:bold">Magenta</span>: Halogen Bonds; ', t += '<span style="color:#FF0000; font-weight:bold">Red</span>: &pi;-Cation; ', t += '<span style="color:#0000FF; font-weight:bold">Blue</span>: &pi;-Stacking</div>', t += "</div>", t += e.divNowrapStr + '<button class="icn3d-commandTitle" style="-webkit-appearance:button; height:24px;background-color:#DDDDDD;" id="' + e.svgid + '_svg">SVG</button>&nbsp;&nbsp;', t += '<button class="icn3d-commandTitle" style="-webkit-appearance:button; height:24px;background-color:#DDDDDD;" id="' + e.svgid + '_png">PNG</button>', t += "&nbsp;&nbsp;&nbsp;<b>Force on Nodes</b>: <select id='" + e.svgid + "_force'>", t += i + "'0'>No</option>", t += i + "'1'>X-axis</option>", t += i + "'2'>Y-axis</option>", t += i + "'3'>Circle</option>", t += i + "'4' selected>Random</option>", t += "</select>", t += "&nbsp;&nbsp;&nbsp;<b>Label Size</b>: <select id='" + e.svgid + "_label'>", t += i + "'icn3d-node-text0'>No</option>", t += i + "'icn3d-node-text4'>4px</option>", t += i + "'icn3d-node-text8' selected>8px</option>", t += i + "'icn3d-node-text12'>12px</option>", t += i + "'icn3d-node-text16'>16px</option>", t += i + "'icn3d-node-text24'>24px</option>", t += i + "'icn3d-node-text32'>32px</option>", t += "</select>", t += "&nbsp;&nbsp;&nbsp;<b>Internal Edges</b>: <select id='" + e.svgid + "_hideedges'>", t += i + "'1' selected>Hide</option>", t += i + "'0'>Show</option>", t += "</select>", t += "</div>", t += '<svg id="' + e.svgid + '" style="margin-top:6px;"></svg>', t += "</div>", t += e.divStr + "dl_area'>", t += "Solvent Accessible Surface Area (SASA) calculated using the <a href='https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0008140' target='_blank'>EDTSurf algorithm</a>: <br>", t += '(0-20% out is considered "in". 50-100% out is considered "out".)<br><br>', t += "<b>Toal</b>: " + e.inputTextStr + "id='" + e.pre + "areavalue' value='' size='10'> &#8491;<sup>2</sup><br><br>", t += "<div id='" + e.pre + "areatable' style='max-height:400px; overflow:auto'></div>", t += "</div>", t += e.divStr + "dl_colorbyarea'>", t += "<div style='width:500px'>Color each residue based on the percentage of solvent accessilbe surface area. The color ranges from blue, to white, to red for a percentage of 0, 35 (variable), and 100, respectively.</div><br>", t += "<b>Middle Percentage (White)</b>: " + e.inputTextStr + "id='" + e.pre + "midpercent' value='35' size='10'>% <br><br>", t += "<button style='white-space:nowrap;' id='" + e.pre + "applycolorbyarea'>Color</button><br/><br/>", t += "</div>", t += e.divStr + "dl_rmsd'>", t += "<br><b>Alignment RMSD</b>: " + e.inputTextStr + "id='" + e.pre + "realignrmsd' value='35' size='10'>&#8491;<br><br>", t += "</div>", t += e.divStr + "dl_buriedarea'>", t += "</div>", t += e.divStr + "dl_propbypercentout'>", t += "<div style='width:400px'>Select residue based on the percentage of solvent accessilbe surface area. The values are in the range of 0-100.</div><br>", t += "<b>Min Percentage</b>: " + e.inputTextStr + "id='" + e.pre + "minpercentout' value='0' size='10'>% <br>", t += "<b>Max Percentage</b>: " + e.inputTextStr + "id='" + e.pre + "maxpercentout' value='100' size='10'>% <br>", t += "<button style='white-space:nowrap;' id='" + e.pre + "applypropbypercentout'>Apply</button><br/><br/>", t += "</div>", t += e.divStr + "dl_propbybfactor'>", t += "<div style='width:400px'>Select residue based on B-factor. The values are in the range of 0-100.</div><br>", t += "<b>Min B-factor</b>: " + e.inputTextStr + "id='" + e.pre + "minbfactor' value='0' size='10'>% <br>", t += "<b>Max B-factor</b>: " + e.inputTextStr + "id='" + e.pre + "maxbfactor' value='100' size='10'>% <br>", t += "<button style='white-space:nowrap;' id='" + e.pre + "applypropbybfactor'>Apply</button><br/><br/>", t += "</div>", t += "</div>", t += "\x3c!--/form--\x3e"
    }, iCn3DUI.prototype.setThicknessHtml = function(e) {
        var t = this,
            i = "",
            n = "3dprint" == e ? "1" : "0.1",
            o = "3dprint" == e ? "1.2" : "0.3",
            r = "3dprint" == e ? "0.8" : "0.4",
            s = "3dprint" == e ? "1" : "0.2",
            a = "3dprint" == e ? "1" : "0.2",
            c = "3dprint" == e ? "2" : "1.3",
            d = "3dprint" == e ? "1.4" : "0.8",
            l = "3dprint" == e ? "0.6" : "0.3";
        return i += "<b>Line Radius</b>: " + t.inputTextStr + "id='" + t.pre + "linerad_" + e + "' value='" + n + "' size=4>&nbsp;&nbsp;&nbsp;(for stabilizers, hydrogen bonds, distance lines, default 0.1)<br/>", i += "<b>Coil Radius</b>: " + t.inputTextStr + "id='" + t.pre + "coilrad_" + e + "' value='" + o + "' size=4>&nbsp;&nbsp;&nbsp;(for coils, default 0.3)<br/>", i += "<b>Stick Radius</b>: " + t.inputTextStr + "id='" + t.pre + "stickrad_" + e + "' value='" + r + "' size=4>&nbsp;&nbsp;&nbsp;(for sticks, default 0.4)<br/>", i += "<b>Trace Radius</b>: " + t.inputTextStr + "id='" + t.pre + "tracerad_" + e + "' value='" + s + "' size=4>&nbsp;&nbsp;&nbsp;(for C alpha trace, O3' trace, default 0.2)<br/>", i += "<b>Ribbon Thickness</b>: " + t.inputTextStr + "id='" + t.pre + "ribbonthick_" + e + "' value='" + a + "' size=4>&nbsp;&nbsp;&nbsp;(for helix and sheet ribbons, nucleotide ribbons, default 0.2)<br/>", i += "<b>Protein Ribbon Width</b>: " + t.inputTextStr + "id='" + t.pre + "prtribbonwidth_" + e + "' value='" + c + "' size=4>&nbsp;&nbsp;&nbsp;(for helix and sheet ribbons, default 1.3)<br/>", i += "<b>Nucleotide Ribbon Width</b>: " + t.inputTextStr + "id='" + t.pre + "nucleotideribbonwidth_" + e + "' value='" + d + "' size=4>&nbsp;&nbsp;&nbsp;(for nucleotide ribbons, default 0.8)<br/>", i += "<b>Ball Scale</b>: " + t.inputTextStr + "id='" + t.pre + "ballscale_" + e + "' value='" + l + "' size=4>&nbsp;&nbsp;&nbsp;(for styles 'Ball and Stick' and 'Dot', default 0.3)<br/>", i += t.spanNowrapStr + "" + t.buttonStr + "apply_thickness_" + e + "'>Preview</button></span>"
    }, iCn3DUI.prototype.setSequenceGuide = function(e, t) {
        var i = this,
            n = "",
            o = i.icn3d ? Object.keys(i.icn3d.defNames2Atoms).length : 1;
        (t ? n += i.divStr + "seqguide" + e + "'>" : (n += '<div style="width:20px; margin-left:3px; display:inline-block;"><span id="' + i.pre + "seqguide" + e + '_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + i.pre + "seqguide" + e + '_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div> ', n += "<div style='min-width:200px; display:inline-block;'><b>Selection:</b> Name: " + i.inputTextStr + "id='" + i.pre + "seq_command_name" + e + "' value='seq_" + o + "' size='5'> &nbsp;&nbsp;<button style='white-space:nowrap;' id='" + i.pre + "seq_saveselection" + e + "'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + i.pre + "seq_clearselection" + e + "'>Clear</button></div><br/>", n += i.divStr + "seqguide" + e + "' style='display:none; white-space:normal;' class='icn3d-box'>"), i.isMobile()) ? n += '<b>Select Sequences:</b> touch to select, touch again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/><br/>': (n += '<b>Select on 1D sequences:</b> drag to select, drag again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/><br/>', n += "<b>Select on 2D interaction diagram:</b> click on the nodes or lines. The nodes are chains and can be united with the Ctrl key. The lines are interactions and can NOT be united. Each click on the lines selects half of the lines, i.e., select the interacting residues in one of the two chains.<br/><br/>", n += "<b>Select on 3D structures:</b> " + (i.isMobile() ? "use finger to pick" : 'hold "Alt" and use mouse to pick') + ', click the second time to deselect, hold "Ctrl" to union selection, hold "Shift" to select a range, press the up/down arrow to switch among atom/residue/strand/chain/structure, click "Save Selection" to save the current selection.<br/><br/>', n += '<b>Save the current selection</b> (either on 3D structure, 2D interactions, or 1D sequence): open the menu "Select -> Save Selection", specify the name and description for the selection, and click "Save".<br/><br/>');
        return n += "<b>Residue labeling:</b> standard residue with coordinates: UPPER case letter; nonstandard residue with coordinates: the first UPPER case letter plus a period except that water residue uses the letter 'O'; residue missing coordinates: lower case letter." + (i.isMac() && !i.isMobile() ? "<br/><br/><b>Turn on scroll bar:</b> System preferences -> General -> show scroll bars -> check Always" : "") + "<br/></div>"
    }, iCn3DUI.prototype.setAlignSequenceGuide = function(e, t) {
        var i = this,
            n = "",
            o = i.icn3d ? Object.keys(i.icn3d.defNames2Atoms).length : 1;
        (n += '<div style="width:20px; margin-left:3px; display:inline-block;"><span id="' + i.pre + 'alignseqguide_expand" class="ui-icon ui-icon-plus icn3d-expand icn3d-link" style="width:15px;" title="Expand"></span><span id="' + i.pre + 'alignseqguide_shrink" class="ui-icon ui-icon-minus icn3d-shrink icn3d-link" style="display:none; width:15px;" title="Shrink"></span></div> ', n += "<div style='min-width:200px; display:inline-block;''><b>Selection:</b> Name: " + i.inputTextStr + "id='" + i.pre + "alignseq_command_name' value='alseq_" + o + "' size='10'> &nbsp;&nbsp;<button style='white-space:nowrap;' id='" + i.pre + "alignseq_saveselection'>Save</button> <button style='white-space:nowrap; margin-left:20px;' id='" + i.pre + "alignseq_clearselection'>Clear</button></div><br/>", n += i.divStr + "alignseqguide' style='display:none; white-space:normal;' class='icn3d-box'>", i.isMobile()) ? n += '<b>Select Aligned Sequences:</b> touch to select, touch again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/>': (n += '<b>Select on 1D sequences:</b> drag to select, drag again to deselect, multiple selection is allowed without Ctrl key, click "Save Selection" to save the current selection.<br/><br/>', n += "<b>Select on 2D interaction diagram:</b> click on the nodes or lines. The nodes are chains and can be united with the Ctrl key. The lines are interactions and can NOT be united. Each click on the lines selects half of the lines, i.e., select the interacting residues in one of the two chains.<br/><br/>", n += "<b>Select on 3D structures:</b> " + (i.isMobile() ? "use finger to pick" : 'hold "Alt" and use mouse to pick') + ', click the second time to deselect, hold "Ctrl" to union selection, hold "Shift" to select a range, press the up/down arrow to switch among atom/residue/strand/chain/structure, click "Save Selection" to save the current selection.<br/><br/>', n += '<b>Save the current selection</b> (either on 3D structure, 2D interactions, or 1D sequence): open the menu "Select -> Save Selection", specify the name and description for the selection, and click "Save".<br/><br/>');
        return n += "<b>Residue labeling:</b> aligned residue with coordinates: UPPER case letter; non-aligned residue with coordinates: lower case letter which can be highlighted; residue missing coordinates: lower case letter which can NOT be highlighted." + (i.isMac() && !i.isMobile() ? "<br/><br/><b>Turn on scroll bar:</b> System preferences -> General -> show scroll bars -> check Always" : "") + "<br/></div>"
    }, iCn3DUI.prototype.getAlignSequencesAnnotations = function(e, t, i, n) {
        var o = this,
            r = "",
            s = 0,
            a = {};
        if (void 0 !== e)
            for (var c = 0, d = e.length; c < d; ++c) a[e[c]] = 1;
        var l = Object.keys(o.icn3d.hAtoms).length == Object.keys(o.icn3d.atoms).length && h && (void 0 === t || t);
        for (var c in l && (o.icn3d.hAtoms = {}), o.icn3d.alnChains) {
            var h = !(void 0 === e || !a.hasOwnProperty(c));
            l && (o.icn3d.hAtoms = o.icn3d.unionHash(o.icn3d.hAtoms, o.icn3d.alnChains[c]));
            var p = [],
                m = "",
                u = void 0 !== o.icn3d.alnChainsSeq[c] ? o.icn3d.alnChainsSeq[c].length : 0;
            s < u && (s = u);
            var f = c.indexOf("_"),
                g = c.substr(0, f),
                v = c.substr(f + 1);
            m += "<span class='icn3d-residueNum' title='starting residue number'>" + (void 0 !== o.icn3d.alnChainsSeq[c][0] ? o.icn3d.alnChainsSeq[c][0].resi : "") + "</span>";
            h = !(void 0 === e || !a.hasOwnProperty(c));
            for (var b = 0, y = u; b < y; ++b) {
                var _ = "";
                "" === o.icn3d.alnChainsSeq[c][b].resi || isNaN(o.icn3d.alnChainsSeq[c][b].resi) || (_ = g + "_" + v + "_" + o.icn3d.alnChainsSeq[c][b].resi, o.icn3d.alnChainsSeq[c][b].color);
                var C, w = "class='icn3d-residue";
                if ((void 0 === n || n) && (h || void 0 !== i && "" !== _ && -1 !== i.indexOf(_)) && (w = "class='icn3d-residue icn3d-highlightSeq"), w += "" === _ ? "'" : " " + o.icn3d.alnChainsSeq[c][b].class + "'", o.icn3d.residues.hasOwnProperty(_)) {
                    var S = o.icn3d.getFirstCalphaAtomObj(o.icn3d.residues[_]);
                    C = void 0 !== S.color ? "#" + S.color.getHexString() + ";" : "#000000;"
                } else C = "#000000;";
                "#FFFFFF;" === C.toUpperCase() && (C = o.GREYD), "" !== _ ? -1 != o.icn3d.alnChainsSeq[c][b].resi ? m += "<span id='align_" + o.pre + _ + "' " + w + " style='color:" + C + "' title='" + o.icn3d.alnChainsSeq[c][b].resn + o.icn3d.alnChainsSeq[c][b].resi + "'>" + o.icn3d.alnChainsSeq[c][b].resn + "</span>" : m += "<span>" + o.icn3d.alnChainsSeq[c][b].resn + "</span>" : m += "<span title='" + o.icn3d.alnChainsSeq[c][b].resn + o.icn3d.alnChainsSeq[c][b].resi + "'>" + o.icn3d.alnChainsSeq[c][b].resn + "</span>"
            }
            m += "<span class='icn3d-residueNum' title='ending residue number'>" + (void 0 !== o.icn3d.alnChainsSeq[c][u - 1] ? o.icn3d.alnChainsSeq[c][u - 1].resi : "") + "</span>";
            for (var k = void 0 !== o.icn3d.alnChainsAnno[c] ? o.icn3d.alnChainsAnno[c].length : 0, A = 0, x = k; A < x; ++A) {
                p[A] = "";
                var R = 0 == A && 7 <= k ? o.icn3d.alnChainsAnTtl[c][4][0] : c;
                p[A] += "<span class='icn3d-residueNum'></span>";
                for (b = 0, y = o.icn3d.alnChainsAnno[c][A].length; b < y; ++b) {
                    var E = o.icn3d.alnChainsAnno[c][A][b];
                    if ("H" == E || "E" == E || "c" == E || "o" == E)
                        if ("H" == E) p[A] += b % 2 == 0 ? '<span class="icn3d-helix">&nbsp;</span>' : '<span class="icn3d-helix2">&nbsp;</span>';
                        else if ("E" == E) {
                        if (void 0 !== o.icn3d.alnChainsSeq[R][b]) {
                            _ = R + "_" + o.icn3d.alnChainsSeq[R][b].resi;
                            if (o.icn3d.residues.hasOwnProperty(_)) o.icn3d.getFirstCalphaAtomObj(o.icn3d.residues[_]).ssend ? p[A] += '<span class="icn3d-sheet2">&nbsp;</span>' : p[A] += '<span class="icn3d-sheet">&nbsp;</span>'
                        }
                    } else p[A] += "c" == E ? '<span class="icn3d-coil">&nbsp;</span>' : "o" == E ? '<span class="icn3d-other">&nbsp;</span>' : "<span></span>";
                    else p[A] += "<span>" + E + "</span>"
                }
                p[A] += "<span class='icn3d-residueNum'></span>"
            }
            var D = c,
                O = void 0 !== o.icn3d.pdbid_chain2title ? o.icn3d.pdbid_chain2title[c] : "";
            for (A = k - 1; 0 <= A; --A) {
                var T = o.icn3d.alnChainsAnTtl[c][A][0];
                "SS" == T && (T = ""), r += "<div class='icn3d-residueLine' style='white-space:nowrap;'><div class='icn3d-seqTitle' anno='" + A + "'>" + T + "</div>" + p[A] + "<br/></div>"
            }
            r += '<div class="icn3d-seqTitle icn3d-link icn3d-blue" chain="' + c + '" anno="sequence" title="' + O + '">' + D + ' </div><span class="icn3d-seqLine">' + m + "</span><br/>"
        }
        return {
            sequencesHtml: r,
            maxSeqCnt: s
        }
    }, iCn3DUI.prototype.openDialogHalfWindow = function(g, e, t, i) {
        var n, v = this;
        v.resizeCanvas(v.WIDTH - t, v.HEIGHT, i), height = v.HEIGHT, width = t, n = !v.cfg.showmenu || v.isMobile() || v.cfg.mobilemenu ? {
            my: "left top",
            at: "right top",
            of: "#" + v.pre + "viewer",
            collision: "none"
        } : {
            my: "left top",
            at: "right top+40",
            of: "#" + v.pre + "viewer",
            collision: "none"
        }, v.cfg.resize = !1, window.dialog = $("#" + g).dialog({
            autoOpen: !0,
            title: e,
            height: height,
            width: width,
            modal: !1,
            position: n,
            close: function(e) {
                var t = $("#" + v.pre + "dl_selectannotations").hasClass("ui-dialog-content"),
                    i = $("#" + v.pre + "dl_graph").hasClass("ui-dialog-content"),
                    n = $("#" + v.pre + "dl_linegraph").hasClass("ui-dialog-content"),
                    o = $("#" + v.pre + "dl_interactionsorted").hasClass("ui-dialog-content"),
                    r = $("#" + v.pre + "dl_alignment").hasClass("ui-dialog-content"),
                    s = $("#" + v.pre + "dl_2ddgm").hasClass("ui-dialog-content"),
                    a = $("#" + v.pre + "dl_definedsets").hasClass("ui-dialog-content"),
                    c = !1,
                    d = !1,
                    l = !1,
                    h = !1,
                    p = !1,
                    m = !1,
                    u = !1;
                if (t && (c = $("#" + v.pre + "dl_selectannotations").dialog("isOpen")), i && (d = $("#" + v.pre + "dl_graph").dialog("isOpen")), n && (l = $("#" + v.pre + "dl_linegraph").dialog("isOpen")), o && (h = $("#" + v.pre + "dl_interactionsorted").dialog("isOpen")), r && (p = $("#" + v.pre + "dl_alignment").dialog("isOpen")), s && (m = $("#" + v.pre + "dl_2ddgm").dialog("isOpen")), a && (u = $("#" + v.pre + "dl_definedsets").dialog("isOpen")), !((g !== v.pre + "dl_selectannotations" || p || d || h || l) && (g !== v.pre + "dl_graph" || c || p || h || l) && (g !== v.pre + "dl_alignment" || c || d || h || l) && (g !== v.pre + "dl_interactionsorted" || c || d || p || l) && (g !== v.pre + "dl_linegraph" || c || d || p || h)))
                    if (m || u) {
                        var f = v.isMobile() ? v.WIDTH : v.WIDTH - 170;
                        v.resizeCanvas(f, v.HEIGHT, !0), m && v.openDialog2Ddgm(v.pre + "dl_2ddgm", void 0, u), u && v.openDialog2Ddgm(v.pre + "dl_definedsets")
                    } else v.resizeCanvas(v.WIDTH, v.HEIGHT, !0)
            },
            resize: function(e) {
                if (g == v.pre + "dl_selectannotations") v.hideFixedTitle();
                else if (g == v.pre + "dl_graph") {
                    var t = $("#" + g).width(),
                        i = $("#" + g).height();
                    d3.select("#" + v.svgid).attr("width", t).attr("height", i)
                } else if (g == v.pre + "dl_linegraph") {
                    var n = $("#" + v.pre + "dl_2ddgm").hasClass("ui-dialog-content"),
                        o = $("#" + v.pre + "dl_definedsets").hasClass("ui-dialog-content"),
                        r = !1,
                        s = !1;
                    n && (r = $("#" + v.pre + "dl_2ddgm").dialog("isOpen")), o && (s = $("#" + v.pre + "dl_definedsets").dialog("isOpen"));
                    var a = r || s ? (v.WIDTH - 170) / 2 : v.WIDTH / 2,
                        c = $("#" + g).width() / a;
                    t = v.linegraphWidth * c;
                    $("#" + v.linegraphid).attr("width", t)
                }
            }
        }), v.addSaveButton(g)
    }, iCn3DUI.prototype.openDialog2Ddgm = function(e, t, i) {
        var n, o, m = this;
        e === m.pre + "dl_definedsets" ? (n = "right top", o = "Select sets") : e === m.pre + "dl_2ddgm" && (n = i ? "right top+240" : "right top", o = "Interactions");
        var r = {
            my: "left top+" + m.MENU_HEIGHT,
            at: n,
            of: "#" + m.pre + "viewer",
            collision: "none"
        };
        window.dialog = $("#" + e).dialog({
            autoOpen: !0,
            title: o,
            height: "auto",
            width: 170,
            modal: !1,
            position: r,
            close: function(e) {
                var t = $("#" + m.pre + "dl_selectannotations").hasClass("ui-dialog-content"),
                    i = $("#" + m.pre + "dl_graph").hasClass("ui-dialog-content"),
                    n = $("#" + m.pre + "dl_linegraph").hasClass("ui-dialog-content"),
                    o = $("#" + m.pre + "dl_interactionsorted").hasClass("ui-dialog-content"),
                    r = $("#" + m.pre + "dl_alignment").hasClass("ui-dialog-content"),
                    s = $("#" + m.pre + "dl_2ddgm").hasClass("ui-dialog-content"),
                    a = $("#" + m.pre + "dl_definedsets").hasClass("ui-dialog-content"),
                    c = !1,
                    d = !1,
                    l = !1,
                    h = !1,
                    p = !1;
                t && (c = $("#" + m.pre + "dl_selectannotations").dialog("isOpen")), i && (d = $("#" + m.pre + "dl_graph").dialog("isOpen")), n && (l = $("#" + m.pre + "dl_linegraph").dialog("isOpen")), o && (h = $("#" + m.pre + "dl_interactionsorted").dialog("isOpen")), r && (p = $("#" + m.pre + "dl_alignment").dialog("isOpen")), s && $("#" + m.pre + "dl_2ddgm").dialog("isOpen"), a && $("#" + m.pre + "dl_definedsets").dialog("isOpen"), c || d || l || h || p || m.resizeCanvas(m.WIDTH, m.HEIGHT, !0)
            }
        }), m.addSaveButton(e)
    }, iCn3DUI.prototype.openDialog = function(d, e) {
        var l = this,
            t = 400,
            i = 150,
            n = $("#" + l.pre + "dl_selectannotations").hasClass("ui-dialog-content"),
            o = $("#" + l.pre + "dl_graph").hasClass("ui-dialog-content"),
            r = $("#" + l.pre + "dl_linegraph").hasClass("ui-dialog-content"),
            s = $("#" + l.pre + "dl_interactionsorted").hasClass("ui-dialog-content"),
            a = $("#" + l.pre + "dl_alignment").hasClass("ui-dialog-content"),
            c = $("#" + l.pre + "dl_2ddgm").hasClass("ui-dialog-content"),
            h = $("#" + l.pre + "dl_definedsets").hasClass("ui-dialog-content"),
            p = !1,
            m = !1,
            u = !1,
            f = !1,
            g = !1,
            v = !1,
            b = !1;
        if (n && (p = $("#" + l.pre + "dl_selectannotations").dialog("isOpen")), o && (m = $("#" + l.pre + "dl_graph").dialog("isOpen")), r && (u = $("#" + l.pre + "dl_linegraph").dialog("isOpen")), s && (f = $("#" + l.pre + "dl_interactionsorted").dialog("isOpen")), a && (g = $("#" + l.pre + "dl_alignment").dialog("isOpen")), c && (v = $("#" + l.pre + "dl_2ddgm").dialog("isOpen")), h && (b = $("#" + l.pre + "dl_definedsets").dialog("isOpen")), d === l.pre + "dl_selectannotations" || d === l.pre + "dl_graph" || d === l.pre + "dl_linegraph" || d === l.pre + "dl_interactionsorted" || d === l.pre + "dl_alignment") {
            var y = .5 * l.WIDTH - 85;
            if (l.WIDTH >= l.HEIGHT) l.openDialogHalfWindow(d, e, y, !0), (v || b) && (l.resizeCanvas(l.WIDTH - y - 170, l.HEIGHT, !0), v && l.openDialog2Ddgm(l.pre + "dl_2ddgm", void 0, b), b && l.openDialog2Ddgm(l.pre + "dl_definedsets"));
            else {
                l.resizeCanvas(l.WIDTH, .5 * l.HEIGHT, !0), i = .5 * l.HEIGHT, t = l.WIDTH;
                var _ = {
                    my: "left top",
                    at: "left bottom+32",
                    of: "#" + l.pre + "canvas",
                    collision: "none"
                };
                window.dialog = $("#" + d).dialog({
                    autoOpen: !0,
                    title: e,
                    height: i,
                    width: t,
                    modal: !1,
                    position: _,
                    close: function(e) {
                        if (!((d !== l.pre + "dl_selectannotations" || g || m || f || u) && (d !== l.pre + "dl_graph" || p || g || f || u) && (d !== l.pre + "dl_alignment" || p || m || f || u) && (d !== l.pre + "dl_interactionsorted" || p || m || g || u) && (d !== l.pre + "dl_linegraph" || p || m || g || f)))
                            if (v || b) {
                                var t = l.isMobile() ? l.WIDTH : l.WIDTH - 170;
                                l.resizeCanvas(t, l.HEIGHT, !0), v && l.openDialog2Ddgm(l.pre + "dl_2ddgm", void 0, b), b && l.openDialog2Ddgm(l.pre + "dl_definedsets")
                            } else l.resizeCanvas(l.WIDTH, l.HEIGHT, !0)
                    },
                    resize: function(e) {
                        if (d == l.pre + "dl_selectannotations") l.hideFixedTitle();
                        else if (d == l.pre + "dl_graph") {
                            var t = $("#" + d).width(),
                                i = $("#" + d).height();
                            d3.select("#" + l.svgid).attr("width", t).attr("height", i)
                        } else if (d == l.pre + "dl_linegraph") {
                            var n = $("#" + l.pre + "dl_2ddgm").hasClass("ui-dialog-content"),
                                o = $("#" + l.pre + "dl_definedsets").hasClass("ui-dialog-content"),
                                r = !1,
                                s = !1;
                            n && (r = $("#" + l.pre + "dl_2ddgm").dialog("isOpen")), o && (s = $("#" + l.pre + "dl_definedsets").dialog("isOpen"));
                            var a = r || s ? (l.WIDTH - 170) / 2 : l.WIDTH / 2,
                                c = $("#" + d).width() / a;
                            t = l.linegraphWidth * c;
                            $("#" + l.linegraphid).attr("width", t)
                        }
                    }
                }), l.addSaveButton(d)
            }
        } else if (d === l.pre + "dl_2ddgm") {
            var C = 0;
            if (l.WIDTH >= l.HEIGHT)(p || m || u || f || g) && (C = .5 * l.WIDTH - 85), l.resizeCanvas(l.WIDTH - C - 170, l.HEIGHT, !0), l.openDialog2Ddgm(d, void 0, b);
            else {
                var w = l.isMobile() ? l.WIDTH : l.WIDTH - 170;
                l.resizeCanvas(w, .5 * l.HEIGHT, !0), l.openDialog2Ddgm(d, .5 * l.HEIGHT), l.openDialog2Ddgm(d, .5 * l.HEIGHT, b)
            }
        } else {
            if (t = i = "auto", d === l.pre + "dl_addtrack" && (t = "50%"), d === l.pre + "dl_definedsets") {
                C = 0;
                if (l.WIDTH >= l.HEIGHT)(p || m || u || f || g) && (C = .5 * l.WIDTH - 85), l.resizeCanvas(l.WIDTH - C - 170, l.HEIGHT, !0), l.openDialog2Ddgm(d), v && l.openDialog2Ddgm(l.pre + "dl_2ddgm", void 0, !0);
                else {
                    w = l.isMobile() ? l.WIDTH : l.WIDTH - 170;
                    l.resizeCanvas(w, .5 * l.HEIGHT, !0), l.openDialog2Ddgm(d, .5 * l.HEIGHT), v && l.openDialog2Ddgm(l.pre + "dl_2ddgm", .5 * l.HEIGHT, !0)
                }
            } else l.isMobile() ? _ = {
                my: "left top",
                at: "left bottom-50",
                of: "#" + l.pre + "canvas",
                collision: "none"
            } : d === l.pre + "dl_allinteraction" || d === l.pre + "dl_buriedarea" ? (_ = {
                my: "right top",
                at: "right top+50",
                of: "#" + l.divid,
                collision: "none"
            }, t = 700, i = 500) : _ = d === l.pre + "dl_rmsd" ? {
                my: "left top",
                at: "right bottom-90",
                of: "#" + l.pre + "canvas",
                collision: "none"
            } : l.cfg.align ? {
                my: "left top",
                at: "left top+90",
                of: "#" + l.pre + "canvas",
                collision: "none"
            } : {
                my: "left top",
                at: "left top+50",
                of: "#" + l.pre + "canvas",
                collision: "none"
            }, window.dialog = $("#" + d).dialog({
                autoOpen: !0,
                title: e,
                height: i,
                width: t,
                modal: !1,
                position: _
            }), l.addSaveButton(d)
        }
        $(".ui-dialog .ui-button span").removeClass("ui-icon-closethick").addClass("ui-icon-close")
    }, iCn3DUI.prototype.addSaveButton = function(e) {
        void 0 !== this.dialogHash && this.dialogHash.hasOwnProperty(e) || ($("#" + e).parent().children(".ui-dialog-titlebar").append("<span pid='" + e + "' class='icn3d-saveicon ui-icon ui-icon-disk' title='Save as an HTML file'></span>"), void 0 === this.dialogHash && (this.dialogHash = {}), this.dialogHash[e] = 1)
    }, iCn3DUI.prototype.draw2Ddgm = function(e, t, i, n) {
        var o = this;
        t = t.substr(0, 4);
        var r = {},
            s = {},
            a = {},
            c = {},
            d = {};
        if (void 0 === e) return "";
        for (var l in e.moleculeInfor) {
            var h = "#" + ("000000" + e.moleculeInfor[l].color.toString(16)).slice(-6),
                p = e.moleculeInfor[l].chain.trim();
            void 0 === d[p] ? d[p] = 1 : ++d[p];
            var m = 1 === d[p] ? p : p + d[p].toString(),
                u = t + "_" + m;
            void 0 !== o.mmdbid_q && o.mmdbid_q === o.mmdbid_t && 0 === i && (u = t + o.postfix + "_" + m), r[l] = u, s[l] = h, a[l] = e.moleculeInfor[l].name, c[u] = l
        }
        if (void 0 === n || !n)
            for (var f = 0, g = e.intracResidues.length; f < g; ++f) {
                var v = e.intracResidues[f],
                    b = 0;
                for (var l in v) {
                    u = r[l], 0 === b ? be = u : R = u, ++b
                }
                if (void 0 !== be && void 0 !== R)
                    for (var l in b = 0, v) {
                        var y, _, C = v[l];
                        _ = 0 === b ? (y = be, R) : (y = R, be), void 0 === o.chainids2resids[y] && (o.chainids2resids[y] = {}), void 0 === o.chainids2resids[y][_] && (o.chainids2resids[y][_] = []);
                        for (var w = 0, S = C.length; w < S; ++w) {
                            var k = C[w],
                                A = o.mmdbMolidResid2mmdbChainResi[t.toUpperCase() + "_" + l + "_" + k];
                            o.chainids2resids[y][_].push(A)
                        }
                        void 0 === o.chainname2residues && (o.chainname2residues = {});
                        var x, R = _,
                            E = o.icn3d.getFirstCalphaAtomObj(o.icn3d.chains[R]);
                        o.icn3d.chemicals.hasOwnProperty(E.serial) ? x = "chemical" : o.icn3d.nucleotides.hasOwnProperty(E.serial) ? x = "nucleotide" : o.icn3d.ions.hasOwnProperty(E.serial) ? x = "ion" : o.icn3d.proteins.hasOwnProperty(E.serial) ? x = "protein" : o.icn3d.water.hasOwnProperty(E.serial) && (x = "water");
                        var D = R.substr(R.indexOf("_") + 1) + " (" + x + ")";
                        void 0 === o.chainname2residues[y] && (o.chainname2residues[y] = {}), o.chainname2residues[y][D] = o.chainids2resids[y][_], ++b
                    }
            }
        var O = "<div id='#" + o.pre + t + "'>";
        O += "<b>" + t.toUpperCase() + "</b><br/>", O += "<svg viewBox='0,0,150,150'>";
        var T = {},
            H = [],
            M = "",
            I = "",
            L = {};
        if (n)
            for (var f in o.icn3d.dAtoms) {
                L[l = c[u = (le = o.icn3d.atoms[f]).structure + "_" + le.chain]] = 1
            }
        var F = Object.keys(e.moleculeInfor),
            P = Object.keys(e.intrac),
            N = [];
        for (f = 0, g = F.length; f < g; ++f) - 1 === P.indexOf(F[f]) && N.push(F[f]);
        var z = {};
        if (0 < N.length)
            for (var l in e.intrac) {
                for (f = 0, g = (J = e.intrac[l]).intrac.length; f < g; ++f) {
                    var q = J.intrac[f].toString(); - 1 !== N.indexOf(q) && (void 0 === z[q] && (z[q] = []), z[q].push(l), H.push([q, l]))
                }
                if ("rect" === J.shape) {
                    var j = .5 * J.coords[0],
                        U = .5 * J.coords[1],
                        B = .5 * J.coords[2] - j,
                        G = .5 * J.coords[3] - U;
                    T[l] = [j + B / 2, U + G / 2]
                } else if ("circle" === J.shape) {
                    j = .5 * J.coords[0], U = .5 * J.coords[1], J.coords[2];
                    T[l] = [j, U]
                } else if ("poly" === J.shape) {
                    var V = .5 * J.coords[0],
                        W = (J.coords[1], .5 * J.coords[2]),
                        Y = .5 * J.coords[3],
                        X = .5 * J.coords[4],
                        K = .5 * J.coords[5];
                    J.coords[6], J.coords[7], j = V, U = Y;
                    T[l] = [V, Y]
                }
            }
        for (var Z = 0, Q = (b = 0, F.length); b < Q; ++b) {
            u = r[l = F[b]];
            if (!n || L.hasOwnProperty(l)) {
                var J = e.intrac[l],
                    ee = (h = "#FFFFFF", s[l]);
                if (void 0 !== u) {
                    var te = Object.keys(o.icn3d.chains[u]);
                    0 < te.length && (ee = "#" + o.icn3d.atoms[te[0]].color.getHexString().toUpperCase())
                }
                var ie = "";
                o.icn3d.bInitial && (void 0 !== i && 0 === i ? ee = void 0 !== o.alignmolid2color && o.alignmolid2color[0].hasOwnProperty(l) ? (ie = o.alignmolid2color[0][l], "#FF0000") : "#FFFFFF" : void 0 !== i && 1 === i && (ee = void 0 !== o.alignmolid2color && o.alignmolid2color[1].hasOwnProperty(l) ? (ie = o.alignmolid2color[1][l], "#FF0000") : "#FFFFFF"));
                var ne = a[l],
                    oe = " ",
                    re = " ";
                if (void 0 !== u) {
                    var se = u.indexOf("_");
                    oe = 1 < (re = u.substr(se + 1)).length ? re.substr(0, 1) + ".." : re
                } else u = "Misc";
                void 0 === ee && (ee = "#FFFFFF");
                var ae = 1;
                if (o.icn3d.bInitial && void 0 !== o.icn3d.alnChains[u]) {
                    var ce = 0;
                    for (var f in o.icn3d.alnChains[u]) {
                        var de = o.icn3d.atoms[f].color.getHexString().toUpperCase();
                        "FF0000" !== de && "00FF00" !== de || ++ce
                    }
                    ae = ce / Object.keys(o.icn3d.chains[u]).length
                }
                if (ae < .2 && (ae = .2), -1 === N.indexOf(l)) {
                    for (f = 0, g = J.intrac.length; f < g; ++f) parseInt(l) < parseInt(J.intrac[f]) && H.push([l, J.intrac[f]]);
                    if ("rect" === J.shape) {
                        j = .5 * J.coords[0], U = .5 * J.coords[1], B = .5 * J.coords[2] - j, G = .5 * J.coords[3] - U;
                        M += o.draw2DNucleotide(j + .5 * B, U + .5 * G, u, re, oe, ne, ie, h, ee, .5, ae), T[l] = [j + B / 2, U + G / 2]
                    } else if ("circle" === J.shape) {
                        j = .5 * J.coords[0], U = .5 * J.coords[1];
                        M += o.draw2DProtein(j, U, u, re, oe, ne, ie, h, ee, .5, ae), T[l] = [j, U]
                    } else if ("poly" === J.shape) {
                        V = .5 * J.coords[0], J.coords[1], W = .5 * J.coords[2], Y = .5 * J.coords[3], X = .5 * J.coords[4], K = .5 * J.coords[5], J.coords[6], J.coords[7], j = V, U = Y;
                        var le = o.icn3d.getFirstAtomObj(o.icn3d.chains[u]);
                        I += o.draw2DChemical(j, U, u, re, oe, ne, ie, h, ee, .5, ae), T[l] = [V, Y]
                    }
                } else {
                    var he, pe;
                    if (void 0 !== z[l] && 1 < z[l].length) {
                        var me = 0,
                            ue = 0;
                        for (w = 0, S = z[l].length; w < S; ++w) {
                            q = z[l][w];
                            if (T.hasOwnProperty(q)) {
                                var fe = T[q];
                                me += fe[0], ue += fe[1]
                            }
                        }
                        he = me / z[l].length, pe = ue / z[l].length
                    } else {
                        pe = Z < 5 ? (he = 50 * (Z + 1) * .5, 15) : Z - 5 < 5 ? (he = 15, 50 * (Z - 5 + 1) * .5) : he = 37.5, ++Z
                    }
                    j = he, U = pe, le = o.icn3d.getFirstAtomObj(o.icn3d.chains[u]);
                    I += o.draw2DChemical(j, U, u, re, oe, ne, ie, h, ee, .5, ae, !0), T[l] = [j, U]
                }
            }
        }
        for (f = 0, g = H.length; f < g; ++f) {
            v = H[f];
            if (!n || L.hasOwnProperty(v[0]) && L.hasOwnProperty(v[1])) {
                var ge = T[parseInt(v[0])],
                    ve = T[parseInt(v[1])];
                if (void 0 !== ge && void 0 !== ve) {
                    var be;
                    be = r[v[0]], R = r[v[1]];
                    var ye = be.indexOf("_"),
                        _e = R.indexOf("_"),
                        Ce = be.substr(ye + 1),
                        we = R.substr(_e + 1),
                        Se = (W = ge[0], Y = ge[1], .5 * (W + (X = ve[0]))),
                        ke = .5 * (Y + (K = ve[1]));
                    O += "<g class='icn3d-interaction' chainid1='" + be + "' chainid2='" + R + "' >", O += "<title>Interaction of chain " + Ce + " with chain " + we + "</title>", O += "<line x1='" + W + "' y1='" + Y + "' x2='" + Se + "' y2='" + ke + "' stroke='#000000' stroke-width='2' /></g>", O += "<g class='icn3d-interaction' chainid1='" + R + "' chainid2='" + be + "' >", O += "<title>Interaction of chain " + we + " with chain " + Ce + "</title>", O += "<line x1='" + Se + "' y1='" + ke + "' x2='" + X + "' y2='" + K + "' stroke='#000000' stroke-width='2' /></g>"
                }
            }
        }
        return O += I + M, O += "</svg>", O += "</div>", o.html2ddgm += O, $("#" + o.pre + "dl_2ddgm").html(o.html2ddgm), O
    }, iCn3DUI.prototype.set2DdgmNote = function(e) {
        var t = "<div style='width:150px'><b>Nodes</b>:<br>";
        return this.isMac() ? (t += "<span style='margin-right:18px;'>&#9711;</span>Protein<br>", t += "<span style='margin-right:18px;'>&#9634;</span>Nucleotide<br>", t += "<span style='margin-right:18px;'>&#9826;</span>Chemical<br>") : (t += "<span style='margin-right:18px;'>O</span>Protein<br>", t += "<span style='margin-right:18px;'>&#9634;</span>Nucleotide<br>", t += "<span style='margin-right:18px;'>&#9671;</span>Chemical<br>"), t += "<span style='margin-right:18px;display: inline-block;transform: skew(-25deg);'>&#9634;</span>Biopolymer<br>", t += "<br><b>Lines</b>:<br> Interactions at 4 &#197;<br>", e && (t += "<b>Numbers in red</b>:<br> Aligned chains"), t += "</div><br/>"
    }, iCn3DUI.prototype.highlightNode = function(e, t, i, n) {
        n < .2 && (n = .2);
        if ("rect" === e) {
            $(t).attr("stroke", this.ORANGE), $(t).attr("stroke-width", 3);
            var o = Number($(i).attr("x")),
                r = Number($(i).attr("y")),
                s = Number($(i).attr("width")),
                a = Number($(i).attr("height"));
            $(t).attr("x", o + s / 2 * (1 - n)), $(t).attr("y", r + a / 2 * (1 - n)), $(t).attr("width", s * n), $(t).attr("height", a * n)
        } else if ("circle" === e) $(t).attr("stroke", this.ORANGE), $(t).attr("stroke-width", 3), $(t).attr("r", Number($(i).attr("r")) * n);
        else if ("polygon" === e) {
            $(t).attr("stroke", this.ORANGE), $(t).attr("stroke-width", 3);
            o = Number($(i).attr("x")), r = Number($(i).attr("y"));
            var c = Number($(i).attr("x0d")),
                d = Number($(i).attr("y0d")),
                l = Number($(i).attr("x1d")),
                h = Number($(i).attr("y1d")),
                p = Number($(i).attr("x2d")),
                m = Number($(i).attr("y2d")),
                u = Number($(i).attr("x3d")),
                f = Number($(i).attr("y3d"));
            $(t).attr("points", (o + c * n).toString() + ", " + (r + d * n).toString() + ", " + (o + l * n).toString() + ", " + (r + h * n).toString() + ", " + (o + p * n).toString() + ", " + (r + m * n).toString() + ", " + (o + u * n).toString() + ", " + (r + f * n).toString())
        }
    }, iCn3DUI.prototype.removeLineGraphSelection = function() {
        $("#" + this.pre + "dl_linegraph circle").attr("stroke", "#000000"), $("#" + this.pre + "dl_linegraph circle").attr("stroke-width", 1), $("#" + this.pre + "dl_linegraph svg line.icn3d-hlline").attr("stroke", "#FFF")
    }, iCn3DUI.prototype.removeScatterplotSelection = function() {
        $("#" + this.pre + "dl_scatterplot circle").attr("stroke", "#000000"), $("#" + this.pre + "dl_scatterplot circle").attr("stroke-width", 1), $("#" + this.pre + "dl_scatterplot rect").attr("stroke", "#000000"), $("#" + this.pre + "dl_scatterplot rect").attr("stroke-width", 1)
    }, iCn3DUI.prototype.click2Ddgm = function() {
        var s = this;
        $("#" + s.pre + "dl_2ddgm").on("click", ".icn3d-node", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection");
            var t = $(this).attr("chainid");
            s.icn3d.bCtrl || s.icn3d.bShift || (s.removeSelection(), s.lineArray2d = []);
            var i = 1;
            void 0 !== s.icn3d.alnChains[t] && (i = Object.keys(s.icn3d.alnChains[t]).length / Object.keys(s.icn3d.chains[t]).length);
            var n = $(this).find("rect[class='icn3d-hlnode']"),
                o = $(this).find("rect[class='icn3d-basenode']");
            s.highlightNode("rect", n, o, i), n = $(this).find("circle[class='icn3d-hlnode']"), o = $(this).find("circle[class='icn3d-basenode']"), s.highlightNode("circle", n, o, i), n = $(this).find("polygon[class='icn3d-hlnode']"), o = $(this).find("polygon[class='icn3d-basenode']"), s.highlightNode("polygon", n, o, i), s.icn3d.bCtrl || s.icn3d.bShift ? s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.chains[t]) : s.icn3d.hAtoms = s.icn3d.cloneHash(s.icn3d.chains[t]), s.icn3d.bCtrl || s.icn3d.bShift ? (void 0 === s.chainArray2d && (s.chainArray2d = []), s.chainArray2d.push(t)) : s.chainArray2d = [t], s.updateHlAll(s.chainArray2d), s.showAnnoSelectedChains();
            var r = "select chain " + t;
            s.setLogCmd(r, !0), s.bSelectResidue = !1
        }), $("#" + s.pre + "dl_2ddgm").on("click", ".icn3d-interaction", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection"), s.bClickInteraction = !0;
            var t = $(this).attr("chainid1"),
                i = $(this).attr("chainid2");
            $(this).find("line").attr("stroke", s.ORANGE), s.selectInteraction(t, i), s.showAnnoSelectedChains();
            var n = "select interaction " + t + "," + i;
            s.setLogCmd(n, !0), s.bClickInteraction = !1
        }), $("#" + s.pre + "dl_linegraph").on("click", ".icn3d-node", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection");
            var t = $(this).attr("resid");
            s.icn3d.bCtrl || s.icn3d.bShift || (s.icn3d.hAtoms = {}, s.removeLineGraphSelection());
            $(this).find("circle").attr("stroke", s.ORANGE), $(this).find("circle").attr("stroke-width", 2), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[t]);
            var i = "select " + s.residueids2spec([t]);
            s.updateHlAll(), s.setLogCmd(i, !0), s.bSelectResidue = !1
        }), $("#" + s.pre + "dl_scatterplot").on("click", ".icn3d-node", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection");
            var t = $(this).attr("resid");
            s.icn3d.bCtrl || s.icn3d.bShift || (s.icn3d.hAtoms = {}, s.removeScatterplotSelection());
            $(this).find("circle").attr("stroke", s.ORANGE), $(this).find("circle").attr("stroke-width", 2), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[t]);
            var i = "select " + s.residueids2spec([t]);
            s.updateHlAll(), s.setLogCmd(i, !0), s.bSelectResidue = !1
        }), $("#" + s.pre + "dl_linegraph").on("click", ".icn3d-interaction", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection");
            var t = $(this).attr("resid1"),
                i = $(this).attr("resid2");
            s.icn3d.bCtrl || s.icn3d.bShift || (s.icn3d.hAtoms = {}, s.removeLineGraphSelection()), $(this).find("line.icn3d-hlline").attr("stroke", s.ORANGE), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[t]), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[i]);
            var n = "select " + s.residueids2spec([t, i]);
            s.updateHlAll(), s.setLogCmd(n, !0)
        }), $("#" + s.pre + "dl_scatterplot").on("click", ".icn3d-interaction", function(e) {
            e.stopImmediatePropagation(), Object.keys(s.icn3d.hAtoms).length < Object.keys(s.icn3d.atoms).length && s.setMode("selection");
            var t = $(this).attr("resid1"),
                i = $(this).attr("resid2");
            s.icn3d.bCtrl || s.icn3d.bShift || (s.icn3d.hAtoms = {}, s.removeScatterplotSelection());
            $(this).find("rect").attr("stroke", s.ORANGE), $(this).find("rect").attr("stroke-width", 2), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[t]), s.icn3d.hAtoms = s.icn3d.unionHash(s.icn3d.hAtoms, s.icn3d.residues[i]);
            var n = "select " + s.residueids2spec([t, i]);
            s.updateHlAll(), s.setLogCmd(n, !0)
        })
    }, iCn3DUI.prototype.selectInteraction = function(e, t) {
        var i = this;
        i.removeHl2D(), i.icn3d.removeHlObjects(), i.icn3d.bCtrl || i.icn3d.bShift ? (void 0 === i.lineArray2d && (i.lineArray2d = []), i.lineArray2d.push(e), i.lineArray2d.push(t)) : i.lineArray2d = [e, t], i.selectInteractionAtoms(e, t), i.icn3d.addHlObjects(), i.updateHlAll()
    }, iCn3DUI.prototype.selectInteractionAtoms = function(e, t) {
        var i, n, o = this,
            r = o.chainids2resids[e][t];
        o.icn3d.bCtrl || o.icn3d.bShift || (o.icn3d.hAtoms = {});
        for (var s = 0, a = r.length; s < a; ++s) o.icn3d.hAtoms = o.icn3d.unionHash(o.icn3d.hAtoms, o.icn3d.residues[r[s]]);
        if (1 < Object.keys(o.icn3d.structures).length) i = "inter_" + e + "_" + t;
        else {
            var c = e.indexOf("_"),
                d = t.indexOf("_");
            i = "inter_" + e.substr(c + 1) + "_" + t.substr(d + 1)
        }
        n = "select the atoms in chain " + e + " interacting with chain " + t + " in a distance of 4 angstrom";
        var l = "select interaction " + e + "," + t;
        o.addCustomSelection(r, i, n, l, !0)
    }, iCn3DUI.prototype.draw2DProtein = function(e, t, i, n, o, r, s, a, c, d, l) {
        var h = 20 * d,
            p = "<g class='icn3d-node' chainid='" + i + "' >";
        return p += "<title>Chain " + n + ": " + r + "</title>", p += "<circle class='icn3d-basenode' cx='" + e + "' cy='" + t + "' r='" + h + "' fill='" + a + "' stroke-width='1' stroke='#000000' class='icn3d-node' chainid='" + i + "' />", p += "<circle class='icn3d-hlnode' cx='" + e + "' cy='" + t + "' r='" + (h * l).toString() + "' fill='" + c + "' stroke-width='1' stroke='#000000' />", p += "<text x='" + (+e).toString() + "' y='" + (t + 4).toString() + "' style='fill:#000000; font-size:10; text-anchor:middle' >" + o + "</text>", "" !== s && (p += "<text x='" + (+e).toString() + "' y='" + (t + h + 4 + 6).toString() + "' style='fill:" + c + "; font-size:8; font-weight:bold; text-anchor:middle' >" + s + "</text>"), p += "</g>"
    }, iCn3DUI.prototype.draw2DNucleotide = function(e, t, i, n, o, r, s, a, c, d, l) {
        var h = 30 * d,
            p = 30 * d,
            m = "<g class='icn3d-node' chainid='" + i + "' >";
        return m += "<title>Chain " + n + ": " + r + "</title>", m += "<rect class='icn3d-basenode' x='" + (e -= .5 * h) + "' y='" + (t -= .5 * p) + "' width='" + h + "' height='" + p + "' fill='" + a + "' stroke-width='1' stroke='#000000' />", m += "<rect class='icn3d-hlnode' x='" + (e + h / 2 * (1 - l)).toString() + "' y='" + (t + p / 2 * (1 - l)).toString() + "' width='" + (h * l).toString() + "' height='" + (p * l).toString() + "' fill='" + c + "' stroke-width='1' stroke='#000000' />", m += "<text x='" + (+(e + h / 2)).toString() + "' y='" + (t + p / 2 + 4).toString() + "' style='fill:#000000; font-size:10; text-anchor:middle' >" + o + "</text>", "" !== s && (m += "<text x='" + (+(e + h / 2)).toString() + "' y='" + (t + p + 4 + 6).toString() + "' style='fill:" + c + "; font-size:8; font-weight:bold; text-anchor:middle' >" + s + "</text>"), m += "</g>"
    }, iCn3DUI.prototype.draw2DChemical = function(e, t, i, n, o, r, s, a, c, d, l, h) {
        var p = 30 * d;
        if (h) var m = e - (C = .5 * p / Math.sqrt(3)),
            u = t - (w = .5 * p),
            f = e + 3 * C,
            g = t - w,
            v = e + C,
            b = t + w,
            y = e - 3 * C,
            _ = t + w;
        else {
            var C, w;
            m = e - (C = .5 * p), u = t, f = e, g = t + (w = .5 * p), v = e + C, b = t, y = e, _ = t - w
        }
        var S = m - e,
            k = u - t,
            A = f - e,
            x = g - t,
            R = v - e,
            E = b - t,
            D = y - e,
            O = _ - t,
            T = "<g class='icn3d-node' chainid='" + i + "' >";
        return T += "<title>Chain " + n + ": " + r + "</title>", T += "<polygon class='icn3d-basenode' points='" + m + ", " + u + "," + f + ", " + g + "," + v + ", " + b + "," + y + ", " + _ + "' x='" + e + "' y='" + t + "' x0d='" + S + "' y0d='" + k + "' x1d='" + A + "' y1d='" + x + "' x2d='" + R + "' y2d='" + E + "' x3d='" + D + "' y3d='" + O + "' fill='" + a + "' stroke-width='1' stroke='#000000' />", T += "<polygon class='icn3d-hlnode' points='" + (e + S * l).toString() + ", " + (t + k * l).toString() + "," + (e + A * l).toString() + ", " + (t + x * l).toString() + "," + (e + R * l).toString() + ", " + (t + E * l).toString() + "," + (e + D * l).toString() + ", " + (t + O * l).toString() + "' fill='" + c + "' stroke-width='1' stroke='#000000' />", T += "<text x='" + (e + 1).toString() + "' y='" + (t + 2).toString() + "' style='fill:#000000; font-size:8; text-anchor:middle' >" + o + "</text>", "" !== s && (T += "<text x='" + (e + 1).toString() + "' y='" + (t + 2 + 6).toString() + "' style='fill:" + c + "; font-size:8; font-weight:bold; text-anchor:middle' >" + s + "</text>"), T += "</g>"
    },
    function(Q, J) {
        var n, r = "__instance__",
            s = "firstChild",
            a = setTimeout;

        function f(e) {
            return void 0 !== e
        }

        function ee(e) {
            return "object" == typeof e
        }

        function c(e) {
            return Object.keys(e).length
        }

        function te(e, t, i) {
            return e < t ? t : i < e ? i : e
        }

        function t(e, t) {
            return parseInt(e, t || 10)
        }

        function p(e) {
            return Math.round(e)
        }

        function ie(e) {
            var t, i, n, o, r, s, a, c, d = +e[0],
                l = +e[1],
                h = +e[2];
            switch (s = h * (1 - l), a = (a = h * (1 - (r = 6 * d - (o = Math.floor(6 * d))) * l)) || 0, c = (c = h * (1 - (1 - r) * l)) || 0, (o = o || 0) % 6) {
                case 0:
                    t = h, i = c, n = s;
                    break;
                case 1:
                    t = a, i = h, n = s;
                    break;
                case 2:
                    t = s, i = h, n = c;
                    break;
                case 3:
                    t = s, i = a, n = h;
                    break;
                case 4:
                    t = c, i = s, n = h;
                    break;
                case 5:
                    t = h, i = s, n = a
            }
            return [p(255 * t), p(255 * i), p(255 * n)]
        }

        function ne(e) {
            return i(ie(e))
        }

        function o(e) {
            var t, i = +e[0],
                n = +e[1],
                o = +e[2],
                r = Math.max(i, n, o),
                s = Math.min(i, n, o),
                a = r - s,
                c = 0 === r ? 0 : a / r,
                d = r / 255;
            switch (r) {
                case s:
                    t = 0;
                    break;
                case i:
                    t = n - o + a * (n < o ? 6 : 0), t /= 6 * a;
                    break;
                case n:
                    t = o - i + 2 * a, t /= 6 * a;
                    break;
                case o:
                    t = i - n + 4 * a, t /= 6 * a
            }
            return [t, c, d]
        }

        function i(e) {
            var t = +e[2] | +e[1] << 8 | +e[0] << 16;
            return (t = "000000" + t.toString(16)).slice(-6)
        }

        function d(e) {
            return o(l(e))
        }

        function l(e) {
            return 3 === e.length && (e = e.replace(/./g, "$&$&")), [t(e[0] + e[1], 16), t(e[2] + e[3], 16), t(e[4] + e[5], 16)]
        }

        function h(e) {
            return [e[0] / 360, e[1] / 100, e[2] / 100]
        }

        function m(e) {
            return [p(360 * e[0]), p(100 * e[1]), p(100 * e[2])]
        }

        function e(e) {
            if (ee(e)) return e;
            var t = /\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i.exec(e),
                i = /\s*hsv\s*\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*\)\s*$/i.exec(e);
            return "#" === e[0] && e.match(/^#([\da-f]{3}|[\da-f]{6})$/i) ? d(e.slice(1)) : i ? h([+i[1], +i[2], +i[3]]) : t ? o([+t[1], +t[2], +t[3]]) : [0, 1, 1]
        }(n = Q.CP = function(g, v, b) {
            var y = J.body,
                h = J.documentElement,
                _ = this,
                t = Q.CP,
                i = !1,
                o = {},
                C = J.createElement("div"),
                w = "touchstart mousedown",
                S = "touchmove mousemove",
                k = "touchend mouseup",
                A = "orientationchange resize";
            if (!(_ instanceof t)) return new t(g, v);

            function x(e, t, i) {
                for (var n = 0, o = (e = e.split(/\s+/)).length; n < o; ++n) t.addEventListener(e[n], i, !1)
            }

            function R(e, t, i) {
                for (var n = 0, o = (e = e.split(/\s+/)).length; n < o; ++n) t.removeEventListener(e[n], i)
            }

            function E(e, t) {
                var i = "touches",
                    n = t[i] ? t[i][0].clientX : t.clientX,
                    o = t[i] ? t[i][0].clientY : t.clientY,
                    r = p(e);
                return {
                    x: n - r.l,
                    y: o - r.t
                }
            }

            function p(e) {
                var t, i, n;
                return i = e === Q ? (t = Q.pageXOffset || h.scrollLeft, Q.pageYOffset || h.scrollTop) : (t = (n = e.getBoundingClientRect()).left, n.top), {
                    l: t,
                    t: i
                }
            }

            function D(e, t) {
                for (;
                    (e = e.parentElement) && e !== t;);
                return e
            }

            function O(e) {
                e && e.preventDefault()
            }

            function T(e) {
                return e === Q ? {
                    w: Q.innerWidth,
                    h: Q.innerHeight
                } : {
                    w: e.offsetWidth,
                    h: e.offsetHeight
                }
            }

            function H(e) {
                return i || !!f(e) && e
            }

            function M(e) {
                i = e
            }

            function I(e, t, i) {
                if (!f(o[e])) return _;
                if (f(i)) f(o[e][i]) && o[e][i].apply(_, t);
                else
                    for (var n in o[e]) o[e][n].apply(_, t);
                return _
            }
            t[r][g.id || g.name || c(t[r])] = _, f(v) && !0 !== v || (v = w), M(t.parse(g.getAttribute("data-color") || g.value || [0, 1, 1])), C.className = "color-picker", C.innerHTML = '<div class="color-picker-control"><span class="color-picker-h"><i></i></span><span class="color-picker-sv"><i></i></span></div>';
            var $, e = C[s].children,
                L = H([0, 1, 1]),
                F = e[0],
                P = e[1],
                N = F[s],
                z = P[s],
                q = 0,
                j = 0,
                U = 0,
                B = 0,
                m = 0,
                u = 0,
                G = 0,
                V = 0,
                W = ne(L);

            function Y(e, t) {
                e && "h" !== e || I("change:h", t), e && "sv" !== e || I("change:sv", t), I("change", t)
            }

            function X() {
                return C.parentNode
            }

            function K(e, t) {
                e || ((b || t || y).appendChild(C), _.visible = !0), G = T(C).w, V = T(C).h;
                var i = T(P),
                    n = T(z),
                    a = T(F).h,
                    c = i.w,
                    d = i.h,
                    l = T(N).h,
                    h = n.w,
                    p = n.h;
                if (e) {
                    function o(e) {
                        var t = e.target,
                            i = t === g || D(t, g) === g;
                        i ? K() : _.exit(), I(i ? "enter" : "exit", [_])
                    }
                    C.style.left = C.style.top = "-9999px", !1 !== v && x(v, g, o), _.create = function() {
                        return K(1), I("create", [_]), _
                    }, _.destroy = function() {
                        return !1 !== v && R(v, g, o), _.exit(), M(!1), I("destroy", [_]), _
                    }
                } else Z();

                function m(e) {
                    ie(L);
                    var t = ie([L[0], 1, 1]);
                    P.style.backgroundColor = "rgb(" + t.join(",") + ")", M(L), O(e)
                }

                function r(e) {
                    var t, i, n, o, r, s;
                    U && (i = te(E(F, t = e).y, 0, a), L[0] = (a - i) / a, N.style.top = i - l / 2 + "px", m(t), W = ne(L), q || (I("drag:h", [W, _]), I("drag", [W, _]), Y("h", [W, _]))), B && (o = E(P, n = e), r = te(o.x, 0, c), s = te(o.y, 0, d), L[1] = 1 - (c - r) / c, L[2] = (d - s) / d, z.style.right = c - r - h / 2 + "px", z.style.top = s - p / 2 + "px", m(n), W = ne(L), j || (I("drag:sv", [W, _]), I("drag", [W, _]), Y("sv", [W, _]))), j = q = 0
                }

                function s(e) {
                    var t = e.target,
                        i = U ? "h" : "sv",
                        n = [ne(L), _],
                        o = t === g || D(t, g) === g,
                        r = t === C || D(t, C) === C;
                    o || r ? r && (I("stop:" + i, n), I("stop", n), Y(i, n)) : X() && !1 !== v && (_.exit(), I("exit", [_]), Y(0, n)), B = U = 0
                }

                function u(e) {
                    U = q = 1, r(e), O(e), I("start:h", [W, _]), I("start", [W, _]), Y("h", [W, _])
                }

                function f(e) {
                    B = j = 1, r(e), O(e), I("start:sv", [W, _]), I("start", [W, _]), Y("sv", [W, _])
                }
                $ = function() {
                    L = H(L), m(), N.style.top = a - l / 2 - a * L[0] + "px", z.style.right = c - h / 2 - c * L[1] + "px", z.style.top = d - p / 2 - d * L[2] + "px"
                }, _.exit = function(e) {
                    return X() && (X().removeChild(C), _.visible = !1), R(w, F, u), R(w, P, f), R(S, J, r), R(k, J, s), R(A, Q, Z), _
                }, $(), e || (x(w, F, u), x(w, P, f), x(S, J, r), x(k, J, s), x(A, Q, Z))
            }

            function Z() {
                return _.fit()
            }
            return K(1), a(function() {
                var e = [ne(L), _];
                I("create", e), Y(0, e)
            }, 0), _.fit = function(e) {
                var t = T(Q),
                    i = T(h),
                    n = t.w - i.w,
                    o = t.h - h.clientHeight,
                    r = p(Q),
                    s = p(g);
                if (m = s.l + r.l, u = s.t + r.t + T(g).h, ee(e)) f(e[0]) && (m = e[0]), f(e[1]) && (u = e[1]);
                else {
                    var a = r.l,
                        c = r.t,
                        d = r.l + t.w - G - n,
                        l = r.t + t.h - V - o;
                    m = te(m, a, d) >> 0, u = te(u, c, l) >> 0
                }
                return C.style.left = m + "px", C.style.top = u + "px", I("fit", [_]), _
            }, _.set = function(e) {
                return f(e) ? ("string" == typeof e && (e = t.parse(e)), M(e), $(), _) : H()
            }, _.get = function(e) {
                return H(e)
            }, _.target = g, _.picker = C, _.visible = !1, _.on = function(e, t, i) {
                return f(e) ? f(t) ? (f(o[e]) || (o[e] = {}), f(i) || (i = c(o[e])), o[e][i] = t, _) : o[e] : o
            }, _.off = function(e, t) {
                return f(e) ? f(t) ? delete o[e][t] : o[e] = {} : o = {}, _
            }, _.fire = I, _.hooks = o, _.enter = function(e) {
                return K(0, e)
            }, _
        }).version = "1.3.9", n[r] = {}, n.each = function(i, e) {
            return a(function() {
                var e, t = n[r];
                for (e in t) i(t[e], e, t)
            }, 0 === e ? 0 : e || 1), n
        }, n.parse = e, n._HSV2RGB = ie, n._HSV2HEX = ne, n._RGB2HSV = o, n._HEX2HSV = d, n._HEX2RGB = function(e) {
            return [(t = l(e))[0] / 255, t[1] / 255, t[2] / 255];
            var t
        }, n.HSV2RGB = function(e) {
            return ie(h(e))
        }, n.HSV2HEX = function(e) {
            return ne(h(e))
        }, n.RGB2HSV = function(e) {
            return m(o(e))
        }, n.RGB2HEX = i, n.HEX2HSV = function(e) {
            return m(d(e))
        }, n.HEX2RGB = l
    }(window, document);
